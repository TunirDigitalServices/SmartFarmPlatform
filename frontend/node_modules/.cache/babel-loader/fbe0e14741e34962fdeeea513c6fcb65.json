{"ast":null,"code":"import _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/WaterChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\nimport { Col } from 'shards-react';\n\nvar WaterChart = function WaterChart(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ruMax = _useState4[0],\n      setRuMax = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ruMin = _useState6[0],\n      setRuMin = _useState6[1];\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var dataBilan = [];\n    var RuMax = [];\n    var RuMin = [];\n\n    for (var i = 1; i <= data.length; i++) {\n      if (data[i] && data[i].dates) {\n        var allDate = data[i].dates;\n        var date = moment(allDate).locale('En').format('MMM DD YYYY HH:mm'); // Include hours and minutes\n\n        labels.push(date);\n        dataBilan.push(parseFloat(data[i].bilan).toFixed(2));\n        RuMax.push(data[i].RUmax);\n        RuMin.push(data[i].RUmin);\n      }\n    }\n\n    var chartData = {\n      labels: labels,\n      datasets: [{\n        label: \"\".concat(t('water_balance')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: '#27A6B7',\n        borderWidth: 2,\n        data: dataBilan\n      }, {\n        label: \"\".concat(t('Ru max (mm)')),\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: '#32CB8D',\n        borderColor: '#32CB8D',\n        borderWidth: 2,\n        data: RuMax\n      }, {\n        label: \"\".concat(t('Ru min (mm)')),\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: '#e5331b',\n        borderColor: '#e5331b',\n        borderWidth: 2,\n        data: RuMin\n      }]\n    };\n    setState(chartData);\n    setRuMax(Math.max.apply(Math, RuMax)); // Find max RUmax value\n\n    setRuMin(Math.min.apply(Math, RuMin)); // Find min RUmin value\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('water_balance')),\n        fontSize: 14\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: ruMax > 100 ? ruMax + 10 : 100,\n            min: Math.round(ruMin - 10)\n          }\n        }],\n        xAxes: [{\n          type: 'time',\n          // Use a time scale for x-axis\n          time: {\n            unit: 'hour',\n            // Display time in hours\n            stepSize: 1,\n            // Display every hour\n            displayFormats: {\n              hour: 'HH:mm' // Format of displayed time\n\n            }\n          }\n        }]\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default WaterChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useTranslation","Col","WaterChart","data","state","setState","t","i18n","ruMax","setRuMax","ruMin","setRuMin","getChartData","labels","dataBilan","RuMax","RuMin","i","length","dates","allDate","date","locale","format","push","parseFloat","bilan","toFixed","RUmax","RUmin","chartData","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","Math","max","min","title","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","round","xAxes","type","time","unit","stepSize","displayFormats","hour"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/WaterChart.js"],"sourcesContent":["import moment from 'moment';\nimport React , {useState,useEffect}from 'react'\nimport { Line } from  'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\nimport { Col } from 'shards-react';\n\n\nconst WaterChart = ({ data }) => {\n  const [state, setState] = useState(null);\n  const { t, i18n } = useTranslation();\n  const [ruMax, setRuMax] = useState(0);\n  const [ruMin, setRuMin] = useState(0);\n\n  const getChartData = () => {\n    let labels = [];\n    let dataBilan = [];\n    let RuMax = [];\n    let RuMin = [];\n\n    for (let i = 1; i <= data.length; i++) {\n      if (data[i] && data[i].dates) {\n        let allDate = data[i].dates;\n        let date = moment(allDate).locale('En').format('MMM DD YYYY HH:mm'); // Include hours and minutes\n        labels.push(date);\n        dataBilan.push(parseFloat(data[i].bilan).toFixed(2));\n        RuMax.push(data[i].RUmax);\n        RuMin.push(data[i].RUmin);\n      }\n    }\n\n    const chartData = {\n      labels: labels,\n      datasets: [\n        {\n          label: `${t('water_balance')}`,\n          fill: false,\n          lineTension: 0,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: '#27A6B7',\n          borderWidth: 2,\n          data: dataBilan,\n        },\n        {\n          label: `${t('Ru max (mm)')}`,\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: '#32CB8D',\n          borderColor: '#32CB8D',\n          borderWidth: 2,\n          data: RuMax,\n        },\n        {\n          label: `${t('Ru min (mm)')}`,\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: '#e5331b',\n          borderColor: '#e5331b',\n          borderWidth: 2,\n          data: RuMin,\n        },\n      ],\n    };\n    setState(chartData);\n    setRuMax(Math.max(...RuMax)); // Find max RUmax value\n    setRuMin(Math.min(...RuMin)); // Find min RUmin value\n  };\n\n  useEffect(() => {\n    getChartData();\n  }, [data]);\n\n  return (\n    <Line\n      data={state}\n      options={{\n        title: {\n          display: true,\n          text: `${t('water_balance')}`,\n          fontSize: 14,\n        },\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                max: ruMax > 100 ? ruMax + 10 : 100,\n                min: Math.round(ruMin - 10),\n              },\n            },\n          ],\n          xAxes: [\n            {\n              type: 'time', // Use a time scale for x-axis\n              time: {\n                unit: 'hour', // Display time in hours\n                stepSize: 1, // Display every hour\n                displayFormats: {\n                  hour: 'HH:mm', // Format of displayed time\n                },\n              },\n            },\n          ],\n        },\n      }}\n    />\n  );\n};\n\nexport default WaterChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}