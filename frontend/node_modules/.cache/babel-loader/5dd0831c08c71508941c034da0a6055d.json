{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\src\\\\views\\\\SatellitePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, CardBody, CardHeader, Card, FormSelect } from \"shards-react\";\nimport moment from \"moment\";\nimport { useTranslation } from \"react-i18next\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport Calendar from \"react-calendar\";\nimport { LinearProgress } from \"@mui/material\";\nimport api from \"../api/api\";\nimport SatteliteMap from \"./SatteliteMap copy\";\nimport axios from \"axios\";\n\nvar formatDate = function formatDate(dateString) {\n  // Parse the input date string using Moment.js\n  var parsedDate = moment(dateString, \"D MMM YYYY\"); // Format the date in the desired format (YYYY-MM-DD)\n\n  var formattedDate = parsedDate.format(\"YYYY-MM-DD\");\n  return formattedDate;\n};\n\nexport default function SatellitePage() {\n  var _this = this;\n\n  var apiKey = \"apk.4e8c771435de030fcee7b1aa265ecd24ac0f9eb57ce758a71ac101796dcbc07e\";\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      coords = _useState2[0],\n      setCoords = _useState2[1];\n\n  var _useState3 = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false,\n    draw: {\n      polygon: false,\n      circle: false,\n      rectangle: false,\n      polyline: false,\n      marker: false,\n      circlemarker: false\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapConfig = _useState4[0],\n      setMapConfig = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fields = _useState6[0],\n      setFields = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      polygonId = _useState8[0],\n      setPolygonId = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      satellitesImages = _useState10[0],\n      setSatellitesImages = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dataDisplayed = _useState12[0],\n      setDataDisplayed = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      polygonDisplayed = _useState14[0],\n      setPolygonDisplayed = _useState14[1];\n\n  var _useState15 = useState(moment().format(\"D MMM YYYY\")),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedDate = _useState16[0],\n      setSelectedDate = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedField = _useState18[0],\n      setSelectedField = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedImages = _useState20[0],\n      setSelectedImages = _useState20[1];\n\n  useEffect(function () {\n    var getDataFields = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, auxFields;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.get(\"/field/fields\");\n\n              case 2:\n                res = _context.sent;\n\n                if (res.data.farms) {\n                  auxFields = [];\n                  res.data.farms.map(function (item) {\n                    var fields = item.fields;\n                    fields.map(function (itemfield) {\n                      auxFields.push({\n                        title: itemfield.name,\n                        status: itemfield.status,\n                        description: itemfield.description,\n                        Uid: itemfield.uid,\n                        farm_id: itemfield.farm_id,\n                        Latitude: itemfield.Latitude,\n                        Longitude: itemfield.Longitude,\n                        coordinates: itemfield.coordinates,\n                        Id: itemfield.id\n                      });\n                    });\n                    setFields(auxFields);\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getDataFields() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getDataFields();\n  }, []);\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var formattedDate, twoDaysAgo, ndviResponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //   const filteredData = satellitesImages.filter(\n              //     elem =>\n              //       moment(elem.created_at).format(\"D MMM YYYY\") === selectedDate &&\n              //       elem.field_id === selectedField[0].Id\n              //   );\n              //   setSelectedImages(filteredData);\n              formattedDate = formatDate(selectedDate); //   const currentDate = moment();\n\n              twoDaysAgo = moment().subtract(1, \"days\");\n\n              if (!selectedField) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 5;\n              return axios.get(\"https://api.eos.com/crop-monitoring/ndvi\", {\n                headers: {\n                  Authorization: \"Bearer \".concat(apiKey)\n                },\n                params: {\n                  polygon_id: polygonId,\n                  date_from: selectedDate,\n                  date_to: selectedDate\n                }\n              });\n\n            case 5:\n              ndviResponse = _context2.sent;\n              console.log(ndviResponse.data); // if (moment(formattedDate).isBefore(twoDaysAgo, \"day\")) {\n              //   try {\n              //     const fieldId = selectedField.Id;\n              //     const userId = JSON.parse(localStorage.getItem(\"user\")).id;\n              //     const apiUrl = `/satellite-images/${userId}/${fieldId}/${formattedDate}`;\n              //     const response = await api.get(apiUrl);\n              //     const fetchedData = response.data.imagesData;\n              //     console.log(fetchedData);\n              //   } catch (error) {\n              //     console.error(\"API error:\", error);\n              //   }\n              // } else {\n              //   console.log(\"Formatted date is not before 1 days ago.\");\n              // }\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, [selectedDate]);\n\n  var handleDateClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(date) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setSelectedDate(date);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDateClick(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getSelectedField = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(e) {\n      var selectedId, selected, coordinates, response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              selectedId = e.target.value;\n              selected = fields.find(function (field) {\n                return field.Id == selectedId;\n              });\n              setSelectedField(selected);\n              coordinates = JSON.parse(selected.coordinates).map(function (elem) {\n                return [elem.Long, elem.Long];\n              });\n              _context4.next = 6;\n              return api.post(\"/create-polygon\", {\n                coordinates: coordinates // coordinates: array of [lat, long]s\n\n              });\n\n            case 6:\n              response = _context4.sent;\n              setPolygonId(response.data.id);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getSelectedField(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.log(selectedField);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-3 pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"page-header py-2 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    subtitle: t(\"overview\"),\n    title: t(\"Satellite Images\"),\n    className: \" mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    className: \"main-content-container p-3 border bg-light rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"pt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"py-2 d-md-block d-lg-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-0\",\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    value: [selectedField],\n    onChange: getSelectedField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }, t(\"select_field\")), fields.map(function (field) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: field.Id,\n      value: field.Id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 27\n      }\n    }, field.title);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"\\u0645\", /*#__PURE__*/React.createElement(SatteliteMap, {\n    data: selectedField,\n    satellitesImages: selectedImages,\n    selectedData: dataDisplayed,\n    drawn: polygonDisplayed,\n    draw: mapConfig.draw,\n    edit: mapConfig.edit,\n    zoom: coords.zoom,\n    center: coords.center,\n    fromAction: coords.fromAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-0\",\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, fields.length === 0 ? /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-none d-lg-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    value: selectedField,\n    onChange: getSelectedField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 23\n    }\n  }, t(\"select_field\")), fields.map(function (field) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: field.Id,\n      value: field.Id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    }, field.title);\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, selectedField && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: 14,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, t(\"lat\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 31\n    }\n  }, selectedField.Latitude))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: 14,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, t(\"lon\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 31\n    }\n  }, selectedField.Longitude)))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      fontSize: 14,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, t(\"name_field\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 49\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontWeight: \"bold\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 31\n    }\n  }, selectedField.title))))), selectedField && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#bebebe\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      padding: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#bebebe\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, t(\"message_image\")), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-satellite\",\n    style: {\n      fontSize: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 23\n    }\n  }, \"\\u0627\", selectedField && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: 14,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 29\n    }\n  }, \" \", \"Satellite Images List\"), /*#__PURE__*/React.createElement(Calendar, {\n    onChange: function onChange(date) {\n      return setSelectedDate(moment(date).format(\"D MMM YYYY\"));\n    },\n    value: selectedDate ? new Date(moment(selectedDate, \"D MMM YYYY\")) : null,\n    locale: localStorage.getItem(\"local\") ? \"\".concat(localStorage.getItem(\"local\"), \"-\").concat(localStorage.getItem(\"local\").toUpperCase()) : \"en-EN\",\n    tileContent: function tileContent(_ref5) {\n      var date = _ref5.date,\n          view = _ref5.view;\n      var formattedDate = moment(date).format(\"D MMM YYYY\");\n      var hasSatelliteImages = satellitesImages.some(function (data) {\n        return moment(data.created_at).format(\"D MMM YYYY\") === formattedDate;\n      });\n      return view === \"month\" && hasSatelliteImages ? /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          color: \"#29B2C4\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 35\n        }\n      }, \"\\u2022\") : null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 29\n    }\n  })))))))))));\n}","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","CardBody","CardHeader","Card","FormSelect","moment","useTranslation","PageTitle","Calendar","LinearProgress","api","SatteliteMap","axios","formatDate","dateString","parsedDate","formattedDate","format","SatellitePage","apiKey","t","i18n","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","draw","polygon","circle","rectangle","polyline","marker","circlemarker","mapConfig","setMapConfig","fields","setFields","polygonId","setPolygonId","satellitesImages","setSatellitesImages","dataDisplayed","setDataDisplayed","polygonDisplayed","setPolygonDisplayed","selectedDate","setSelectedDate","selectedField","setSelectedField","selectedImages","setSelectedImages","getDataFields","get","res","data","farms","auxFields","map","item","itemfield","push","title","name","status","description","Uid","uid","farm_id","coordinates","Id","id","twoDaysAgo","subtract","headers","Authorization","params","polygon_id","date_from","date_to","ndviResponse","console","log","handleDateClick","date","getSelectedField","e","selectedId","target","value","selected","find","field","JSON","parse","elem","Long","post","response","height","edit","length","fontSize","textAlign","fontWeight","color","display","justifyContent","alignItems","flexDirection","padding","Date","localStorage","getItem","toUpperCase","view","hasSatelliteImages","some","created_at"],"sources":["C:/professional/2K Media/II.develepment/smart farm/backoffice v2/frontend/src/views/SatellitePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Card,\r\n  FormSelect\r\n} from \"shards-react\";\r\nimport moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport Calendar from \"react-calendar\";\r\nimport { LinearProgress } from \"@mui/material\";\r\nimport api from \"../api/api\";\r\nimport SatteliteMap from \"./SatteliteMap copy\";\r\nimport axios from \"axios\";\r\n\r\nconst formatDate = dateString => {\r\n  // Parse the input date string using Moment.js\r\n  const parsedDate = moment(dateString, \"D MMM YYYY\");\r\n\r\n  // Format the date in the desired format (YYYY-MM-DD)\r\n  const formattedDate = parsedDate.format(\"YYYY-MM-DD\");\r\n\r\n  return formattedDate;\r\n};\r\n\r\nexport default function SatellitePage() {\r\n  const apiKey =\r\n    \"apk.4e8c771435de030fcee7b1aa265ecd24ac0f9eb57ce758a71ac101796dcbc07e\";\r\n  const { t, i18n } = useTranslation();\r\n  const [coords, setCoords] = useState({\r\n    Latitude: \"\",\r\n    Longitude: \"\",\r\n    zoom: \"\",\r\n    center: [],\r\n    fromAction: false\r\n  });\r\n  const [mapConfig, setMapConfig] = useState({\r\n    zoom: \"\",\r\n    center: [],\r\n    fromAction: false,\r\n    draw: {\r\n      polygon: false,\r\n      circle: false,\r\n      rectangle: false,\r\n      polyline: false,\r\n      marker: false,\r\n      circlemarker: false\r\n    }\r\n  });\r\n\r\n  const [fields, setFields] = useState([]);\r\n  const [polygonId, setPolygonId] = useState(null);\r\n  const [satellitesImages, setSatellitesImages] = useState([]);\r\n  const [dataDisplayed, setDataDisplayed] = useState([]);\r\n  const [polygonDisplayed, setPolygonDisplayed] = useState([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    moment().format(\"D MMM YYYY\")\r\n  );\r\n  const [selectedField, setSelectedField] = useState(null);\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDataFields = async () => {\r\n      const res = await api.get(\"/field/fields\");\r\n\r\n      if (res.data.farms) {\r\n        let auxFields = [];\r\n        res.data.farms.map(item => {\r\n          let fields = item.fields;\r\n          fields.map(itemfield => {\r\n            auxFields.push({\r\n              title: itemfield.name,\r\n              status: itemfield.status,\r\n              description: itemfield.description,\r\n              Uid: itemfield.uid,\r\n              farm_id: itemfield.farm_id,\r\n              Latitude: itemfield.Latitude,\r\n              Longitude: itemfield.Longitude,\r\n              coordinates: itemfield.coordinates,\r\n              Id: itemfield.id\r\n            });\r\n          });\r\n          setFields(auxFields);\r\n        });\r\n      }\r\n    };\r\n\r\n    getDataFields();\r\n  }, []);\r\n  useEffect(() => {\r\n    (async () => {\r\n      //   const filteredData = satellitesImages.filter(\r\n      //     elem =>\r\n      //       moment(elem.created_at).format(\"D MMM YYYY\") === selectedDate &&\r\n      //       elem.field_id === selectedField[0].Id\r\n      //   );\r\n      //   setSelectedImages(filteredData);\r\n      const formattedDate = formatDate(selectedDate);\r\n      //   const currentDate = moment();\r\n      const twoDaysAgo = moment().subtract(1, \"days\");\r\n      if (selectedField) {\r\n        // Step 2: Get NDVI data\r\n        const ndviResponse = await axios.get(\r\n          `https://api.eos.com/crop-monitoring/ndvi`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${apiKey}`\r\n            },\r\n            params: {\r\n              polygon_id: polygonId,\r\n              date_from: selectedDate,\r\n              date_to: selectedDate\r\n            }\r\n          }\r\n        );\r\n\r\n        console.log(ndviResponse.data);\r\n\r\n        // if (moment(formattedDate).isBefore(twoDaysAgo, \"day\")) {\r\n        //   try {\r\n        //     const fieldId = selectedField.Id;\r\n        //     const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n        //     const apiUrl = `/satellite-images/${userId}/${fieldId}/${formattedDate}`;\r\n        //     const response = await api.get(apiUrl);\r\n\r\n        //     const fetchedData = response.data.imagesData;\r\n        //     console.log(fetchedData);\r\n        //   } catch (error) {\r\n        //     console.error(\"API error:\", error);\r\n        //   }\r\n        // } else {\r\n        //   console.log(\"Formatted date is not before 1 days ago.\");\r\n        // }\r\n      }\r\n    })();\r\n  }, [selectedDate]);\r\n\r\n  const handleDateClick = async date => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const getSelectedField = async e => {\r\n    const selectedId = e.target.value;\r\n    const selected = fields.find(field => field.Id == selectedId);\r\n    setSelectedField(selected);\r\n    const coordinates = JSON.parse(selected.coordinates).map(elem => {\r\n      return [elem.Long, elem.Long];\r\n    });\r\n\r\n    const response = await api.post(\"/create-polygon\", {\r\n      coordinates // coordinates: array of [lat, long]s\r\n    });\r\n\r\n    setPolygonId(response.data.id);\r\n  };\r\n  console.log(selectedField);\r\n\r\n  return (\r\n    <Container fluid className=\"main-content-container px-3 pb-2\">\r\n      <Row className=\"page-header py-2 mb-4\">\r\n        <PageTitle\r\n          subtitle={t(\"overview\")}\r\n          title={t(\"Satellite Images\")}\r\n          className=\" mb-1\"\r\n        />\r\n      </Row>\r\n\r\n      <Container className=\"main-content-container p-3 border bg-light rounded\">\r\n        <Row>\r\n          <Col lg=\"8\" md=\"12\" sm=\"12\">\r\n            <Row className=\"pt-4\">\r\n              <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"py-2 d-md-block d-lg-none\">\r\n                {/* Select input on mobile view */}\r\n                <Card className=\"mt-0\" style={{ height: \"100%\" }}>\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <FormSelect\r\n                      value={[selectedField]}\r\n                      onChange={getSelectedField}\r\n                    >\r\n                      <option value=\"\">{t(\"select_field\")}</option>\r\n                      {fields.map(field => {\r\n                        return (\r\n                          <option key={field.Id} value={field.Id}>\r\n                            {field.title}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </FormSelect>\r\n                  </CardHeader>\r\n                </Card>\r\n              </Col>\r\n              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                م\r\n                <SatteliteMap\r\n                  data={selectedField}\r\n                  satellitesImages={selectedImages}\r\n                  selectedData={dataDisplayed}\r\n                  drawn={polygonDisplayed}\r\n                  draw={mapConfig.draw}\r\n                  edit={mapConfig.edit}\r\n                  zoom={coords.zoom}\r\n                  center={coords.center}\r\n                  fromAction={coords.fromAction}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"my-2\">\r\n            <Card className=\"mt-0\" style={{ height: \"100%\" }}>\r\n              {fields.length === 0 ? (\r\n                <LinearProgress />\r\n              ) : (\r\n                <>\r\n                  <CardHeader className=\"border-bottom d-none d-lg-block\">\r\n                    <FormSelect\r\n                      value={selectedField}\r\n                      onChange={getSelectedField}\r\n                    >\r\n                      <option value=\"\">{t(\"select_field\")}</option>\r\n                      {fields.map(field => {\r\n                        return (\r\n                          <option key={field.Id} value={field.Id}>\r\n                            {field.title}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </FormSelect>\r\n                  </CardHeader>\r\n                  <CardBody className=\"p-1\">\r\n                    {selectedField && (\r\n                      <>\r\n                        <Row>\r\n                          <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                            <h5 style={{ fontSize: 14, textAlign: \"center\" }}>\r\n                              {t(\"lat\")}{\" \"}\r\n                              <span\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  textAlign: \"center\"\r\n                                }}\r\n                              >\r\n                                {selectedField.Latitude}\r\n                              </span>\r\n                            </h5>\r\n                          </Col>\r\n                          <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                            <h5 style={{ fontSize: 14, textAlign: \"center\" }}>\r\n                              {t(\"lon\")}{\" \"}\r\n                              <span\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  textAlign: \"center\"\r\n                                }}\r\n                              >\r\n                                {selectedField.Longitude}\r\n                              </span>\r\n                            </h5>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className=\"border-bottom\">\r\n                          <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                            <h6 style={{ fontSize: 14, textAlign: \"center\" }}>\r\n                              {t(\"name_field\")} <br />{\" \"}\r\n                              <span\r\n                                style={{\r\n                                  fontWeight: \"bold\",\r\n                                  textAlign: \"center\"\r\n                                }}\r\n                              >\r\n                                {selectedField.title}\r\n                              </span>\r\n                            </h6>\r\n                          </Col>\r\n                        </Row>\r\n                      </>\r\n                    )}\r\n                    {selectedField && (\r\n                      <div\r\n                        style={{\r\n                          color: \"#bebebe\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"column\",\r\n                          padding: \"10px\"\r\n                        }}\r\n                      >\r\n                        <p style={{ color: \"#bebebe\", textAlign: \"center\" }}>\r\n                          {t(\"message_image\")}\r\n                        </p>\r\n                        <i\r\n                          className=\"fas fa-satellite\"\r\n                          style={{ fontSize: \"40px\" }}\r\n                        ></i>\r\n                      </div>\r\n                    )}\r\n                    <Row className=\"my-2\">\r\n                      <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                        ا\r\n                        {selectedField && (\r\n                          <>\r\n                            <h5 style={{ fontSize: 14, textAlign: \"center\" }}>\r\n                              {\" \"}\r\n                              Satellite Images List\r\n                            </h5>\r\n                            <Calendar\r\n                              onChange={date =>\r\n                                setSelectedDate(\r\n                                  moment(date).format(\"D MMM YYYY\")\r\n                                )\r\n                              }\r\n                              value={\r\n                                selectedDate\r\n                                  ? new Date(moment(selectedDate, \"D MMM YYYY\"))\r\n                                  : null\r\n                              }\r\n                              locale={\r\n                                localStorage.getItem(\"local\")\r\n                                  ? `${localStorage.getItem(\r\n                                      \"local\"\r\n                                    )}-${localStorage\r\n                                      .getItem(\"local\")\r\n                                      .toUpperCase()}`\r\n                                  : \"en-EN\"\r\n                              }\r\n                              tileContent={({ date, view }) => {\r\n                                const formattedDate = moment(date).format(\r\n                                  \"D MMM YYYY\"\r\n                                );\r\n                                const hasSatelliteImages = satellitesImages.some(\r\n                                  data =>\r\n                                    moment(data.created_at).format(\r\n                                      \"D MMM YYYY\"\r\n                                    ) === formattedDate\r\n                                );\r\n\r\n                                return view === \"month\" &&\r\n                                  hasSatelliteImages ? (\r\n                                  <span\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      color: \"#29B2C4\"\r\n                                    }}\r\n                                  >\r\n                                    •\r\n                                  </span>\r\n                                ) : null;\r\n                              }}\r\n                            />\r\n                          </>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}