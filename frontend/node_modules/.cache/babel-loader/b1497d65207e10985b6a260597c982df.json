{"ast":null,"code":"import _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/AllFields.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Container } from 'shards-react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../api/api';\nimport moment from 'moment';\n\nvar AllFields = function AllFields(_ref) {\n  var filteredFields = _ref.filteredFields,\n      sensorsData = _ref.sensorsData,\n      crops = _ref.crops;\n  var history = useHistory();\n\n  var _useState = useState({\n    resultState: 0,\n    state: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      fieldStatus = _useState2[0],\n      setFS = _useState2[1];\n\n  useEffect(function () {\n    sensorsData.map(function (sensors) {\n      var MV1 = sensors.mv1;\n      var MV2 = sensors.mv2;\n      var MV3 = sensors.mv3;\n      var result = (Number(MV1) + Number(MV2) + Number(MV3)) / 3;\n\n      if (MV1 !== '0.000' && MV2 !== '0.000' && MV3 !== '0.000') {\n        setFS({\n          resultState: result,\n          state: 'Full'\n        });\n      }\n\n      if (MV1 !== '0.000' && MV2 !== '0.000' && MV3 === '0.000') {\n        setFS({\n          resultState: result,\n          state: 'Optimal'\n        });\n      }\n\n      if (MV1 === '0.000' && MV2 === '0.000' && MV3 === '0.000') {\n        setFS({\n          resultState: result,\n          state: 'Critical'\n        });\n      }\n    });\n  }, [sensorsData]);\n\n  var routeToField = function routeToField(fieldUid) {\n    if (fieldUid) {\n      localStorage.setItem(\"Field\", fieldUid);\n      history.push(\"/Fields/\".concat(fieldUid));\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, filteredFields.map(function (field) {\n    var cropT = '';\n    crops.map(function (crop) {\n      if (crop.fieldId === field.id) {\n        cropT = crop.type;\n      }\n    });\n    var msg = \"\";\n    if (field.sensors == 0) msg = \"Please use the app to install/register a sensor.\";\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: \"4\",\n      md: \"6\",\n      sm: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sensor\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sensorHeader\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sensorNameWrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      onClick: function onClick() {\n        return routeToField(field.uid);\n      },\n      style: {\n        fontSize: \"1.2rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }\n    }, field.name))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plantWrapper\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }, cropT == \"\" ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plant\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-seedling\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginLeft: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 57\n      }\n    }, cropT))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#7e7e7e\",\n        fontSize: \"1rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 41\n      }\n    }, msg)), field.sensors.map(function (sensor) {\n      var moyenne = \"\";\n      var percentage = \"\";\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sensorBody border py-1 rounded my-2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 57\n        }\n      }, \"QR: \", sensor.code)), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"ProgressBarWrapper\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"stats-dates\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 57\n        }\n      }, sensorsData.map(function (data) {\n        moyenne = (parseFloat(data.mv1) + parseFloat(data.mv2) + parseFloat(data.mv3)) / 3;\n        percentage = moyenne / 80 * 100;\n        var tomorrow = \"\";\n\n        if (data.code === sensor.code) {\n          tomorrow = moment(data.time.slice(0, 10)).add(1, 'days').locale('En').format(\"MMM DD\");\n        }\n\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 73\n          }\n        }, tomorrow);\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Marker-tomorrow\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"11\",\n        height: \"13\",\n        viewBox: \"0 0 14 17\",\n        class: \"drop-element ng-star-inserted\",\n        style: {\n          left: \"calc(90% - 6px)\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"g\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        fill: \"none\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 245\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        d: \"M7.8 0.4L7.5 0 7.1 0.4C6.9 0.7 1.1 7.3 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9 13.8 7.3 8.1 0.7 7.8 0.4Z\",\n        fill: \"#FE3C65\",\n        class: \"drop\",\n        style: {\n          fill: \"rgb(16, 201, 160)\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 283\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        d: \"M13.8 11.9C13.8 7.3 8.1 0.7 7.8 0.4L7.5 0 7.1 0.4C7 0.6 5 2.8 3.4 5.5 2.2 7.6 1.1 9.9 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9Z\",\n        stroke: \"#FFF\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 516\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Segment1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"stats-dates\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"today\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 61\n        }\n      }, \"Today\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Marker\",\n        style: {\n          marginLeft: \"\".concat(percentage, \"%\")\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"14\",\n        height: \"17\",\n        viewBox: \"0 0 14 17\",\n        class: \"drop-element ng-star-inserted\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"g\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        fill: \"none\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 209\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        d: \"M7.8 0.4L7.5 0 7.1 0.4C6.9 0.7 1.1 7.3 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9 13.8 7.3 8.1 0.7 7.8 0.4Z\",\n        fill: \"#FE3C65\",\n        class: \"drop\",\n        style: {\n          fill: \"rgb(16, 201, 160)\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 247\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        d: \"M13.8 11.9C13.8 7.3 8.1 0.7 7.8 0.4L7.5 0 7.1 0.4C7 0.6 5 2.8 3.4 5.5 2.2 7.6 1.1 9.9 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9Z\",\n        stroke: \"#FFF\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 480\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Segment2\",\n        style: {\n          marginRight: '-5px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"stats-dates\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 57\n        }\n      }, sensorsData.map(function (data) {\n        var yesterday = \"\";\n\n        if (data.code === sensor.code) {\n          yesterday = moment(data.time.slice(0, 10)).subtract(1, 'days').locale('En').format(\"MMM DD\");\n        }\n\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 73\n          }\n        }, yesterday);\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Marker-yesterday\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"11\",\n        height: \"13\",\n        viewBox: \"0 0 14 17\",\n        class: \"drop-element ng-star-inserted\",\n        style: {\n          left: \"calc(59.7044% - 6px)\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"g\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        fill: \"none\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 250\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        d: \"M7.8 0.4L7.5 0 7.1 0.4C6.9 0.7 1.1 7.3 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9 13.8 7.3 8.1 0.7 7.8 0.4Z\",\n        fill: \"#FE3C65\",\n        class: \"drop\",\n        style: {\n          fill: \"rgb(16, 201, 160)\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 288\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        \"_ngcontent-pxc-c161\": \"\",\n        d: \"M13.8 11.9C13.8 7.3 8.1 0.7 7.8 0.4L7.5 0 7.1 0.4C7 0.6 5 2.8 3.4 5.5 2.2 7.6 1.1 9.9 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9Z\",\n        stroke: \"#FFF\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 521\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Segment3\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 61\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 61\n        }\n      }, \"Refill\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#26cc94\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 61\n        }\n      }, \"Optimal\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 61\n        }\n      }, \"Full\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sensorFooter\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 57\n        }\n      }, \"Last Reading :\"), sensorsData.map(function (data) {\n        var LastTime = \"\";\n\n        if (data.code === sensor.code) {\n          LastTime = moment(data.time).locale('En').format('MMM Do YYYY, h:mm a');\n        }\n\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 69\n          }\n        }, LastTime);\n      }))));\n    })));\n  })));\n};\n\nexport default AllFields;","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Container","useHistory","api","moment","AllFields","filteredFields","sensorsData","crops","history","resultState","state","fieldStatus","setFS","map","sensors","MV1","mv1","MV2","mv2","MV3","mv3","result","Number","routeToField","fieldUid","localStorage","setItem","push","window","location","reload","field","cropT","crop","fieldId","id","type","msg","uid","fontSize","name","marginLeft","textAlign","color","sensor","moyenne","percentage","code","data","parseFloat","tomorrow","time","slice","add","locale","format","left","fill","marginRight","yesterday","subtract","LastTime"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/AllFields.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col, Container } from 'shards-react'\nimport { useHistory } from 'react-router-dom'\nimport api from '../api/api'\nimport moment from 'moment'\n\nconst AllFields = ({ filteredFields, sensorsData, crops }) => {\n    const history = useHistory()\n    const [fieldStatus, setFS] = useState({\n        resultState: 0, state: ''\n    })\n\n\n    useEffect(() => {\n        sensorsData.map(sensors => {\n            let MV1 = sensors.mv1;\n            let MV2 = sensors.mv2;\n            let MV3 = sensors.mv3;\n            let result = (Number(MV1) + Number(MV2) + Number(MV3)) / 3\n            if ((MV1 !== '0.000') && (MV2 !== '0.000') && (MV3 !== '0.000')) {\n                setFS({ resultState: result, state: 'Full' })\n            }\n            if ((MV1 !== '0.000') && (MV2 !== '0.000') && (MV3 === '0.000')) {\n                setFS({ resultState: result, state: 'Optimal' })\n            }\n            if ((MV1 === '0.000') && (MV2 === '0.000') && (MV3 === '0.000')) {\n                setFS({ resultState: result, state: 'Critical' })\n            }\n        })\n\n    }, [sensorsData])\n\n\n\n    const routeToField = (fieldUid) => {\n        if (fieldUid) {\n            localStorage.setItem(\n                \"Field\",\n                fieldUid\n            );\n            history.push(`/Fields/${fieldUid}`)\n            window.location.reload()\n        }\n    }\n    return (\n        <Container>\n\n            <Row>\n                {\n                    filteredFields.map(field => {\n                        let cropT = ''\n                        crops.map(crop => {\n                            if (crop.fieldId === field.id) {\n                                cropT = crop.type\n                            }\n                        })\n                        let msg = \"\"\n                        if (field.sensors == 0) msg = \"Please use the app to install/register a sensor.\"\n                        return (\n                            <Col lg=\"4\" md=\"6\" sm=\"6\">\n                                <div className=\"sensor\">\n                                    <div className=\"sensorHeader\">\n                                        <div className=\"sensorNameWrapper\">\n                                            <p onClick={() => routeToField(field.uid)} style={{ fontSize: \"1.2rem\" }}>{field.name}</p>\n                                        </div>\n                                    </div>\n                                    <hr />\n                                    <div>\n                                        <div className=\"plantWrapper\">\n                                            {\n                                                cropT == \"\"\n                                                    ?\n                                                    null\n                                                    :\n                                                    <div className=\"plant\">\n\n                                                        <i className=\"fas fa-seedling\"></i>\n                                                        <p style={{ marginLeft: 5 }}>{cropT}</p>\n                                                    </div>\n                                            }\n                                        </div>\n                                        <p style={{ textAlign: \"center\", color: \"#7e7e7e\", fontSize: \"1rem\" }}>\n                                            {msg}\n                                        </p>\n\n                                    </div>\n                                    {\n                                        field.sensors.map(sensor => {\n                                            let moyenne = \"\"\n                                            let percentage = \"\"\n                                            return (\n                                                <>\n                                                    <div className=\"sensorBody border py-1 rounded my-2\">\n                                                    \n                                                    <div className='text-center'>\n                                                        <p>QR: {sensor.code}</p>\n                                                    </div>\n                                                        <section className=\"ProgressBarWrapper\">\n                                                        <div className=\"stats-dates\">\n                                                            {\n                                                                sensorsData.map(data => {\n                                                                    moyenne = (parseFloat(data.mv1) + parseFloat(data.mv2) + parseFloat(data.mv3)) / 3;\n                                                                    percentage = (moyenne / 80) * 100;\n                                                                    let tomorrow = \"\"\n                                                                    if (data.code === sensor.code) {\n                                                                        tomorrow = moment(data.time.slice(0, 10)).add(1, 'days').locale('En').format(\"MMM DD\")\n\n\n                                                                    }\n                                                                    return (\n                                                                        <p>{tomorrow}</p>\n\n                                                                    )\n                                                                })\n\n                                                            }\n                                                            <div className=\"Marker-tomorrow\">\n                                                                <svg _ngcontent-pxc-c161=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"13\" viewBox=\"0 0 14 17\" class=\"drop-element ng-star-inserted\" style={{ left: `calc(90% - 6px)` }}><g _ngcontent-pxc-c161=\"\" fill=\"none\"><path _ngcontent-pxc-c161=\"\" d=\"M7.8 0.4L7.5 0 7.1 0.4C6.9 0.7 1.1 7.3 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9 13.8 7.3 8.1 0.7 7.8 0.4Z\" fill=\"#FE3C65\" class=\"drop\" style={{ fill: \"rgb(16, 201, 160)\" }}></path><path _ngcontent-pxc-c161=\"\" d=\"M13.8 11.9C13.8 7.3 8.1 0.7 7.8 0.4L7.5 0 7.1 0.4C7 0.6 5 2.8 3.4 5.5 2.2 7.6 1.1 9.9 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9Z\" stroke=\"#FFF\"></path></g></svg>\n                                                            </div>\n                                                            <div className=\"Segment1\"></div>\n                                                        </div>\n                                                        <div className=\"stats-dates\">\n                                                            <span className=\"today\">Today</span>\n\n                                                            <div className='Marker' style={{ marginLeft: `${percentage}%`}}>\n                                                                <svg _ngcontent-pxc-c161=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"17\" viewBox=\"0 0 14 17\" class=\"drop-element ng-star-inserted\"><g _ngcontent-pxc-c161=\"\" fill=\"none\"><path _ngcontent-pxc-c161=\"\" d=\"M7.8 0.4L7.5 0 7.1 0.4C6.9 0.7 1.1 7.3 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9 13.8 7.3 8.1 0.7 7.8 0.4Z\" fill=\"#FE3C65\" class=\"drop\" style={{ fill: \"rgb(16, 201, 160)\" }}></path><path _ngcontent-pxc-c161=\"\" d=\"M13.8 11.9C13.8 7.3 8.1 0.7 7.8 0.4L7.5 0 7.1 0.4C7 0.6 5 2.8 3.4 5.5 2.2 7.6 1.1 9.9 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9Z\" stroke=\"#FFF\"></path></g></svg>\n                                                            </div>\n\n                                                            <div className=\"Segment2\" style={{marginRight :'-5px'}}></div>\n                                                        </div>\n                                                        <div className=\"stats-dates\">\n                                                            {\n                                                                sensorsData.map(data => {\n                                                                    let yesterday = \"\"\n                                                                    if (data.code === sensor.code) {\n                                                                        yesterday = moment(data.time.slice(0, 10)).subtract(1, 'days').locale('En').format(\"MMM DD\")\n\n\n                                                                    }\n                                                                    return (\n                                                                        <p>{yesterday}</p>\n\n                                                                    )\n                                                                })\n\n                                                            }\n                                                            <div className=\"Marker-yesterday\">\n                                                                <svg _ngcontent-pxc-c161=\"\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"13\" viewBox=\"0 0 14 17\" class=\"drop-element ng-star-inserted\" style={{ left: \"calc(59.7044% - 6px)\" }}><g _ngcontent-pxc-c161=\"\" fill=\"none\"><path _ngcontent-pxc-c161=\"\" d=\"M7.8 0.4L7.5 0 7.1 0.4C6.9 0.7 1.1 7.3 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9 13.8 7.3 8.1 0.7 7.8 0.4Z\" fill=\"#FE3C65\" class=\"drop\" style={{ fill: \"rgb(16, 201, 160)\" }}></path><path _ngcontent-pxc-c161=\"\" d=\"M13.8 11.9C13.8 7.3 8.1 0.7 7.8 0.4L7.5 0 7.1 0.4C7 0.6 5 2.8 3.4 5.5 2.2 7.6 1.1 9.9 1.1 11.9 1.1 15.1 4 17.6 7.5 17.6 11 17.6 13.8 15.1 13.8 11.9Z\" stroke=\"#FFF\"></path></g></svg>\n                                                            </div>\n                                                            <div className=\"Segment3\"></div>\n                                                        </div>\n                                                        <div className=\"status\">\n                                                            <div>Refill</div>\n                                                            <div style={{ color: \"#26cc94\" }}>Optimal</div>\n                                                            <div>Full</div>\n                                                        </div>\n                                                        </section>\n                                                    <div className=\"sensorFooter\">\n                                                        <p>Last Reading :</p>\n                                                        {\n                                                            sensorsData.map(data => {\n                                                                let LastTime = \"\"\n                                                                if (data.code === sensor.code) {\n                                                                    LastTime = moment(data.time).locale('En').format('MMM Do YYYY, h:mm a')\n\n                                                                }\n                                                                return (\n                                                                    <p>{LastTime}</p>\n\n                                                                )\n                                                            })\n                                                        }\n                                                    </div>\n                                                    </div>\n                                                </>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Col>\n\n                        )\n                    })\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default AllFields"],"mappings":"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"},"metadata":{},"sourceType":"module"}