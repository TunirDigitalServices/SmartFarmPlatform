{"ast":null,"code":"import _objectSpread from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\smartFarmOldVPS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\smartFarmOldVPS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\smartFarmOldVPS\\\\frontend\\\\src\\\\components\\\\FieldSettingForms\\\\FieldSoilForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, FormSelect, Button, Slider, FormInput, FormGroup } from \"shards-react\";\nimport CompositeSoil from \"./compositeSoilForm\";\nimport StandardSoil from \"./standardSoil\";\nimport { useTranslation } from \"react-i18next\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nfunction FieldSoilForm(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(props.isStandard),\n      _useState2 = _slicedToArray(_useState, 2),\n      isStandardSoil = _useState2[0],\n      setSoilType = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentDepthLevel = _useState4[0],\n      setDepthLevel = _useState4[1];\n\n  var _useState5 = useState(props.depth),\n      _useState6 = _slicedToArray(_useState5, 2),\n      depthLevel = _useState6[0],\n      setLevel = _useState6[1];\n\n  var _useState7 = useState({\n    zone: 1,\n    mode: \"Manual\",\n    type: props.SoilProp,\n    listSoils: props.listSoils,\n    irrigArea: props.irrigArea\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      otherInfo = _useState8[0],\n      setOI = _useState8[1];\n\n  var _useState9 = useState({\n    soilType: \"\",\n    RUmax: props.RUmax,\n    effPluie: props.effPluie,\n    ruPratique: props.ruPratique,\n    effIrrig: props.effIrrig\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      soilData = _useState10[0],\n      setSoilData = _useState10[1]; // useEffect(() => {\n  //   //console.log)\n  //   let CardValues = JSON.stringify(otherInfo);\n  //   props.onChange(CardValues);\n  // }, [props.saved]);\n  // useEffect(() => {\n  //   soilTypeForm();\n  //   props.handleDepth(props.depth)\n  // }, [currentDepthLevel]);\n\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = otherInfo.listSoils.find(function (soil) {\n      return soil.soil == e.target.value;\n    }); // props.handleEffIrrig(soilType.fc)\n\n    if (e.target.value !== \"\") {\n      props.handleEffRain(soilType.rain_eff);\n      props.handleRuPractical(soilType.practical_fraction);\n      props.handleRuMax(soilType.ru);\n    }\n\n    if (typeof soilType !== \"undefined\") {\n      setSoilData(_objectSpread({}, soilData, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effIrrig: soilType.fc,\n        ruPratique: soilType.practical_fraction,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  };\n\n  var soilTypeForm = function soilTypeForm() {\n    if (isStandardSoil == true) return null // <StandardSoil\n    //   listSoils={otherInfo.listSoils}\n    //   key={currentDepthLevel}\n    //   depth={depthLevel[currentDepthLevel].depth}\n    //   uni={depthLevel[currentDepthLevel].uni}\n    //   onChange={value => {\n    //     depthLevel[currentDepthLevel].uni = value.uni;\n    //     depthLevel[currentDepthLevel].depth = value.depth;\n    //   }}\n    // />\n    ;else {\n      return /*#__PURE__*/React.createElement(CompositeSoil, {\n        key: currentDepthLevel + 1,\n        depth: depthLevel[currentDepthLevel].depth,\n        clay: depthLevel[currentDepthLevel].clay,\n        sand: depthLevel[currentDepthLevel].sand,\n        silt: depthLevel[currentDepthLevel].silt,\n        OM: depthLevel[currentDepthLevel].OM,\n        pH: depthLevel[currentDepthLevel].pH,\n        Ecd: depthLevel[currentDepthLevel].Ecd,\n        CEC: depthLevel[currentDepthLevel].CEC,\n        soilProprety: otherInfo.type,\n        soilType: soilData.soilType,\n        onChange: function onChange(value) {\n          depthLevel[currentDepthLevel] = value;\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  console.log(soilData.soilType);\n\n  var deleteDepthLevelButton = function deleteDepthLevelButton() {\n    if (depthLevel[currentDepthLevel].depth != 10) {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        className: \"form-group\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        theme: \"danger\",\n        onClick: function onClick(evt) {\n          evt.preventDefault();\n          depthLevel.splice(currentDepthLevel, 1);\n          setDepthLevel(currentDepthLevel - 1);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, \"delete current depth level\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    sm: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    sm: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, otherInfo.listSoils.map(function (item) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"h-100\",\n      src: \"\".concat(process.env.REACT_APP_BASE_URL, \"/static/\").concat(item.soil_photo),\n      alt: item.soil,\n      width: \"110\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 25\n      }\n    }, item.soil));\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, t('soil_zone')), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.zoneName,\n    placeholder: t('soil_zone'),\n    required: true,\n    onChange: props.handleZoneName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n    value: soilData.soilType,\n    onChange: handleSoilPick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, t('select_soil')), otherInfo.listSoils.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.soil,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 28\n      }\n    }, item.soil);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, t('soil_prop')), /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(evt) {\n      setOI(_objectSpread({}, otherInfo, {\n        type: evt.target.value\n      }));\n      props.handleSoilProprety(evt.target.value); //if (\n      //window.confirm(\n      //  \"Changing soil type risks of deleting all existing depth levels, are you sure to continue?\"\n      //\n      //) {\n\n      setSoilType(!isStandardSoil); //depthLevel.soilProprety = evt.target.value\n      //setDepthLevel({soilProprety: evt.target.value});\n      //setDepthLevel(0);\n      //depthLevel.splice(1, depthLevel.length - 1);\n      //} else {\n      //evt.preventDefault();\n      //}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: isStandardSoil,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n    selected: !isStandardSoil,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Composite\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, t('name_field')), /*#__PURE__*/React.createElement(FormSelect, {\n    value: otherInfo.field_uid,\n    onChange: props.handleUidField,\n    placeholder: t('name_field'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, t('select_field')), props.fields.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.Uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 26\n      }\n    }, item.title);\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, soilTypeForm()), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, t('efficacité_pluie'), \" (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"number\",\n    value: props.effPluie,\n    onChange: function onChange(e) {\n      return props.handleEffRain(e.target.value);\n    },\n    id: \"effPluie\",\n    placeholder: t('efficacité_pluie'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"number\",\n    value: props.RUmax,\n    onChange: function onChange(e) {\n      return props.handleRuMax(e.target.value);\n    },\n    id: \"ruMax\",\n    placeholder: \"RU max\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nFieldSoilForm.defaultProps = {\n  isStandard: true,\n  SoilProp: \"Standard\",\n  depth: [{\n    depth: 10,\n    clay: 20,\n    sand: 60,\n    silt: 20,\n    CEC: 1,\n    OM: 1,\n    pH: 2,\n    Ecd: 1,\n    uni: \"Clay\",\n    soilProprety: \"Standard\"\n  }]\n};\nexport default FieldSoilForm;","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Form","FormSelect","Button","Slider","FormInput","FormGroup","CompositeSoil","StandardSoil","useTranslation","Carousel","FieldSoilForm","props","t","i18n","isStandard","isStandardSoil","setSoilType","currentDepthLevel","setDepthLevel","depth","depthLevel","setLevel","zone","mode","type","SoilProp","listSoils","irrigArea","otherInfo","setOI","soilType","RUmax","effPluie","ruPratique","effIrrig","soilData","setSoilData","handleSoilPick","e","preventDefault","find","soil","target","value","handleEffRain","rain_eff","handleRuPractical","practical_fraction","handleRuMax","ru","fc","soilTypeForm","clay","sand","silt","OM","pH","Ecd","CEC","console","log","deleteDepthLevelButton","evt","splice","map","item","process","env","REACT_APP_BASE_URL","soil_photo","margin","zoneName","handleZoneName","index","handleSoilProprety","field_uid","handleUidField","fields","Uid","title","defaultProps","uni","soilProprety"],"sources":["C:/professional/2K Media/II.develepment/smart farm/smartFarmOldVPS/frontend/src/components/FieldSettingForms/FieldSoilForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, FormSelect, Button, Slider, FormInput, FormGroup } from \"shards-react\";\nimport CompositeSoil from \"./compositeSoilForm\";\nimport StandardSoil from \"./standardSoil\";\nimport { useTranslation } from \"react-i18next\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nfunction FieldSoilForm(props) {\n  const { t, i18n } = useTranslation();\n  const [isStandardSoil, setSoilType] = useState(props.isStandard);\n  const [currentDepthLevel, setDepthLevel] = useState(0);\n  const [depthLevel, setLevel] = useState(props.depth);\n  const [otherInfo, setOI] = useState({\n    zone: 1,\n    mode: \"Manual\",\n    type: props.SoilProp,\n    listSoils : props.listSoils,\n    irrigArea : props.irrigArea\n  });\n\n  const [soilData,setSoilData] = useState({\n    soilType :\"\",\n    RUmax: props.RUmax,\n    effPluie: props.effPluie,\n    ruPratique: props.ruPratique,\n    effIrrig: props.effIrrig,\n  })\n\n  // useEffect(() => {\n  //   //console.log)\n  //   let CardValues = JSON.stringify(otherInfo);\n  //   props.onChange(CardValues);\n  // }, [props.saved]);\n\n  // useEffect(() => {\n  //   soilTypeForm();\n  //   props.handleDepth(props.depth)\n  // }, [currentDepthLevel]);\n\n  const handleSoilPick = (e) => {\n    e.preventDefault()\n    const soilType = otherInfo.listSoils.find(\n        (soil) => soil.soil == e.target.value\n    );\n    // props.handleEffIrrig(soilType.fc)\n    if(e.target.value !== \"\"){\n      props.handleEffRain(soilType.rain_eff)\n      props.handleRuPractical(soilType.practical_fraction)\n      props.handleRuMax(soilType.ru)\n\n    }\n    if (typeof soilType !== \"undefined\") {\n        setSoilData({\n            ...soilData,\n            soilType: soilType.soil,\n            RUmax: soilType.ru,\n            effIrrig: soilType.fc,\n            ruPratique: soilType.practical_fraction,\n            effPluie: soilType.rain_eff\n        });\n\n    }\n};\n\n\n  const soilTypeForm = () => {\n    if (isStandardSoil == true)\n      return (\n          null\n        // <StandardSoil\n        //   listSoils={otherInfo.listSoils}\n        //   key={currentDepthLevel}\n        //   depth={depthLevel[currentDepthLevel].depth}\n        //   uni={depthLevel[currentDepthLevel].uni}\n        //   onChange={value => {\n        //     depthLevel[currentDepthLevel].uni = value.uni;\n        //     depthLevel[currentDepthLevel].depth = value.depth;\n        //   }}\n        // />\n      );\n    else {\n      return (\n        <CompositeSoil\n          key={currentDepthLevel + 1}\n          depth={depthLevel[currentDepthLevel].depth}\n          clay={depthLevel[currentDepthLevel].clay}\n          sand={depthLevel[currentDepthLevel].sand}\n          silt={depthLevel[currentDepthLevel].silt}\n          OM={depthLevel[currentDepthLevel].OM}\n          pH={depthLevel[currentDepthLevel].pH}\n          Ecd={depthLevel[currentDepthLevel].Ecd}\n          CEC={depthLevel[currentDepthLevel].CEC}\n          soilProprety={otherInfo.type}\n          soilType={soilData.soilType}\n          onChange={value => {\n            depthLevel[currentDepthLevel] = value;\n          }}\n        />\n      );\n    }\n  };\n\n  console.log(soilData.soilType)\n\n  const deleteDepthLevelButton = () => {\n    if (depthLevel[currentDepthLevel].depth != 10) {\n      return (\n        <Col md=\"12\" className=\"form-group\">\n          <Button\n            theme=\"danger\"\n            onClick={evt => {\n              evt.preventDefault();\n              depthLevel.splice(currentDepthLevel, 1);\n              setDepthLevel(currentDepthLevel - 1);\n            }}\n          >\n            delete current depth level\n          </Button>\n        </Col>\n      );\n    }\n  };\n\n\n\n  return (\n    <>\n      <Col lg=\"12\" sm=\"12\" md=\"12\">\n        <Form>\n          <Row  className=\"py-2 d-flex justify-content-start border-bottom align-items-center\" >\n            <Col lg=\"4\" sm=\"12\" md=\"12\">\n              <Carousel>\n                  {\n                    otherInfo.listSoils.map(item => {\n                      return (\n                        <>\n                        <img\n                        className=\"h-100\"\n                        src={`${process.env.REACT_APP_BASE_URL}/static/${item.soil_photo}`}  \n                        alt={item.soil}\n                        width=\"110\"\n                        />\n                        <span>{item.soil}</span>\n                        </>\n\n                      )\n                    })\n                  }\n\n                </Carousel>\n            \n            </Col>\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('soil_zone')}</p>\n              <FormInput\n                value={props.zoneName}\n                placeholder={t('soil_zone')}\n                required\n                onChange={props.handleZoneName}\n\n              />\n                <p style={{ margin: \"0px\" }}>{t('soil_type')}</p>\n            <FormSelect\n            value={soilData.soilType}\n              onChange={handleSoilPick}\n            >\n              <option value=\"\">{t('select_soil')}</option>\n              {\n                otherInfo.listSoils.map((item, index) => {  \n                    return <option value={item.soil} >{item.soil}</option>;\n                \n                })\n              }\n            </FormSelect>\n\n\n            </Col>       \n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('soil_prop')}</p>\n              <FormSelect\n                onChange={evt => {\n                  setOI({ ...otherInfo, type: evt.target.value });\n                  props.handleSoilProprety(evt.target.value)\n                  //if (\n                  //window.confirm(\n                  //  \"Changing soil type risks of deleting all existing depth levels, are you sure to continue?\"\n                  //\n                  //) {\n                  setSoilType(!isStandardSoil);\n                  //depthLevel.soilProprety = evt.target.value\n                  //setDepthLevel({soilProprety: evt.target.value});\n                  //setDepthLevel(0);\n                  //depthLevel.splice(1, depthLevel.length - 1);\n                  //} else {\n                  //evt.preventDefault();\n                  //}\n                }}\n              >\n                <option selected={isStandardSoil}>Standard</option>\n                <option selected={!isStandardSoil}>Composite</option>\n              </FormSelect>\n              <p style={{ margin: \"0px\" }}>{t('name_field')}</p>\n              <FormSelect\n                value={otherInfo.field_uid}\n                onChange={props.handleUidField}\n                placeholder={t('name_field')}\n              >\n                <option value=\"\">{t('select_field')}</option>\n                {props.fields.map((item, index) => {\n                  return <option value={item.Uid}>{item.title}</option>;\n                })}\n              </FormSelect>\n            </Col>\n          </Row>\n          <Row form>\n            {soilTypeForm()}\n          </Row>\n          <Row form className=\"py-2\" >\n        \n            <Col lg=\"4\" md=\"12\" sm=\"12\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('efficacité_pluie')} (%)</p>\n                <FormInput type=\"number\" value={props.effPluie} onChange={e => props.handleEffRain(e.target.value)} id='effPluie' placeholder={t('efficacité_pluie')}\n                />\n\n              </FormGroup>\n            </Col>\n            <Col lg=\"4\" md=\"12\" sm=\"12\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>RU max (mm/m)</p>\n                <FormInput type=\"number\" value={props.RUmax} onChange={e => props.handleRuMax(e.target.value)} id='ruMax' placeholder=\"RU max\"\n                />\n\n              </FormGroup>\n\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n\n    </>\n  );\n}\n\nFieldSoilForm.defaultProps = {\n  isStandard: true,\n  SoilProp: \"Standard\",\n  depth: [\n    {\n      depth: 10,\n      clay: 20,\n      sand: 60,\n      silt: 20,\n      CEC: 1,\n      OM: 1,\n      pH: 2,\n      Ecd: 1,\n      uni: \"Clay\",\n      soilProprety: \"Standard\"\n    }\n  ]\n};\n\nexport default FieldSoilForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}