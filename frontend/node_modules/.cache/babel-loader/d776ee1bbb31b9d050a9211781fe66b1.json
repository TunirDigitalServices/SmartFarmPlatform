{"ast":null,"code":"import _toConsumableArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorHistoryChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nvar SensorHistoryChart = function SensorHistoryChart(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var getChartData = function getChartData() {\n    console.log(data);\n    var labels = [];\n    var dataMv1 = [];\n    var dataMv2 = [];\n    var dataMv3 = [];\n    var temperature = [];\n    var humidity = [];\n    var tempSubSoil = [];\n    var altitude = [];\n    var min = [];\n    var max = [];\n    data && data.map(function (sensorData) {\n      var date = sensorData.time;\n      dataMv1.push(parseFloat(sensorData.mv1).toFixed(2));\n      dataMv2.push(parseFloat(sensorData.mv2).toFixed(2));\n      dataMv3.push(parseFloat(sensorData.mv3).toFixed(2));\n      temperature.push(parseFloat(sensorData.temperature).toFixed(2));\n      altitude.push(parseFloat(sensorData.altitude));\n      tempSubSoil.push(parseFloat(sensorData.ts).toFixed(2));\n      humidity.push(parseFloat(sensorData.humidity).toFixed(2));\n      labels.push(moment(date.slice(0, 10)).format('DD-MM-YYYY'));\n      labels = _toConsumableArray(new Set(labels));\n    });\n    var MinDataMv2 = dataMv2.filter(function (a) {\n      return a < 50;\n    });\n    var MaxDataMv2 = dataMv2.filter(function (a) {\n      return a > 50;\n    });\n    var state = {\n      labels: labels,\n      datasets: [{\n        label: 'Humidity Mv1 ',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataMv1,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#4cd615\"\n      }, {\n        label: 'Humidity Mv2',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataMv2,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }, {\n        label: 'Humidity Mv3',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataMv3,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#eca712\"\n      }, {\n        label: 'Tempreature ',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: temperature,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#f46835\"\n      }, {\n        label: 'Humidity',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: humidity,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#7217a7\"\n      }, {\n        label: 'Tempreature subsoil',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: tempSubSoil,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#f46835\"\n      }, {\n        label: 'Altitude',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: altitude,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#2ab49f\"\n      }, {\n        label: 'Min Humidity Mv2',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: MinDataMv2,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#2ab49f\"\n      }, {\n        label: 'Max Humidity Mv2',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: MaxDataMv2,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#2ab49f\"\n      }]\n    };\n    setState(state);\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('Sensor History')),\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'right'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SensorHistoryChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useTranslation","SensorHistoryChart","data","state","setState","t","i18n","getChartData","console","log","labels","dataMv1","dataMv2","dataMv3","temperature","humidity","tempSubSoil","altitude","min","max","map","sensorData","date","time","push","parseFloat","mv1","toFixed","mv2","mv3","ts","slice","format","Set","MinDataMv2","filter","a","MaxDataMv2","datasets","label","lineTension","borderWidth","fill","backgroundColor","borderColor","title","display","text","fontSize","legend","position"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorHistoryChart.js"],"sourcesContent":["import moment from 'moment';\nimport React , {useState,useEffect}from 'react'\nimport { Line } from  'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nconst SensorHistoryChart = ({data}) => {\n\n    const [state,setState] = useState(null)\n    const { t, i18n } = useTranslation();\n\n\n    const getChartData = () => {\n      console.log(data)\n        let labels = []   \n        let dataMv1 = []\n        let dataMv2 = []\n        let dataMv3 = []\n        let temperature = []\n        let humidity = []\n        let tempSubSoil = []\n        let altitude = []\n        let min = []\n        let max = []\n       data && data.map(sensorData=>{\n            let date =sensorData.time\n         \n            dataMv1.push(parseFloat(sensorData.mv1).toFixed(2))\n            dataMv2.push(parseFloat(sensorData.mv2).toFixed(2))\n            dataMv3.push(parseFloat(sensorData.mv3).toFixed(2))\n            temperature.push(parseFloat(sensorData.temperature).toFixed(2))\n            altitude.push(parseFloat(sensorData.altitude))\n            tempSubSoil.push(parseFloat(sensorData.ts).toFixed(2))\n            humidity.push(parseFloat(sensorData.humidity).toFixed(2))\n            labels.push(moment(date.slice(0,10)).format('DD-MM-YYYY'))\n            labels = ([...new Set(labels)])\n        })\n       ; \n     let MinDataMv2 = dataMv2.filter((a)=> {\n          return a < 50\n        }); \n        let MaxDataMv2 = dataMv2.filter((a)=> {\n          return a > 50\n        }); \n        \n        const state = {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Humidity Mv1 ',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: dataMv1,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#4cd615\"\n                  },\n                  {\n                    label: 'Humidity Mv2',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: dataMv2,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"rgba(75,192,192,1)\"\n                  },\n                  {\n                    label: 'Humidity Mv3',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: dataMv3,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#eca712\"\n                  },\n                  {\n                    label: 'Tempreature ',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: temperature,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#f46835\"\n                  },\n                  {\n                    label: 'Humidity',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: humidity,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#7217a7\"\n                  },\n                  {\n                    label: 'Tempreature subsoil',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: tempSubSoil,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#f46835\"\n                  },\n                  {\n                    label: 'Altitude',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: altitude,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#2ab49f\"\n                  },\n                  {\n                    label: 'Min Humidity Mv2',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: MinDataMv2,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#2ab49f\"\n                  },\n                   {\n                    label: 'Max Humidity Mv2',\n                    lineTension: 0.5,\n                    borderWidth: 2,\n                    data: MaxDataMv2,\n                    fill: false,\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\n                    borderColor: \"#2ab49f\"\n                  }\n\n                 \n            ]\n          }\n          setState(state)\n    }\n\n    useEffect(()=>{\n        getChartData()\n    },[data])\n\n  return (\n    <Line\n      data={state}\n          options={{\n            title:{\n              display:true,\n              text:`${t('Sensor History')}`,\n              fontSize:20\n            },\n            legend:{\n              display:true,\n              position:'right'\n            }\n          }}\n      />\n  )\n}\n\nexport default SensorHistoryChart"],"mappings":"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"},"metadata":{},"sourceType":"module"}