{"ast":null,"code":"import { Html5QrcodeScanType, Html5QrcodeConstants } from \"../../core\";\n\nvar ScanTypeSelector = function () {\n  function ScanTypeSelector(supportedScanTypes) {\n    this.supportedScanTypes = this.validateAndReturnScanTypes(supportedScanTypes);\n  }\n\n  ScanTypeSelector.prototype.getDefaultScanType = function () {\n    return this.supportedScanTypes[0];\n  };\n\n  ScanTypeSelector.prototype.hasMoreThanOneScanType = function () {\n    return this.supportedScanTypes.length > 1;\n  };\n\n  ScanTypeSelector.prototype.isCameraScanRequired = function () {\n    for (var _i = 0, _a = this.supportedScanTypes; _i < _a.length; _i++) {\n      var scanType = _a[_i];\n\n      if (ScanTypeSelector.isCameraScanType(scanType)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  ScanTypeSelector.isCameraScanType = function (scanType) {\n    return scanType === Html5QrcodeScanType.SCAN_TYPE_CAMERA;\n  };\n\n  ScanTypeSelector.isFileScanType = function (scanType) {\n    return scanType === Html5QrcodeScanType.SCAN_TYPE_FILE;\n  };\n\n  ScanTypeSelector.prototype.validateAndReturnScanTypes = function (supportedScanTypes) {\n    if (!supportedScanTypes || supportedScanTypes.length === 0) {\n      return Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE;\n    }\n\n    var maxExpectedValues = Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.length;\n\n    if (supportedScanTypes.length > maxExpectedValues) {\n      throw \"Max \" + maxExpectedValues + \" values expected for \" + \"supportedScanTypes\";\n    }\n\n    for (var _i = 0, supportedScanTypes_1 = supportedScanTypes; _i < supportedScanTypes_1.length; _i++) {\n      var scanType = supportedScanTypes_1[_i];\n\n      if (!Html5QrcodeConstants.DEFAULT_SUPPORTED_SCAN_TYPE.includes(scanType)) {\n        throw \"Unsupported scan type \" + scanType;\n      }\n    }\n\n    return supportedScanTypes;\n  };\n\n  return ScanTypeSelector;\n}();\n\nexport { ScanTypeSelector };","map":null,"metadata":{},"sourceType":"module"}