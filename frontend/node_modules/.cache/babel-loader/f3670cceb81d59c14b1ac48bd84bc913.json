{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\smartF back\\\\SmartFarmPlatform\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\smartF back\\\\SmartFarmPlatform\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\smartF back\\\\SmartFarmPlatform\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\smartF back\\\\SmartFarmPlatform\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\smartF back\\\\SmartFarmPlatform\\\\frontend\\\\src\\\\views\\\\Overview.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from 'react-router-dom';\nimport { Container, Row, Col, CardBody, Card, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields';\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport AddField from \"./AddField\";\nimport FieldSetupForm from \"../components/FieldSettingForms/FieldSetupForm\";\nimport FieldSoilForm from \"../components/FieldSettingForms/FieldSoilForm\";\nimport FieldCropForm from \"../components/FieldSettingForms/FieldCropForm\";\nimport CompositeSoil from \"../components/FieldSettingForms/compositeSoilForm\";\nimport DripForm from \"../components/FieldSettingForms/dripForm\";\nimport LateralForm from \"../components/FieldSettingForms/lateralForm\";\nimport PivotForm from \"../components/FieldSettingForms/pivotForm\";\nimport clap from \"../images/applause.png\";\nimport { FeatureGroup, MapContainer, Marker, Polygon, Popup, ScaleControl, TileLayer } from \"react-leaflet\";\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\nimport moment from \"moment\";\nimport EditableMap from \"./EditableMap\";\n\nvar Overview = function Overview(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      farms = _useState4[0],\n      setFarms = _useState4[1];\n\n  var _useState5 = useState({\n    polygon: true,\n    rectangle: false,\n    marker: false,\n    circle: false,\n    polyline: false,\n    circlemarker: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      draw = _useState6[0],\n      setDraw = _useState6[1];\n\n  var history = useHistory();\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      steps = _useState8[0],\n      setSteps = _useState8[1]; // const [offer,setOffer] = useState(null)\n\n\n  var _useState9 = useState({\n    draw: {\n      polygon: false,\n      circle: false,\n      rectangle: false,\n      polyline: false,\n      marker: false,\n      circlemarker: false\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      configMap = _useState10[0],\n      setConfigMap = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      layer = _useState12[0],\n      setLayer = _useState12[1];\n\n  var _useState13 = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      coords = _useState14[0],\n      setCoords = _useState14[1];\n\n  var _onCreated = function _onCreated(e) {\n    var type = e.layerType;\n    var layer = e.layer;\n\n    if (type === \"polygon\") {\n      var _coords = layer._latlngs[0];\n\n      var Coordinates = _coords.map(function (coord) {\n        return {\n          Lat: coord.lat,\n          Long: coord.lng\n        };\n      });\n\n      if (Coordinates) {\n        setLayer(JSON.stringify(Coordinates));\n        setCoords({\n          Latitude: Coordinates[0].Lat,\n          Longitude: Coordinates[0].Long\n        });\n      }\n    }\n  }; // const EditableMap = () => {\n  //   useEffect(() => {\n  //     // Create a Leaflet map\n  //     const map = L.map('map').setView([0, 0], 2);\n  //     // Add a tile layer\n  //     L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\n  //     subdomains:['mt0', 'mt1', 'mt2', 'mt3']\n  //     }).addTo(map);\n  //     // Create an editable feature group\n  //     const editableLayers = new L.FeatureGroup().addTo(map);\n  //     // Configure the drawing options\n  //     const drawOptions = {\n  //       position: 'topright',\n  //       draw: {\n  //         circle: false,\n  //         marker: false,\n  //         polyline: false,\n  //         polygon: {\n  //           allowIntersection: false,\n  //           drawError: {\n  //             color: 'red',\n  //             timeout: 1000,\n  //           },\n  //           shapeOptions: {\n  //             color: 'blue',\n  //           },\n  //         },\n  //       },\n  //     };\n  //     // Add the Leaflet Draw control\n  //     const drawControl = new L.Control.Draw(drawOptions);\n  //     map.addControl(drawControl);\n  //     // Event handler for layer creation\n  //     map.on(L.Draw.Event.CREATED, function (event) {\n  //       const layer = event.layer;\n  //       // Access layer data (e.g., coordinates for polygons)\n  //       const layerData = layer.toGeoJSON();\n  //       console.log(layerData);\n  //       // Update your application state with the layer data\n  //       // Your logic to handle the layer data goes here\n  //       let coordinates = [];\n  //       if (layerData.geometry.type === 'Polygon') {\n  //         coordinates = layerData.geometry.coordinates[0].map(coord => ({\n  //           Lat: coord[1],\n  //           Long: coord[0],\n  //         }));\n  //       }\n  //       if (coordinates.length > 0 ){\n  //         setLayer(JSON.stringify(coordinates))\n  //         setCoords({ Latitude: coordinates[0].Lat, Longitude : coordinates[0].Long });\n  //       }\n  //       // Add the layer to the editableLayers FeatureGroup\n  //       editableLayers.addLayer(layer);\n  //     });\n  //     // Cleanup when the component is unmounted\n  //     return () => {\n  //       map.remove(); // Remove the map instance\n  //     };\n  //   }, []);\n  //   return <div id=\"map\" style={{ height: '350px' }}></div>;\n  // };\n\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fieldStats = _useState16[0],\n      setFS = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sensorStats = _useState18[0],\n      setSensorStats = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      open = _useState20[0],\n      setOpen = _useState20[1];\n\n  var _useState21 = useState(\"#\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userMapDetails = _useState22[0],\n      setUserMapDetails = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      layerFarm = _useState24[0],\n      setLayerFarm = _useState24[1];\n\n  var _useState25 = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      mapConfig = _useState26[0],\n      setMapConfig = _useState26[1];\n\n  var sensorsData = useSensorData('/sensor/sensor-update-data');\n\n  var toggleDropDown = function toggleDropDown() {\n    setToggle(!toggle);\n  };\n\n  var toggleToolTip = function toggleToolTip() {\n    setOpen(!open);\n  };\n\n  var getFieldStats = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/dashboard/fields');\n\n            case 2:\n              response = _context.sent;\n              setFS(response.data.farms);\n              setUserMapDetails(response.data.user_map_details.map_link_details);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFieldStats() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getSensorsStats = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/dashboard/sensors');\n\n            case 2:\n              response = _context2.sent;\n              setSensorStats(response.data.sensors); // if(response.data.sensors){\n              //   setMapConfig({center : [Number(response.data.sensors[0].Latitude) ,Number(response.data.sensors[0].Longitude)]})\n              // }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getSensorsStats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      crops = _useState28[0],\n      setCrops = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      dataCrops = _useState30[0],\n      setDataCrops = _useState30[1];\n\n  var getLayerFarm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/farm/farms').then(function (res) {\n                var DataFarm = res.data.farms;\n                setLayerFarm(DataFarm);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getLayerFarm() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // getLastDataSensor()\n    getLayerFarm();\n    getFieldStats();\n    getSensorsStats(); // fetchDataCrops()\n  }, []);\n  var critical = 0;\n  var full = 0;\n  var opt = 0;\n  fieldStats.map(function (item) {\n    item.fields.map(function (field) {\n      var status = field.status;\n\n      if (status) {\n        if (status == \"Optimal\") {\n          opt++;\n        }\n\n        if (status == \"Full\") {\n          full++;\n        }\n\n        if (status == \"Critical\") {\n          critical++;\n        }\n      }\n    });\n  });\n  var smallStats = [{\n    state: \"\".concat(t('Critical')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint-slash\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: critical,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n      borderColor: \"rgb(0, 184, 216)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Optimal')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: opt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(23,198,113,0.1)\",\n      borderColor: \"rgb(23,198,113)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Full')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: full,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n\n  var _useState31 = useState({\n    online: 0,\n    offline: 0,\n    lowBatt: 0\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      sensorState = _useState32[0],\n      setSensorState = _useState32[1];\n\n  var _useState33 = useState(new Date()),\n      _useState34 = _slicedToArray(_useState33, 2),\n      currentTime = _useState34[0],\n      setCurrentTime = _useState34[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setCurrentTime(new Date());\n    }, 120000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  useEffect(function () {\n    var sensorStates = {};\n\n    var _iterator = _createForOfIteratorHelper(sensorsData),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var item = _step.value;\n        var lastTime = moment(item.time).format('YYYY-MM-DD HH:mm');\n\n        if (item.sensor_id) {\n          var timeStartDifference = moment(lastTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'days');\n\n          if (timeStartDifference < 0) {\n            sensorStates[item.sensor_id] = {\n              online: 0,\n              offline: 1\n            };\n          } else if (timeStartDifference === 0) {\n            sensorStates[item.sensor_id] = {\n              online: 1,\n              offline: 0\n            };\n          } else {\n            sensorStates[item.sensor_id] = {\n              online: 0,\n              offline: 0\n            };\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var totalOnline = Object.values(sensorStates).reduce(function (sum, state) {\n      return sum + state.online;\n    }, 0);\n    var totalOffline = Object.values(sensorStates).reduce(function (sum, state) {\n      return sum + state.offline;\n    }, 0);\n    setSensorState({\n      online: totalOnline,\n      offline: totalOffline,\n      sensorStates: sensorStates\n    });\n  }, [sensorsData, currentTime]);\n  var smallStats2 = [{\n    state: \"\".concat(t('online')),\n    icon: /*#__PURE__*/React.createElement(SignalCellular4BarIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: sensorState.online,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('low_batt')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-battery-quarter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: sensorState.lowBatt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('offline')),\n    icon: /*#__PURE__*/React.createElement(SignalCellularNodataIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: sensorState.offline,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n\n  var FilterByStatus = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(status) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              data = {\n                status: status\n              };\n              _context4.next = 3;\n              return api.post('/field/field-status', data).then(function (response) {\n                var farmsData = response.data.farms;\n                setFarms(farmsData);\n              }).catch(function (err) {\n                swal({\n                  title: 'Error',\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function FilterByStatus(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var ToSensorPage = function ToSensorPage() {\n    history.push('/Sensors');\n    window.location.reload();\n  };\n\n  var ToAddSensorPage = function ToAddSensorPage() {\n    history.push('/AddSensor');\n    window.location.reload();\n  };\n\n  var ToAddFarmPage = function ToAddFarmPage() {\n    history.push('/AddFarm');\n    window.location.reload();\n  };\n\n  var ToAddFieldPage = function ToAddFieldPage() {\n    history.push('/AddField');\n    window.location.reload();\n  };\n\n  var ToWaterBalancePage = function ToWaterBalancePage() {\n    history.push('/Bilan');\n    window.location.reload();\n  };\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      show = _useState36[0],\n      setShow = _useState36[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var prevStep = function prevStep() {\n    setSteps(steps - 1);\n  };\n\n  var nextStep = function nextStep() {\n    setSteps(steps + 1);\n  };\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      listSoils = _useState38[0],\n      setListSoils = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      fields = _useState40[0],\n      setFields = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      zones = _useState42[0],\n      setZones = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      allCities = _useState44[0],\n      setAllCities = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      countries = _useState46[0],\n      setCountries = _useState46[1];\n\n  var getSoils = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return api.get('/soils/get-soils').then(function (response) {\n                var listSoils = response.data.Soils;\n                setListSoils(listSoils);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context5.next = 8;\n              break;\n\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 5]]);\n    }));\n\n    return function getSoils() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getDataFields = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return api.get('/field/fields').then(function (res) {\n                var newData = res.data.farms;\n                setFarms(newData);\n                var Fields = [];\n                var Zones = [];\n                var Crops = [];\n                newData.map(function (item) {\n                  var fields = item.fields;\n\n                  if (fields) {\n                    fields.map(function (itemfield) {\n                      Fields.push({\n                        title: itemfield.name,\n                        status: itemfield.status,\n                        description: itemfield.description,\n                        Uid: itemfield.uid,\n                        farm_id: itemfield.farm_id,\n                        Latitude: itemfield.Latitude,\n                        Longitude: itemfield.Longitude,\n                        Id: itemfield.id\n                      });\n                      var zones = itemfield.zones;\n                      var crops = itemfield.crops;\n\n                      if (crops) {\n                        crops.map(function (crop) {\n                          Crops.push({\n                            type: crop.type,\n                            id: crop.id,\n                            Uid: crop.uid,\n                            fieldId: crop.field_id,\n                            zone_id: crop.zone_id,\n                            croptype_id: crop.croptype_id,\n                            croptype: crop.croptypes\n                          });\n                        });\n                      }\n\n                      if (zones) {\n                        zones.map(function (i) {\n                          Zones.push({\n                            Id: i.id,\n                            name: i.name,\n                            Uid: i.uid,\n                            source: i.source,\n                            description: i.description,\n                            field_id: i.field_id\n                          });\n                        });\n                      }\n\n                      ;\n                    });\n                  }\n                });\n                setFields(Fields);\n                setZones(Zones);\n                setCrops(Crops);\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getDataFields() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var getDataFields = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return api.get('/field/fields').then(function (res) {\n                  var newData = res.data.farms;\n                  setFarms(newData);\n                  var Fields = [];\n                  var Zones = [];\n                  var Crops = [];\n                  newData.map(function (item) {\n                    var fields = item.fields;\n\n                    if (fields) {\n                      fields.map(function (itemfield) {\n                        Fields.push({\n                          title: itemfield.name,\n                          status: itemfield.status,\n                          description: itemfield.description,\n                          Uid: itemfield.uid,\n                          farm_id: itemfield.farm_id,\n                          Latitude: itemfield.Latitude,\n                          Longitude: itemfield.Longitude,\n                          Id: itemfield.id\n                        });\n                        var zones = itemfield.zones;\n                        var crops = itemfield.crops;\n\n                        if (crops) {\n                          crops.map(function (crop) {\n                            Crops.push({\n                              type: crop.type,\n                              id: crop.id,\n                              Uid: crop.uid,\n                              fieldId: crop.field_id,\n                              zone_id: crop.zone_id,\n                              croptype_id: crop.croptype_id,\n                              croptype: crop.croptypes\n                            });\n                          });\n                        }\n\n                        if (zones) {\n                          zones.map(function (i) {\n                            Zones.push({\n                              Id: i.id,\n                              name: i.name,\n                              Uid: i.uid,\n                              source: i.source,\n                              description: i.description,\n                              field_id: i.field_id\n                            });\n                          });\n                        }\n\n                        ;\n                      });\n                    }\n                  });\n                  setFields(Fields);\n                  setZones(Zones);\n                  setCrops(Crops);\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function getDataFields() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    getDataFields();\n  }, []);\n  useEffect(function () {\n    var getCities = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return api.get('/cities/get-cities').then(function (res) {\n                  var cities = res.data.Cities;\n                  setAllCities(cities);\n                });\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function getCities() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var getCountries = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return api.get('/countries/get-countries').then(function (res) {\n                  var countries = res.data.Countries;\n                  setCountries(countries);\n                });\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function getCountries() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    getSoils();\n    getCountries();\n    getCities();\n  }, []);\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = listSoils.find(function (soil) {\n      return soil.soil == e.target.value;\n    });\n\n    if (e.target.value !== \"\") {\n      setSoilParams({\n        effPluie: soilType.rain_eff\n      });\n      setSoilParams({\n        RUmax: soilType.ru\n      });\n    }\n\n    if (typeof soilType !== \"undefined\") {\n      setSoilParams(_objectSpread({}, soilParams, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  }; // ADD Farm\n\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      country = _useState48[0],\n      setCountry = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      cities = _useState50[0],\n      setCities = _useState50[1];\n\n  var handleCountryPick = function handleCountryPick(e) {\n    e.preventDefault();\n    var country = countries.find(function (country) {\n      return country.iso === e.target.value;\n    });\n    var Cities = [];\n\n    if (country) {\n      allCities.map(function (city) {\n        if (city.iso === country.iso) {\n          Cities.push({\n            city: city.city,\n            id: city.id,\n            lat: city.lat,\n            lon: city.lon\n          });\n        }\n      });\n      setCountry(country.iso);\n      setCities(Cities);\n    }\n  };\n\n  var _useState51 = useState({\n    name: \"\",\n    groupName: \"\",\n    cityId: \"\"\n  }),\n      _useState52 = _slicedToArray(_useState51, 2),\n      farmParams = _useState52[0],\n      setFarmParams = _useState52[1];\n\n  var userUid = JSON.parse(localStorage.getItem('user')).id;\n\n  var addFarm = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              data = {\n                name: farmParams.name,\n                name_group: farmParams.groupName,\n                user_uid: userUid,\n                city_id: farmParams.cityId // Coordinates : layer,\n                // Latitude : coords.Latitude,\n                // Longitude : coords.Longitude\n\n              };\n              _context10.next = 3;\n              return api.post('/farm/add-farm', data).then(function (response) {\n                if (response.data.type === \"success\") {\n                  swal('Farm Added', {\n                    icon: \"success\"\n                  });\n                  getLayerFarm();\n                  setSteps(steps + 1);\n                }\n              }).catch(function (err) {\n                swal(err, {\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function addFarm() {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // ADD Field\n\n\n  var _useState53 = useState({\n    name: \"\",\n    farm_uid: \"\",\n    width: \"\",\n    length: \"\",\n    Latitude: \"\",\n    Longitude: \"\"\n  }),\n      _useState54 = _slicedToArray(_useState53, 2),\n      dataField = _useState54[0],\n      setDataField = _useState54[1];\n\n  var addField = function addField() {\n    var data = {\n      name: dataField.name,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid,\n      largeur: dataField.width,\n      longueur: dataField.length,\n      coordinates: layer,\n      Latitude: parseFloat(coords.Latitude).toFixed(4),\n      Longitude: parseFloat(coords.Longitude).toFixed(4)\n    };\n    api.post('/field/add-field', data).then(function (res) {\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('field_added')), {\n          icon: \"success\"\n        });\n        getDataFields();\n        setSteps(steps + 1);\n      }\n    }).catch(function () {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  }; // ADD Soil Zone\n\n\n  var soilTypeForm = function soilTypeForm() {\n    if (isStandardSoil == true) return null;else {\n      return /*#__PURE__*/React.createElement(CompositeSoil, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  var _useState55 = useState(true),\n      _useState56 = _slicedToArray(_useState55, 2),\n      isStandardSoil = _useState56[0],\n      setSoilType = _useState56[1];\n\n  var _useState57 = useState({\n    soilProperty: \"\",\n    soilType: \"\",\n    field_uid: \"\",\n    zone_uid: \"\",\n    name: \"\",\n    RUmax: \"\",\n    effPluie: \"\"\n  }),\n      _useState58 = _slicedToArray(_useState57, 2),\n      soilParams = _useState58[0],\n      setSoilParams = _useState58[1];\n\n  var addZone = function addZone() {\n    var data = {\n      soilProperty: soilParams.soilProperty,\n      field_uid: soilParams.field_uid,\n      zone_uid: soilParams.zone_uid,\n      name: soilParams.name,\n      RUmax: soilParams.RUmax,\n      effPluie: soilParams.effPluie\n    };\n    api.post('/zone/add-zone', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal({\n          title: 'Cannot add soil',\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal({\n          title: 'Soil added',\n          icon: \"success\",\n          text: 'Soil added successfully '\n        });\n      }\n\n      getDataFields();\n      setSteps(steps + 1);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      listSoil = _useState60[0],\n      setListSoil = _useState60[1];\n\n  var _useState61 = useState([]),\n      _useState62 = _slicedToArray(_useState61, 2),\n      listCrop = _useState62[0],\n      setListCrop = _useState62[1];\n\n  var _useState63 = useState([]),\n      _useState64 = _slicedToArray(_useState63, 2),\n      allVarieties = _useState64[0],\n      setAllVarieties = _useState64[1];\n\n  var _useState65 = useState([]),\n      _useState66 = _slicedToArray(_useState65, 2),\n      listIrrigations = _useState66[0],\n      setListIrrigations = _useState66[1];\n\n  useEffect(function () {\n    var getCropType = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context11.next = 8;\n                break;\n\n              case 5:\n                _context11.prev = 5;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.log(_context11.t0);\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                _context12.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setListSoil(listSoils);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context12.next = 8;\n                break;\n\n              case 5:\n                _context12.prev = 5;\n                _context12.t0 = _context12[\"catch\"](0);\n                console.log(_context12.t0);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    var getIrrigations = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                _context13.next = 3;\n                return api.get('/irrigations/get-irrigations').then(function (response) {\n                  if (response) {\n                    var dataIrrig = response.data.Irrigations;\n                    setListIrrigations(dataIrrig);\n                  }\n                });\n\n              case 3:\n                _context13.next = 8;\n                break;\n\n              case 5:\n                _context13.prev = 5;\n                _context13.t0 = _context13[\"catch\"](0);\n                console.log(_context13.t0);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, null, [[0, 5]]);\n      }));\n\n      return function getIrrigations() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    var getVarieties = /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                _context14.next = 3;\n                return api.get('/varieties/get-varieties').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listVarieties = response.data.Varieties;\n                    setAllVarieties(listVarieties);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context14.next = 8;\n                break;\n\n              case 5:\n                _context14.prev = 5;\n                _context14.t0 = _context14[\"catch\"](0);\n                console.log(_context14.t0);\n\n              case 8:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, null, [[0, 5]]);\n      }));\n\n      return function getVarieties() {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getIrrigations();\n    getSoils();\n    getCropType();\n  }, []); // ADD Crop \n\n  var _useState67 = useState(false),\n      _useState68 = _slicedToArray(_useState67, 2),\n      checked = _useState68[0],\n      setChecked = _useState68[1];\n\n  var _useState69 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    growingDate: \"\",\n    rootDepth: \"\",\n    ecartInter: \"\",\n    ecartIntra: \"\",\n    density: \"\",\n    ruPratique: \"\",\n    kcList: [],\n    surface: \"\"\n  }),\n      _useState70 = _slicedToArray(_useState69, 2),\n      cropData = _useState70[0],\n      setCropData = _useState70[1];\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault(); // props.handleCropType(e)\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        ruPratique: crop.practical_fraction\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        days: crop.total\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        rootDepth: crop.root_max\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', '')\n      }));\n    }\n\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        rootDepth: crop.root_max,\n        ruPratique: crop.practical_fraction,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.id == e.target.value;\n    });\n\n    if (variety) {\n      setCropData(_objectSpread({}, cropData, {\n        variety: variety.id\n      }));\n    }\n  };\n\n  var handleKeyPress = function handleKeyPress(event) {\n    var regex = /^[1-9][0-9]?$|^100$/;\n    var key = event.key;\n    var currentValue = event.target.value + key;\n\n    if (!regex.test(currentValue)) {\n      event.preventDefault();\n    }\n  };\n\n  var addCrop = function addCrop() {\n    var data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction: cropData.ruPratique,\n      density: cropData.density,\n      ecart_inter: cropData.ecartInter,\n      ecart_intra: cropData.ecartIntra,\n      surface: cropData.surface,\n      growingDate: cropData.growingDate\n    };\n    api.post('/crop/add-crop', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('crop_added')), {\n          icon: \"success\"\n        });\n        getDataFields();\n        setSteps(steps + 1);\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  }; // ADD Irrigation\n\n\n  var _useState71 = useState({\n    irrigType: \"\",\n    zone_uid: \"\",\n    crop_uid: \"\",\n    flowrate: \"\",\n    irrigated_already: \"\",\n    name: \"\",\n    pivot_shape: \"\",\n    irrigation_syst: \"\",\n    pivot_length: \"\",\n    pivot_coord: \"\",\n    full_runtime: \"\",\n    lateral: \"\",\n    drippers: \"\",\n    effIrrig: \"\",\n    pumpFlow: \"\",\n    pumpType: \"\",\n    linesNumber: \"\",\n    drippersSpacing: \"\"\n  }),\n      _useState72 = _slicedToArray(_useState71, 2),\n      irrigData = _useState72[0],\n      setIrrigData = _useState72[1];\n\n  var handleIrrigPick = function handleIrrigPick(e) {\n    e.preventDefault();\n    var irrigation = listIrrigations.find(function (irrigation) {\n      return irrigation.irrigation == e.target.value;\n    });\n    setIrrigData({\n      irrigType: irrigation.irrigation\n    });\n\n    if (irrigation) {\n      setIrrigData(_objectSpread({}, irrigData, {\n        irrigType: irrigation.irrigation,\n        effIrrig: irrigation.effIrrig\n      }));\n    }\n  };\n\n  var irrigationMethodForm = function irrigationMethodForm() {\n    switch (irrigData.irrigType) {\n      case \"\".concat(t('Pivot')):\n        return /*#__PURE__*/React.createElement(PivotForm, {\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          handleIrrgSyst: function handleIrrgSyst(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigation_syst: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handlePivotCoord: function handlePivotCoord(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_coord: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handlePivotShape: function handlePivotShape(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_shape: e.target.value\n            }));\n          },\n          irrigation_syst: irrigData.irrigation_syst,\n          pivot_coord: irrigData.pivot_coord,\n          pivot_length: irrigData.pivot_length,\n          pivot_shape: irrigData.pivot_shape,\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 16\n          }\n        });\n\n      case \"\".concat(t('Lateral')):\n        return /*#__PURE__*/React.createElement(LateralForm, {\n          handleLateral: function handleLateral(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              lateral: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handleName: function handleName(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              name: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          pivot_length: irrigData.pivot_length,\n          lateral: irrigData.lateral,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 16\n          }\n        });\n\n      case \"\".concat(t('None')):\n        return null;\n\n      default:\n        return /*#__PURE__*/React.createElement(DripForm, {\n          handleDrippers: function handleDrippers(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              drippers: e.target.value\n            }));\n          },\n          handleIrrigAlrd: function handleIrrigAlrd(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          flowrate: irrigData.flowrate,\n          drippers: irrigData.drippers,\n          irrigated_already: irrigData.irrigated_already,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 11\n          }\n        });\n    }\n  };\n\n  var addIrrigation = function addIrrigation() {\n    var data = {\n      type: irrigData.irrigType,\n      zone_uid: irrigData.zone_uid,\n      crop_uid: irrigData.crop_uid,\n      flowrate: irrigData.flowrate,\n      irrigated_already: irrigData.irrigated_already,\n      name: irrigData.name,\n      pivot_shape: irrigData.pivot_shape,\n      irrigation_syst: irrigData.irrigation_syst,\n      pivot_length: irrigData.pivot_length,\n      pivot_coord: irrigData.pivot_coord,\n      full_runtime: irrigData.full_runtime,\n      lateral: irrigData.lateral,\n      drippers: irrigData.drippers,\n      effIrrig: irrigData.effIrrig,\n      pumpFlow: irrigData.pumpFlow,\n      pumpType: irrigData.pumpType,\n      lines_number: irrigData.linesNumber,\n      drippers_spacing: irrigData.drippersSpacing\n    };\n    api.post('/irrigation/add-irrigation', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('irrigation_added')), {\n          icon: \"success\"\n        });\n        setSteps(steps + 1);\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var configProcess = function configProcess() {\n    switch (steps) {\n      case 0:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1158,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('farm_setup')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 17\n          }\n        }, \"\\\"To get started, please provide a name and location for your farm. This will help us to identify and locate your farm accurately.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 17\n          }\n        }, \" \", t('name_farm'), \" *\"), /*#__PURE__*/React.createElement(FormInput, {\n          placeholder: t('name_farm'),\n          required: true,\n          value: farmParams.name,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              name: e.target.value\n            }));\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 17\n          }\n        }, t('group_name')), /*#__PURE__*/React.createElement(FormInput, {\n          placeholder: t('group_name'),\n          value: farmParams.groupName,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              groupName: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Row, {\n          className: \"pt-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 17\n          }\n        }, t('select_country'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCountryPick,\n          value: country,\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 17\n          }\n        }, countries.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1197,\n              columnNumber: 25\n            }\n          }, country.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 17\n          }\n        }, t('select_city'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: farmParams.cityId,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              cityId: e.target.value\n            }));\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1211,\n            columnNumber: 19\n          }\n        }, t('select_city')), cities && cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: city.id,\n            value: city.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 25\n            }\n          }, city.city);\n        })))));\n\n      case 1:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('field_setup')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 17\n          }\n        }, \"To proceed to the next stage, we kindly ask you to draw your field on the map.\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 21\n          }\n        }, t('name_field'), \" *\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field'),\n          style: {\n            border: '1px solid #0BAECB'\n          } // className={props.nameError =='' ? '' : 'is-invalid'}\n          ,\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 21\n          }\n        }, t('name_farm'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid,\n          style: {\n            border: '1px solid #0BAECB'\n          } // className={props.farmError =='' ? '' : 'is-invalid'}\n          ,\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              farm_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1253,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1260,\n            columnNumber: 23\n          }\n        }, t('select_farm')), \";\", layerFarm.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1262,\n              columnNumber: 32\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 21\n          }\n        }, t('width'), \" (M)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          placeholder: t('width'),\n          value: dataField.width,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              width: e.target.value\n            }));\n          },\n          required: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1279,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 21\n          }\n        }, t('length'), \" (M)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          placeholder: t('length'),\n          value: dataField.length,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              length: e.target.value\n            }));\n          },\n          required: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 21\n          }\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(EditableMap, {\n          setLayer: setLayer,\n          setCoords: setCoords,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 17\n          }\n        }))));\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1304,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('soil_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1306,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 17\n          }\n        }, \"\\\"To add your soil type configuration, please provide the appropriate details and associate it with the appropriate field. This will help us to provide accurate recommendations for managing your crops.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 17\n          }\n        }, t('soil_zone'), \" *\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilParams.name,\n          placeholder: t('soil_zone'),\n          required: true,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              name: e.target.value\n            }));\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 17\n          }\n        }, t('soil_type'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilParams.soilType,\n          onChange: handleSoilPick,\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1327,\n            columnNumber: 19\n          }\n        }, t('select_soil')), listSoils.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.soil,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 30\n            }\n          }, item.soil);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1339,\n            columnNumber: 17\n          }\n        }, t('soil_prop'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: function onChange(evt) {\n            setSoilType(!isStandardSoil);\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1349,\n            columnNumber: 19\n          }\n        }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n          selected: !isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 19\n          }\n        }, \"Composite\")), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 17\n          }\n        }, t('name_field'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilParams.field_uid,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('name_field'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1353,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 19\n          }\n        }, t('select_field')), fields.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1362,\n              columnNumber: 28\n            }\n          }, item.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 13\n          }\n        }, soilTypeForm()), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1370,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 19\n          }\n        }, t('efficacité_pluie'), \" (%) *\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilParams.effPluie,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: t('efficacité_pluie'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1382,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1383,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1384,\n            columnNumber: 19\n          }\n        }, \"RU max (mm/m) *\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilParams.RUmax,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 19\n          }\n        })))));\n\n      case 3:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('crop_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1401,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 17\n          }\n        }, \"\\\"To add your crop type configuration, please provide the appropriate details and associate it with the appropriate field and soil type. This will help us to provide personalized recommendations for managing your crops and achieving optimal yields.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1405,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group pt-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1406,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1407,\n            columnNumber: 17\n          }\n        }, t('crop_type'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCropPick,\n          placeholder: t('crop_type'),\n          value: cropData.cropType,\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1408,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 19\n          }\n        }, \"Select Crop\"), listCrop.map(function (crop) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 25\n            }\n          }, crop.crop);\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 17\n          }\n        }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.variety,\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 19\n          }\n        }, t('crop_variety')), cropData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.varietyId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 23\n            }\n          }, variety.variety);\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"Autre\",\n          id: \"check\",\n          onClick: function onClick() {\n            return setChecked(!checked);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 17\n          }\n        }), \" \", t('other'), checked ? /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.variety || \"\",\n          placeholder: t('crop_variety'),\n          id: \"cropVariety\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              variety: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 21\n          }\n        }) : null), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1452,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 17\n          }\n        }, t('crop_zone'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.zone_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              zone_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1454,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 19\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1465,\n              columnNumber: 30\n            }\n          }, soil.name);\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 17\n          }\n        }, t('crop_field'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.field_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1472,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 19\n          }\n        }, t('select_field')), fields.map(function (item, indx) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1482,\n              columnNumber: 30\n            }\n          }, item.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1490,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1491,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1492,\n            columnNumber: 19\n          }\n        }, t('surface'), \" (m\\xB2)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.surface,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              surface: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('surface'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1493,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1500,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1501,\n            columnNumber: 19\n          }\n        }, t('depth'), \" (m) *\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.rootDepth,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              rootDepth: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('depth'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1512,\n            columnNumber: 19\n          }\n        }, t('Days'), \" *\"), /*#__PURE__*/React.createElement(FormInput, {\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          type: \"number\",\n          value: cropData.days,\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: t('Days'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1513,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1519,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 19\n          }\n        }, t('planting_date'), \" *\"), /*#__PURE__*/React.createElement(FormInput, {\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          type: \"date\",\n          value: cropData.growingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              growingDate: e.target.value\n            }));\n          },\n          id: \"planting_date\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1521,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          hidden: true,\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1527,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 19\n          }\n        }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.plantingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1529,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1534,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1536,\n            columnNumber: 19\n          }\n        }, t('fraction_pratique'), \" (%) * \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ruPratique,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: t('fraction_pratique'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1537,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1544,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1545,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1546,\n            columnNumber: 19\n          }\n        }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartInter,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartInter: e.target.value\n            }));\n          },\n          id: \"ecartInter\",\n          placeholder: t('ecart_inter'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 19\n          }\n        }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartIntra,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartIntra: e.target.value\n            }));\n          },\n          id: \"ecartIntra\",\n          placeholder: t('ecart_intra'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1555,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1561,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1562,\n            columnNumber: 19\n          }\n        }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.density,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              density: e.target.value\n            }));\n          },\n          id: \"densit\\xE9\",\n          placeholder: t('densité'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1563,\n            columnNumber: 19\n          }\n        })))));\n\n      case 4:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1574,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('Irrigation_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1575,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1576,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1577,\n            columnNumber: 17\n          }\n        }, \"\\\"To add your irrigation type configuration, please provide the appropriate details and associate it with the appropriate crop type and soil type. This will help us to provide personalized recommendations for managing your crops and optimizing water usage.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1580,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1582,\n            columnNumber: 17\n          }\n        }, t('irrigation_zone'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.zone_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              zone_uid: e.target.value\n            }));\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1589,\n            columnNumber: 19\n          }\n        }, t('select_zone')), zones.map(function (item, indx) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1593,\n              columnNumber: 30\n            }\n          }, item.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1598,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1599,\n            columnNumber: 17\n          }\n        }, t('irrigation_crop'), \" *\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.crop_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              crop_uid: e.target.value\n            }));\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1600,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1606,\n            columnNumber: 19\n          }\n        }, t('select_crop')), crops.map(function (crop) {\n          var cropType = \"\";\n          listCrop.map(function (croptype) {\n            if (croptype.id === crop.croptype_id) {\n              cropType = croptype.crop;\n            }\n          });\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1615,\n              columnNumber: 30\n            }\n          }, cropType);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1622,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1623,\n            columnNumber: 17\n          }\n        }, t('Irrigation_system_type'), \" *\"), /*#__PURE__*/React.createElement(FormSelect // className={props.typeErrorIrrig == '' ? '' : 'is-invalid'}\n        , {\n          value: irrigData.irrigType,\n          onChange: function onChange(evt) {\n            handleIrrigPick(evt);\n          },\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1624,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          disabled: true,\n          selected: true,\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1633,\n            columnNumber: 19\n          }\n        }, t('select_irriagtion')), listIrrigations.map(function (item) {\n          // if (item.value === irrigationMethod) {\n          //   return <option value={item.value} selected={true}>{item.type}</option>;\n          // } else {\n          //   return <option value={item.value} selected={false}>{item.type}</option>;\n          // }\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.irrigation,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1641,\n              columnNumber: 30\n            }\n          }, t(\"\".concat(item.irrigation)));\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1646,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1647,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1648,\n            columnNumber: 19\n          }\n        }, t('efficience_irrigation'), \" (%) *\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.effIrrig,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: t('efficience_irrigation'),\n          style: {\n            border: '1px solid #0BAECB'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1649,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1657,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1658,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1659,\n            columnNumber: 19\n          }\n        }, t('type_reseau')), /*#__PURE__*/React.createElement(FormInput, {\n          value: irrigData.pumpType,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpType: e.target.value\n            }));\n          },\n          id: \"type_reseau\",\n          placeholder: t('type_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1666,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1667,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1668,\n            columnNumber: 19\n          }\n        }, t('debit_reseau'), \" (l/s) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.pumpFlow,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpFlow: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('debit_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1669,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1675,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1676,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1677,\n            columnNumber: 19\n          }\n        }, t('nbr_ligne')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.linesNumber,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              linesNumber: e.target.value\n            }));\n          },\n          id: \"nbr_ligne\",\n          placeholder: t('nbr_ligne'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1678,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1684,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1685,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1686,\n            columnNumber: 19\n          }\n        }, t('irrigated_already'), \"(h) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.irrigated_already,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('irrigated_already'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1687,\n            columnNumber: 19\n          }\n        }))), irrigationMethodForm()));\n\n      case 5:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-column align-items-center justify-content-around\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1699,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"20%\",\n          src: clap,\n          alt: \"Congratulations\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1701,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"h6\", {\n          style: {\n            textAlign: \"center\",\n            width: \"88%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1702,\n            columnNumber: 13\n          }\n        }, \"Congratulations, your farm configuration is complete \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1702,\n            columnNumber: 116\n          }\n        }), \" Thank you for filling out all 5 steps of the form. \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1702,\n            columnNumber: 174\n          }\n        }), \"Now it's time to configure your sensors. Please proceed to the next step to add your sensor configuration.\"));\n\n      default:\n        break;\n    }\n  };\n\n  var totalSteps = 5;\n  var percentageComplete = Math.ceil(steps / totalSteps * 100);\n\n  var handleSubmit = function handleSubmit() {\n    switch (steps) {\n      case 0:\n        return addFarm();\n\n      case 1:\n        return addField();\n\n      case 2:\n        return addZone();\n\n      case 3:\n        return addCrop();\n\n      case 4:\n        return addIrrigation();\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1745,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1747,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    className: \"d-flex flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1748,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1749,\n      columnNumber: 13\n    }\n  }, \"Farm Configuration\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textDecoration: \"underline\",\n      fontSize: 12,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1750,\n      columnNumber: 13\n    }\n  }, \"Each step of this form is dependent on the previous step, so please fill out the fields in the correct order to avoid errors or an incomplete submission.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1751,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    animated: true,\n    variant: \"success\",\n    now: percentageComplete,\n    label: \"\".concat(percentageComplete, \"%\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1752,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1757,\n      columnNumber: 11\n    }\n  }, configProcess()), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1760,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1761,\n      columnNumber: 13\n    }\n  }, \"Close\"), steps !== 5 ? /*#__PURE__*/React.createElement(Button, {\n    disabled: steps === 1 && coords.Latitude === \"\",\n    variant: \"primary\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1767,\n      columnNumber: 17\n    }\n  }, \"Save & continue process\") : null, steps > 0 && steps < 5 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: prevStep,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1777,\n      columnNumber: 17\n    }\n  }, \"Previous\") : null))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-2 mb-4 d-flex justify-content-between flex-nowrap align-items-center border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1787,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: t('overview'),\n    className: \" mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1788,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    open: toggle,\n    toggle: toggleDropDown,\n    className: \"d-table mr-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1789,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1790,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"TooltipExample\",\n    theme: \"info\",\n    className: \"rounded-circle\",\n    style: {\n      height: 50,\n      width: 50\n    },\n    onClick: toggleDropDown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1791,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    style: {\n      fontSize: 30,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1792,\n      columnNumber: 15\n    }\n  }, \"\\uE145\"), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"left\",\n    open: open,\n    target: \"#TooltipExample\",\n    toggle: toggleToolTip,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1793,\n      columnNumber: 15\n    }\n  }, t('add_element')))), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    style: {\n      zIndex: \"10\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1805,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: handleShow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1806,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1807,\n      columnNumber: 15\n    }\n  }, t('farms'))), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: function onClick() {\n      return ToAddSensorPage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1812,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1813,\n      columnNumber: 15\n    }\n  }, t('sensors'))), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: function onClick() {\n      return ToWaterBalancePage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1817,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1818,\n      columnNumber: 15\n    }\n  }, t('water_balance')))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1826,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1827,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1828,\n      columnNumber: 11\n    }\n  }, t('field_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1829,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 d-flex  justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1830,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1831,\n      columnNumber: 15\n    }\n  }, smallStats.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      FilterByStatus: FilterByStatus,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1842,\n        columnNumber: 21\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1859,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1875,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1876,\n      columnNumber: 11\n    }\n  }, t('sensor_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1877,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1878,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1879,\n      columnNumber: 15\n    }\n  }, smallStats2.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      ToSensorPage: ToSensorPage,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1889,\n        columnNumber: 21\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1906,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1922,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeafletMap, {\n    data: layerFarm,\n    sensor: sensorStats,\n    draw: configMap.draw,\n    zoom: mapConfig.zoom,\n    center: mapConfig.center,\n    fromAcrion: mapConfig.fromAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1924,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1927,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1929,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterFields, {\n    smallStats: smallStats,\n    sensorsData: sensorsData,\n    crops: crops,\n    filteredByStatus: farms,\n    sensorStats: sensorStats,\n    fieldStats: fieldStats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1930,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Overview;","map":{"version":3,"names":["React","useEffect","useState","useHistory","Link","Container","Row","Col","CardBody","Card","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Tooltip","FormInput","FormSelect","FormGroup","Form","PageTitle","SmallStats","LeafletMap","SignalCellularNodataIcon","SignalCellular4BarIcon","Modal","ProgressBar","api","useTranslation","FilterFields","swal","useSensorData","AddField","FieldSetupForm","FieldSoilForm","FieldCropForm","CompositeSoil","DripForm","LateralForm","PivotForm","clap","FeatureGroup","MapContainer","Marker","Polygon","Popup","ScaleControl","TileLayer","LeafletGeoCoder","EditControl","L","moment","EditableMap","Overview","props","toggle","setToggle","farms","setFarms","polygon","rectangle","marker","circle","polyline","circlemarker","draw","setDraw","history","steps","setSteps","edit","delete","configMap","setConfigMap","layer","setLayer","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","_onCreated","e","type","layerType","_latlngs","Coordinates","map","coord","Lat","lat","Long","lng","JSON","stringify","t","i18n","fieldStats","setFS","sensorStats","setSensorStats","open","setOpen","userMapDetails","setUserMapDetails","layerFarm","setLayerFarm","mapConfig","setMapConfig","sensorsData","toggleDropDown","toggleToolTip","getFieldStats","get","response","data","user_map_details","map_link_details","getSensorsStats","sensors","crops","setCrops","dataCrops","setDataCrops","getLayerFarm","then","res","DataFarm","critical","full","opt","item","fields","field","status","smallStats","state","icon","label","value","chartLabels","attrs","md","sm","datasets","fill","borderWidth","backgroundColor","borderColor","online","offline","lowBatt","sensorState","setSensorState","Date","currentTime","setCurrentTime","interval","setInterval","clearInterval","sensorStates","lastTime","time","format","sensor_id","timeStartDifference","diff","totalOnline","Object","values","reduce","sum","totalOffline","smallStats2","FilterByStatus","post","farmsData","catch","err","title","ToSensorPage","push","window","location","reload","ToAddSensorPage","ToAddFarmPage","ToAddFieldPage","ToWaterBalancePage","show","setShow","handleClose","handleShow","prevStep","nextStep","listSoils","setListSoils","setFields","zones","setZones","allCities","setAllCities","countries","setCountries","getSoils","Soils","error","console","log","getDataFields","newData","Fields","Zones","Crops","itemfield","name","description","Uid","uid","farm_id","Id","id","crop","fieldId","field_id","zone_id","croptype_id","croptype","croptypes","i","source","getCities","cities","Cities","getCountries","Countries","handleSoilPick","preventDefault","soilType","find","soil","target","setSoilParams","effPluie","rain_eff","RUmax","ru","soilParams","country","setCountry","setCities","handleCountryPick","iso","city","lon","groupName","cityId","farmParams","setFarmParams","userUid","parse","localStorage","getItem","addFarm","name_group","user_uid","city_id","farm_uid","width","length","dataField","setDataField","addField","farmName","largeur","longueur","coordinates","parseFloat","toFixed","soilTypeForm","isStandardSoil","setSoilType","soilProperty","field_uid","zone_uid","addZone","text","listSoil","setListSoil","listCrop","setListCrop","allVarieties","setAllVarieties","listIrrigations","setListIrrigations","getCropType","dataCrop","Croptype","getIrrigations","dataIrrig","Irrigations","getVarieties","listVarieties","Varieties","checked","setChecked","cropType","variety","cropVariety","Profondeur","days","plantingDate","growingDate","rootDepth","ecartInter","ecartIntra","density","ruPratique","kcList","surface","cropData","setCropData","handleCropPick","practical_fraction","total","root_max","plant_date","slice","replace","varieties","crop_id","varietyId","crop_variety","all_kc","handleVarietyPick","handleKeyPress","event","regex","key","currentValue","test","addCrop","previous_type","crop_variety_id","ecart_inter","ecart_intra","irrigType","crop_uid","flowrate","irrigated_already","pivot_shape","irrigation_syst","pivot_length","pivot_coord","full_runtime","lateral","drippers","effIrrig","pumpFlow","pumpType","linesNumber","drippersSpacing","irrigData","setIrrigData","handleIrrigPick","irrigation","irrigationMethodForm","addIrrigation","lines_number","drippers_spacing","configProcess","padding","borderRadius","fontSize","lineHeight","margin","border","textAlign","index","evt","indx","totalSteps","percentageComplete","Math","ceil","handleSubmit","textDecoration","fontWeight","height","display","justifyContent","alignItems","color","zIndex","flexDirection","flexWrap","stats","idx","borderStyle"],"sources":["C:/Users/LENOVO/Desktop/smartF back/SmartFarmPlatform/frontend/src/views/Overview.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Container, Row, Col, CardBody, Card, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport SmallStats from \"../components/common/SmallStats\";\r\nimport \"./../assets/Styles.css\";\r\nimport \"./Styles.css\";\r\nimport LeafletMap from \"./map\";\r\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\r\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\r\nimport { Modal, ProgressBar } from \"react-bootstrap\";\r\nimport api from '../api/api';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FilterFields from './FilterFields'\r\nimport swal from \"sweetalert\";\r\nimport useSensorData from \"../utils/useSensorData\";\r\nimport AddField from \"./AddField\";\r\nimport FieldSetupForm from \"../components/FieldSettingForms/FieldSetupForm\";\r\nimport FieldSoilForm from \"../components/FieldSettingForms/FieldSoilForm\";\r\nimport FieldCropForm from \"../components/FieldSettingForms/FieldCropForm\";\r\nimport CompositeSoil from \"../components/FieldSettingForms/compositeSoilForm\";\r\nimport DripForm from \"../components/FieldSettingForms/dripForm\";\r\nimport LateralForm from \"../components/FieldSettingForms/lateralForm\";\r\nimport PivotForm from \"../components/FieldSettingForms/pivotForm\";\r\nimport clap from \"../images/applause.png\";\r\nimport { FeatureGroup, MapContainer, Marker, Polygon, Popup, ScaleControl, TileLayer } from \"react-leaflet\";\r\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\r\nimport { EditControl } from \"react-leaflet-draw\";\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport 'leaflet-draw/dist/leaflet.draw';\r\nimport moment from \"moment\";\r\nimport EditableMap from \"./EditableMap\";\r\n\r\n\r\n\r\nconst Overview = (props) => {\r\n  const [toggle, setToggle] = useState(false)\r\n  const [farms, setFarms] = useState([]);\r\n  const [draw, setDraw] = useState({\r\n    polygon: true,\r\n    rectangle: false,\r\n    marker: false,\r\n    circle: false,\r\n    polyline: false,\r\n    circlemarker: false\r\n  })\r\n  const history = useHistory();\r\n  const [steps, setSteps] = useState(0)\r\n  // const [offer,setOffer] = useState(null)\r\n  const [configMap, setConfigMap] = useState({\r\n    draw: {\r\n      polygon: false,\r\n      circle: false,\r\n      rectangle: false,\r\n      polyline: false,\r\n      marker: false,\r\n      circlemarker: false,\r\n    },\r\n    edit: {\r\n      delete: false,\r\n      edit: false\r\n    }\r\n  })\r\n  const [layer, setLayer] = useState('')\r\n\r\n  const [coords, setCoords] = useState({\r\n    Latitude: \"\",\r\n    Longitude: \"\",\r\n    zoom: \"\",\r\n    center: [],\r\n    fromAction: false\r\n  })\r\n  const _onCreated = e => {\r\n    let type = e.layerType;\r\n\r\n    let layer = e.layer;\r\n    if (type === \"polygon\") {\r\n      let coords = layer._latlngs[0];\r\n      const Coordinates = coords.map((coord) => ({\r\n        Lat: coord.lat,\r\n        Long: coord.lng,\r\n      }));\r\n      if (Coordinates) {\r\n        setLayer(JSON.stringify(Coordinates))\r\n        setCoords({ Latitude: Coordinates[0].Lat, Longitude: Coordinates[0].Long });\r\n\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  // const EditableMap = () => {\r\n  //   useEffect(() => {\r\n  //     // Create a Leaflet map\r\n  //     const map = L.map('map').setView([0, 0], 2);\r\n\r\n  //     // Add a tile layer\r\n  //     L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\r\n  //     subdomains:['mt0', 'mt1', 'mt2', 'mt3']\r\n\r\n  //     }).addTo(map);\r\n\r\n  //     // Create an editable feature group\r\n  //     const editableLayers = new L.FeatureGroup().addTo(map);\r\n\r\n  //     // Configure the drawing options\r\n  //     const drawOptions = {\r\n  //       position: 'topright',\r\n  //       draw: {\r\n  //         circle: false,\r\n  //         marker: false,\r\n  //         polyline: false,\r\n  //         polygon: {\r\n  //           allowIntersection: false,\r\n  //           drawError: {\r\n  //             color: 'red',\r\n  //             timeout: 1000,\r\n  //           },\r\n  //           shapeOptions: {\r\n  //             color: 'blue',\r\n  //           },\r\n  //         },\r\n  //       },\r\n  //     };\r\n\r\n  //     // Add the Leaflet Draw control\r\n  //     const drawControl = new L.Control.Draw(drawOptions);\r\n  //     map.addControl(drawControl);\r\n\r\n  //     // Event handler for layer creation\r\n  //     map.on(L.Draw.Event.CREATED, function (event) {\r\n  //       const layer = event.layer;\r\n\r\n  //       // Access layer data (e.g., coordinates for polygons)\r\n  //       const layerData = layer.toGeoJSON();\r\n  //       console.log(layerData);\r\n\r\n  //       // Update your application state with the layer data\r\n  //       // Your logic to handle the layer data goes here\r\n  //       let coordinates = [];\r\n  //       if (layerData.geometry.type === 'Polygon') {\r\n  //         coordinates = layerData.geometry.coordinates[0].map(coord => ({\r\n  //           Lat: coord[1],\r\n  //           Long: coord[0],\r\n  //         }));\r\n  //       }\r\n  //       if (coordinates.length > 0 ){\r\n  //         setLayer(JSON.stringify(coordinates))\r\n  //         setCoords({ Latitude: coordinates[0].Lat, Longitude : coordinates[0].Long });\r\n\r\n  //       }\r\n  //       // Add the layer to the editableLayers FeatureGroup\r\n  //       editableLayers.addLayer(layer);\r\n  //     });\r\n\r\n  //     // Cleanup when the component is unmounted\r\n  //     return () => {\r\n  //       map.remove(); // Remove the map instance\r\n  //     };\r\n  //   }, []);\r\n\r\n  //   return <div id=\"map\" style={{ height: '350px' }}></div>;\r\n  // };\r\n\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [fieldStats, setFS] = useState([])\r\n  const [sensorStats, setSensorStats] = useState([])\r\n  const [open, setOpen] = useState(false)\r\n  const [userMapDetails, setUserMapDetails] = useState(\"#\")\r\n  const [layerFarm, setLayerFarm] = useState([])\r\n  const [mapConfig, setMapConfig] = useState({\r\n    zoom: \"\",\r\n    center: [],\r\n    fromAction: false,\r\n  })\r\n\r\n\r\n\r\n  let sensorsData = useSensorData('/sensor/sensor-update-data')\r\n\r\n  const toggleDropDown = () => {\r\n    setToggle(!toggle)\r\n  }\r\n\r\n  const toggleToolTip = () => {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const getFieldStats = async () => {\r\n    const response = await api.get('/dashboard/fields');\r\n    setFS(response.data.farms);\r\n    setUserMapDetails(response.data.user_map_details.map_link_details)\r\n  }\r\n\r\n  const getSensorsStats = async () => {\r\n    const response = await api.get('/dashboard/sensors');\r\n    setSensorStats(response.data.sensors);\r\n    // if(response.data.sensors){\r\n\r\n    //   setMapConfig({center : [Number(response.data.sensors[0].Latitude) ,Number(response.data.sensors[0].Longitude)]})\r\n    // }\r\n  }\r\n  const [crops, setCrops] = useState([])\r\n  const [dataCrops, setDataCrops] = useState([]);\r\n\r\n  const getLayerFarm = async () => {\r\n    await api.get('/farm/farms').then(res => {\r\n      const DataFarm = res.data.farms;\r\n      setLayerFarm(DataFarm);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // getLastDataSensor()\r\n    getLayerFarm()\r\n    getFieldStats();\r\n    getSensorsStats();\r\n    // fetchDataCrops()\r\n  }, [])\r\n  let critical = 0;\r\n  let full = 0;\r\n  let opt = 0;\r\n\r\n  fieldStats.map(item => {\r\n    item.fields.map(field => {\r\n      let status = field.status\r\n      if (status) {\r\n        if (status == \"Optimal\") {\r\n          opt++\r\n        }\r\n        if (status == \"Full\") {\r\n          full++\r\n        }\r\n        if (status == \"Critical\") {\r\n          critical++\r\n        }\r\n      }\r\n\r\n    })\r\n  });\r\n\r\n\r\n\r\n\r\n  let smallStats = [\r\n    {\r\n      state: `${t('Critical')}`,\r\n      icon: <i class=\"fas fa-tint-slash\"></i>,\r\n      label: `${t('fields')}`,\r\n      value: critical,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"6\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\r\n          borderColor: \"rgb(0, 184, 216)\",\r\n          data: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      state: `${t('Optimal')}`,\r\n      icon: <i class={\"far fa-check-circle\"}></i>,\r\n      label: `${t('fields')}`,\r\n      value: opt,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"6\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(23,198,113,0.1)\",\r\n          borderColor: \"rgb(23,198,113)\",\r\n          data: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      state: `${t('Full')}`,\r\n      icon: <i class=\"fas fa-tint\"></i>,\r\n      label: `${t('fields')}`,\r\n      value: full,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"4\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(255,180,0,0.1)\",\r\n          borderColor: \"rgb(255,180,0)\",\r\n          data: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  const [sensorState, setSensorState] = useState({\r\n    online: 0,\r\n    offline: 0,\r\n    lowBatt: 0\r\n\r\n  })\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 120000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const sensorStates = {};\r\n\r\n    for (const item of sensorsData) {\r\n      const lastTime = moment(item.time).format('YYYY-MM-DD HH:mm');\r\n      if (item.sensor_id) {\r\n        const timeStartDifference = moment(lastTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'days');\r\n\r\n        if (timeStartDifference < 0) {\r\n          sensorStates[item.sensor_id] = { online: 0, offline: 1 };\r\n        } else if (timeStartDifference === 0) {\r\n          sensorStates[item.sensor_id] = { online: 1, offline: 0 };\r\n        } else {\r\n          sensorStates[item.sensor_id] = { online: 0, offline: 0 };\r\n        }\r\n      }\r\n    }\r\n    const totalOnline = Object.values(sensorStates).reduce((sum, state) => sum + state.online, 0);\r\n    const totalOffline = Object.values(sensorStates).reduce((sum, state) => sum + state.offline, 0);\r\n\r\n    setSensorState({ online: totalOnline, offline: totalOffline, sensorStates });\r\n  }, [sensorsData, currentTime]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  let smallStats2 = [\r\n    {\r\n      state: `${t('online')}`,\r\n      icon: <SignalCellular4BarIcon />,\r\n      label: `${t('sensors')}`,\r\n      value: sensorState.online,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"4\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(255,180,0,0.1)\",\r\n          borderColor: \"rgb(255,180,0)\",\r\n          data: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      state: `${t('low_batt')}`,\r\n      icon: <i class=\"fas fa-battery-quarter\"></i>,\r\n      label: `${t('sensors')}`,\r\n      value: sensorState.lowBatt,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"4\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(255,180,0,0.1)\",\r\n          borderColor: \"rgb(255,180,0)\",\r\n          data: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      state: `${t('offline')}`,\r\n      icon: <SignalCellularNodataIcon />,\r\n      label: `${t('sensors')}`,\r\n      value: sensorState.offline,\r\n      chartLabels: [null, null, null, null, null, null, null],\r\n      attrs: { md: \"4\", sm: \"6\" },\r\n      datasets: [\r\n        {\r\n          label: \"Today\",\r\n          fill: \"start\",\r\n          borderWidth: 1.5,\r\n          backgroundColor: \"rgba(255,180,0,0.1)\",\r\n          borderColor: \"rgb(255,180,0)\",\r\n          data: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n\r\n\r\n  const FilterByStatus = async (status) => {\r\n    let data = {\r\n      status: status\r\n    }\r\n    await api.post('/field/field-status', data)\r\n      .then(response => {\r\n        let farmsData = response.data.farms\r\n        setFarms(farmsData);\r\n      }).catch((err) => {\r\n        swal({\r\n          title: 'Error',\r\n          icon: \"error\"\r\n        });\r\n      })\r\n  }\r\n\r\n  const ToSensorPage = () => {\r\n    history.push('/Sensors')\r\n    window.location.reload()\r\n  }\r\n  const ToAddSensorPage = () => {\r\n    history.push('/AddSensor')\r\n    window.location.reload()\r\n  }\r\n  const ToAddFarmPage = () => {\r\n    history.push('/AddFarm')\r\n    window.location.reload()\r\n  }\r\n  const ToAddFieldPage = () => {\r\n    history.push('/AddField')\r\n    window.location.reload()\r\n  }\r\n  const ToWaterBalancePage = () => {\r\n    history.push('/Bilan')\r\n    window.location.reload()\r\n  }\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const prevStep = () => {\r\n\r\n    setSteps(steps - 1);\r\n  }\r\n  const nextStep = () => {\r\n\r\n    setSteps(steps + 1);\r\n  }\r\n\r\n  const [listSoils, setListSoils] = useState([])\r\n  const [fields, setFields] = useState([])\r\n  const [zones, setZones] = useState([]);\r\n  const [allCities, setAllCities] = useState([])\r\n  const [countries, setCountries] = useState([])\r\n\r\n  const getSoils = async () => {\r\n    try {\r\n      await api.get('/soils/get-soils')\r\n        .then(response => {\r\n          let listSoils = response.data.Soils\r\n          setListSoils(listSoils)\r\n\r\n        }).catch(error => {\r\n          console.log(error)\r\n        })\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const getDataFields = async () => {\r\n    await api.get('/field/fields').then(res => {\r\n      const newData = res.data.farms;\r\n      setFarms(newData);\r\n      let Fields = [];\r\n      let Zones = [];\r\n      let Crops = []\r\n      newData.map(item => {\r\n        let fields = item.fields\r\n        if (fields) {\r\n          fields.map(itemfield => {\r\n            Fields.push({\r\n              title: itemfield.name,\r\n              status: itemfield.status,\r\n              description: itemfield.description,\r\n              Uid: itemfield.uid,\r\n              farm_id: itemfield.farm_id,\r\n              Latitude: itemfield.Latitude,\r\n              Longitude: itemfield.Longitude,\r\n              Id: itemfield.id\r\n            });\r\n            let zones = itemfield.zones;\r\n            let crops = itemfield.crops\r\n            if (crops) {\r\n              crops.map(crop => {\r\n                Crops.push({\r\n                  type: crop.type,\r\n                  id: crop.id,\r\n                  Uid: crop.uid,\r\n                  fieldId: crop.field_id,\r\n                  zone_id: crop.zone_id,\r\n                  croptype_id: crop.croptype_id,\r\n                  croptype: crop.croptypes\r\n                })\r\n              })\r\n            }\r\n            if (zones) {\r\n              zones.map(i => {\r\n                Zones.push({\r\n                  Id: i.id,\r\n                  name: i.name,\r\n                  Uid: i.uid,\r\n                  source: i.source,\r\n                  description: i.description,\r\n                  field_id: i.field_id\r\n\r\n                });\r\n              });\r\n            };\r\n          })\r\n        }\r\n      });\r\n      setFields(Fields)\r\n      setZones(Zones)\r\n      setCrops(Crops)\r\n\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getDataFields = async () => {\r\n      await api.get('/field/fields').then(res => {\r\n        const newData = res.data.farms;\r\n        setFarms(newData);\r\n        let Fields = [];\r\n        let Zones = [];\r\n        let Crops = []\r\n        newData.map(item => {\r\n          let fields = item.fields\r\n          if (fields) {\r\n            fields.map(itemfield => {\r\n              Fields.push({\r\n                title: itemfield.name,\r\n                status: itemfield.status,\r\n                description: itemfield.description,\r\n                Uid: itemfield.uid,\r\n                farm_id: itemfield.farm_id,\r\n                Latitude: itemfield.Latitude,\r\n                Longitude: itemfield.Longitude,\r\n                Id: itemfield.id\r\n              });\r\n              let zones = itemfield.zones;\r\n              let crops = itemfield.crops\r\n              if (crops) {\r\n                crops.map(crop => {\r\n                  Crops.push({\r\n                    type: crop.type,\r\n                    id: crop.id,\r\n                    Uid: crop.uid,\r\n                    fieldId: crop.field_id,\r\n                    zone_id: crop.zone_id,\r\n                    croptype_id: crop.croptype_id,\r\n                    croptype: crop.croptypes\r\n                  })\r\n                })\r\n              }\r\n              if (zones) {\r\n                zones.map(i => {\r\n                  Zones.push({\r\n                    Id: i.id,\r\n                    name: i.name,\r\n                    Uid: i.uid,\r\n                    source: i.source,\r\n                    description: i.description,\r\n                    field_id: i.field_id\r\n\r\n                  });\r\n                });\r\n              };\r\n            })\r\n          }\r\n        });\r\n        setFields(Fields)\r\n        setZones(Zones)\r\n        setCrops(Crops)\r\n\r\n      })\r\n    }\r\n    getDataFields()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getCities = async () => {\r\n      await api.get('/cities/get-cities').then(res => {\r\n        const cities = res.data.Cities;\r\n        setAllCities(cities);\r\n\r\n      })\r\n    }\r\n\r\n    const getCountries = async () => {\r\n      await api.get('/countries/get-countries').then(res => {\r\n        const countries = res.data.Countries;\r\n        setCountries(countries);\r\n\r\n      })\r\n    }\r\n    getSoils()\r\n    getCountries()\r\n    getCities()\r\n  }, [])\r\n\r\n  const handleSoilPick = (e) => {\r\n    e.preventDefault()\r\n    const soilType = listSoils.find(\r\n      (soil) => soil.soil == e.target.value\r\n    );\r\n    if (e.target.value !== \"\") {\r\n      setSoilParams({ effPluie: soilType.rain_eff })\r\n      setSoilParams({ RUmax: soilType.ru })\r\n\r\n    }\r\n    if (typeof soilType !== \"undefined\") {\r\n      setSoilParams({\r\n        ...soilParams,\r\n        soilType: soilType.soil,\r\n        RUmax: soilType.ru,\r\n        effPluie: soilType.rain_eff\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // ADD Farm\r\n\r\n  const [country, setCountry] = useState('')\r\n  const [cities, setCities] = useState('')\r\n\r\n  const handleCountryPick = (e) => {\r\n    e.preventDefault();\r\n    const country = countries.find(\r\n      (country) => country.iso === e.target.value\r\n    );\r\n    let Cities = []\r\n    if (country) {\r\n      allCities.map((city) => {\r\n        if (city.iso === country.iso) {\r\n          Cities.push({\r\n            city: city.city,\r\n            id: city.id,\r\n            lat: city.lat,\r\n            lon: city.lon\r\n          })\r\n        }\r\n      });\r\n\r\n      setCountry(country.iso);\r\n      setCities(Cities)\r\n\r\n    }\r\n  };\r\n  const [farmParams, setFarmParams] = useState({\r\n    name: \"\",\r\n    groupName: \"\",\r\n    cityId: \"\"\r\n  })\r\n  const userUid = JSON.parse(localStorage.getItem('user')).id\r\n\r\n  const addFarm = async () => {\r\n\r\n    let data = {\r\n      name: farmParams.name,\r\n      name_group: farmParams.groupName,\r\n      user_uid: userUid,\r\n      city_id: farmParams.cityId\r\n      // Coordinates : layer,\r\n      // Latitude : coords.Latitude,\r\n      // Longitude : coords.Longitude\r\n    }\r\n    await api.post('/farm/add-farm', data)\r\n      .then(response => {\r\n        if (response.data.type === \"success\") {\r\n          swal('Farm Added', { icon: \"success\" });\r\n          getLayerFarm()\r\n          setSteps(steps + 1)\r\n        }\r\n      }).catch(err => {\r\n        swal(err, { icon: \"error\" })\r\n      })\r\n  }\r\n\r\n\r\n  // ADD Field\r\n\r\n  const [dataField, setDataField] = useState({\r\n    name: \"\",\r\n    farm_uid: \"\",\r\n    width: \"\",\r\n    length: \"\",\r\n    Latitude: \"\",\r\n    Longitude: \"\"\r\n  })\r\n  const addField = () => {\r\n\r\n    let data = {\r\n      name: dataField.name,\r\n      farmName: dataField.farmName,\r\n      farm_uid: dataField.farm_uid,\r\n      largeur: dataField.width,\r\n      longueur: dataField.length,\r\n      coordinates: layer,\r\n      Latitude: parseFloat(coords.Latitude).toFixed(4),\r\n      Longitude: parseFloat(coords.Longitude).toFixed(4)\r\n    }\r\n\r\n    api.post('/field/add-field', data)\r\n      .then(res => {\r\n\r\n        if (res.data.type && res.data.type == \"success\") {\r\n          swal(`${t('field_added')}`, {\r\n            icon: \"success\",\r\n          });\r\n\r\n          getDataFields()\r\n          setSteps(steps + 1)\r\n        }\r\n\r\n      })\r\n      .catch(() => {\r\n        swal(`Error`, {\r\n          icon: \"error\",\r\n        });\r\n\r\n      });\r\n  }\r\n  // ADD Soil Zone\r\n\r\n  const soilTypeForm = () => {\r\n    if (isStandardSoil == true)\r\n      return (\r\n        null\r\n\r\n      );\r\n    else {\r\n      return (\r\n        <CompositeSoil />\r\n      );\r\n    }\r\n  };\r\n  const [isStandardSoil, setSoilType] = useState(true);\r\n  const [soilParams, setSoilParams] = useState({\r\n    soilProperty: \"\",\r\n    soilType: \"\",\r\n    field_uid: \"\",\r\n    zone_uid: \"\",\r\n    name: \"\",\r\n    RUmax: \"\",\r\n    effPluie: \"\",\r\n  })\r\n\r\n\r\n  const addZone = () => {\r\n\r\n    let data = {\r\n      soilProperty: soilParams.soilProperty,\r\n      field_uid: soilParams.field_uid,\r\n      zone_uid: soilParams.zone_uid,\r\n      name: soilParams.name,\r\n      RUmax: soilParams.RUmax,\r\n      effPluie: soilParams.effPluie,\r\n    }\r\n    api.post('/zone/add-zone', data)\r\n      .then(res => {\r\n        if (res.data.type && res.data.type == \"danger\") {\r\n          swal({\r\n            title: 'Cannot add soil',\r\n            icon: \"error\",\r\n\r\n          });\r\n        }\r\n        if (res.data.type && res.data.type == \"success\") {\r\n          swal({\r\n            title: 'Soil added',\r\n            icon: \"success\",\r\n            text: 'Soil added successfully '\r\n\r\n          });\r\n        }\r\n        getDataFields()\r\n        setSteps(steps + 1)\r\n      })\r\n      .catch((err) => {\r\n\r\n        console.log(err)\r\n\r\n      });\r\n  }\r\n\r\n\r\n  const [listSoil, setListSoil] = useState([])\r\n  const [listCrop, setListCrop] = useState([])\r\n  const [allVarieties, setAllVarieties] = useState([])\r\n  const [listIrrigations, setListIrrigations] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getCropType = async () => {\r\n      try {\r\n        await api.get('/croptype/list-crop')\r\n          .then(response => {\r\n            if (response) {\r\n              let dataCrop = response.data.Croptype\r\n              setListCrop(dataCrop)\r\n            }\r\n          })\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    const getSoils = async () => {\r\n      try {\r\n        await api.get('/soils/get-soils')\r\n          .then(response => {\r\n            let listSoils = response.data.Soils\r\n            setListSoil(listSoils)\r\n\r\n          }).catch(error => {\r\n            console.log(error)\r\n          })\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    const getIrrigations = async () => {\r\n      try {\r\n        await api.get('/irrigations/get-irrigations')\r\n          .then(response => {\r\n            if (response) {\r\n              let dataIrrig = response.data.Irrigations\r\n              setListIrrigations(dataIrrig)\r\n            }\r\n          })\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    const getVarieties = async () => {\r\n      try {\r\n        await api.get('/varieties/get-varieties')\r\n          .then(response => {\r\n            if (response.data.type === \"success\") {\r\n              let listVarieties = response.data.Varieties\r\n              setAllVarieties(listVarieties)\r\n\r\n            }\r\n          }).catch(error => {\r\n            console.log(error)\r\n          })\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    getVarieties()\r\n    getIrrigations()\r\n    getSoils()\r\n    getCropType()\r\n  }, [])\r\n\r\n  // ADD Crop \r\n  const [checked, setChecked] = useState(false)\r\n\r\n  const [cropData, setCropData] = useState({\r\n    field_uid: \"\",\r\n    zone_uid: \"\",\r\n    cropType: \"\",\r\n    variety: '',\r\n    cropVariety: [],\r\n    Profondeur: \"\",\r\n    days: \"\",\r\n    plantingDate: \"\",\r\n    growingDate: \"\",\r\n    rootDepth: \"\",\r\n    ecartInter: \"\",\r\n    ecartIntra: \"\",\r\n    density: \"\",\r\n    ruPratique: \"\",\r\n    kcList: [],\r\n    surface: \"\"\r\n  })\r\n\r\n  const handleCropPick = (e) => {\r\n    e.preventDefault()\r\n    // props.handleCropType(e)\r\n\r\n    const crop = listCrop.find(\r\n      (crop) => crop.id == e.target.value\r\n    );\r\n    if (e.target.value !== '') {\r\n      setCropData({ ...cropData, cropType: crop.id })\r\n      setCropData({ ...cropData, ruPratique: crop.practical_fraction })\r\n      setCropData({ ...cropData, days: crop.total })\r\n      setCropData({ ...cropData, rootDepth: crop.root_max })\r\n      setCropData({ ...cropData, plantingDate: crop.plant_date.slice(0, 11).replace('T', '') })\r\n\r\n    }\r\n    let varieties = []\r\n    if (crop) {\r\n      const variety = allVarieties.map((variety) => {\r\n        if (variety.crop_id === crop.id) {\r\n          varieties.push({\r\n            varietyId: variety.id,\r\n            variety: variety.crop_variety\r\n          })\r\n        }\r\n      });\r\n\r\n      setCropData({\r\n        ...cropData,\r\n        cropType: crop.id,\r\n        variety: crop.crop_variety,\r\n        cropVariety: varieties,\r\n        rootDepth: crop.root_max,\r\n        ruPratique: crop.practical_fraction,\r\n        days: crop.total,\r\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\r\n        kcList: crop.all_kc\r\n      });\r\n\r\n\r\n    }\r\n  };\r\n\r\n  const handleVarietyPick = (e) => {\r\n    e.preventDefault();\r\n    const variety = allVarieties.find(\r\n\r\n      (variety) => variety.id == e.target.value\r\n\r\n    )\r\n\r\n    if (variety) {\r\n      setCropData({\r\n        ...cropData,\r\n        variety: variety.id,\r\n\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    const regex = /^[1-9][0-9]?$|^100$/;\r\n    const key = event.key;\r\n    const currentValue = event.target.value + key;\r\n    if (!regex.test(currentValue)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n  const addCrop = () => {\r\n\r\n    let data = {\r\n      zone_uid: cropData.zone_uid,\r\n      field_uid: cropData.field_uid,\r\n      croptype_id: cropData.cropType,\r\n      previous_type: cropData.previous_type,\r\n      plantingDate: cropData.plantingDate,\r\n      rootDepth: cropData.rootDepth,\r\n      days: cropData.days,\r\n      crop_variety_id: cropData.variety,\r\n      practical_fraction: cropData.ruPratique,\r\n      density: cropData.density,\r\n      ecart_inter: cropData.ecartInter,\r\n      ecart_intra: cropData.ecartIntra,\r\n      surface: cropData.surface,\r\n      growingDate: cropData.growingDate,\r\n\r\n    }\r\n\r\n    api.post('/crop/add-crop', data)\r\n      .then(res => {\r\n        if (res.data.type && res.data.type == \"danger\") {\r\n          swal(`Error`, {\r\n            icon: \"error\",\r\n          });\r\n        }\r\n        if (res.data.type && res.data.type == \"success\") {\r\n          swal(`${t('crop_added')}`, {\r\n            icon: \"success\",\r\n          });\r\n          getDataFields()\r\n          setSteps(steps + 1)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        swal(`Error`, {\r\n          icon: \"error\",\r\n        });\r\n\r\n\r\n      });\r\n  }\r\n\r\n  // ADD Irrigation\r\n  const [irrigData, setIrrigData] = useState({\r\n    irrigType: \"\",\r\n    zone_uid: \"\",\r\n    crop_uid: \"\",\r\n    flowrate: \"\",\r\n    irrigated_already: \"\",\r\n    name: \"\",\r\n    pivot_shape: \"\",\r\n    irrigation_syst: \"\",\r\n    pivot_length: \"\",\r\n    pivot_coord: \"\",\r\n    full_runtime: \"\",\r\n    lateral: \"\",\r\n    drippers: \"\",\r\n    effIrrig: \"\",\r\n    pumpFlow: \"\",\r\n    pumpType: \"\",\r\n    linesNumber: \"\",\r\n    drippersSpacing: \"\"\r\n  })\r\n  const handleIrrigPick = (e) => {\r\n    e.preventDefault();\r\n    const irrigation = listIrrigations.find((irrigation) => {\r\n      return irrigation.irrigation == e.target.value\r\n\r\n    })\r\n    setIrrigData({ irrigType: irrigation.irrigation })\r\n\r\n    if (irrigation) {\r\n      setIrrigData({\r\n        ...irrigData,\r\n        irrigType: irrigation.irrigation,\r\n        effIrrig: irrigation.effIrrig\r\n      });\r\n    }\r\n  };\r\n\r\n  const irrigationMethodForm = () => {\r\n    switch (irrigData.irrigType) {\r\n      case `${t('Pivot')}`:\r\n        return <PivotForm\r\n          handleFlowRate={(e) => setIrrigData({ ...irrigData, flowrate: e.target.value })}\r\n          handleIrrgSyst={(e) => setIrrigData({ ...irrigData, irrigation_syst: e.target.value })}\r\n          handleRunTime={(e) => setIrrigData({ ...irrigData, full_runtime: e.target.value })}\r\n          handlePivotCoord={(e) => setIrrigData({ ...irrigData, pivot_coord: e.target.value })}\r\n          handlePivotLength={(e) => setIrrigData({ ...irrigData, pivot_length: e.target.value })}\r\n          handlePivotShape={(e) => setIrrigData({ ...irrigData, pivot_shape: e.target.value })}\r\n          irrigation_syst={irrigData.irrigation_syst}\r\n          pivot_coord={irrigData.pivot_coord}\r\n          pivot_length={irrigData.pivot_length}\r\n          pivot_shape={irrigData.pivot_shape}\r\n          full_runtime={irrigData.full_runtime}\r\n          flowrate={irrigData.flowrate}\r\n          name={irrigData.name}\r\n        />;\r\n      case `${t('Lateral')}`:\r\n        return <LateralForm\r\n          handleLateral={(e) => setIrrigData({ ...irrigData, lateral: e.target.value })}\r\n          handlePivotLength={(e) => setIrrigData({ ...irrigData, pivot_length: e.target.value })}\r\n          handleRunTime={(e) => setIrrigData({ ...irrigData, full_runtime: e.target.value })}\r\n          handleName={(e) => setIrrigData({ ...irrigData, name: e.target.value })}\r\n          handleFlowRate={(e) => setIrrigData({ ...irrigData, flowrate: e.target.value })}\r\n          full_runtime={irrigData.full_runtime}\r\n          flowrate={irrigData.flowrate}\r\n          name={irrigData.name}\r\n          pivot_length={irrigData.pivot_length}\r\n          lateral={irrigData.lateral}\r\n        />;\r\n      case `${t('None')}`:\r\n        return null;\r\n      default:\r\n        return (\r\n          <DripForm\r\n            handleDrippers={(e) => setIrrigData({ ...irrigData, drippers: e.target.value })}\r\n            handleIrrigAlrd={(e) => setIrrigData({ ...irrigData, irrigated_already: e.target.value })}\r\n            handleFlowRate={(e) => setIrrigData({ ...irrigData, flowrate: e.target.value })}\r\n            flowrate={irrigData.flowrate}\r\n            drippers={irrigData.drippers}\r\n            irrigated_already={irrigData.irrigated_already}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const addIrrigation = () => {\r\n\r\n    let data = {\r\n      type: irrigData.irrigType,\r\n      zone_uid: irrigData.zone_uid,\r\n      crop_uid: irrigData.crop_uid,\r\n      flowrate: irrigData.flowrate,\r\n      irrigated_already: irrigData.irrigated_already,\r\n      name: irrigData.name,\r\n      pivot_shape: irrigData.pivot_shape,\r\n      irrigation_syst: irrigData.irrigation_syst,\r\n      pivot_length: irrigData.pivot_length,\r\n      pivot_coord: irrigData.pivot_coord,\r\n      full_runtime: irrigData.full_runtime,\r\n      lateral: irrigData.lateral,\r\n      drippers: irrigData.drippers,\r\n      effIrrig: irrigData.effIrrig,\r\n      pumpFlow: irrigData.pumpFlow,\r\n      pumpType: irrigData.pumpType,\r\n      lines_number: irrigData.linesNumber,\r\n      drippers_spacing: irrigData.drippersSpacing\r\n    }\r\n\r\n\r\n    api.post('/irrigation/add-irrigation', data)\r\n      .then(res => {\r\n\r\n        if (res.data.type && res.data.type == \"danger\") {\r\n          swal(`Error`, {\r\n            icon: \"error\",\r\n          });\r\n        }\r\n        if (res.data.type && res.data.type == \"success\") {\r\n          swal(`${t('irrigation_added')}`, {\r\n            icon: \"success\",\r\n          });\r\n          setSteps(steps + 1)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n\r\n        swal(`Error`, {\r\n          icon: \"error\",\r\n        });\r\n\r\n      });\r\n  }\r\n\r\n  const configProcess = () => {\r\n    switch (steps) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            <Row className='pb-2'>\r\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('farm_setup')}`} className=\" mb-1\" />\r\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\r\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To get started, please provide a name and location for your farm. This will help us to identify and locate your farm accurately.\"</p>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n                <p style={{ margin: \"0px\" }}> {t('name_farm')} *</p>\r\n                <FormInput\r\n                  placeholder={t('name_farm')}\r\n                  required\r\n                  value={farmParams.name}\r\n                  onChange={(e) => setFarmParams({ ...farmParams, name: e.target.value })}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n                />\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n                <p style={{ margin: \"0px\" }}>{t('group_name')}</p>\r\n                <FormInput\r\n                  placeholder={t('group_name')}\r\n                  value={farmParams.groupName}\r\n                  onChange={(e) => setFarmParams({ ...farmParams, groupName: e.target.value })}\r\n\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"pt-1\">\r\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n                <p style={{ margin: \"0px\" }}>{t('select_country')} *</p>\r\n                <FormSelect\r\n                  onChange={handleCountryPick}\r\n                  value={country}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  {\r\n                    countries.map(country => {\r\n                      return (\r\n                        <option key={country.id} value={country.iso}>{country.name}</option>\r\n                      )\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n                <p style={{ margin: \"0px\" }}>{t('select_city')} *</p>\r\n                <FormSelect\r\n                  value={farmParams.cityId}\r\n                  onChange={e => setFarmParams({ ...farmParams, cityId: e.target.value })}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option selected>{t('select_city')}</option>\r\n                  {\r\n                    cities && cities.map(city => {\r\n                      return (\r\n                        <option key={city.id} value={city.id}>{city.city}</option>\r\n                      )\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n              </Col>\r\n            </Row>\r\n\r\n          </>\r\n        )\r\n      case 1:\r\n        return (\r\n          <>\r\n            <Row className='pb-2'>\r\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('field_setup')}`} className=\" mb-1\" />\r\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\r\n                <p style={{ textAlign: \"center\", fontSize: '16px', lineHeight: '1.5', margin: '0' }}>To proceed to the next stage, we kindly ask you to draw your field on the map.</p>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n\r\n              <Col lg='6' md=\"12\" sm='12'>\r\n                <Row>\r\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\r\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('name_field')} *</p>\r\n                    <FormInput\r\n                      value={dataField.name}\r\n                      placeholder={t('name_field')}\r\n                      style={{ border: '1px solid #0BAECB' }}\r\n\r\n                      // className={props.nameError =='' ? '' : 'is-invalid'}\r\n                      required\r\n                      onChange={e => setDataField({ ...dataField, name: e.target.value })}\r\n                    />\r\n                    {/* <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{props.nameError}</div> */}\r\n                  </Col>\r\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\r\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('name_farm')} *</p>\r\n                    <FormSelect\r\n                      value={dataField.farm_uid}\r\n                      style={{ border: '1px solid #0BAECB' }}\r\n                      // className={props.farmError =='' ? '' : 'is-invalid'}\r\n                      required\r\n                      onChange={e => setDataField({ ...dataField, farm_uid: e.target.value })}\r\n                    >\r\n                      <option value=\"\">{t('select_farm')}</option>;\r\n                      {layerFarm.map((item, index) => {\r\n                        return <option value={item.uid}>{item.name}</option>;\r\n                      })}\r\n                    </FormSelect>\r\n                  </Col>\r\n\r\n                </Row>\r\n                <Row>\r\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\r\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('width')} (M)</p>\r\n                    <FormInput\r\n                      type=\"number\"\r\n                      placeholder={t('width')}\r\n                      value={dataField.width}\r\n                      onChange={e => setDataField({ ...dataField, width: e.target.value })}\r\n                      required\r\n                    />\r\n                  </Col>\r\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\r\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('length')} (M)</p>\r\n                    <FormInput\r\n                      type=\"number\"\r\n                      placeholder={t('length')}\r\n                      value={dataField.length}\r\n                      onChange={e => setDataField({ ...dataField, length: e.target.value })}\r\n                      required\r\n                    />\r\n                  </Col>\r\n\r\n                </Row>\r\n              </Col>\r\n              <Col lg='6' md=\"12\" sm='12'>\r\n                <EditableMap setLayer={setLayer} setCoords={setCoords} />\r\n              </Col>\r\n\r\n            </Row>\r\n\r\n          </>\r\n\r\n        )\r\n      case 2:\r\n        return (\r\n          <Form className='pb-2'>\r\n            <Row>\r\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('soil_info')}`} className=\" mb-1\" />\r\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\r\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your soil type configuration, please provide the appropriate details and associate it with the appropriate field. This will help us to provide accurate recommendations for managing your crops.\"</p>\r\n              </div>\r\n            </Row>\r\n            <Row className=\"py-2 d-flex justify-content-start border-bottom align-items-center\" >\r\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n                <p style={{ margin: \"0px\" }}>{t('soil_zone')} *</p>\r\n                <FormInput\r\n                  value={soilParams.name}\r\n                  placeholder={t('soil_zone')}\r\n                  required\r\n                  onChange={e => setSoilParams({ ...soilParams, name: e.target.value })}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                />\r\n                <p style={{ margin: \"0px\" }}>{t('soil_type')} *</p>\r\n                <FormSelect\r\n                  value={soilParams.soilType}\r\n                  onChange={handleSoilPick}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n                >\r\n                  <option value=\"\">{t('select_soil')}</option>\r\n                  {\r\n                    listSoils.map((item, index) => {\r\n                      return <option value={item.soil} >{item.soil}</option>;\r\n\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n\r\n\r\n              </Col>\r\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n                <p style={{ margin: \"0px\" }}>{t('soil_prop')} *</p>\r\n                <FormSelect\r\n                  onChange={evt => {\r\n\r\n                    setSoilType(!isStandardSoil);\r\n\r\n                  }}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option selected={isStandardSoil}>Standard</option>\r\n                  <option selected={!isStandardSoil}>Composite</option>\r\n                </FormSelect>\r\n                <p style={{ margin: \"0px\" }}>{t('name_field')} *</p>\r\n                <FormSelect\r\n                  value={soilParams.field_uid}\r\n                  onChange={e => setSoilParams({ ...soilParams, field_uid: e.target.value })}\r\n                  placeholder={t('name_field')}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option value=\"\">{t('select_field')}</option>\r\n                  {fields.map((item, index) => {\r\n                    return <option value={item.Uid}>{item.title}</option>;\r\n                  })}\r\n                </FormSelect>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              {soilTypeForm()}\r\n            </Row>\r\n            <Row form className=\"py-2\" >\r\n\r\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('efficacité_pluie')} (%) *</p>\r\n                  <FormInput type=\"number\" value={soilParams.effPluie} onChange={e => setSoilParams({ ...soilParams, effPluie: e.target.value })} id='effPluie' placeholder={t('efficacité_pluie')}\r\n                    style={{ border: '1px solid #0BAECB' }}\r\n\r\n                  />\r\n\r\n                </FormGroup>\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>RU max (mm/m) *</p>\r\n                  <FormInput type=\"number\" value={soilParams.RUmax} onChange={e => setSoilParams({ ...soilParams, RUmax: e.target.value })} id='ruMax' placeholder=\"RU max\"\r\n                    style={{ border: '1px solid #0BAECB' }}\r\n\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )\r\n      case 3:\r\n        return (\r\n          <Form className='pb-2'>\r\n            <Row>\r\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('crop_info')}`} className=\" mb-1\" />\r\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\r\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your crop type configuration, please provide the appropriate details and associate it with the appropriate field and soil type. This will help us to provide personalized recommendations for managing your crops and achieving optimal yields.\"</p>\r\n              </div>\r\n            </Row>\r\n            <Row className=\"py-2 d-flex justify-content-start border-bottom align-items-center\">\r\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group pt-4\">\r\n                <p style={{ margin: \"0px\" }}>{t('crop_type')} *</p>\r\n                <FormSelect\r\n                  onChange={handleCropPick}\r\n                  placeholder={t('crop_type')}\r\n                  value={cropData.cropType}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option value=\"\">Select Crop</option>\r\n                  {\r\n                    listCrop.map(crop => {\r\n                      return (\r\n                        <option value={crop.id}>{crop.crop}</option>\r\n\r\n                      )\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n\r\n                <p style={{ margin: \"0px\" }}>{t('crop_variety')}</p>\r\n                <FormSelect value={cropData.variety} onChange={handleVarietyPick} id=\"cropVariety\">\r\n                  <option value=\"\">{t('crop_variety')}</option>\r\n                  {\r\n                    cropData.cropVariety.map(variety => (\r\n                      <option value={variety.varietyId}>{variety.variety}</option>\r\n                    ))\r\n                  }\r\n                </FormSelect>\r\n                <input type=\"checkbox\" name=\"Autre\" id=\"check\" onClick={() => setChecked(!checked)} /> {t('other')}\r\n                {\r\n                  checked\r\n                    ?\r\n\r\n                    <FormInput\r\n                      value={cropData.variety || \"\"}\r\n                      placeholder={t('crop_variety')}\r\n                      id=\"cropVariety\"\r\n                      onChange={e => setCropData({ ...cropData, variety: e.target.value })}\r\n                    />\r\n\r\n                    :\r\n                    null\r\n                }\r\n\r\n              </Col>\r\n              < Col lg=\"4\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                <p style={{ margin: \"0px\" }}>{t('crop_zone')} *</p>\r\n                <FormSelect\r\n                  value={cropData.zone_uid}\r\n                  onChange={e => setCropData({ ...cropData, zone_uid: e.target.value })}\r\n                  placeholder={t('crop_zone')}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option>{t('select_zone')}</option>\r\n\r\n                  {\r\n                    zones.map(soil => {\r\n                      return <option value={soil.Uid}>{soil.name}</option>\r\n\r\n                    })\r\n                  }\r\n\r\n                </FormSelect>\r\n                <p style={{ margin: \"0px\" }}>{t('crop_field')} *</p>\r\n                <FormSelect\r\n                  value={cropData.field_uid}\r\n                  onChange={e => setCropData({ ...cropData, field_uid: e.target.value })}\r\n                  placeholder={t('crop_zone')}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option>{t('select_field')}</option>\r\n                  {\r\n                    fields.map((item, indx) => {\r\n                      return <option value={item.Uid}>{item.title}</option>\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"py-2\">\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('surface')} (m²)</p>\r\n                  <FormInput type=\"number\" value={cropData.surface} onChange={e => setCropData({ ...cropData, surface: e.target.value })} id='z' placeholder={t('surface')}\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('depth')} (m) *</p>\r\n                  <FormInput type=\"number\" value={cropData.rootDepth} onChange={e => setCropData({ ...cropData, rootDepth: e.target.value })} id='z' placeholder={t('depth')}\r\n                    style={{ border: '1px solid #0BAECB' }}\r\n\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('Days')} *</p>\r\n                  <FormInput style={{ border: '1px solid #0BAECB' }} type=\"number\" value={cropData.days} id='days' onChange={e => setCropData({ ...cropData, days: e.target.value })} placeholder={t('Days')} />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('planting_date')} *</p>\r\n                  <FormInput style={{ border: '1px solid #0BAECB' }} type=\"date\" value={cropData.growingDate} onChange={e => setCropData({ ...cropData, growingDate: e.target.value })} id='planting_date' />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col hidden lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('growing_season')}</p>\r\n                  <FormInput type=\"date\" value={cropData.plantingDate} onChange={e => setCropData({ ...cropData, plantingDate: e.target.value })} id='days' />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('fraction_pratique')} (%) * </p>\r\n                  <FormInput type=\"number\" value={cropData.ruPratique} onChange={e => setCropData({ ...cropData, ruPratique: e.target.value })} id='ruPratique' placeholder={t('fraction_pratique')}\r\n                    style={{ border: '1px solid #0BAECB' }}\r\n\r\n                  />\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('ecart_inter')} (m)</p>\r\n                  <FormInput type=\"number\" value={cropData.ecartInter} onChange={e => setCropData({ ...cropData, ecartInter: e.target.value })} id='ecartInter' placeholder={t('ecart_inter')}\r\n                  />\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('ecart_intra')} (m) </p>\r\n                  <FormInput type=\"number\" value={cropData.ecartIntra} onChange={e => setCropData({ ...cropData, ecartIntra: e.target.value })} id='ecartIntra' placeholder={t('ecart_intra')}\r\n                  />\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('densité')} (plants/ha)</p>\r\n                  <FormInput type=\"number\" value={cropData.density} onChange={e => setCropData({ ...cropData, density: e.target.value })} id='densité' placeholder={t('densité')}\r\n                  />\r\n                </FormGroup>\r\n\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        )\r\n      case 4:\r\n        return (\r\n          <Form className='pb-2'>\r\n            <Row>\r\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('Irrigation_info')}`} className=\" mb-1\" />\r\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\r\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your irrigation type configuration, please provide the appropriate details and associate it with the appropriate crop type and soil type. This will help us to provide personalized recommendations for managing your crops and optimizing water usage.\"</p>\r\n              </div>\r\n            </Row>\r\n            <Row form>\r\n              <Col md=\"6\" className=\"form-group\">\r\n                <p style={{ margin: \"0px\" }}>{t('irrigation_zone')} *</p>\r\n                <FormSelect\r\n                  value={irrigData.zone_uid}\r\n                  onChange={e => setIrrigData({ ...irrigData, zone_uid: e.target.value })}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option>{t('select_zone')}</option>\r\n\r\n                  {\r\n                    zones.map((item, indx) => {\r\n                      return <option value={item.Uid}>{item.name}</option>\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n              </Col>\r\n              <Col md=\"6\" className=\"form-group\">\r\n                <p style={{ margin: \"0px\" }}>{t('irrigation_crop')} *</p>\r\n                <FormSelect\r\n                  value={irrigData.crop_uid}\r\n                  onChange={e => setIrrigData({ ...irrigData, crop_uid: e.target.value })}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option>{t('select_crop')}</option>\r\n                  {\r\n                    crops.map(crop => {\r\n                      let cropType = \"\"\r\n                      listCrop.map(croptype => {\r\n                        if (croptype.id === crop.croptype_id) {\r\n                          cropType = croptype.crop\r\n                        }\r\n                      })\r\n                      return <option value={crop.Uid} >{cropType}</option>\r\n\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n              </Col>\r\n\r\n              <Col md=\"6\" className=\"form-group\">\r\n                <p style={{ margin: \"0px\" }}>{t('Irrigation_system_type')} *</p>\r\n                <FormSelect\r\n                  // className={props.typeErrorIrrig == '' ? '' : 'is-invalid'}\r\n                  value={irrigData.irrigType}\r\n                  onChange={evt => {\r\n                    handleIrrigPick(evt)\r\n                  }}\r\n                  style={{ border: '1px solid #0BAECB' }}\r\n\r\n                >\r\n                  <option disabled selected value=\"\">{t('select_irriagtion')}</option>\r\n                  {\r\n                    listIrrigations.map(item => {\r\n                      // if (item.value === irrigationMethod) {\r\n                      //   return <option value={item.value} selected={true}>{item.type}</option>;\r\n                      // } else {\r\n                      //   return <option value={item.value} selected={false}>{item.type}</option>;\r\n                      // }\r\n                      return <option value={item.irrigation} >{t(`${item.irrigation}`)}</option>;\r\n                    })\r\n                  }\r\n                </FormSelect>\r\n              </Col>\r\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('efficience_irrigation')} (%) *</p>\r\n                  <FormInput type=\"number\" value={irrigData.effIrrig} onChange={e => setIrrigData({ ...irrigData, effIrrig: e.target.value })} id='effIrrig' placeholder={t('efficience_irrigation')}\r\n                    style={{ border: '1px solid #0BAECB' }}\r\n\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('type_reseau')}</p>\r\n                  <FormInput value={irrigData.pumpType} onChange={e => setIrrigData({ ...irrigData, pumpType: e.target.value })} id='type_reseau' placeholder={t('type_reseau')}\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('debit_reseau')} (l/s) </p>\r\n                  <FormInput type=\"number\" value={irrigData.pumpFlow} onChange={e => setIrrigData({ ...irrigData, pumpFlow: e.target.value })} id='debitReseau' placeholder={t('debit_reseau')}\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('nbr_ligne')}</p>\r\n                  <FormInput type='number' value={irrigData.linesNumber} onChange={e => setIrrigData({ ...irrigData, linesNumber: e.target.value })} id='nbr_ligne' placeholder={t('nbr_ligne')}\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                <FormGroup>\r\n                  <p style={{ margin: \"0px\" }}>{t('irrigated_already')}(h) </p>\r\n                  <FormInput type=\"number\" value={irrigData.irrigated_already} onChange={e => setIrrigData({ ...irrigData, irrigated_already: e.target.value })} id='debitReseau' placeholder={t('irrigated_already')}\r\n                  />\r\n\r\n                </FormGroup>\r\n\r\n              </Col>\r\n              {irrigationMethodForm()}\r\n            </Row>\r\n          </Form>\r\n        )\r\n      case 5:\r\n        return (\r\n          <div className=\"d-flex flex-column align-items-center justify-content-around\">\r\n\r\n            <img width=\"20%\" src={clap} alt=\"Congratulations\" />\r\n            <h6 style={{ textAlign: \"center\", width: \"88%\" }}>Congratulations, your farm configuration is complete <br /> Thank you for filling out all 5 steps of the form. <br />\r\n              Now it's time to configure your sensors. Please proceed to the next step to add your sensor configuration.\r\n            </h6>\r\n          </div>\r\n\r\n\r\n        )\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const totalSteps = 5;\r\n\r\n  const percentageComplete = Math.ceil(((steps) / totalSteps) * 100);\r\n\r\n  const handleSubmit = () => {\r\n    switch (steps) {\r\n      case 0:\r\n        return (\r\n          addFarm()\r\n        )\r\n      case 1:\r\n        return (\r\n          addField()\r\n        )\r\n      case 2:\r\n        return (\r\n          addZone()\r\n        )\r\n      case 3:\r\n        return (\r\n          addCrop()\r\n        )\r\n      case 4:\r\n        return (\r\n          addIrrigation()\r\n        )\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Container fluid className=\"main-content-container px-3\">\r\n      <>\r\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\r\n          <Modal.Header className=\"d-flex flex-column\" >\r\n            <Modal.Title>Farm Configuration</Modal.Title>\r\n            <p style={{ textDecoration: \"underline\", fontSize: 12, fontWeight: \"bold\" }}>Each step of this form is dependent on the previous step, so please fill out the fields in the correct order to avoid errors or an incomplete submission.</p>\r\n            <div style={{ width: \"100%\", height: 25 }}>\r\n              <ProgressBar animated variant=\"success\" now={percentageComplete} label={`${percentageComplete}%`} />\r\n\r\n            </div>\r\n\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {configProcess()}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            {\r\n              steps !== 5\r\n                ?\r\n                <Button disabled={steps === 1 && coords.Latitude === \"\"} variant=\"primary\" onClick={handleSubmit}>\r\n                  Save & continue process\r\n                </Button>\r\n                :\r\n                null\r\n\r\n            }\r\n            {\r\n              steps > 0 && steps < 5\r\n                ?\r\n                <Button variant=\"primary\" onClick={prevStep}>\r\n                  Previous\r\n                </Button>\r\n                :\r\n                null\r\n            }\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n      {/* Page Header */}\r\n      <Row noGutters className=\"page-header py-2 mb-4 d-flex justify-content-between flex-nowrap align-items-center border-bottom\">\r\n        <PageTitle title={t('overview')} className=\" mb-1\" />\r\n        <Dropdown open={toggle} toggle={toggleDropDown} className=\"d-table mr-5\">\r\n          <div className=\"d-flex justify-content-center align-items-center \">\r\n            <Button id=\"TooltipExample\" theme=\"info\" className=\"rounded-circle\" style={{ height: 50, width: 50 }} onClick={toggleDropDown}  >\r\n              <i className=\"material-icons\" style={{ fontSize: 30, display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color: \"#fff\" }}>&#xe145;</i>\r\n              <Tooltip\r\n                placement=\"left\"\r\n\r\n                open={open}\r\n                target=\"#TooltipExample\"\r\n                toggle={toggleToolTip}\r\n              >\r\n                {t('add_element')}\r\n              </Tooltip>\r\n            </Button>\r\n\r\n          </div>\r\n          <DropdownMenu right style={{ zIndex: \"10\" }} >\r\n            <Link to=\"#\" onClick={handleShow}>\r\n              <DropdownItem>\r\n                {t('farms')}\r\n              </DropdownItem>\r\n\r\n            </Link>\r\n            <Link to=\"#\" onClick={() => ToAddSensorPage()}>\r\n              <DropdownItem>\r\n                {t('sensors')}\r\n              </DropdownItem>\r\n            </Link>\r\n            <Link to=\"#\" onClick={() => ToWaterBalancePage()}>\r\n              <DropdownItem>\r\n                {t('water_balance')}\r\n              </DropdownItem>\r\n            </Link>\r\n          </DropdownMenu>\r\n        </Dropdown>\r\n      </Row>\r\n      {/* Small Stats Blocks */}\r\n      <Row className=\"mt-4\">\r\n        <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-4\">\r\n          <p style={{ margin: 0 }}>{t('field_stats')}</p>\r\n          <Card small className=\"stats-small h-100\">\r\n            <CardBody className=\"p-2 d-flex  justify-content-center align-items-center\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  flexWrap: \"wrap\",\r\n                  width: \"100%\"\r\n                }}\r\n              >\r\n                {/* <Stats /> */}\r\n                {smallStats.map((stats, idx) => (\r\n                  <>\r\n                    <SmallStats\r\n                      FilterByStatus={FilterByStatus}\r\n                      style={{\r\n                        borderColor: \"blue\",\r\n                        borderWidth: 2,\r\n                        borderStyle: \"solid\"\r\n                      }}\r\n                      id={`small-stats-${idx}`}\r\n                      variation=\"1\"\r\n                      chartData={stats.datasets}\r\n                      chartLabels={stats.chartLabels}\r\n                      label={stats.label}\r\n                      value={stats.value}\r\n                      icon={stats.icon}\r\n                      state={stats.state}\r\n                    />\r\n                    {idx != 2 ? (\r\n                      <hr\r\n                        style={{\r\n                          backgroundColor: \"#ebebeb\",\r\n                          width: \"1px\",\r\n                          height: \"75%\"\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-4\">\r\n          <p style={{ margin: 0 }}>{t('sensor_stats')}</p>\r\n          <Card small className=\"stats-small h-100\">\r\n            <CardBody className=\"p-2 d-flex justify-content-center align-items-center\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  flexWrap: \"wrap\",\r\n                  width: \"100%\"\r\n                }}\r\n              >\r\n                {smallStats2.map((stats, idx) => (\r\n                  <>\r\n                    <SmallStats\r\n                      ToSensorPage={ToSensorPage}\r\n                      style={{\r\n                        borderColor: \"blue\",\r\n                        borderWidth: 2,\r\n                        borderStyle: \"solid\"\r\n                      }}\r\n                      id={`small-stats-${idx}`}\r\n                      variation=\"1\"\r\n                      chartData={stats.datasets}\r\n                      chartLabels={stats.chartLabels}\r\n                      label={stats.label}\r\n                      value={stats.value}\r\n                      icon={stats.icon}\r\n                      state={stats.state}\r\n                    />\r\n                    {idx != 2 ? (\r\n                      <hr\r\n                        style={{\r\n                          backgroundColor: \"#ebebeb\",\r\n                          width: \"1px\",\r\n                          height: \"75%\"\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"\">\r\n          {/* <h4 style={{ marginBottom: \"-15px\" }}>{t('map')}</h4> */}\r\n          <LeafletMap data={layerFarm} sensor={sensorStats} draw={configMap.draw} zoom={mapConfig.zoom} center={mapConfig.center} fromAcrion={mapConfig.fromAction} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"d-flex justify-content-center align-items-center\">\r\n      </Row>\r\n      <Row>\r\n        <FilterFields\r\n          smallStats={smallStats}\r\n          sensorsData={sensorsData}\r\n          crops={crops}\r\n          filteredByStatus={farms}\r\n          sensorStats={sensorStats}\r\n          fieldStats={fieldStats}\r\n        />\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nexport default Overview;"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,QAA9B,EAAwCC,IAAxC,EAA8CC,MAA9C,EAAsDC,QAAtD,EAAgEC,cAAhE,EAAgFC,YAAhF,EAA8FC,YAA9F,EAA4GC,OAA5G,EAAqHC,SAArH,EAAgIC,UAAhI,EAA4IC,SAA5I,EAAuJC,IAAvJ,QAAmK,cAAnK;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAO,wBAAP;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,OAAvB;AACA,OAAOC,wBAAP,MAAqC,0CAArC;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,iBAAnC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,gDAA3B;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,aAAP,MAA0B,mDAA1B;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsDC,KAAtD,EAA6DC,YAA7D,EAA2EC,SAA3E,QAA4F,eAA5F;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,OAAO,0BAAP;AACA,OAAO,oCAAP;AACA,OAAO,gCAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;EAAA,gBACEpD,QAAQ,CAAC,KAAD,CADV;EAAA;EAAA,IACnBqD,MADmB;EAAA,IACXC,SADW;;EAAA,iBAEAtD,QAAQ,CAAC,EAAD,CAFR;EAAA;EAAA,IAEnBuD,KAFmB;EAAA,IAEZC,QAFY;;EAAA,iBAGFxD,QAAQ,CAAC;IAC/ByD,OAAO,EAAE,IADsB;IAE/BC,SAAS,EAAE,KAFoB;IAG/BC,MAAM,EAAE,KAHuB;IAI/BC,MAAM,EAAE,KAJuB;IAK/BC,QAAQ,EAAE,KALqB;IAM/BC,YAAY,EAAE;EANiB,CAAD,CAHN;EAAA;EAAA,IAGnBC,IAHmB;EAAA,IAGbC,OAHa;;EAW1B,IAAMC,OAAO,GAAGhE,UAAU,EAA1B;;EAX0B,iBAYAD,QAAQ,CAAC,CAAD,CAZR;EAAA;EAAA,IAYnBkE,KAZmB;EAAA,IAYZC,QAZY,kBAa1B;;;EAb0B,iBAcQnE,QAAQ,CAAC;IACzC+D,IAAI,EAAE;MACJN,OAAO,EAAE,KADL;MAEJG,MAAM,EAAE,KAFJ;MAGJF,SAAS,EAAE,KAHP;MAIJG,QAAQ,EAAE,KAJN;MAKJF,MAAM,EAAE,KALJ;MAMJG,YAAY,EAAE;IANV,CADmC;IASzCM,IAAI,EAAE;MACJC,MAAM,EAAE,KADJ;MAEJD,IAAI,EAAE;IAFF;EATmC,CAAD,CAdhB;EAAA;EAAA,IAcnBE,SAdmB;EAAA,IAcRC,YAdQ;;EAAA,kBA4BAvE,QAAQ,CAAC,EAAD,CA5BR;EAAA;EAAA,IA4BnBwE,KA5BmB;EAAA,IA4BZC,QA5BY;;EAAA,kBA8BEzE,QAAQ,CAAC;IACnC0E,QAAQ,EAAE,EADyB;IAEnCC,SAAS,EAAE,EAFwB;IAGnCC,IAAI,EAAE,EAH6B;IAInCC,MAAM,EAAE,EAJ2B;IAKnCC,UAAU,EAAE;EALuB,CAAD,CA9BV;EAAA;EAAA,IA8BnBC,MA9BmB;EAAA,IA8BXC,SA9BW;;EAqC1B,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,CAAC,EAAI;IACtB,IAAIC,IAAI,GAAGD,CAAC,CAACE,SAAb;IAEA,IAAIZ,KAAK,GAAGU,CAAC,CAACV,KAAd;;IACA,IAAIW,IAAI,KAAK,SAAb,EAAwB;MACtB,IAAIJ,OAAM,GAAGP,KAAK,CAACa,QAAN,CAAe,CAAf,CAAb;;MACA,IAAMC,WAAW,GAAGP,OAAM,CAACQ,GAAP,CAAW,UAACC,KAAD;QAAA,OAAY;UACzCC,GAAG,EAAED,KAAK,CAACE,GAD8B;UAEzCC,IAAI,EAAEH,KAAK,CAACI;QAF6B,CAAZ;MAAA,CAAX,CAApB;;MAIA,IAAIN,WAAJ,EAAiB;QACfb,QAAQ,CAACoB,IAAI,CAACC,SAAL,CAAeR,WAAf,CAAD,CAAR;QACAN,SAAS,CAAC;UAAEN,QAAQ,EAAEY,WAAW,CAAC,CAAD,CAAX,CAAeG,GAA3B;UAAgCd,SAAS,EAAEW,WAAW,CAAC,CAAD,CAAX,CAAeK;QAA1D,CAAD,CAAT;MAED;IAEF;EACF,CAjBD,CArC0B,CAwD1B;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;;;EA/H0B,sBAkINjE,cAAc,EAlIR;EAAA,IAkIlBqE,CAlIkB,mBAkIlBA,CAlIkB;EAAA,IAkIfC,IAlIe,mBAkIfA,IAlIe;;EAAA,kBAoIEhG,QAAQ,CAAC,EAAD,CApIV;EAAA;EAAA,IAoInBiG,UApImB;EAAA,IAoIPC,KApIO;;EAAA,kBAqIYlG,QAAQ,CAAC,EAAD,CArIpB;EAAA;EAAA,IAqInBmG,WArImB;EAAA,IAqINC,cArIM;;EAAA,kBAsIFpG,QAAQ,CAAC,KAAD,CAtIN;EAAA;EAAA,IAsInBqG,IAtImB;EAAA,IAsIbC,OAtIa;;EAAA,kBAuIkBtG,QAAQ,CAAC,GAAD,CAvI1B;EAAA;EAAA,IAuInBuG,cAvImB;EAAA,IAuIHC,iBAvIG;;EAAA,kBAwIQxG,QAAQ,CAAC,EAAD,CAxIhB;EAAA;EAAA,IAwInByG,SAxImB;EAAA,IAwIRC,YAxIQ;;EAAA,kBAyIQ1G,QAAQ,CAAC;IACzC4E,IAAI,EAAE,EADmC;IAEzCC,MAAM,EAAE,EAFiC;IAGzCC,UAAU,EAAE;EAH6B,CAAD,CAzIhB;EAAA;EAAA,IAyInB6B,SAzImB;EAAA,IAyIRC,YAzIQ;;EAiJ1B,IAAIC,WAAW,GAAGhF,aAAa,CAAC,4BAAD,CAA/B;;EAEA,IAAMiF,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3BxD,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;;EAIA,IAAM0D,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAC1BT,OAAO,CAAC,CAACD,IAAF,CAAP;EACD,CAFD;;EAIA,IAAMW,aAAa;IAAA,oEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACGvF,GAAG,CAACwF,GAAJ,CAAQ,mBAAR,CADH;;YAAA;cACdC,QADc;cAEpBhB,KAAK,CAACgB,QAAQ,CAACC,IAAT,CAAc5D,KAAf,CAAL;cACAiD,iBAAiB,CAACU,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+BC,gBAAhC,CAAjB;;YAHoB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbL,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAMA,IAAMM,eAAe;IAAA,qEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACC7F,GAAG,CAACwF,GAAJ,CAAQ,oBAAR,CADD;;YAAA;cAChBC,QADgB;cAEtBd,cAAc,CAACc,QAAQ,CAACC,IAAT,CAAcI,OAAf,CAAd,CAFsB,CAGtB;cAEA;cACA;;YANsB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAfD,eAAe;MAAA;IAAA;EAAA,GAArB;;EAjK0B,kBAyKAtH,QAAQ,CAAC,EAAD,CAzKR;EAAA;EAAA,IAyKnBwH,KAzKmB;EAAA,IAyKZC,QAzKY;;EAAA,kBA0KQzH,QAAQ,CAAC,EAAD,CA1KhB;EAAA;EAAA,IA0KnB0H,SA1KmB;EAAA,IA0KRC,YA1KQ;;EA4K1B,IAAMC,YAAY;IAAA,qEAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACbnG,GAAG,CAACwF,GAAJ,CAAQ,aAAR,EAAuBY,IAAvB,CAA4B,UAAAC,GAAG,EAAI;gBACvC,IAAMC,QAAQ,GAAGD,GAAG,CAACX,IAAJ,CAAS5D,KAA1B;gBACAmD,YAAY,CAACqB,QAAD,CAAZ;cACD,CAHK,CADa;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAZH,YAAY;MAAA;IAAA;EAAA,GAAlB;;EAOA7H,SAAS,CAAC,YAAM;IACd;IACA6H,YAAY;IACZZ,aAAa;IACbM,eAAe,GAJD,CAKd;EACD,CANQ,EAMN,EANM,CAAT;EAOA,IAAIU,QAAQ,GAAG,CAAf;EACA,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,GAAG,GAAG,CAAV;EAEAjC,UAAU,CAACV,GAAX,CAAe,UAAA4C,IAAI,EAAI;IACrBA,IAAI,CAACC,MAAL,CAAY7C,GAAZ,CAAgB,UAAA8C,KAAK,EAAI;MACvB,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;;MACA,IAAIA,MAAJ,EAAY;QACV,IAAIA,MAAM,IAAI,SAAd,EAAyB;UACvBJ,GAAG;QACJ;;QACD,IAAII,MAAM,IAAI,MAAd,EAAsB;UACpBL,IAAI;QACL;;QACD,IAAIK,MAAM,IAAI,UAAd,EAA0B;UACxBN,QAAQ;QACT;MACF;IAEF,CAdD;EAeD,CAhBD;EAqBA,IAAIO,UAAU,GAAG,CACf;IACEC,KAAK,YAAKzC,CAAC,CAAC,UAAD,CAAN,CADP;IAEE0C,IAAI,eAAE;MAAG,KAAK,EAAC,mBAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR;IAGEC,KAAK,YAAK3C,CAAC,CAAC,QAAD,CAAN,CAHP;IAIE4C,KAAK,EAAEX,QAJT;IAKEY,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CALf;IAMEC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAN;MAAWC,EAAE,EAAE;IAAf,CANT;IAOEC,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,OADT;MAEEO,IAAI,EAAE,OAFR;MAGEC,WAAW,EAAE,GAHf;MAIEC,eAAe,EAAE,wBAJnB;MAKEC,WAAW,EAAE,kBALf;MAMEjC,IAAI,EAAE;IANR,CADQ;EAPZ,CADe,EAmBf;IACEqB,KAAK,YAAKzC,CAAC,CAAC,SAAD,CAAN,CADP;IAEE0C,IAAI,eAAE;MAAG,KAAK,EAAE,qBAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR;IAGEC,KAAK,YAAK3C,CAAC,CAAC,QAAD,CAAN,CAHP;IAIE4C,KAAK,EAAET,GAJT;IAKEU,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CALf;IAMEC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAN;MAAWC,EAAE,EAAE;IAAf,CANT;IAOEC,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,OADT;MAEEO,IAAI,EAAE,OAFR;MAGEC,WAAW,EAAE,GAHf;MAIEC,eAAe,EAAE,sBAJnB;MAKEC,WAAW,EAAE,iBALf;MAMEjC,IAAI,EAAE;IANR,CADQ;EAPZ,CAnBe,EAqCf;IACEqB,KAAK,YAAKzC,CAAC,CAAC,MAAD,CAAN,CADP;IAEE0C,IAAI,eAAE;MAAG,KAAK,EAAC,aAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR;IAGEC,KAAK,YAAK3C,CAAC,CAAC,QAAD,CAAN,CAHP;IAIE4C,KAAK,EAAEV,IAJT;IAKEW,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CALf;IAMEC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAN;MAAWC,EAAE,EAAE;IAAf,CANT;IAOEC,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,OADT;MAEEO,IAAI,EAAE,OAFR;MAGEC,WAAW,EAAE,GAHf;MAIEC,eAAe,EAAE,qBAJnB;MAKEC,WAAW,EAAE,gBALf;MAMEjC,IAAI,EAAE;IANR,CADQ;EAPZ,CArCe,CAAjB;;EAnN0B,kBA4QYnH,QAAQ,CAAC;IAC7CqJ,MAAM,EAAE,CADqC;IAE7CC,OAAO,EAAE,CAFoC;IAG7CC,OAAO,EAAE;EAHoC,CAAD,CA5QpB;EAAA;EAAA,IA4QnBC,WA5QmB;EAAA,IA4QNC,cA5QM;;EAAA,kBAkRYzJ,QAAQ,CAAC,IAAI0J,IAAJ,EAAD,CAlRpB;EAAA;EAAA,IAkRnBC,WAlRmB;EAAA,IAkRNC,cAlRM;;EAmR1B7J,SAAS,CAAC,YAAM;IACd,IAAM8J,QAAQ,GAAGC,WAAW,CAAC,YAAM;MACjCF,cAAc,CAAC,IAAIF,IAAJ,EAAD,CAAd;IACD,CAF2B,EAEzB,MAFyB,CAA5B;IAIA,OAAO,YAAM;MACXK,aAAa,CAACF,QAAD,CAAb;IACD,CAFD;EAGD,CARQ,EAQN,EARM,CAAT;EAUA9J,SAAS,CAAC,YAAM;IACd,IAAMiK,YAAY,GAAG,EAArB;;IADc,2CAGKnD,WAHL;IAAA;;IAAA;MAGd,oDAAgC;QAAA,IAArBsB,IAAqB;QAC9B,IAAM8B,QAAQ,GAAGhH,MAAM,CAACkF,IAAI,CAAC+B,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,kBAAzB,CAAjB;;QACA,IAAIhC,IAAI,CAACiC,SAAT,EAAoB;UAClB,IAAMC,mBAAmB,GAAGpH,MAAM,CAACgH,QAAD,EAAW,kBAAX,CAAN,CAAqCK,IAArC,CAA0CrH,MAAM,CAAC0G,WAAD,CAAhD,EAA+D,MAA/D,CAA5B;;UAEA,IAAIU,mBAAmB,GAAG,CAA1B,EAA6B;YAC3BL,YAAY,CAAC7B,IAAI,CAACiC,SAAN,CAAZ,GAA+B;cAAEf,MAAM,EAAE,CAAV;cAAaC,OAAO,EAAE;YAAtB,CAA/B;UACD,CAFD,MAEO,IAAIe,mBAAmB,KAAK,CAA5B,EAA+B;YACpCL,YAAY,CAAC7B,IAAI,CAACiC,SAAN,CAAZ,GAA+B;cAAEf,MAAM,EAAE,CAAV;cAAaC,OAAO,EAAE;YAAtB,CAA/B;UACD,CAFM,MAEA;YACLU,YAAY,CAAC7B,IAAI,CAACiC,SAAN,CAAZ,GAA+B;cAAEf,MAAM,EAAE,CAAV;cAAaC,OAAO,EAAE;YAAtB,CAA/B;UACD;QACF;MACF;IAhBa;MAAA;IAAA;MAAA;IAAA;;IAiBd,IAAMiB,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcT,YAAd,EAA4BU,MAA5B,CAAmC,UAACC,GAAD,EAAMnC,KAAN;MAAA,OAAgBmC,GAAG,GAAGnC,KAAK,CAACa,MAA5B;IAAA,CAAnC,EAAuE,CAAvE,CAApB;IACA,IAAMuB,YAAY,GAAGJ,MAAM,CAACC,MAAP,CAAcT,YAAd,EAA4BU,MAA5B,CAAmC,UAACC,GAAD,EAAMnC,KAAN;MAAA,OAAgBmC,GAAG,GAAGnC,KAAK,CAACc,OAA5B;IAAA,CAAnC,EAAwE,CAAxE,CAArB;IAEAG,cAAc,CAAC;MAAEJ,MAAM,EAAEkB,WAAV;MAAuBjB,OAAO,EAAEsB,YAAhC;MAA8CZ,YAAY,EAAZA;IAA9C,CAAD,CAAd;EACD,CArBQ,EAqBN,CAACnD,WAAD,EAAc8C,WAAd,CArBM,CAAT;EA6BA,IAAIkB,WAAW,GAAG,CAChB;IACErC,KAAK,YAAKzC,CAAC,CAAC,QAAD,CAAN,CADP;IAEE0C,IAAI,eAAE,oBAAC,sBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR;IAGEC,KAAK,YAAK3C,CAAC,CAAC,SAAD,CAAN,CAHP;IAIE4C,KAAK,EAAEa,WAAW,CAACH,MAJrB;IAKET,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CALf;IAMEC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAN;MAAWC,EAAE,EAAE;IAAf,CANT;IAOEC,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,OADT;MAEEO,IAAI,EAAE,OAFR;MAGEC,WAAW,EAAE,GAHf;MAIEC,eAAe,EAAE,qBAJnB;MAKEC,WAAW,EAAE,gBALf;MAMEjC,IAAI,EAAE;IANR,CADQ;EAPZ,CADgB,EAmBhB;IACEqB,KAAK,YAAKzC,CAAC,CAAC,UAAD,CAAN,CADP;IAEE0C,IAAI,eAAE;MAAG,KAAK,EAAC,wBAAT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR;IAGEC,KAAK,YAAK3C,CAAC,CAAC,SAAD,CAAN,CAHP;IAIE4C,KAAK,EAAEa,WAAW,CAACD,OAJrB;IAKEX,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CALf;IAMEC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAN;MAAWC,EAAE,EAAE;IAAf,CANT;IAOEC,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,OADT;MAEEO,IAAI,EAAE,OAFR;MAGEC,WAAW,EAAE,GAHf;MAIEC,eAAe,EAAE,qBAJnB;MAKEC,WAAW,EAAE,gBALf;MAMEjC,IAAI,EAAE;IANR,CADQ;EAPZ,CAnBgB,EAqChB;IACEqB,KAAK,YAAKzC,CAAC,CAAC,SAAD,CAAN,CADP;IAEE0C,IAAI,eAAE,oBAAC,wBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFR;IAGEC,KAAK,YAAK3C,CAAC,CAAC,SAAD,CAAN,CAHP;IAIE4C,KAAK,EAAEa,WAAW,CAACF,OAJrB;IAKEV,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CALf;IAMEC,KAAK,EAAE;MAAEC,EAAE,EAAE,GAAN;MAAWC,EAAE,EAAE;IAAf,CANT;IAOEC,QAAQ,EAAE,CACR;MACEN,KAAK,EAAE,OADT;MAEEO,IAAI,EAAE,OAFR;MAGEC,WAAW,EAAE,GAHf;MAIEC,eAAe,EAAE,qBAJnB;MAKEC,WAAW,EAAE,gBALf;MAMEjC,IAAI,EAAE;IANR,CADQ;EAPZ,CArCgB,CAAlB;;EA2DA,IAAM2D,cAAc;IAAA,qEAAG,kBAAOxC,MAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cACjBnB,IADiB,GACV;gBACTmB,MAAM,EAAEA;cADC,CADU;cAAA;cAAA,OAIf7G,GAAG,CAACsJ,IAAJ,CAAS,qBAAT,EAAgC5D,IAAhC,EACHU,IADG,CACE,UAAAX,QAAQ,EAAI;gBAChB,IAAI8D,SAAS,GAAG9D,QAAQ,CAACC,IAAT,CAAc5D,KAA9B;gBACAC,QAAQ,CAACwH,SAAD,CAAR;cACD,CAJG,EAIDC,KAJC,CAIK,UAACC,GAAD,EAAS;gBAChBtJ,IAAI,CAAC;kBACHuJ,KAAK,EAAE,OADJ;kBAEH1C,IAAI,EAAE;gBAFH,CAAD,CAAJ;cAID,CATG,CAJe;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAdqC,cAAc;MAAA;IAAA;EAAA,GAApB;;EAgBA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzBnH,OAAO,CAACoH,IAAR,CAAa,UAAb;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAHD;;EAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5BxH,OAAO,CAACoH,IAAR,CAAa,YAAb;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAHD;;EAIA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAC1BzH,OAAO,CAACoH,IAAR,CAAa,UAAb;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAHD;;EAIA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B1H,OAAO,CAACoH,IAAR,CAAa,WAAb;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAHD;;EAIA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;IAC/B3H,OAAO,CAACoH,IAAR,CAAa,QAAb;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAHD;;EArZ0B,kBA0ZFxL,QAAQ,CAAC,KAAD,CA1ZN;EAAA;EAAA,IA0ZnB6L,IA1ZmB;EAAA,IA0ZbC,OA1Za;;EA4Z1B,IAAMC,WAAW,GAAG,SAAdA,WAAc;IAAA,OAAMD,OAAO,CAAC,KAAD,CAAb;EAAA,CAApB;;EACA,IAAME,UAAU,GAAG,SAAbA,UAAa;IAAA,OAAMF,OAAO,CAAC,IAAD,CAAb;EAAA,CAAnB;;EAEA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,GAAM;IAErB9H,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACD,CAHD;;EAIA,IAAMgI,QAAQ,GAAG,SAAXA,QAAW,GAAM;IAErB/H,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;EACD,CAHD;;EAna0B,kBAwaQlE,QAAQ,CAAC,EAAD,CAxahB;EAAA;EAAA,IAwanBmM,SAxamB;EAAA,IAwaRC,YAxaQ;;EAAA,kBAyaEpM,QAAQ,CAAC,EAAD,CAzaV;EAAA;EAAA,IAyanBoI,MAzamB;EAAA,IAyaXiE,SAzaW;;EAAA,kBA0aArM,QAAQ,CAAC,EAAD,CA1aR;EAAA;EAAA,IA0anBsM,KA1amB;EAAA,IA0aZC,QA1aY;;EAAA,kBA2aQvM,QAAQ,CAAC,EAAD,CA3ahB;EAAA;EAAA,IA2anBwM,SA3amB;EAAA,IA2aRC,YA3aQ;;EAAA,kBA4aQzM,QAAQ,CAAC,EAAD,CA5ahB;EAAA;EAAA,IA4anB0M,SA5amB;EAAA,IA4aRC,YA5aQ;;EA8a1B,IAAMC,QAAQ;IAAA,qEAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEPnL,GAAG,CAACwF,GAAJ,CAAQ,kBAAR,EACHY,IADG,CACE,UAAAX,QAAQ,EAAI;gBAChB,IAAIiF,SAAS,GAAGjF,QAAQ,CAACC,IAAT,CAAc0F,KAA9B;gBACAT,YAAY,CAACD,SAAD,CAAZ;cAED,CALG,EAKDlB,KALC,CAKK,UAAA6B,KAAK,EAAI;gBAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;cACD,CAPG,CAFO;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAYbC,OAAO,CAACC,GAAR;;YAZa;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAARJ,QAAQ;MAAA;IAAA;EAAA,GAAd;;EAgBA,IAAMK,aAAa;IAAA,qEAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACdxL,GAAG,CAACwF,GAAJ,CAAQ,eAAR,EAAyBY,IAAzB,CAA8B,UAAAC,GAAG,EAAI;gBACzC,IAAMoF,OAAO,GAAGpF,GAAG,CAACX,IAAJ,CAAS5D,KAAzB;gBACAC,QAAQ,CAAC0J,OAAD,CAAR;gBACA,IAAIC,MAAM,GAAG,EAAb;gBACA,IAAIC,KAAK,GAAG,EAAZ;gBACA,IAAIC,KAAK,GAAG,EAAZ;gBACAH,OAAO,CAAC3H,GAAR,CAAY,UAAA4C,IAAI,EAAI;kBAClB,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;kBACA,IAAIA,MAAJ,EAAY;oBACVA,MAAM,CAAC7C,GAAP,CAAW,UAAA+H,SAAS,EAAI;sBACtBH,MAAM,CAAC9B,IAAP,CAAY;wBACVF,KAAK,EAAEmC,SAAS,CAACC,IADP;wBAEVjF,MAAM,EAAEgF,SAAS,CAAChF,MAFR;wBAGVkF,WAAW,EAAEF,SAAS,CAACE,WAHb;wBAIVC,GAAG,EAAEH,SAAS,CAACI,GAJL;wBAKVC,OAAO,EAAEL,SAAS,CAACK,OALT;wBAMVjJ,QAAQ,EAAE4I,SAAS,CAAC5I,QANV;wBAOVC,SAAS,EAAE2I,SAAS,CAAC3I,SAPX;wBAQViJ,EAAE,EAAEN,SAAS,CAACO;sBARJ,CAAZ;sBAUA,IAAIvB,KAAK,GAAGgB,SAAS,CAAChB,KAAtB;sBACA,IAAI9E,KAAK,GAAG8F,SAAS,CAAC9F,KAAtB;;sBACA,IAAIA,KAAJ,EAAW;wBACTA,KAAK,CAACjC,GAAN,CAAU,UAAAuI,IAAI,EAAI;0BAChBT,KAAK,CAAChC,IAAN,CAAW;4BACTlG,IAAI,EAAE2I,IAAI,CAAC3I,IADF;4BAET0I,EAAE,EAAEC,IAAI,CAACD,EAFA;4BAGTJ,GAAG,EAAEK,IAAI,CAACJ,GAHD;4BAITK,OAAO,EAAED,IAAI,CAACE,QAJL;4BAKTC,OAAO,EAAEH,IAAI,CAACG,OALL;4BAMTC,WAAW,EAAEJ,IAAI,CAACI,WANT;4BAOTC,QAAQ,EAAEL,IAAI,CAACM;0BAPN,CAAX;wBASD,CAVD;sBAWD;;sBACD,IAAI9B,KAAJ,EAAW;wBACTA,KAAK,CAAC/G,GAAN,CAAU,UAAA8I,CAAC,EAAI;0BACbjB,KAAK,CAAC/B,IAAN,CAAW;4BACTuC,EAAE,EAAES,CAAC,CAACR,EADG;4BAETN,IAAI,EAAEc,CAAC,CAACd,IAFC;4BAGTE,GAAG,EAAEY,CAAC,CAACX,GAHE;4BAITY,MAAM,EAAED,CAAC,CAACC,MAJD;4BAKTd,WAAW,EAAEa,CAAC,CAACb,WALN;4BAMTQ,QAAQ,EAAEK,CAAC,CAACL;0BANH,CAAX;wBASD,CAVD;sBAWD;;sBAAA;oBACF,CAvCD;kBAwCD;gBACF,CA5CD;gBA6CA3B,SAAS,CAACc,MAAD,CAAT;gBACAZ,QAAQ,CAACa,KAAD,CAAR;gBACA3F,QAAQ,CAAC4F,KAAD,CAAR;cAED,CAvDK,CADc;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbJ,aAAa;MAAA;IAAA;EAAA,GAAnB;;EA2DAlN,SAAS,CAAC,YAAM;IACd,IAAMkN,aAAa;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACdxL,GAAG,CAACwF,GAAJ,CAAQ,eAAR,EAAyBY,IAAzB,CAA8B,UAAAC,GAAG,EAAI;kBACzC,IAAMoF,OAAO,GAAGpF,GAAG,CAACX,IAAJ,CAAS5D,KAAzB;kBACAC,QAAQ,CAAC0J,OAAD,CAAR;kBACA,IAAIC,MAAM,GAAG,EAAb;kBACA,IAAIC,KAAK,GAAG,EAAZ;kBACA,IAAIC,KAAK,GAAG,EAAZ;kBACAH,OAAO,CAAC3H,GAAR,CAAY,UAAA4C,IAAI,EAAI;oBAClB,IAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;;oBACA,IAAIA,MAAJ,EAAY;sBACVA,MAAM,CAAC7C,GAAP,CAAW,UAAA+H,SAAS,EAAI;wBACtBH,MAAM,CAAC9B,IAAP,CAAY;0BACVF,KAAK,EAAEmC,SAAS,CAACC,IADP;0BAEVjF,MAAM,EAAEgF,SAAS,CAAChF,MAFR;0BAGVkF,WAAW,EAAEF,SAAS,CAACE,WAHb;0BAIVC,GAAG,EAAEH,SAAS,CAACI,GAJL;0BAKVC,OAAO,EAAEL,SAAS,CAACK,OALT;0BAMVjJ,QAAQ,EAAE4I,SAAS,CAAC5I,QANV;0BAOVC,SAAS,EAAE2I,SAAS,CAAC3I,SAPX;0BAQViJ,EAAE,EAAEN,SAAS,CAACO;wBARJ,CAAZ;wBAUA,IAAIvB,KAAK,GAAGgB,SAAS,CAAChB,KAAtB;wBACA,IAAI9E,KAAK,GAAG8F,SAAS,CAAC9F,KAAtB;;wBACA,IAAIA,KAAJ,EAAW;0BACTA,KAAK,CAACjC,GAAN,CAAU,UAAAuI,IAAI,EAAI;4BAChBT,KAAK,CAAChC,IAAN,CAAW;8BACTlG,IAAI,EAAE2I,IAAI,CAAC3I,IADF;8BAET0I,EAAE,EAAEC,IAAI,CAACD,EAFA;8BAGTJ,GAAG,EAAEK,IAAI,CAACJ,GAHD;8BAITK,OAAO,EAAED,IAAI,CAACE,QAJL;8BAKTC,OAAO,EAAEH,IAAI,CAACG,OALL;8BAMTC,WAAW,EAAEJ,IAAI,CAACI,WANT;8BAOTC,QAAQ,EAAEL,IAAI,CAACM;4BAPN,CAAX;0BASD,CAVD;wBAWD;;wBACD,IAAI9B,KAAJ,EAAW;0BACTA,KAAK,CAAC/G,GAAN,CAAU,UAAA8I,CAAC,EAAI;4BACbjB,KAAK,CAAC/B,IAAN,CAAW;8BACTuC,EAAE,EAAES,CAAC,CAACR,EADG;8BAETN,IAAI,EAAEc,CAAC,CAACd,IAFC;8BAGTE,GAAG,EAAEY,CAAC,CAACX,GAHE;8BAITY,MAAM,EAAED,CAAC,CAACC,MAJD;8BAKTd,WAAW,EAAEa,CAAC,CAACb,WALN;8BAMTQ,QAAQ,EAAEK,CAAC,CAACL;4BANH,CAAX;0BASD,CAVD;wBAWD;;wBAAA;sBACF,CAvCD;oBAwCD;kBACF,CA5CD;kBA6CA3B,SAAS,CAACc,MAAD,CAAT;kBACAZ,QAAQ,CAACa,KAAD,CAAR;kBACA3F,QAAQ,CAAC4F,KAAD,CAAR;gBAED,CAvDK,CADc;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAbJ,aAAa;QAAA;MAAA;IAAA,GAAnB;;IA0DAA,aAAa;EACd,CA5DQ,EA4DN,EA5DM,CAAT;EA8DAlN,SAAS,CAAC,YAAM;IACd,IAAMwO,SAAS;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACV9M,GAAG,CAACwF,GAAJ,CAAQ,oBAAR,EAA8BY,IAA9B,CAAmC,UAAAC,GAAG,EAAI;kBAC9C,IAAM0G,MAAM,GAAG1G,GAAG,CAACX,IAAJ,CAASsH,MAAxB;kBACAhC,YAAY,CAAC+B,MAAD,CAAZ;gBAED,CAJK,CADU;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAATD,SAAS;QAAA;MAAA;IAAA,GAAf;;IAQA,IAAMG,YAAY;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACbjN,GAAG,CAACwF,GAAJ,CAAQ,0BAAR,EAAoCY,IAApC,CAAyC,UAAAC,GAAG,EAAI;kBACpD,IAAM4E,SAAS,GAAG5E,GAAG,CAACX,IAAJ,CAASwH,SAA3B;kBACAhC,YAAY,CAACD,SAAD,CAAZ;gBAED,CAJK,CADa;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAZgC,YAAY;QAAA;MAAA;IAAA,GAAlB;;IAOA9B,QAAQ;IACR8B,YAAY;IACZH,SAAS;EACV,CAnBQ,EAmBN,EAnBM,CAAT;;EAqBA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAC1J,CAAD,EAAO;IAC5BA,CAAC,CAAC2J,cAAF;IACA,IAAMC,QAAQ,GAAG3C,SAAS,CAAC4C,IAAV,CACf,UAACC,IAAD;MAAA,OAAUA,IAAI,CAACA,IAAL,IAAa9J,CAAC,CAAC+J,MAAF,CAAStG,KAAhC;IAAA,CADe,CAAjB;;IAGA,IAAIzD,CAAC,CAAC+J,MAAF,CAAStG,KAAT,KAAmB,EAAvB,EAA2B;MACzBuG,aAAa,CAAC;QAAEC,QAAQ,EAAEL,QAAQ,CAACM;MAArB,CAAD,CAAb;MACAF,aAAa,CAAC;QAAEG,KAAK,EAAEP,QAAQ,CAACQ;MAAlB,CAAD,CAAb;IAED;;IACD,IAAI,OAAOR,QAAP,KAAoB,WAAxB,EAAqC;MACnCI,aAAa,mBACRK,UADQ;QAEXT,QAAQ,EAAEA,QAAQ,CAACE,IAFR;QAGXK,KAAK,EAAEP,QAAQ,CAACQ,EAHL;QAIXH,QAAQ,EAAEL,QAAQ,CAACM;MAJR,GAAb;IAOD;EACF,CAnBD,CA5kB0B,CAmmB1B;;;EAnmB0B,kBAqmBIpP,QAAQ,CAAC,EAAD,CArmBZ;EAAA;EAAA,IAqmBnBwP,OArmBmB;EAAA,IAqmBVC,UArmBU;;EAAA,kBAsmBEzP,QAAQ,CAAC,EAAD,CAtmBV;EAAA;EAAA,IAsmBnBwO,MAtmBmB;EAAA,IAsmBXkB,SAtmBW;;EAwmB1B,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACzK,CAAD,EAAO;IAC/BA,CAAC,CAAC2J,cAAF;IACA,IAAMW,OAAO,GAAG9C,SAAS,CAACqC,IAAV,CACd,UAACS,OAAD;MAAA,OAAaA,OAAO,CAACI,GAAR,KAAgB1K,CAAC,CAAC+J,MAAF,CAAStG,KAAtC;IAAA,CADc,CAAhB;IAGA,IAAI8F,MAAM,GAAG,EAAb;;IACA,IAAIe,OAAJ,EAAa;MACXhD,SAAS,CAACjH,GAAV,CAAc,UAACsK,IAAD,EAAU;QACtB,IAAIA,IAAI,CAACD,GAAL,KAAaJ,OAAO,CAACI,GAAzB,EAA8B;UAC5BnB,MAAM,CAACpD,IAAP,CAAY;YACVwE,IAAI,EAAEA,IAAI,CAACA,IADD;YAEVhC,EAAE,EAAEgC,IAAI,CAAChC,EAFC;YAGVnI,GAAG,EAAEmK,IAAI,CAACnK,GAHA;YAIVoK,GAAG,EAAED,IAAI,CAACC;UAJA,CAAZ;QAMD;MACF,CATD;MAWAL,UAAU,CAACD,OAAO,CAACI,GAAT,CAAV;MACAF,SAAS,CAACjB,MAAD,CAAT;IAED;EACF,CAtBD;;EAxmB0B,kBA+nBUzO,QAAQ,CAAC;IAC3CuN,IAAI,EAAE,EADqC;IAE3CwC,SAAS,EAAE,EAFgC;IAG3CC,MAAM,EAAE;EAHmC,CAAD,CA/nBlB;EAAA;EAAA,IA+nBnBC,UA/nBmB;EAAA,IA+nBPC,aA/nBO;;EAooB1B,IAAMC,OAAO,GAAGtK,IAAI,CAACuK,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCzC,EAAzD;;EAEA,IAAM0C,OAAO;IAAA,sEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAEVpJ,IAFU,GAEH;gBACToG,IAAI,EAAE0C,UAAU,CAAC1C,IADR;gBAETiD,UAAU,EAAEP,UAAU,CAACF,SAFd;gBAGTU,QAAQ,EAAEN,OAHD;gBAITO,OAAO,EAAET,UAAU,CAACD,MAJX,CAKT;gBACA;gBACA;;cAPS,CAFG;cAAA;cAAA,OAWRvO,GAAG,CAACsJ,IAAJ,CAAS,gBAAT,EAA2B5D,IAA3B,EACHU,IADG,CACE,UAAAX,QAAQ,EAAI;gBAChB,IAAIA,QAAQ,CAACC,IAAT,CAAchC,IAAd,KAAuB,SAA3B,EAAsC;kBACpCvD,IAAI,CAAC,YAAD,EAAe;oBAAE6G,IAAI,EAAE;kBAAR,CAAf,CAAJ;kBACAb,YAAY;kBACZzD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;gBACD;cACF,CAPG,EAOD+G,KAPC,CAOK,UAAAC,GAAG,EAAI;gBACdtJ,IAAI,CAACsJ,GAAD,EAAM;kBAAEzC,IAAI,EAAE;gBAAR,CAAN,CAAJ;cACD,CATG,CAXQ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAP8H,OAAO;MAAA;IAAA;EAAA,GAAb,CAtoB0B,CA8pB1B;;;EA9pB0B,kBAgqBQvQ,QAAQ,CAAC;IACzCuN,IAAI,EAAE,EADmC;IAEzCoD,QAAQ,EAAE,EAF+B;IAGzCC,KAAK,EAAE,EAHkC;IAIzCC,MAAM,EAAE,EAJiC;IAKzCnM,QAAQ,EAAE,EAL+B;IAMzCC,SAAS,EAAE;EAN8B,CAAD,CAhqBhB;EAAA;EAAA,IAgqBnBmM,SAhqBmB;EAAA,IAgqBRC,YAhqBQ;;EAwqB1B,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IAErB,IAAI7J,IAAI,GAAG;MACToG,IAAI,EAAEuD,SAAS,CAACvD,IADP;MAET0D,QAAQ,EAAEH,SAAS,CAACG,QAFX;MAGTN,QAAQ,EAAEG,SAAS,CAACH,QAHX;MAITO,OAAO,EAAEJ,SAAS,CAACF,KAJV;MAKTO,QAAQ,EAAEL,SAAS,CAACD,MALX;MAMTO,WAAW,EAAE5M,KANJ;MAOTE,QAAQ,EAAE2M,UAAU,CAACtM,MAAM,CAACL,QAAR,CAAV,CAA4B4M,OAA5B,CAAoC,CAApC,CAPD;MAQT3M,SAAS,EAAE0M,UAAU,CAACtM,MAAM,CAACJ,SAAR,CAAV,CAA6B2M,OAA7B,CAAqC,CAArC;IARF,CAAX;IAWA7P,GAAG,CAACsJ,IAAJ,CAAS,kBAAT,EAA6B5D,IAA7B,EACGU,IADH,CACQ,UAAAC,GAAG,EAAI;MAEX,IAAIA,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CvD,IAAI,WAAImE,CAAC,CAAC,aAAD,CAAL,GAAwB;UAC1B0C,IAAI,EAAE;QADoB,CAAxB,CAAJ;QAIAwE,aAAa;QACb9I,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACD;IAEF,CAZH,EAaG+G,KAbH,CAaS,YAAM;MACXrJ,IAAI,UAAU;QACZ6G,IAAI,EAAE;MADM,CAAV,CAAJ;IAID,CAlBH;EAmBD,CAhCD,CAxqB0B,CAysB1B;;;EAEA,IAAM8I,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,IAAIC,cAAc,IAAI,IAAtB,EACE,OACE,IADF,CADF,KAKK;MACH,oBACE,oBAAC,aAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF;IAGD;EACF,CAXD;;EA3sB0B,kBAutBYxR,QAAQ,CAAC,IAAD,CAvtBpB;EAAA;EAAA,IAutBnBwR,cAvtBmB;EAAA,IAutBHC,WAvtBG;;EAAA,kBAwtBUzR,QAAQ,CAAC;IAC3C0R,YAAY,EAAE,EAD6B;IAE3C5C,QAAQ,EAAE,EAFiC;IAG3C6C,SAAS,EAAE,EAHgC;IAI3CC,QAAQ,EAAE,EAJiC;IAK3CrE,IAAI,EAAE,EALqC;IAM3C8B,KAAK,EAAE,EANoC;IAO3CF,QAAQ,EAAE;EAPiC,CAAD,CAxtBlB;EAAA;EAAA,IAwtBnBI,UAxtBmB;EAAA,IAwtBPL,aAxtBO;;EAmuB1B,IAAM2C,OAAO,GAAG,SAAVA,OAAU,GAAM;IAEpB,IAAI1K,IAAI,GAAG;MACTuK,YAAY,EAAEnC,UAAU,CAACmC,YADhB;MAETC,SAAS,EAAEpC,UAAU,CAACoC,SAFb;MAGTC,QAAQ,EAAErC,UAAU,CAACqC,QAHZ;MAITrE,IAAI,EAAEgC,UAAU,CAAChC,IAJR;MAKT8B,KAAK,EAAEE,UAAU,CAACF,KALT;MAMTF,QAAQ,EAAEI,UAAU,CAACJ;IANZ,CAAX;IAQA1N,GAAG,CAACsJ,IAAJ,CAAS,gBAAT,EAA2B5D,IAA3B,EACGU,IADH,CACQ,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,QAAtC,EAAgD;QAC9CvD,IAAI,CAAC;UACHuJ,KAAK,EAAE,iBADJ;UAEH1C,IAAI,EAAE;QAFH,CAAD,CAAJ;MAKD;;MACD,IAAIX,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CvD,IAAI,CAAC;UACHuJ,KAAK,EAAE,YADJ;UAEH1C,IAAI,EAAE,SAFH;UAGHqJ,IAAI,EAAE;QAHH,CAAD,CAAJ;MAMD;;MACD7E,aAAa;MACb9I,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACD,CAnBH,EAoBG+G,KApBH,CAoBS,UAACC,GAAD,EAAS;MAEd6B,OAAO,CAACC,GAAR,CAAY9B,GAAZ;IAED,CAxBH;EAyBD,CAnCD;;EAnuB0B,kBAywBMlL,QAAQ,CAAC,EAAD,CAzwBd;EAAA;EAAA,IAywBnB+R,QAzwBmB;EAAA,IAywBTC,WAzwBS;;EAAA,kBA0wBMhS,QAAQ,CAAC,EAAD,CA1wBd;EAAA;EAAA,IA0wBnBiS,QA1wBmB;EAAA,IA0wBTC,WA1wBS;;EAAA,kBA2wBclS,QAAQ,CAAC,EAAD,CA3wBtB;EAAA;EAAA,IA2wBnBmS,YA3wBmB;EAAA,IA2wBLC,eA3wBK;;EAAA,kBA4wBoBpS,QAAQ,CAAC,EAAD,CA5wB5B;EAAA;EAAA,IA4wBnBqS,eA5wBmB;EAAA,IA4wBFC,kBA5wBE;;EA8wB1BvS,SAAS,CAAC,YAAM;IACd,IAAMwS,WAAW;MAAA,sEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEV9Q,GAAG,CAACwF,GAAJ,CAAQ,qBAAR,EACHY,IADG,CACE,UAAAX,QAAQ,EAAI;kBAChB,IAAIA,QAAJ,EAAc;oBACZ,IAAIsL,QAAQ,GAAGtL,QAAQ,CAACC,IAAT,CAAcsL,QAA7B;oBACAP,WAAW,CAACM,QAAD,CAAX;kBACD;gBACF,CANG,CAFU;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAWhBzF,OAAO,CAACC,GAAR;;cAXgB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAXuF,WAAW;QAAA;MAAA;IAAA,GAAjB;;IAcA,IAAM3F,QAAQ;MAAA,sEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEPnL,GAAG,CAACwF,GAAJ,CAAQ,kBAAR,EACHY,IADG,CACE,UAAAX,QAAQ,EAAI;kBAChB,IAAIiF,SAAS,GAAGjF,QAAQ,CAACC,IAAT,CAAc0F,KAA9B;kBACAmF,WAAW,CAAC7F,SAAD,CAAX;gBAED,CALG,EAKDlB,KALC,CAKK,UAAA6B,KAAK,EAAI;kBAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;gBACD,CAPG,CAFO;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAYbC,OAAO,CAACC,GAAR;;cAZa;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAARJ,QAAQ;QAAA;MAAA;IAAA,GAAd;;IAeA,IAAM8F,cAAc;MAAA,sEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEbjR,GAAG,CAACwF,GAAJ,CAAQ,8BAAR,EACHY,IADG,CACE,UAAAX,QAAQ,EAAI;kBAChB,IAAIA,QAAJ,EAAc;oBACZ,IAAIyL,SAAS,GAAGzL,QAAQ,CAACC,IAAT,CAAcyL,WAA9B;oBACAN,kBAAkB,CAACK,SAAD,CAAlB;kBACD;gBACF,CANG,CAFa;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAWnB5F,OAAO,CAACC,GAAR;;cAXmB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAd0F,cAAc;QAAA;MAAA;IAAA,GAApB;;IAcA,IAAMG,YAAY;MAAA,sEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEXpR,GAAG,CAACwF,GAAJ,CAAQ,0BAAR,EACHY,IADG,CACE,UAAAX,QAAQ,EAAI;kBAChB,IAAIA,QAAQ,CAACC,IAAT,CAAchC,IAAd,KAAuB,SAA3B,EAAsC;oBACpC,IAAI2N,aAAa,GAAG5L,QAAQ,CAACC,IAAT,CAAc4L,SAAlC;oBACAX,eAAe,CAACU,aAAD,CAAf;kBAED;gBACF,CAPG,EAOD7H,KAPC,CAOK,UAAA6B,KAAK,EAAI;kBAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;gBACD,CATG,CAFW;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAcjBC,OAAO,CAACC,GAAR;;cAdiB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAZ6F,YAAY;QAAA;MAAA;IAAA,GAAlB;;IAiBAA,YAAY;IACZH,cAAc;IACd9F,QAAQ;IACR2F,WAAW;EACZ,CAjEQ,EAiEN,EAjEM,CAAT,CA9wB0B,CAi1B1B;;EAj1B0B,kBAk1BIvS,QAAQ,CAAC,KAAD,CAl1BZ;EAAA;EAAA,IAk1BnBgT,OAl1BmB;EAAA,IAk1BVC,UAl1BU;;EAAA,kBAo1BMjT,QAAQ,CAAC;IACvC2R,SAAS,EAAE,EAD4B;IAEvCC,QAAQ,EAAE,EAF6B;IAGvCsB,QAAQ,EAAE,EAH6B;IAIvCC,OAAO,EAAE,EAJ8B;IAKvCC,WAAW,EAAE,EAL0B;IAMvCC,UAAU,EAAE,EAN2B;IAOvCC,IAAI,EAAE,EAPiC;IAQvCC,YAAY,EAAE,EARyB;IASvCC,WAAW,EAAE,EAT0B;IAUvCC,SAAS,EAAE,EAV4B;IAWvCC,UAAU,EAAE,EAX2B;IAYvCC,UAAU,EAAE,EAZ2B;IAavCC,OAAO,EAAE,EAb8B;IAcvCC,UAAU,EAAE,EAd2B;IAevCC,MAAM,EAAE,EAf+B;IAgBvCC,OAAO,EAAE;EAhB8B,CAAD,CAp1Bd;EAAA;EAAA,IAo1BnBC,QAp1BmB;EAAA,IAo1BTC,WAp1BS;;EAu2B1B,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAChP,CAAD,EAAO;IAC5BA,CAAC,CAAC2J,cAAF,GAD4B,CAE5B;;IAEA,IAAMf,IAAI,GAAGmE,QAAQ,CAAClD,IAAT,CACX,UAACjB,IAAD;MAAA,OAAUA,IAAI,CAACD,EAAL,IAAW3I,CAAC,CAAC+J,MAAF,CAAStG,KAA9B;IAAA,CADW,CAAb;;IAGA,IAAIzD,CAAC,CAAC+J,MAAF,CAAStG,KAAT,KAAmB,EAAvB,EAA2B;MACzBsL,WAAW,mBAAMD,QAAN;QAAgBd,QAAQ,EAAEpF,IAAI,CAACD;MAA/B,GAAX;MACAoG,WAAW,mBAAMD,QAAN;QAAgBH,UAAU,EAAE/F,IAAI,CAACqG;MAAjC,GAAX;MACAF,WAAW,mBAAMD,QAAN;QAAgBV,IAAI,EAAExF,IAAI,CAACsG;MAA3B,GAAX;MACAH,WAAW,mBAAMD,QAAN;QAAgBP,SAAS,EAAE3F,IAAI,CAACuG;MAAhC,GAAX;MACAJ,WAAW,mBAAMD,QAAN;QAAgBT,YAAY,EAAEzF,IAAI,CAACwG,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,GAArC,EAA0C,EAA1C;MAA9B,GAAX;IAED;;IACD,IAAIC,SAAS,GAAG,EAAhB;;IACA,IAAI3G,IAAJ,EAAU;MACR,IAAMqF,OAAO,GAAGhB,YAAY,CAAC5M,GAAb,CAAiB,UAAC4N,OAAD,EAAa;QAC5C,IAAIA,OAAO,CAACuB,OAAR,KAAoB5G,IAAI,CAACD,EAA7B,EAAiC;UAC/B4G,SAAS,CAACpJ,IAAV,CAAe;YACbsJ,SAAS,EAAExB,OAAO,CAACtF,EADN;YAEbsF,OAAO,EAAEA,OAAO,CAACyB;UAFJ,CAAf;QAID;MACF,CAPe,CAAhB;MASAX,WAAW,mBACND,QADM;QAETd,QAAQ,EAAEpF,IAAI,CAACD,EAFN;QAGTsF,OAAO,EAAErF,IAAI,CAAC8G,YAHL;QAITxB,WAAW,EAAEqB,SAJJ;QAKThB,SAAS,EAAE3F,IAAI,CAACuG,QALP;QAMTR,UAAU,EAAE/F,IAAI,CAACqG,kBANR;QAOTb,IAAI,EAAExF,IAAI,CAACsG,KAPF;QAQTb,YAAY,EAAEzF,IAAI,CAACwG,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,GAArC,EAA0C,EAA1C,CARL;QASTV,MAAM,EAAEhG,IAAI,CAAC+G;MATJ,GAAX;IAaD;EACF,CAxCD;;EA0CA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC5P,CAAD,EAAO;IAC/BA,CAAC,CAAC2J,cAAF;IACA,IAAMsE,OAAO,GAAGhB,YAAY,CAACpD,IAAb,CAEd,UAACoE,OAAD;MAAA,OAAaA,OAAO,CAACtF,EAAR,IAAc3I,CAAC,CAAC+J,MAAF,CAAStG,KAApC;IAAA,CAFc,CAAhB;;IAMA,IAAIwK,OAAJ,EAAa;MACXc,WAAW,mBACND,QADM;QAETb,OAAO,EAAEA,OAAO,CAACtF;MAFR,GAAX;IAKD;EACF,CAfD;;EAiBA,IAAMkH,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;IAChC,IAAMC,KAAK,GAAG,qBAAd;IACA,IAAMC,GAAG,GAAGF,KAAK,CAACE,GAAlB;IACA,IAAMC,YAAY,GAAGH,KAAK,CAAC/F,MAAN,CAAatG,KAAb,GAAqBuM,GAA1C;;IACA,IAAI,CAACD,KAAK,CAACG,IAAN,CAAWD,YAAX,CAAL,EAA+B;MAC7BH,KAAK,CAACnG,cAAN;IACD;EACF,CAPD;;EAQA,IAAMwG,OAAO,GAAG,SAAVA,OAAU,GAAM;IAEpB,IAAIlO,IAAI,GAAG;MACTyK,QAAQ,EAAEoC,QAAQ,CAACpC,QADV;MAETD,SAAS,EAAEqC,QAAQ,CAACrC,SAFX;MAGTzD,WAAW,EAAE8F,QAAQ,CAACd,QAHb;MAIToC,aAAa,EAAEtB,QAAQ,CAACsB,aAJf;MAKT/B,YAAY,EAAES,QAAQ,CAACT,YALd;MAMTE,SAAS,EAAEO,QAAQ,CAACP,SANX;MAOTH,IAAI,EAAEU,QAAQ,CAACV,IAPN;MAQTiC,eAAe,EAAEvB,QAAQ,CAACb,OARjB;MASTgB,kBAAkB,EAAEH,QAAQ,CAACH,UATpB;MAUTD,OAAO,EAAEI,QAAQ,CAACJ,OAVT;MAWT4B,WAAW,EAAExB,QAAQ,CAACN,UAXb;MAYT+B,WAAW,EAAEzB,QAAQ,CAACL,UAZb;MAaTI,OAAO,EAAEC,QAAQ,CAACD,OAbT;MAcTP,WAAW,EAAEQ,QAAQ,CAACR;IAdb,CAAX;IAkBA/R,GAAG,CAACsJ,IAAJ,CAAS,gBAAT,EAA2B5D,IAA3B,EACGU,IADH,CACQ,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,QAAtC,EAAgD;QAC9CvD,IAAI,UAAU;UACZ6G,IAAI,EAAE;QADM,CAAV,CAAJ;MAGD;;MACD,IAAIX,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CvD,IAAI,WAAImE,CAAC,CAAC,YAAD,CAAL,GAAuB;UACzB0C,IAAI,EAAE;QADmB,CAAvB,CAAJ;QAGAwE,aAAa;QACb9I,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACD;IACF,CAdH,EAeG+G,KAfH,CAeS,UAACC,GAAD,EAAS;MACdtJ,IAAI,UAAU;QACZ6G,IAAI,EAAE;MADM,CAAV,CAAJ;IAKD,CArBH;EAsBD,CA1CD,CA16B0B,CAs9B1B;;;EAt9B0B,kBAu9BQzI,QAAQ,CAAC;IACzC0V,SAAS,EAAE,EAD8B;IAEzC9D,QAAQ,EAAE,EAF+B;IAGzC+D,QAAQ,EAAE,EAH+B;IAIzCC,QAAQ,EAAE,EAJ+B;IAKzCC,iBAAiB,EAAE,EALsB;IAMzCtI,IAAI,EAAE,EANmC;IAOzCuI,WAAW,EAAE,EAP4B;IAQzCC,eAAe,EAAE,EARwB;IASzCC,YAAY,EAAE,EAT2B;IAUzCC,WAAW,EAAE,EAV4B;IAWzCC,YAAY,EAAE,EAX2B;IAYzCC,OAAO,EAAE,EAZgC;IAazCC,QAAQ,EAAE,EAb+B;IAczCC,QAAQ,EAAE,EAd+B;IAezCC,QAAQ,EAAE,EAf+B;IAgBzCC,QAAQ,EAAE,EAhB+B;IAiBzCC,WAAW,EAAE,EAjB4B;IAkBzCC,eAAe,EAAE;EAlBwB,CAAD,CAv9BhB;EAAA;EAAA,IAu9BnBC,SAv9BmB;EAAA,IAu9BRC,YAv9BQ;;EA2+B1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAC1R,CAAD,EAAO;IAC7BA,CAAC,CAAC2J,cAAF;IACA,IAAMgI,UAAU,GAAGxE,eAAe,CAACtD,IAAhB,CAAqB,UAAC8H,UAAD,EAAgB;MACtD,OAAOA,UAAU,CAACA,UAAX,IAAyB3R,CAAC,CAAC+J,MAAF,CAAStG,KAAzC;IAED,CAHkB,CAAnB;IAIAgO,YAAY,CAAC;MAAEjB,SAAS,EAAEmB,UAAU,CAACA;IAAxB,CAAD,CAAZ;;IAEA,IAAIA,UAAJ,EAAgB;MACdF,YAAY,mBACPD,SADO;QAEVhB,SAAS,EAAEmB,UAAU,CAACA,UAFZ;QAGVR,QAAQ,EAAEQ,UAAU,CAACR;MAHX,GAAZ;IAKD;EACF,CAfD;;EAiBA,IAAMS,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;IACjC,QAAQJ,SAAS,CAAChB,SAAlB;MACE,eAAQ3P,CAAC,CAAC,OAAD,CAAT;QACE,oBAAO,oBAAC,SAAD;UACL,cAAc,EAAE,wBAACb,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBd,QAAQ,EAAE1Q,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAnB;UAAA,CADX;UAEL,cAAc,EAAE,wBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBX,eAAe,EAAE7Q,CAAC,CAAC+J,MAAF,CAAStG;YAA3C,GAAnB;UAAA,CAFX;UAGL,aAAa,EAAE,uBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBR,YAAY,EAAEhR,CAAC,CAAC+J,MAAF,CAAStG;YAAxC,GAAnB;UAAA,CAHV;UAIL,gBAAgB,EAAE,0BAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBT,WAAW,EAAE/Q,CAAC,CAAC+J,MAAF,CAAStG;YAAvC,GAAnB;UAAA,CAJb;UAKL,iBAAiB,EAAE,2BAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBV,YAAY,EAAE9Q,CAAC,CAAC+J,MAAF,CAAStG;YAAxC,GAAnB;UAAA,CALd;UAML,gBAAgB,EAAE,0BAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBZ,WAAW,EAAE5Q,CAAC,CAAC+J,MAAF,CAAStG;YAAvC,GAAnB;UAAA,CANb;UAOL,eAAe,EAAE+N,SAAS,CAACX,eAPtB;UAQL,WAAW,EAAEW,SAAS,CAACT,WARlB;UASL,YAAY,EAAES,SAAS,CAACV,YATnB;UAUL,WAAW,EAAEU,SAAS,CAACZ,WAVlB;UAWL,YAAY,EAAEY,SAAS,CAACR,YAXnB;UAYL,QAAQ,EAAEQ,SAAS,CAACd,QAZf;UAaL,IAAI,EAAEc,SAAS,CAACnJ,IAbX;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAP;;MAeF,eAAQxH,CAAC,CAAC,SAAD,CAAT;QACE,oBAAO,oBAAC,WAAD;UACL,aAAa,EAAE,uBAACb,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBP,OAAO,EAAEjR,CAAC,CAAC+J,MAAF,CAAStG;YAAnC,GAAnB;UAAA,CADV;UAEL,iBAAiB,EAAE,2BAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBV,YAAY,EAAE9Q,CAAC,CAAC+J,MAAF,CAAStG;YAAxC,GAAnB;UAAA,CAFd;UAGL,aAAa,EAAE,uBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBR,YAAY,EAAEhR,CAAC,CAAC+J,MAAF,CAAStG;YAAxC,GAAnB;UAAA,CAHV;UAIL,UAAU,EAAE,oBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBnJ,IAAI,EAAErI,CAAC,CAAC+J,MAAF,CAAStG;YAAhC,GAAnB;UAAA,CAJP;UAKL,cAAc,EAAE,wBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBd,QAAQ,EAAE1Q,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAnB;UAAA,CALX;UAML,YAAY,EAAE+N,SAAS,CAACR,YANnB;UAOL,QAAQ,EAAEQ,SAAS,CAACd,QAPf;UAQL,IAAI,EAAEc,SAAS,CAACnJ,IARX;UASL,YAAY,EAAEmJ,SAAS,CAACV,YATnB;UAUL,OAAO,EAAEU,SAAS,CAACP,OAVd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAP;;MAYF,eAAQpQ,CAAC,CAAC,MAAD,CAAT;QACE,OAAO,IAAP;;MACF;QACE,oBACE,oBAAC,QAAD;UACE,cAAc,EAAE,wBAACb,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBN,QAAQ,EAAElR,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAnB;UAAA,CADlB;UAEE,eAAe,EAAE,yBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBb,iBAAiB,EAAE3Q,CAAC,CAAC+J,MAAF,CAAStG;YAA7C,GAAnB;UAAA,CAFnB;UAGE,cAAc,EAAE,wBAACzD,CAAD;YAAA,OAAOyR,YAAY,mBAAMD,SAAN;cAAiBd,QAAQ,EAAE1Q,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAnB;UAAA,CAHlB;UAIE,QAAQ,EAAE+N,SAAS,CAACd,QAJtB;UAKE,QAAQ,EAAEc,SAAS,CAACN,QALtB;UAME,iBAAiB,EAAEM,SAAS,CAACb,iBAN/B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF;IAjCJ;EA4CD,CA7CD;;EA+CA,IAAMkB,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAE1B,IAAI5P,IAAI,GAAG;MACThC,IAAI,EAAEuR,SAAS,CAAChB,SADP;MAET9D,QAAQ,EAAE8E,SAAS,CAAC9E,QAFX;MAGT+D,QAAQ,EAAEe,SAAS,CAACf,QAHX;MAITC,QAAQ,EAAEc,SAAS,CAACd,QAJX;MAKTC,iBAAiB,EAAEa,SAAS,CAACb,iBALpB;MAMTtI,IAAI,EAAEmJ,SAAS,CAACnJ,IANP;MAOTuI,WAAW,EAAEY,SAAS,CAACZ,WAPd;MAQTC,eAAe,EAAEW,SAAS,CAACX,eARlB;MASTC,YAAY,EAAEU,SAAS,CAACV,YATf;MAUTC,WAAW,EAAES,SAAS,CAACT,WAVd;MAWTC,YAAY,EAAEQ,SAAS,CAACR,YAXf;MAYTC,OAAO,EAAEO,SAAS,CAACP,OAZV;MAaTC,QAAQ,EAAEM,SAAS,CAACN,QAbX;MAcTC,QAAQ,EAAEK,SAAS,CAACL,QAdX;MAeTC,QAAQ,EAAEI,SAAS,CAACJ,QAfX;MAgBTC,QAAQ,EAAEG,SAAS,CAACH,QAhBX;MAiBTS,YAAY,EAAEN,SAAS,CAACF,WAjBf;MAkBTS,gBAAgB,EAAEP,SAAS,CAACD;IAlBnB,CAAX;IAsBAhV,GAAG,CAACsJ,IAAJ,CAAS,4BAAT,EAAuC5D,IAAvC,EACGU,IADH,CACQ,UAAAC,GAAG,EAAI;MAEX,IAAIA,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,QAAtC,EAAgD;QAC9CvD,IAAI,UAAU;UACZ6G,IAAI,EAAE;QADM,CAAV,CAAJ;MAGD;;MACD,IAAIX,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB2C,GAAG,CAACX,IAAJ,CAAShC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CvD,IAAI,WAAImE,CAAC,CAAC,kBAAD,CAAL,GAA6B;UAC/B0C,IAAI,EAAE;QADyB,CAA7B,CAAJ;QAGAtE,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACD;IACF,CAdH,EAeG+G,KAfH,CAeS,UAACC,GAAD,EAAS;MAEdtJ,IAAI,UAAU;QACZ6G,IAAI,EAAE;MADM,CAAV,CAAJ;IAID,CArBH;EAsBD,CA9CD;;EAgDA,IAAMyO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAC1B,QAAQhT,KAAR;MACE,KAAK,CAAL;QACE,oBACE,uDACE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAW,QAAQ,YAAK6B,CAAC,CAAC,MAAD,CAAN,cAAkB7B,KAAK,GAAG,CAA1B,gBAAiC6B,CAAC,CAAC,YAAD,CAAlC,CAAnB;UAAuE,SAAS,EAAC,OAAjF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,eAEE;UAAK,KAAK,EAAE;YAAEoD,eAAe,EAAE,SAAnB;YAA8BgO,OAAO,EAAE,MAAvC;YAA+CC,YAAY,EAAE;UAA7D,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,QAAQ,EAAE,MAAZ;YAAoBC,UAAU,EAAE,KAAhC;YAAuCC,MAAM,EAAE;UAA/C,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,0IADF,CAFF,CADF,eAOE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEA,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,QAA+BxR,CAAC,CAAC,WAAD,CAAhC,OADF,eAEE,oBAAC,SAAD;UACE,WAAW,EAAEA,CAAC,CAAC,WAAD,CADhB;UAEE,QAAQ,MAFV;UAGE,KAAK,EAAEkK,UAAU,CAAC1C,IAHpB;UAIE,QAAQ,EAAE,kBAACrI,CAAD;YAAA,OAAOgL,aAAa,mBAAMD,UAAN;cAAkB1C,IAAI,EAAErI,CAAC,CAAC+J,MAAF,CAAStG;YAAjC,GAApB;UAAA,CAJZ;UAKE,KAAK,EAAE;YAAE6O,MAAM,EAAE;UAAV,CALT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,eAWE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAED,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,YAAD,CAA/B,CADF,eAEE,oBAAC,SAAD;UACE,WAAW,EAAEA,CAAC,CAAC,YAAD,CADhB;UAEE,KAAK,EAAEkK,UAAU,CAACF,SAFpB;UAGE,QAAQ,EAAE,kBAAC7K,CAAD;YAAA,OAAOgL,aAAa,mBAAMD,UAAN;cAAkBF,SAAS,EAAE7K,CAAC,CAAC+J,MAAF,CAAStG;YAAtC,GAApB;UAAA,CAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CAXF,CAPF,eA4BE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,gBAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,QAAQ,EAAE4J,iBADZ;UAEE,KAAK,EAAEH,OAFT;UAGE,KAAK,EAAE;YAAEgI,MAAM,EAAE;UAAV,CAHT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAOI9K,SAAS,CAACnH,GAAV,CAAc,UAAAiK,OAAO,EAAI;UACvB,oBACE;YAAQ,GAAG,EAAEA,OAAO,CAAC3B,EAArB;YAAyB,KAAK,EAAE2B,OAAO,CAACI,GAAxC;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA8CJ,OAAO,CAACjC,IAAtD,CADF;QAGD,CAJD,CAPJ,CAFF,CADF,eAkBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEgK,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,aAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAEkK,UAAU,CAACD,MADpB;UAEE,QAAQ,EAAE,kBAAA9K,CAAC;YAAA,OAAIgL,aAAa,mBAAMD,UAAN;cAAkBD,MAAM,EAAE9K,CAAC,CAAC+J,MAAF,CAAStG;YAAnC,GAAjB;UAAA,CAFb;UAGE,KAAK,EAAE;YAAE6O,MAAM,EAAE;UAAV,CAHT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME;UAAQ,QAAQ,MAAhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBzR,CAAC,CAAC,aAAD,CAAnB,CANF,EAQIyI,MAAM,IAAIA,MAAM,CAACjJ,GAAP,CAAW,UAAAsK,IAAI,EAAI;UAC3B,oBACE;YAAQ,GAAG,EAAEA,IAAI,CAAChC,EAAlB;YAAsB,KAAK,EAAEgC,IAAI,CAAChC,EAAlC;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAuCgC,IAAI,CAACA,IAA5C,CADF;QAGD,CAJS,CARd,CAFF,CAlBF,CA5BF,CADF;;MAqEF,KAAK,CAAL;QACE,oBACE,uDACE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAW,QAAQ,YAAK9J,CAAC,CAAC,MAAD,CAAN,cAAkB7B,KAAK,GAAG,CAA1B,gBAAiC6B,CAAC,CAAC,aAAD,CAAlC,CAAnB;UAAwE,SAAS,EAAC,OAAlF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,eAEE;UAAK,KAAK,EAAE;YAAEoD,eAAe,EAAE,SAAnB;YAA8BgO,OAAO,EAAE,MAAvC;YAA+CC,YAAY,EAAE;UAA7D,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEK,SAAS,EAAE,QAAb;YAAuBJ,QAAQ,EAAE,MAAjC;YAAyCC,UAAU,EAAE,KAArD;YAA4DC,MAAM,EAAE;UAApE,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,oFADF,CAFF,CADF,eAOE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEA,MAAM,EAAE,KAAV;YAAiBE,SAAS,EAAE;UAA5B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAiD1R,CAAC,CAAC,YAAD,CAAlD,OADF,eAEE,oBAAC,SAAD;UACE,KAAK,EAAE+K,SAAS,CAACvD,IADnB;UAEE,WAAW,EAAExH,CAAC,CAAC,YAAD,CAFhB;UAGE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CAHT,CAKE;UALF;UAME,QAAQ,MANV;UAOE,QAAQ,EAAE,kBAAAtS,CAAC;YAAA,OAAI6L,YAAY,mBAAMD,SAAN;cAAiBvD,IAAI,EAAErI,CAAC,CAAC+J,MAAF,CAAStG;YAAhC,GAAhB;UAAA,CAPb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,eAcE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE,KAAV;YAAiBE,SAAS,EAAE;UAA5B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAiD1R,CAAC,CAAC,WAAD,CAAlD,OADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAE+K,SAAS,CAACH,QADnB;UAEE,KAAK,EAAE;YAAE6G,MAAM,EAAE;UAAV,CAFT,CAGE;UAHF;UAIE,QAAQ,MAJV;UAKE,QAAQ,EAAE,kBAAAtS,CAAC;YAAA,OAAI6L,YAAY,mBAAMD,SAAN;cAAiBH,QAAQ,EAAEzL,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAhB;UAAA,CALb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkB5C,CAAC,CAAC,aAAD,CAAnB,CAPF,OAQGU,SAAS,CAAClB,GAAV,CAAc,UAAC4C,IAAD,EAAOuP,KAAP,EAAiB;UAC9B,oBAAO;YAAQ,KAAK,EAAEvP,IAAI,CAACuF,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BvF,IAAI,CAACoF,IAA/B,CAAP;QACD,CAFA,CARH,CAFF,CAdF,CADF,eAgCE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEgK,MAAM,EAAE,KAAV;YAAiBE,SAAS,EAAE;UAA5B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAiD1R,CAAC,CAAC,OAAD,CAAlD,SADF,eAEE,oBAAC,SAAD;UACE,IAAI,EAAC,QADP;UAEE,WAAW,EAAEA,CAAC,CAAC,OAAD,CAFhB;UAGE,KAAK,EAAE+K,SAAS,CAACF,KAHnB;UAIE,QAAQ,EAAE,kBAAA1L,CAAC;YAAA,OAAI6L,YAAY,mBAAMD,SAAN;cAAiBF,KAAK,EAAE1L,CAAC,CAAC+J,MAAF,CAAStG;YAAjC,GAAhB;UAAA,CAJb;UAKE,QAAQ,MALV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,eAWE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE,KAAV;YAAiBE,SAAS,EAAE;UAA5B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAiD1R,CAAC,CAAC,QAAD,CAAlD,SADF,eAEE,oBAAC,SAAD;UACE,IAAI,EAAC,QADP;UAEE,WAAW,EAAEA,CAAC,CAAC,QAAD,CAFhB;UAGE,KAAK,EAAE+K,SAAS,CAACD,MAHnB;UAIE,QAAQ,EAAE,kBAAA3L,CAAC;YAAA,OAAI6L,YAAY,mBAAMD,SAAN;cAAiBD,MAAM,EAAE3L,CAAC,CAAC+J,MAAF,CAAStG;YAAlC,GAAhB;UAAA,CAJb;UAKE,QAAQ,MALV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CAXF,CAhCF,CAFF,eA0DE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,WAAD;UAAa,QAAQ,EAAElE,QAAvB;UAAiC,SAAS,EAAEO,SAA5C;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CA1DF,CAPF,CADF;;MA2EF,KAAK,CAAL;QACE,oBACE,oBAAC,IAAD;UAAM,SAAS,EAAC,MAAhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAW,QAAQ,YAAKe,CAAC,CAAC,MAAD,CAAN,cAAkB7B,KAAK,GAAG,CAA1B,gBAAiC6B,CAAC,CAAC,WAAD,CAAlC,CAAnB;UAAsE,SAAS,EAAC,OAAhF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,eAEE;UAAK,KAAK,EAAE;YAAEoD,eAAe,EAAE,SAAnB;YAA8BgO,OAAO,EAAE,MAAvC;YAA+CC,YAAY,EAAE;UAA7D,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,QAAQ,EAAE,MAAZ;YAAoBC,UAAU,EAAE,KAAhC;YAAuCC,MAAM,EAAE;UAA/C,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,iNADF,CAFF,CADF,eAOE,oBAAC,GAAD;UAAK,SAAS,EAAC,oEAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEA,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,WAAD,CAA/B,OADF,eAEE,oBAAC,SAAD;UACE,KAAK,EAAEwJ,UAAU,CAAChC,IADpB;UAEE,WAAW,EAAExH,CAAC,CAAC,WAAD,CAFhB;UAGE,QAAQ,MAHV;UAIE,QAAQ,EAAE,kBAAAb,CAAC;YAAA,OAAIgK,aAAa,mBAAMK,UAAN;cAAkBhC,IAAI,EAAErI,CAAC,CAAC+J,MAAF,CAAStG;YAAjC,GAAjB;UAAA,CAJb;UAKE,KAAK,EAAE;YAAE6O,MAAM,EAAE;UAAV,CALT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,eAUE;UAAG,KAAK,EAAE;YAAED,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,WAAD,CAA/B,OAVF,eAWE,oBAAC,UAAD;UACE,KAAK,EAAEwJ,UAAU,CAACT,QADpB;UAEE,QAAQ,EAAEF,cAFZ;UAGE,KAAK,EAAE;YAAE4I,MAAM,EAAE;UAAV,CAHT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBzR,CAAC,CAAC,aAAD,CAAnB,CALF,EAOIoG,SAAS,CAAC5G,GAAV,CAAc,UAAC4C,IAAD,EAAOuP,KAAP,EAAiB;UAC7B,oBAAO;YAAQ,KAAK,EAAEvP,IAAI,CAAC6G,IAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA4B7G,IAAI,CAAC6G,IAAjC,CAAP;QAED,CAHD,CAPJ,CAXF,CADF,eA4BE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEuI,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,WAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,QAAQ,EAAE,kBAAA4R,GAAG,EAAI;YAEflG,WAAW,CAAC,CAACD,cAAF,CAAX;UAED,CALH;UAME,KAAK,EAAE;YAAEgG,MAAM,EAAE;UAAV,CANT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBASE;UAAQ,QAAQ,EAAEhG,cAAlB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,cATF,eAUE;UAAQ,QAAQ,EAAE,CAACA,cAAnB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,eAVF,CAFF,eAcE;UAAG,KAAK,EAAE;YAAE+F,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,YAAD,CAA/B,OAdF,eAeE,oBAAC,UAAD;UACE,KAAK,EAAEwJ,UAAU,CAACoC,SADpB;UAEE,QAAQ,EAAE,kBAAAzM,CAAC;YAAA,OAAIgK,aAAa,mBAAMK,UAAN;cAAkBoC,SAAS,EAAEzM,CAAC,CAAC+J,MAAF,CAAStG;YAAtC,GAAjB;UAAA,CAFb;UAGE,WAAW,EAAE5C,CAAC,CAAC,YAAD,CAHhB;UAIE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBzR,CAAC,CAAC,cAAD,CAAnB,CAPF,EAQGqC,MAAM,CAAC7C,GAAP,CAAW,UAAC4C,IAAD,EAAOuP,KAAP,EAAiB;UAC3B,oBAAO;YAAQ,KAAK,EAAEvP,IAAI,CAACsF,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BtF,IAAI,CAACgD,KAA/B,CAAP;QACD,CAFA,CARH,CAfF,CA5BF,CAPF,eAgEE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GACGoG,YAAY,EADf,CAhEF,eAmEE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAU,SAAS,EAAC,MAApB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEgG,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,kBAAD,CAA/B,WADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEwJ,UAAU,CAACJ,QAA3C;UAAqD,QAAQ,EAAE,kBAAAjK,CAAC;YAAA,OAAIgK,aAAa,mBAAMK,UAAN;cAAkBJ,QAAQ,EAAEjK,CAAC,CAAC+J,MAAF,CAAStG;YAArC,GAAjB;UAAA,CAAhE;UAAgI,EAAE,EAAC,UAAnI;UAA8I,WAAW,EAAE5C,CAAC,CAAC,kBAAD,CAA5J;UACE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAFF,eAYE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAED,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,qBADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEhI,UAAU,CAACF,KAA3C;UAAkD,QAAQ,EAAE,kBAAAnK,CAAC;YAAA,OAAIgK,aAAa,mBAAMK,UAAN;cAAkBF,KAAK,EAAEnK,CAAC,CAAC+J,MAAF,CAAStG;YAAlC,GAAjB;UAAA,CAA7D;UAA0H,EAAE,EAAC,OAA7H;UAAqI,WAAW,EAAC,QAAjJ;UACE,KAAK,EAAE;YAAE6O,MAAM,EAAE;UAAV,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAZF,CAnEF,CADF;;MA8FF,KAAK,CAAL;QACE,oBACE,oBAAC,IAAD;UAAM,SAAS,EAAC,MAAhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAW,QAAQ,YAAKzR,CAAC,CAAC,MAAD,CAAN,cAAkB7B,KAAK,GAAG,CAA1B,gBAAiC6B,CAAC,CAAC,WAAD,CAAlC,CAAnB;UAAsE,SAAS,EAAC,OAAhF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,eAEE;UAAK,KAAK,EAAE;YAAEoD,eAAe,EAAE,SAAnB;YAA8BgO,OAAO,EAAE,MAAvC;YAA+CC,YAAY,EAAE;UAA7D,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,QAAQ,EAAE,MAAZ;YAAoBC,UAAU,EAAE,KAAhC;YAAuCC,MAAM,EAAE;UAA/C,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gQADF,CAFF,CADF,eAOE,oBAAC,GAAD;UAAK,SAAS,EAAC,oEAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,iBAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEA,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,WAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,QAAQ,EAAEmO,cADZ;UAEE,WAAW,EAAEnO,CAAC,CAAC,WAAD,CAFhB;UAGE,KAAK,EAAEiO,QAAQ,CAACd,QAHlB;UAIE,KAAK,EAAE;YAAEsE,MAAM,EAAE;UAAV,CAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,iBAPF,EASIvF,QAAQ,CAAC1M,GAAT,CAAa,UAAAuI,IAAI,EAAI;UACnB,oBACE;YAAQ,KAAK,EAAEA,IAAI,CAACD,EAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAyBC,IAAI,CAACA,IAA9B,CADF;QAID,CALD,CATJ,CAFF,eAoBE;UAAG,KAAK,EAAE;YAAEyJ,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,cAAD,CAA/B,CApBF,eAqBE,oBAAC,UAAD;UAAY,KAAK,EAAEiO,QAAQ,CAACb,OAA5B;UAAqC,QAAQ,EAAE2B,iBAA/C;UAAkE,EAAE,EAAC,aAArE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkB/O,CAAC,CAAC,cAAD,CAAnB,CADF,EAGIiO,QAAQ,CAACZ,WAAT,CAAqB7N,GAArB,CAAyB,UAAA4N,OAAO;UAAA,oBAC9B;YAAQ,KAAK,EAAEA,OAAO,CAACwB,SAAvB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAmCxB,OAAO,CAACA,OAA3C,CAD8B;QAAA,CAAhC,CAHJ,CArBF,eA6BE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,OAA5B;UAAoC,EAAE,EAAC,OAAvC;UAA+C,OAAO,EAAE;YAAA,OAAMF,UAAU,CAAC,CAACD,OAAF,CAAhB;UAAA,CAAxD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EA7BF,OA6B0FjN,CAAC,CAAC,OAAD,CA7B3F,EA+BIiN,OAAO,gBAGL,oBAAC,SAAD;UACE,KAAK,EAAEgB,QAAQ,CAACb,OAAT,IAAoB,EAD7B;UAEE,WAAW,EAAEpN,CAAC,CAAC,cAAD,CAFhB;UAGE,EAAE,EAAC,aAHL;UAIE,QAAQ,EAAE,kBAAAb,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBb,OAAO,EAAEjO,CAAC,CAAC+J,MAAF,CAAStG;YAAlC,GAAf;UAAA,CAJb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAHK,GAWL,IA1CN,CADF,eA+CE,oBAAE,GAAF;UAAM,EAAE,EAAC,GAAT;UAAa,EAAE,EAAC,IAAhB;UAAqB,EAAE,EAAC,IAAxB;UAA6B,SAAS,EAAC,YAAvC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,WAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAEiO,QAAQ,CAACpC,QADlB;UAEE,QAAQ,EAAE,kBAAA1M,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBpC,QAAQ,EAAE1M,CAAC,CAAC+J,MAAF,CAAStG;YAAnC,GAAf;UAAA,CAFb;UAGE,WAAW,EAAE5C,CAAC,CAAC,WAAD,CAHhB;UAIE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASzR,CAAC,CAAC,aAAD,CAAV,CAPF,EAUIuG,KAAK,CAAC/G,GAAN,CAAU,UAAAyJ,IAAI,EAAI;UAChB,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAACvB,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BuB,IAAI,CAACzB,IAA/B,CAAP;QAED,CAHD,CAVJ,CAFF,eAmBE;UAAG,KAAK,EAAE;YAAEgK,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,YAAD,CAA/B,OAnBF,eAoBE,oBAAC,UAAD;UACE,KAAK,EAAEiO,QAAQ,CAACrC,SADlB;UAEE,QAAQ,EAAE,kBAAAzM,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBrC,SAAS,EAAEzM,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAf;UAAA,CAFb;UAGE,WAAW,EAAE5C,CAAC,CAAC,WAAD,CAHhB;UAIE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASzR,CAAC,CAAC,cAAD,CAAV,CAPF,EASIqC,MAAM,CAAC7C,GAAP,CAAW,UAAC4C,IAAD,EAAOyP,IAAP,EAAgB;UACzB,oBAAO;YAAQ,KAAK,EAAEzP,IAAI,CAACsF,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BtF,IAAI,CAACgD,KAA/B,CAAP;QACD,CAFD,CATJ,CApBF,CA/CF,CAPF,eA2FE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEoM,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,SAAD,CAA/B,aADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEiO,QAAQ,CAACD,OAAzC;UAAkD,QAAQ,EAAE,kBAAA7O,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBD,OAAO,EAAE7O,CAAC,CAAC+J,MAAF,CAAStG;YAAlC,GAAf;UAAA,CAA7D;UAAwH,EAAE,EAAC,GAA3H;UAA+H,WAAW,EAAE5C,CAAC,CAAC,SAAD,CAA7I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CADF,eAUE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,OAAD,CAA/B,WADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEiO,QAAQ,CAACP,SAAzC;UAAoD,QAAQ,EAAE,kBAAAvO,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBP,SAAS,EAAEvO,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAf;UAAA,CAA/D;UAA4H,EAAE,EAAC,GAA/H;UAAmI,WAAW,EAAE5C,CAAC,CAAC,OAAD,CAAjJ;UACE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAVF,eAqBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAED,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,MAAD,CAA/B,OADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CAAlB;UAAmD,IAAI,EAAC,QAAxD;UAAiE,KAAK,EAAExD,QAAQ,CAACV,IAAjF;UAAuF,EAAE,EAAC,MAA1F;UAAiG,QAAQ,EAAE,kBAAApO,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBV,IAAI,EAAEpO,CAAC,CAAC+J,MAAF,CAAStG;YAA/B,GAAf;UAAA,CAA5G;UAAoK,WAAW,EAAE5C,CAAC,CAAC,MAAD,CAAlL;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CArBF,eA6BE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,eAAD,CAA/B,OADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CAAlB;UAAmD,IAAI,EAAC,MAAxD;UAA+D,KAAK,EAAExD,QAAQ,CAACR,WAA/E;UAA4F,QAAQ,EAAE,kBAAAtO,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBR,WAAW,EAAEtO,CAAC,CAAC+J,MAAF,CAAStG;YAAtC,GAAf;UAAA,CAAvG;UAAsK,EAAE,EAAC,eAAzK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA7BF,eAqCE,oBAAC,GAAD;UAAK,MAAM,MAAX;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,IAAtB;UAA2B,EAAE,EAAC,IAA9B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,gBAAD,CAA/B,CADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,MAAhB;UAAuB,KAAK,EAAEiO,QAAQ,CAACT,YAAvC;UAAqD,QAAQ,EAAE,kBAAArO,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBT,YAAY,EAAErO,CAAC,CAAC+J,MAAF,CAAStG;YAAvC,GAAf;UAAA,CAAhE;UAAgI,EAAE,EAAC,MAAnI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CArCF,eA6CE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,mBAAD,CAA/B,YADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEiO,QAAQ,CAACH,UAAzC;UAAqD,QAAQ,EAAE,kBAAA3O,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBH,UAAU,EAAE3O,CAAC,CAAC+J,MAAF,CAAStG;YAArC,GAAf;UAAA,CAAhE;UAA8H,EAAE,EAAC,YAAjI;UAA8I,WAAW,EAAE5C,CAAC,CAAC,mBAAD,CAA5J;UACE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA7CF,eAuDE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAED,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,aAAD,CAA/B,SADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEiO,QAAQ,CAACN,UAAzC;UAAqD,QAAQ,EAAE,kBAAAxO,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBN,UAAU,EAAExO,CAAC,CAAC+J,MAAF,CAAStG;YAArC,GAAf;UAAA,CAAhE;UAA8H,EAAE,EAAC,YAAjI;UAA8I,WAAW,EAAE5C,CAAC,CAAC,aAAD,CAA5J;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAvDF,eA+DE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,aAAD,CAA/B,UADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEiO,QAAQ,CAACL,UAAzC;UAAqD,QAAQ,EAAE,kBAAAzO,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBL,UAAU,EAAEzO,CAAC,CAAC+J,MAAF,CAAStG;YAArC,GAAf;UAAA,CAAhE;UAA8H,EAAE,EAAC,YAAjI;UAA8I,WAAW,EAAE5C,CAAC,CAAC,aAAD,CAA5J;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA/DF,eAuEE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,SAAD,CAA/B,iBADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAEiO,QAAQ,CAACJ,OAAzC;UAAkD,QAAQ,EAAE,kBAAA1O,CAAC;YAAA,OAAI+O,WAAW,mBAAMD,QAAN;cAAgBJ,OAAO,EAAE1O,CAAC,CAAC+J,MAAF,CAAStG;YAAlC,GAAf;UAAA,CAA7D;UAAwH,EAAE,EAAC,YAA3H;UAAqI,WAAW,EAAE5C,CAAC,CAAC,SAAD,CAAnJ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAvEF,CA3FF,CADF;;MA8KF,KAAK,CAAL;QACE,oBACE,oBAAC,IAAD;UAAM,SAAS,EAAC,MAAhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAW,QAAQ,YAAKA,CAAC,CAAC,MAAD,CAAN,cAAkB7B,KAAK,GAAG,CAA1B,gBAAiC6B,CAAC,CAAC,iBAAD,CAAlC,CAAnB;UAA4E,SAAS,EAAC,OAAtF;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,eAEE;UAAK,KAAK,EAAE;YAAEoD,eAAe,EAAE,SAAnB;YAA8BgO,OAAO,EAAE,MAAvC;YAA+CC,YAAY,EAAE;UAA7D,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,QAAQ,EAAE,MAAZ;YAAoBC,UAAU,EAAE,KAAhC;YAAuCC,MAAM,EAAE;UAA/C,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,wQADF,CAFF,CADF,eAOE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,SAAS,EAAC,YAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEA,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,iBAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAE2Q,SAAS,CAAC9E,QADnB;UAEE,QAAQ,EAAE,kBAAA1M,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiB9E,QAAQ,EAAE1M,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAhB;UAAA,CAFb;UAGE,KAAK,EAAE;YAAE6O,MAAM,EAAE;UAAV,CAHT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASzR,CAAC,CAAC,aAAD,CAAV,CANF,EASIuG,KAAK,CAAC/G,GAAN,CAAU,UAAC4C,IAAD,EAAOyP,IAAP,EAAgB;UACxB,oBAAO;YAAQ,KAAK,EAAEzP,IAAI,CAACsF,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BtF,IAAI,CAACoF,IAA/B,CAAP;QACD,CAFD,CATJ,CAFF,CADF,eAkBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,SAAS,EAAC,YAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEgK,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,iBAAD,CAA/B,OADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAE2Q,SAAS,CAACf,QADnB;UAEE,QAAQ,EAAE,kBAAAzQ,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiBf,QAAQ,EAAEzQ,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAhB;UAAA,CAFb;UAGE,KAAK,EAAE;YAAE6O,MAAM,EAAE;UAAV,CAHT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASzR,CAAC,CAAC,aAAD,CAAV,CANF,EAQIyB,KAAK,CAACjC,GAAN,CAAU,UAAAuI,IAAI,EAAI;UAChB,IAAIoF,QAAQ,GAAG,EAAf;UACAjB,QAAQ,CAAC1M,GAAT,CAAa,UAAA4I,QAAQ,EAAI;YACvB,IAAIA,QAAQ,CAACN,EAAT,KAAgBC,IAAI,CAACI,WAAzB,EAAsC;cACpCgF,QAAQ,GAAG/E,QAAQ,CAACL,IAApB;YACD;UACF,CAJD;UAKA,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAACL,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA2ByF,QAA3B,CAAP;QAED,CATD,CARJ,CAFF,CAlBF,eA0CE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,SAAS,EAAC,YAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEqE,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,wBAAD,CAA/B,OADF,eAEE,oBAAC,UAAD,CACE;QADF;UAEE,KAAK,EAAE2Q,SAAS,CAAChB,SAFnB;UAGE,QAAQ,EAAE,kBAAAiC,GAAG,EAAI;YACff,eAAe,CAACe,GAAD,CAAf;UACD,CALH;UAME,KAAK,EAAE;YAAEH,MAAM,EAAE;UAAV,CANT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBASE;UAAQ,QAAQ,MAAhB;UAAiB,QAAQ,MAAzB;UAA0B,KAAK,EAAC,EAAhC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAoCzR,CAAC,CAAC,mBAAD,CAArC,CATF,EAWIsM,eAAe,CAAC9M,GAAhB,CAAoB,UAAA4C,IAAI,EAAI;UAC1B;UACA;UACA;UACA;UACA;UACA,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAAC0O,UAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAkC9Q,CAAC,WAAIoC,IAAI,CAAC0O,UAAT,EAAnC,CAAP;QACD,CAPD,CAXJ,CAFF,CA1CF,eAkEE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEU,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,uBAAD,CAA/B,WADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAE2Q,SAAS,CAACL,QAA1C;UAAoD,QAAQ,EAAE,kBAAAnR,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiBL,QAAQ,EAAEnR,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAhB;UAAA,CAA/D;UAA6H,EAAE,EAAC,UAAhI;UAA2I,WAAW,EAAE5C,CAAC,CAAC,uBAAD,CAAzJ;UACE,KAAK,EAAE;YAAEyR,MAAM,EAAE;UAAV,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAlEF,eA6EE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAED,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,aAAD,CAA/B,CADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE2Q,SAAS,CAACH,QAA5B;UAAsC,QAAQ,EAAE,kBAAArR,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiBH,QAAQ,EAAErR,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAhB;UAAA,CAAjD;UAA+G,EAAE,EAAC,aAAlH;UAAgI,WAAW,EAAE5C,CAAC,CAAC,aAAD,CAA9I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA7EF,eAsFE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,cAAD,CAA/B,YADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAE2Q,SAAS,CAACJ,QAA1C;UAAoD,QAAQ,EAAE,kBAAApR,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiBJ,QAAQ,EAAEpR,CAAC,CAAC+J,MAAF,CAAStG;YAApC,GAAhB;UAAA,CAA/D;UAA6H,EAAE,EAAC,aAAhI;UAA8I,WAAW,EAAE5C,CAAC,CAAC,cAAD,CAA5J;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAtFF,eA+FE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,WAAD,CAA/B,CADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAE2Q,SAAS,CAACF,WAA1C;UAAuD,QAAQ,EAAE,kBAAAtR,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiBF,WAAW,EAAEtR,CAAC,CAAC+J,MAAF,CAAStG;YAAvC,GAAhB;UAAA,CAAlE;UAAmI,EAAE,EAAC,WAAtI;UAAkJ,WAAW,EAAE5C,CAAC,CAAC,WAAD,CAAhK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA/FF,eAwGE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwR,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8BxR,CAAC,CAAC,mBAAD,CAA/B,SADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,QAAhB;UAAyB,KAAK,EAAE2Q,SAAS,CAACb,iBAA1C;UAA6D,QAAQ,EAAE,kBAAA3Q,CAAC;YAAA,OAAIyR,YAAY,mBAAMD,SAAN;cAAiBb,iBAAiB,EAAE3Q,CAAC,CAAC+J,MAAF,CAAStG;YAA7C,GAAhB;UAAA,CAAxE;UAA+I,EAAE,EAAC,aAAlJ;UAAgK,WAAW,EAAE5C,CAAC,CAAC,mBAAD,CAA9K;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAxGF,EAiHG+Q,oBAAoB,EAjHvB,CAPF,CADF;;MA6HF,KAAK,CAAL;QACE,oBACE;UAAK,SAAS,EAAC,8DAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE;UAAK,KAAK,EAAC,KAAX;UAAiB,GAAG,EAAExU,IAAtB;UAA4B,GAAG,EAAC,iBAAhC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,eAGE;UAAI,KAAK,EAAE;YAAEmV,SAAS,EAAE,QAAb;YAAuB7G,KAAK,EAAE;UAA9B,CAAX;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,yEAAuG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAvG,uEAAiK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAjK,+GAHF,CADF;;MAWF;QACE;IA5iBJ;EA8iBD,CA/iBD;;EAijBA,IAAMiH,UAAU,GAAG,CAAnB;EAEA,IAAMC,kBAAkB,GAAGC,IAAI,CAACC,IAAL,CAAY9T,KAAD,GAAU2T,UAAX,GAAyB,GAAnC,CAA3B;;EAEA,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,QAAQ/T,KAAR;MACE,KAAK,CAAL;QACE,OACEqM,OAAO,EADT;;MAGF,KAAK,CAAL;QACE,OACES,QAAQ,EADV;;MAGF,KAAK,CAAL;QACE,OACEa,OAAO,EADT;;MAGF,KAAK,CAAL;QACE,OACEwD,OAAO,EADT;;MAGF,KAAK,CAAL;QACE,OACE0B,aAAa,EADf;;MAGF;QACE;IAtBJ;EAwBD,CAzBD;;EA0BA,oBACE,oBAAC,SAAD;IAAW,KAAK,MAAhB;IAAiB,SAAS,EAAC,6BAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,uDACE,oBAAC,KAAD;IAAO,IAAI,EAAC,IAAZ;IAAiB,IAAI,EAAElL,IAAvB;IAA6B,MAAM,EAAEE,WAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD,CAAO,MAAP;IAAc,SAAS,EAAC,oBAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,KAAD,CAAO,KAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADF,eAEE;IAAG,KAAK,EAAE;MAAEmM,cAAc,EAAE,WAAlB;MAA+Bb,QAAQ,EAAE,EAAzC;MAA6Cc,UAAU,EAAE;IAAzD,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,+JAFF,eAGE;IAAK,KAAK,EAAE;MAAEvH,KAAK,EAAE,MAAT;MAAiBwH,MAAM,EAAE;IAAzB,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,WAAD;IAAa,QAAQ,MAArB;IAAsB,OAAO,EAAC,SAA9B;IAAwC,GAAG,EAAEN,kBAA7C;IAAiE,KAAK,YAAKA,kBAAL,MAAtE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAHF,CADF,eAUE,oBAAC,KAAD,CAAO,IAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGZ,aAAa,EADhB,CAVF,eAaE,oBAAC,KAAD,CAAO,MAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,OAAO,EAAC,WAAhB;IAA4B,OAAO,EAAEnL,WAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,WADF,EAKI7H,KAAK,KAAK,CAAV,gBAEE,oBAAC,MAAD;IAAQ,QAAQ,EAAEA,KAAK,KAAK,CAAV,IAAea,MAAM,CAACL,QAAP,KAAoB,EAArD;IAAyD,OAAO,EAAC,SAAjE;IAA2E,OAAO,EAAEuT,YAApF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6BAFF,GAME,IAXN,EAeI/T,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,CAArB,gBAEE,oBAAC,MAAD;IAAQ,OAAO,EAAC,SAAhB;IAA0B,OAAO,EAAE+H,QAAnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cAFF,GAME,IArBN,CAbF,CADF,CADF,eA0CE,oBAAC,GAAD;IAAK,SAAS,MAAd;IAAe,SAAS,EAAC,mGAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAW,KAAK,EAAElG,CAAC,CAAC,UAAD,CAAnB;IAAiC,SAAS,EAAC,OAA3C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,QAAD;IAAU,IAAI,EAAE1C,MAAhB;IAAwB,MAAM,EAAEyD,cAAhC;IAAgD,SAAS,EAAC,cAA1D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,mDAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,EAAE,EAAC,gBAAX;IAA4B,KAAK,EAAC,MAAlC;IAAyC,SAAS,EAAC,gBAAnD;IAAoE,KAAK,EAAE;MAAEsR,MAAM,EAAE,EAAV;MAAcxH,KAAK,EAAE;IAArB,CAA3E;IAAsG,OAAO,EAAE9J,cAA/G;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAG,SAAS,EAAC,gBAAb;IAA8B,KAAK,EAAE;MAAEuQ,QAAQ,EAAE,EAAZ;MAAgBgB,OAAO,EAAE,MAAzB;MAAiCC,cAAc,EAAE,QAAjD;MAA2DC,UAAU,EAAE,QAAvE;MAAiFC,KAAK,EAAE;IAAxF,CAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YADF,eAEE,oBAAC,OAAD;IACE,SAAS,EAAC,MADZ;IAGE,IAAI,EAAEnS,IAHR;IAIE,MAAM,EAAC,iBAJT;IAKE,MAAM,EAAEU,aALV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAOGhB,CAAC,CAAC,aAAD,CAPJ,CAFF,CADF,CADF,eAgBE,oBAAC,YAAD;IAAc,KAAK,MAAnB;IAAoB,KAAK,EAAE;MAAE0S,MAAM,EAAE;IAAV,CAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD;IAAM,EAAE,EAAC,GAAT;IAAa,OAAO,EAAEzM,UAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGjG,CAAC,CAAC,OAAD,CADJ,CADF,CADF,eAOE,oBAAC,IAAD;IAAM,EAAE,EAAC,GAAT;IAAa,OAAO,EAAE;MAAA,OAAM0F,eAAe,EAArB;IAAA,CAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG1F,CAAC,CAAC,SAAD,CADJ,CADF,CAPF,eAYE,oBAAC,IAAD;IAAM,EAAE,EAAC,GAAT;IAAa,OAAO,EAAE;MAAA,OAAM6F,kBAAkB,EAAxB;IAAA,CAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG7F,CAAC,CAAC,eAAD,CADJ,CADF,CAZF,CAhBF,CAFF,CA1CF,eAiFE,oBAAC,GAAD;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAD;IAAK,EAAE,EAAC,GAAR;IAAY,EAAE,EAAC,GAAf;IAAmB,EAAE,EAAC,GAAtB;IAA0B,SAAS,EAAC,MAApC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAG,KAAK,EAAE;MAAEwR,MAAM,EAAE;IAAV,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA0BxR,CAAC,CAAC,aAAD,CAA3B,CADF,eAEE,oBAAC,IAAD;IAAM,KAAK,MAAX;IAAY,SAAS,EAAC,mBAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAU,SAAS,EAAC,uDAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,KAAK,EAAE;MACLsS,OAAO,EAAE,MADJ;MAELK,aAAa,EAAE,KAFV;MAGLC,QAAQ,EAAE,MAHL;MAIL/H,KAAK,EAAE;IAJF,CADT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GASGrI,UAAU,CAAChD,GAAX,CAAe,UAACqT,KAAD,EAAQC,GAAR;IAAA,oBACd,uDACE,oBAAC,UAAD;MACE,cAAc,EAAE/N,cADlB;MAEE,KAAK,EAAE;QACL1B,WAAW,EAAE,MADR;QAELF,WAAW,EAAE,CAFR;QAGL4P,WAAW,EAAE;MAHR,CAFT;MAOE,EAAE,wBAAiBD,GAAjB,CAPJ;MAQE,SAAS,EAAC,GARZ;MASE,SAAS,EAAED,KAAK,CAAC5P,QATnB;MAUE,WAAW,EAAE4P,KAAK,CAAChQ,WAVrB;MAWE,KAAK,EAAEgQ,KAAK,CAAClQ,KAXf;MAYE,KAAK,EAAEkQ,KAAK,CAACjQ,KAZf;MAaE,IAAI,EAAEiQ,KAAK,CAACnQ,IAbd;MAcE,KAAK,EAAEmQ,KAAK,CAACpQ,KAdf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAiBGqQ,GAAG,IAAI,CAAP,gBACC;MACE,KAAK,EAAE;QACL1P,eAAe,EAAE,SADZ;QAELyH,KAAK,EAAE,KAFF;QAGLwH,MAAM,EAAE;MAHH,CADT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADD,gBASC,yCA1BJ,CADc;EAAA,CAAf,CATH,CADF,CADF,CAFF,CADF,eAiDE,oBAAC,GAAD;IAAK,EAAE,EAAC,GAAR;IAAY,EAAE,EAAC,GAAf;IAAmB,EAAE,EAAC,GAAtB;IAA0B,SAAS,EAAC,MAApC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAG,KAAK,EAAE;MAAEb,MAAM,EAAE;IAAV,CAAV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA0BxR,CAAC,CAAC,cAAD,CAA3B,CADF,eAEE,oBAAC,IAAD;IAAM,KAAK,MAAX;IAAY,SAAS,EAAC,mBAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,QAAD;IAAU,SAAS,EAAC,sDAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IACE,KAAK,EAAE;MACLsS,OAAO,EAAE,MADJ;MAELK,aAAa,EAAE,KAFV;MAGLC,QAAQ,EAAE,MAHL;MAIL/H,KAAK,EAAE;IAJF,CADT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAQG/F,WAAW,CAACtF,GAAZ,CAAgB,UAACqT,KAAD,EAAQC,GAAR;IAAA,oBACf,uDACE,oBAAC,UAAD;MACE,YAAY,EAAEzN,YADhB;MAEE,KAAK,EAAE;QACLhC,WAAW,EAAE,MADR;QAELF,WAAW,EAAE,CAFR;QAGL4P,WAAW,EAAE;MAHR,CAFT;MAOE,EAAE,wBAAiBD,GAAjB,CAPJ;MAQE,SAAS,EAAC,GARZ;MASE,SAAS,EAAED,KAAK,CAAC5P,QATnB;MAUE,WAAW,EAAE4P,KAAK,CAAChQ,WAVrB;MAWE,KAAK,EAAEgQ,KAAK,CAAClQ,KAXf;MAYE,KAAK,EAAEkQ,KAAK,CAACjQ,KAZf;MAaE,IAAI,EAAEiQ,KAAK,CAACnQ,IAbd;MAcE,KAAK,EAAEmQ,KAAK,CAACpQ,KAdf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,EAiBGqQ,GAAG,IAAI,CAAP,gBACC;MACE,KAAK,EAAE;QACL1P,eAAe,EAAE,SADZ;QAELyH,KAAK,EAAE,KAFF;QAGLwH,MAAM,EAAE;MAHH,CADT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADD,gBASC,yCA1BJ,CADe;EAAA,CAAhB,CARH,CADF,CADF,CAFF,CAjDF,eAgGE,oBAAC,GAAD;IAAK,EAAE,EAAC,GAAR;IAAY,EAAE,EAAC,IAAf;IAAoB,EAAE,EAAC,IAAvB;IAA4B,SAAS,EAAC,EAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEE,oBAAC,UAAD;IAAY,IAAI,EAAE3R,SAAlB;IAA6B,MAAM,EAAEN,WAArC;IAAkD,IAAI,EAAE7B,SAAS,CAACP,IAAlE;IAAwE,IAAI,EAAE4C,SAAS,CAAC/B,IAAxF;IAA8F,MAAM,EAAE+B,SAAS,CAAC9B,MAAhH;IAAwH,UAAU,EAAE8B,SAAS,CAAC7B,UAA9I;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CAhGF,CAjFF,eAsLE,oBAAC,GAAD;IAAK,SAAS,EAAC,kDAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAtLF,eAwLE,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IACE,UAAU,EAAEyD,UADd;IAEE,WAAW,EAAE1B,WAFf;IAGE,KAAK,EAAEW,KAHT;IAIE,gBAAgB,EAAEjE,KAJpB;IAKE,WAAW,EAAE4C,WALf;IAME,UAAU,EAAEF,UANd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAxLF,CADF;AAqMD,CA/2DD;;AAk3DA,eAAe9C,QAAf"},"metadata":{},"sourceType":"module"}