{"ast":null,"code":"import _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/Overview.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from 'react-router-dom';\nimport { Container, Row, Col, CardBody, Card, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields';\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport AddField from \"./AddField\";\nimport FieldSetupForm from \"../components/FieldSettingForms/FieldSetupForm\";\nimport FieldSoilForm from \"../components/FieldSettingForms/FieldSoilForm\";\nimport FieldCropForm from \"../components/FieldSettingForms/FieldCropForm\";\nimport CompositeSoil from \"../components/FieldSettingForms/compositeSoilForm\";\nimport DripForm from \"../components/FieldSettingForms/dripForm\";\nimport LateralForm from \"../components/FieldSettingForms/lateralForm\";\nimport PivotForm from \"../components/FieldSettingForms/pivotForm\";\nimport clap from \"../images/applause.png\";\nimport { FeatureGroup, MapContainer, Marker, Polygon, Popup, ScaleControl, TileLayer } from \"react-leaflet\";\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\n\nvar Overview = function Overview(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      farms = _useState4[0],\n      setFarms = _useState4[1];\n\n  var _useState5 = useState({\n    polygon: true,\n    rectangle: false,\n    marker: false,\n    circle: false,\n    polyline: false,\n    circlemarker: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      draw = _useState6[0],\n      setDraw = _useState6[1];\n\n  var history = useHistory();\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      steps = _useState8[0],\n      setSteps = _useState8[1]; // const [offer,setOffer] = useState(null)\n\n\n  var _useState9 = useState({\n    draw: {\n      polygon: true,\n      circle: false,\n      rectangle: false,\n      polyline: false,\n      marker: false,\n      circlemarker: false\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      configMap = _useState10[0],\n      setConfigMap = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      layer = _useState12[0],\n      setLayer = _useState12[1];\n\n  var _useState13 = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      coords = _useState14[0],\n      setCoords = _useState14[1];\n\n  var _onCreated = function _onCreated(e) {\n    var type = e.layerType;\n    var layer = e.layer;\n\n    if (type === \"polygon\") {\n      var _coords = layer._latlngs[0];\n\n      var Coordinates = _coords.map(function (coord) {\n        return {\n          Lat: coord.lat,\n          Long: coord.lng\n        };\n      });\n\n      if (Coordinates) {\n        setLayer(JSON.stringify(Coordinates));\n        setCoords({\n          Latitude: Coordinates[0].Lat,\n          Longitude: Coordinates[0].Long\n        });\n      }\n    }\n  };\n\n  var EditableMap = function EditableMap() {\n    useEffect(function () {\n      // Create a Leaflet map\n      var map = L.map('map').setView([0, 0], 2); // Add a tile layer\n\n      L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\n        subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\n      }).addTo(map); // Create an editable feature group\n\n      var editableLayers = new L.FeatureGroup().addTo(map); // Configure the drawing options\n\n      var drawOptions = {\n        position: 'topright',\n        draw: {\n          circle: false,\n          marker: false,\n          polyline: false,\n          polygon: {\n            allowIntersection: false,\n            drawError: {\n              color: 'red',\n              timeout: 1000\n            },\n            shapeOptions: {\n              color: 'blue'\n            }\n          }\n        }\n      }; // Add the Leaflet Draw control\n\n      var drawControl = new L.Control.Draw(drawOptions);\n      map.addControl(drawControl); // Event handler for layer creation\n\n      map.on(L.Draw.Event.CREATED, function (event) {\n        var layer = event.layer; // Access layer data (e.g., coordinates for polygons)\n\n        var layerData = layer.toGeoJSON();\n        console.log(layerData); // Update your application state with the layer data\n        // Your logic to handle the layer data goes here\n\n        var coordinates = [];\n\n        if (layerData.geometry.type === 'Polygon') {\n          coordinates = layerData.geometry.coordinates[0].map(function (coord) {\n            return {\n              Lat: coord[1],\n              Long: coord[0]\n            };\n          });\n        }\n\n        if (coordinates.length > 0) {\n          setLayer(JSON.stringify(coordinates));\n          setCoords({\n            Latitude: coordinates[0].Lat,\n            Longitude: coordinates[0].Long\n          });\n        } // Add the layer to the editableLayers FeatureGroup\n\n\n        editableLayers.addLayer(layer);\n      }); // Cleanup when the component is unmounted\n\n      return function () {\n        map.remove(); // Remove the map instance\n      };\n    }, []);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        height: '350px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fieldStats = _useState16[0],\n      setFS = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sensorStats = _useState18[0],\n      setSensorStats = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      open = _useState20[0],\n      setOpen = _useState20[1];\n\n  var _useState21 = useState(\"#\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userMapDetails = _useState22[0],\n      setUserMapDetails = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      layerFarm = _useState24[0],\n      setLayerFarm = _useState24[1];\n\n  var _useState25 = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      mapConfig = _useState26[0],\n      setMapConfig = _useState26[1];\n\n  var sensorsData = useSensorData('/sensor/sensor-update-data');\n\n  var toggleDropDown = function toggleDropDown() {\n    setToggle(!toggle);\n  };\n\n  var toggleToolTip = function toggleToolTip() {\n    setOpen(!open);\n  };\n\n  var getFieldStats = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/dashboard/fields');\n\n            case 2:\n              response = _context.sent;\n              setFS(response.data.farms);\n              setUserMapDetails(response.data.user_map_details.map_link_details);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFieldStats() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getSensorsStats = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/dashboard/sensors');\n\n            case 2:\n              response = _context2.sent;\n              setSensorStats(response.data.sensors);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getSensorsStats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      crops = _useState28[0],\n      setCrops = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      dataCrops = _useState30[0],\n      setDataCrops = _useState30[1];\n\n  var getLayerFarm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/farm/farms').then(function (res) {\n                var DataFarm = res.data.farms;\n                setLayerFarm(DataFarm);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getLayerFarm() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // getLastDataSensor()\n    getLayerFarm();\n    getFieldStats();\n    getSensorsStats(); // fetchDataCrops()\n  }, []);\n  var critical = 0;\n  var full = 0;\n  var opt = 0;\n  fieldStats.map(function (item) {\n    item.fields.map(function (field) {\n      var status = field.status;\n\n      if (status) {\n        if (status == \"Optimal\") {\n          opt++;\n        }\n\n        if (status == \"Full\") {\n          full++;\n        }\n\n        if (status == \"Critical\") {\n          critical++;\n        }\n      }\n    });\n  });\n  var smallStats = [{\n    state: \"\".concat(t('Critical')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint-slash\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: critical,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n      borderColor: \"rgb(0, 184, 216)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Optimal')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: opt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(23,198,113,0.1)\",\n      borderColor: \"rgb(23,198,113)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Full')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: full,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  var online = 0;\n  var offline = 0;\n  var lowBatt = 0;\n  sensorStats.map(function (item) {\n    var sensor = item.id;\n\n    if (sensor) {\n      online++;\n    }\n  });\n  var smallStats2 = [{\n    state: \"\".concat(t('online')),\n    icon: /*#__PURE__*/React.createElement(SignalCellular4BarIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: online,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('low_batt')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-battery-quarter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: lowBatt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('offline')),\n    icon: /*#__PURE__*/React.createElement(SignalCellularNodataIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: offline,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n\n  var FilterByStatus = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(status) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              data = {\n                status: status\n              };\n              _context4.next = 3;\n              return api.post('/field/field-status', data).then(function (response) {\n                var farmsData = response.data.farms;\n                setFarms(farmsData);\n              }).catch(function (err) {\n                swal({\n                  title: 'Error',\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function FilterByStatus(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var ToSensorPage = function ToSensorPage() {\n    history.push('/Sensors');\n    window.location.reload();\n  };\n\n  var ToAddSensorPage = function ToAddSensorPage() {\n    history.push('/AddSensor');\n    window.location.reload();\n  };\n\n  var ToAddFarmPage = function ToAddFarmPage() {\n    history.push('/AddFarm');\n    window.location.reload();\n  };\n\n  var ToAddFieldPage = function ToAddFieldPage() {\n    history.push('/AddField');\n    window.location.reload();\n  };\n\n  var ToWaterBalancePage = function ToWaterBalancePage() {\n    history.push('/Bilan');\n    window.location.reload();\n  };\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      show = _useState32[0],\n      setShow = _useState32[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var prevStep = function prevStep() {\n    setSteps(steps - 1);\n  };\n\n  var nextStep = function nextStep() {\n    setSteps(steps + 1);\n  };\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      listSoils = _useState34[0],\n      setListSoils = _useState34[1];\n\n  var _useState35 = useState([]),\n      _useState36 = _slicedToArray(_useState35, 2),\n      fields = _useState36[0],\n      setFields = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      zones = _useState38[0],\n      setZones = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      allCities = _useState40[0],\n      setAllCities = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      countries = _useState42[0],\n      setCountries = _useState42[1];\n\n  var getSoils = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return api.get('/soils/get-soils').then(function (response) {\n                var listSoils = response.data.Soils;\n                setListSoils(listSoils);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context5.next = 8;\n              break;\n\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 5]]);\n    }));\n\n    return function getSoils() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getDataFields = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return api.get('/field/fields').then(function (res) {\n                var newData = res.data.farms;\n                setFarms(newData);\n                var Fields = [];\n                var Zones = [];\n                var Crops = [];\n                newData.map(function (item) {\n                  var fields = item.fields;\n\n                  if (fields) {\n                    fields.map(function (itemfield) {\n                      Fields.push({\n                        title: itemfield.name,\n                        status: itemfield.status,\n                        description: itemfield.description,\n                        Uid: itemfield.uid,\n                        farm_id: itemfield.farm_id,\n                        Latitude: itemfield.Latitude,\n                        Longitude: itemfield.Longitude,\n                        Id: itemfield.id\n                      });\n                      var zones = itemfield.zones;\n                      var crops = itemfield.crops;\n\n                      if (crops) {\n                        crops.map(function (crop) {\n                          Crops.push({\n                            type: crop.type,\n                            id: crop.id,\n                            Uid: crop.uid,\n                            fieldId: crop.field_id,\n                            zone_id: crop.zone_id,\n                            croptype_id: crop.croptype_id,\n                            croptype: crop.croptypes\n                          });\n                        });\n                      }\n\n                      if (zones) {\n                        zones.map(function (i) {\n                          Zones.push({\n                            Id: i.id,\n                            name: i.name,\n                            Uid: i.uid,\n                            source: i.source,\n                            description: i.description,\n                            field_id: i.field_id\n                          });\n                        });\n                      }\n\n                      ;\n                    });\n                  }\n                });\n                setFields(Fields);\n                setZones(Zones);\n                setCrops(Crops);\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getDataFields() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var getDataFields = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return api.get('/field/fields').then(function (res) {\n                  var newData = res.data.farms;\n                  setFarms(newData);\n                  var Fields = [];\n                  var Zones = [];\n                  var Crops = [];\n                  newData.map(function (item) {\n                    var fields = item.fields;\n\n                    if (fields) {\n                      fields.map(function (itemfield) {\n                        Fields.push({\n                          title: itemfield.name,\n                          status: itemfield.status,\n                          description: itemfield.description,\n                          Uid: itemfield.uid,\n                          farm_id: itemfield.farm_id,\n                          Latitude: itemfield.Latitude,\n                          Longitude: itemfield.Longitude,\n                          Id: itemfield.id\n                        });\n                        var zones = itemfield.zones;\n                        var crops = itemfield.crops;\n\n                        if (crops) {\n                          crops.map(function (crop) {\n                            Crops.push({\n                              type: crop.type,\n                              id: crop.id,\n                              Uid: crop.uid,\n                              fieldId: crop.field_id,\n                              zone_id: crop.zone_id,\n                              croptype_id: crop.croptype_id,\n                              croptype: crop.croptypes\n                            });\n                          });\n                        }\n\n                        if (zones) {\n                          zones.map(function (i) {\n                            Zones.push({\n                              Id: i.id,\n                              name: i.name,\n                              Uid: i.uid,\n                              source: i.source,\n                              description: i.description,\n                              field_id: i.field_id\n                            });\n                          });\n                        }\n\n                        ;\n                      });\n                    }\n                  });\n                  setFields(Fields);\n                  setZones(Zones);\n                  setCrops(Crops);\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function getDataFields() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    getDataFields();\n  }, []);\n  useEffect(function () {\n    var getCities = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return api.get('/cities/get-cities').then(function (res) {\n                  var cities = res.data.Cities;\n                  setAllCities(cities);\n                });\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function getCities() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var getCountries = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return api.get('/countries/get-countries').then(function (res) {\n                  var countries = res.data.Countries;\n                  setCountries(countries);\n                });\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function getCountries() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    getSoils();\n    getCountries();\n    getCities();\n  }, []);\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = listSoils.find(function (soil) {\n      return soil.soil == e.target.value;\n    });\n\n    if (e.target.value !== \"\") {\n      setSoilParams({\n        effPluie: soilType.rain_eff\n      });\n      setSoilParams({\n        RUmax: soilType.ru\n      });\n    }\n\n    if (typeof soilType !== \"undefined\") {\n      setSoilParams(_objectSpread({}, soilParams, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  }; // ADD Farm\n\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      country = _useState44[0],\n      setCountry = _useState44[1];\n\n  var _useState45 = useState(''),\n      _useState46 = _slicedToArray(_useState45, 2),\n      cities = _useState46[0],\n      setCities = _useState46[1];\n\n  var handleCountryPick = function handleCountryPick(e) {\n    e.preventDefault();\n    var country = countries.find(function (country) {\n      return country.iso === e.target.value;\n    });\n    var Cities = [];\n\n    if (country) {\n      allCities.map(function (city) {\n        if (city.iso === country.iso) {\n          Cities.push({\n            city: city.city,\n            id: city.id,\n            lat: city.lat,\n            lon: city.lon\n          });\n        }\n      });\n      setCountry(country.iso);\n      setCities(Cities);\n    }\n  };\n\n  var _useState47 = useState({\n    name: \"\",\n    groupName: \"\",\n    cityId: \"\"\n  }),\n      _useState48 = _slicedToArray(_useState47, 2),\n      farmParams = _useState48[0],\n      setFarmParams = _useState48[1];\n\n  var userUid = JSON.parse(localStorage.getItem('user')).id;\n\n  var addFarm = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              data = {\n                name: farmParams.name,\n                name_group: farmParams.groupName,\n                user_uid: userUid,\n                city_id: farmParams.cityId // Coordinates : layer,\n                // Latitude : coords.Latitude,\n                // Longitude : coords.Longitude\n\n              };\n              _context10.next = 3;\n              return api.post('/farm/add-farm', data).then(function (response) {\n                if (response.data.type === \"success\") {\n                  swal('Farm Added', {\n                    icon: \"success\"\n                  });\n                  getLayerFarm();\n                  setSteps(steps + 1);\n                }\n              }).catch(function (err) {\n                swal(err, {\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function addFarm() {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // ADD Field\n\n\n  var _useState49 = useState({\n    name: \"\",\n    farm_uid: \"\",\n    width: \"\",\n    length: \"\",\n    Latitude: \"\",\n    Longitude: \"\"\n  }),\n      _useState50 = _slicedToArray(_useState49, 2),\n      dataField = _useState50[0],\n      setDataField = _useState50[1];\n\n  var addField = function addField() {\n    var data = {\n      name: dataField.name,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid,\n      largeur: dataField.width,\n      longueur: dataField.length,\n      coordinates: layer,\n      Latitude: parseFloat(coords.Latitude).toFixed(4),\n      Longitude: parseFloat(coords.Longitude).toFixed(4)\n    };\n    api.post('/field/add-field', data).then(function (res) {\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('field_added')), {\n          icon: \"success\"\n        });\n        getDataFields();\n        setSteps(steps + 1);\n      }\n    }).catch(function () {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  }; // ADD Soil Zone\n\n\n  var soilTypeForm = function soilTypeForm() {\n    if (isStandardSoil == true) return null;else {\n      return /*#__PURE__*/React.createElement(CompositeSoil, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  var _useState51 = useState(true),\n      _useState52 = _slicedToArray(_useState51, 2),\n      isStandardSoil = _useState52[0],\n      setSoilType = _useState52[1];\n\n  var _useState53 = useState({\n    soilProperty: \"\",\n    soilType: \"\",\n    field_uid: \"\",\n    zone_uid: \"\",\n    name: \"\",\n    RUmax: \"\",\n    effPluie: \"\"\n  }),\n      _useState54 = _slicedToArray(_useState53, 2),\n      soilParams = _useState54[0],\n      setSoilParams = _useState54[1];\n\n  var addZone = function addZone() {\n    var data = {\n      soilProperty: soilParams.soilProperty,\n      field_uid: soilParams.field_uid,\n      zone_uid: soilParams.zone_uid,\n      name: soilParams.name,\n      RUmax: soilParams.RUmax,\n      effPluie: soilParams.effPluie\n    };\n    api.post('/zone/add-zone', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal({\n          title: 'Cannot add soil',\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal({\n          title: 'Soil added',\n          icon: \"success\",\n          text: 'Soil added successfully '\n        });\n      }\n\n      getDataFields();\n      setSteps(steps + 1);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var _useState55 = useState([]),\n      _useState56 = _slicedToArray(_useState55, 2),\n      listSoil = _useState56[0],\n      setListSoil = _useState56[1];\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      listCrop = _useState58[0],\n      setListCrop = _useState58[1];\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      allVarieties = _useState60[0],\n      setAllVarieties = _useState60[1];\n\n  var _useState61 = useState([]),\n      _useState62 = _slicedToArray(_useState61, 2),\n      listIrrigations = _useState62[0],\n      setListIrrigations = _useState62[1];\n\n  useEffect(function () {\n    var getCropType = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context11.next = 8;\n                break;\n\n              case 5:\n                _context11.prev = 5;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.log(_context11.t0);\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                _context12.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setListSoil(listSoils);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context12.next = 8;\n                break;\n\n              case 5:\n                _context12.prev = 5;\n                _context12.t0 = _context12[\"catch\"](0);\n                console.log(_context12.t0);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    var getIrrigations = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                _context13.next = 3;\n                return api.get('/irrigations/get-irrigations').then(function (response) {\n                  if (response) {\n                    var dataIrrig = response.data.Irrigations;\n                    setListIrrigations(dataIrrig);\n                  }\n                });\n\n              case 3:\n                _context13.next = 8;\n                break;\n\n              case 5:\n                _context13.prev = 5;\n                _context13.t0 = _context13[\"catch\"](0);\n                console.log(_context13.t0);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, null, [[0, 5]]);\n      }));\n\n      return function getIrrigations() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    var getVarieties = /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                _context14.next = 3;\n                return api.get('/varieties/get-varieties').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listVarieties = response.data.Varieties;\n                    setAllVarieties(listVarieties);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context14.next = 8;\n                break;\n\n              case 5:\n                _context14.prev = 5;\n                _context14.t0 = _context14[\"catch\"](0);\n                console.log(_context14.t0);\n\n              case 8:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, null, [[0, 5]]);\n      }));\n\n      return function getVarieties() {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getIrrigations();\n    getSoils();\n    getCropType();\n  }, []); // ADD Crop \n\n  var _useState63 = useState(false),\n      _useState64 = _slicedToArray(_useState63, 2),\n      checked = _useState64[0],\n      setChecked = _useState64[1];\n\n  var _useState65 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    growingDate: \"\",\n    rootDepth: \"\",\n    ecartInter: \"\",\n    ecartIntra: \"\",\n    density: \"\",\n    ruPratique: \"\",\n    kcList: [],\n    surface: \"\"\n  }),\n      _useState66 = _slicedToArray(_useState65, 2),\n      cropData = _useState66[0],\n      setCropData = _useState66[1];\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault(); // props.handleCropType(e)\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        ruPratique: crop.practical_fraction\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        days: crop.total\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        rootDepth: crop.root_max\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', '')\n      }));\n    }\n\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        rootDepth: crop.root_max,\n        ruPratique: crop.practical_fraction,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.id == e.target.value;\n    });\n\n    if (variety) {\n      setCropData(_objectSpread({}, cropData, {\n        variety: variety.id\n      }));\n    }\n  };\n\n  var handleKeyPress = function handleKeyPress(event) {\n    var regex = /^[1-9][0-9]?$|^100$/;\n    var key = event.key;\n    var currentValue = event.target.value + key;\n\n    if (!regex.test(currentValue)) {\n      event.preventDefault();\n    }\n  };\n\n  var addCrop = function addCrop() {\n    var data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction: cropData.ruPratique,\n      density: cropData.density,\n      ecart_inter: cropData.ecartInter,\n      ecart_intra: cropData.ecartIntra,\n      surface: cropData.surface,\n      growingDate: cropData.growingDate\n    };\n    api.post('/crop/add-crop', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('crop_added')), {\n          icon: \"success\"\n        });\n        getDataFields();\n        setSteps(steps + 1);\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  }; // ADD Irrigation\n\n\n  var _useState67 = useState({\n    irrigType: \"\",\n    zone_uid: \"\",\n    crop_uid: \"\",\n    flowrate: \"\",\n    irrigated_already: \"\",\n    name: \"\",\n    pivot_shape: \"\",\n    irrigation_syst: \"\",\n    pivot_length: \"\",\n    pivot_coord: \"\",\n    full_runtime: \"\",\n    lateral: \"\",\n    drippers: \"\",\n    effIrrig: \"\",\n    pumpFlow: \"\",\n    pumpType: \"\",\n    linesNumber: \"\",\n    drippersSpacing: \"\"\n  }),\n      _useState68 = _slicedToArray(_useState67, 2),\n      irrigData = _useState68[0],\n      setIrrigData = _useState68[1];\n\n  var handleIrrigPick = function handleIrrigPick(e) {\n    e.preventDefault();\n    var irrigation = listIrrigations.find(function (irrigation) {\n      return irrigation.irrigation == e.target.value;\n    });\n    setIrrigData({\n      irrigType: irrigation.irrigation\n    });\n\n    if (irrigation) {\n      setIrrigData(_objectSpread({}, irrigData, {\n        irrigType: irrigation.irrigation,\n        effIrrig: irrigation.effIrrig\n      }));\n    }\n  };\n\n  var irrigationMethodForm = function irrigationMethodForm() {\n    switch (irrigData.irrigType) {\n      case \"\".concat(t('Pivot')):\n        return /*#__PURE__*/React.createElement(PivotForm, {\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          handleIrrgSyst: function handleIrrgSyst(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigation_syst: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handlePivotCoord: function handlePivotCoord(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_coord: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handlePivotShape: function handlePivotShape(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_shape: e.target.value\n            }));\n          },\n          irrigation_syst: irrigData.irrigation_syst,\n          pivot_coord: irrigData.pivot_coord,\n          pivot_length: irrigData.pivot_length,\n          pivot_shape: irrigData.pivot_shape,\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 16\n          }\n        });\n\n      case \"\".concat(t('Lateral')):\n        return /*#__PURE__*/React.createElement(LateralForm, {\n          handleLateral: function handleLateral(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              lateral: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handleName: function handleName(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              name: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          pivot_length: irrigData.pivot_length,\n          lateral: irrigData.lateral,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 16\n          }\n        });\n\n      case \"\".concat(t('None')):\n        return null;\n\n      default:\n        return /*#__PURE__*/React.createElement(DripForm, {\n          handleDrippers: function handleDrippers(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              drippers: e.target.value\n            }));\n          },\n          handleIrrigAlrd: function handleIrrigAlrd(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          flowrate: irrigData.flowrate,\n          drippers: irrigData.drippers,\n          irrigated_already: irrigData.irrigated_already,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 11\n          }\n        });\n    }\n  };\n\n  var addIrrigation = function addIrrigation() {\n    var data = {\n      type: irrigData.irrigType,\n      zone_uid: irrigData.zone_uid,\n      crop_uid: irrigData.crop_uid,\n      flowrate: irrigData.flowrate,\n      irrigated_already: irrigData.irrigated_already,\n      name: irrigData.name,\n      pivot_shape: irrigData.pivot_shape,\n      irrigation_syst: irrigData.irrigation_syst,\n      pivot_length: irrigData.pivot_length,\n      pivot_coord: irrigData.pivot_coord,\n      full_runtime: irrigData.full_runtime,\n      lateral: irrigData.lateral,\n      drippers: irrigData.drippers,\n      effIrrig: irrigData.effIrrig,\n      pumpFlow: irrigData.pumpFlow,\n      pumpType: irrigData.pumpType,\n      lines_number: irrigData.linesNumber,\n      drippers_spacing: irrigData.drippersSpacing\n    };\n    api.post('/irrigation/add-irrigation', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('irrigation_added')), {\n          icon: \"success\"\n        });\n        setSteps(steps + 1);\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var configProcess = function configProcess() {\n    switch (steps) {\n      case 0:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('farm_setup')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 17\n          }\n        }, \"\\\"To get started, please provide a name and location for your farm. This will help us to identify and locate your farm accurately.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 17\n          }\n        }, \" \", t('name_farm')), /*#__PURE__*/React.createElement(FormInput, {\n          placeholder: t('name_farm'),\n          required: true,\n          value: farmParams.name,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 17\n          }\n        }, t('group_name')), /*#__PURE__*/React.createElement(FormInput, {\n          placeholder: t('group_name'),\n          value: farmParams.groupName,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              groupName: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Row, {\n          className: \"pt-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 17\n          }\n        }, t('select_country')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCountryPick,\n          value: country,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 17\n          }\n        }, countries.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1155,\n              columnNumber: 25\n            }\n          }, country.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 17\n          }\n        }, t('select_city')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: farmParams.cityId,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              cityId: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 19\n          }\n        }, t('select_city')), cities && cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: city.id,\n            value: city.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1171,\n              columnNumber: 25\n            }\n          }, city.city);\n        })))));\n\n      case 1:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('field_setup')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            textAlign: \"center\",\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 17\n          }\n        }, \"To proceed to the next stage, we kindly ask you to draw your field on the map.\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 21\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field') // className={props.nameError =='' ? '' : 'is-invalid'}\n          ,\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 21\n          }\n        }, t('name_farm')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid // className={props.farmError =='' ? '' : 'is-invalid'}\n          ,\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              farm_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 23\n          }\n        }, t('select_farm')), \";\", layerFarm.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1215,\n              columnNumber: 32\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 21\n          }\n        }, t('width'), \" (M)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          placeholder: t('width'),\n          value: dataField.width,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              width: e.target.value\n            }));\n          },\n          required: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1233,\n            columnNumber: 21\n          }\n        }, t('length'), \" (M)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          placeholder: t('length'),\n          value: dataField.length,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              length: e.target.value\n            }));\n          },\n          required: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1234,\n            columnNumber: 21\n          }\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1245,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(EditableMap, {\n          setLayer: setLayer,\n          setCoords: setCoords,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 17\n          }\n        }))));\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('soil_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1259,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1260,\n            columnNumber: 17\n          }\n        }, \"\\\"To add your soil type configuration, please provide the appropriate details and associate it with the appropriate field. This will help us to provide accurate recommendations for managing your crops.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1263,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 17\n          }\n        }, t('soil_zone')), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilParams.name,\n          placeholder: t('soil_zone'),\n          required: true,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 17\n          }\n        }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilParams.soilType,\n          onChange: handleSoilPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1278,\n            columnNumber: 19\n          }\n        }, t('select_soil')), listSoils.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.soil,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1281,\n              columnNumber: 30\n            }\n          }, item.soil);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 17\n          }\n        }, t('soil_prop')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: function onChange(evt) {\n            setSoilType(!isStandardSoil);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 19\n          }\n        }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n          selected: !isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 19\n          }\n        }, \"Composite\")), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1301,\n            columnNumber: 17\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilParams.field_uid,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('name_field'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1302,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1307,\n            columnNumber: 19\n          }\n        }, t('select_field')), fields.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 28\n            }\n          }, item.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 13\n          }\n        }, soilTypeForm()), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 19\n          }\n        }, t('efficacité_pluie'), \" (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilParams.effPluie,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: t('efficacité_pluie'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1327,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 19\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilParams.RUmax,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 19\n          }\n        })))));\n\n      case 3:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1341,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('crop_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1345,\n            columnNumber: 17\n          }\n        }, \"\\\"To add your crop type configuration, please provide the appropriate details and associate it with the appropriate field and soil type. This will help us to provide personalized recommendations for managing your crops and achieving optimal yields.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1348,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group pt-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1349,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 17\n          }\n        }, t('crop_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCropPick,\n          placeholder: t('crop_type'),\n          value: cropData.cropType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1356,\n            columnNumber: 19\n          }\n        }, \"Select Crop\"), listCrop.map(function (crop) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 25\n            }\n          }, crop.crop);\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 17\n          }\n        }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.variety,\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1368,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1369,\n            columnNumber: 19\n          }\n        }, t('crop_variety')), cropData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.varietyId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 23\n            }\n          }, variety.variety);\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"Autre\",\n          id: \"check\",\n          onClick: function onClick() {\n            return setChecked(!checked);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 17\n          }\n        }), \" \", t('other'), checked ? /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.variety || \"\",\n          placeholder: t('crop_variety'),\n          id: \"cropVariety\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              variety: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1381,\n            columnNumber: 21\n          }\n        }) : null), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1393,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1394,\n            columnNumber: 17\n          }\n        }, t('crop_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.zone_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              zone_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1395,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 19\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1404,\n              columnNumber: 30\n            }\n          }, soil.name);\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 17\n          }\n        }, t('crop_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.field_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1416,\n            columnNumber: 19\n          }\n        }, t('select_field')), fields.map(function (item, indx) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1419,\n              columnNumber: 30\n            }\n          }, item.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 19\n          }\n        }, t('surface'), \" (m\\xB2)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.surface,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              surface: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('surface'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 19\n          }\n        }, t('depth'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.rootDepth,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              rootDepth: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('depth'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1439,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1447,\n            columnNumber: 19\n          }\n        }, t('Days')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.days,\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: t('Days'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1448,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1454,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1455,\n            columnNumber: 19\n          }\n        }, t('planting_date')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.growingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              growingDate: e.target.value\n            }));\n          },\n          id: \"planting_date\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1456,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          hidden: true,\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1462,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1463,\n            columnNumber: 19\n          }\n        }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.plantingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1464,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1469,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 19\n          }\n        }, t('fraction_pratique'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ruPratique,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: t('fraction_pratique'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1472,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1477,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1478,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 19\n          }\n        }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartInter,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartInter: e.target.value\n            }));\n          },\n          id: \"ecartInter\",\n          placeholder: t('ecart_inter'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1480,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1485,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1486,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 19\n          }\n        }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartIntra,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartIntra: e.target.value\n            }));\n          },\n          id: \"ecartIntra\",\n          placeholder: t('ecart_intra'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1488,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1493,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1495,\n            columnNumber: 19\n          }\n        }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.density,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              density: e.target.value\n            }));\n          },\n          id: \"densit\\xE9\",\n          placeholder: t('densité'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 19\n          }\n        })))));\n\n      case 4:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1506,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('Irrigation_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1508,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1509,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 17\n          }\n        }, \"\\\"To add your irrigation type configuration, please provide the appropriate details and associate it with the appropriate crop type and soil type. This will help us to provide personalized recommendations for managing your crops and optimizing water usage.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1513,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1514,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1515,\n            columnNumber: 17\n          }\n        }, t('irrigation_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.zone_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              zone_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1516,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 19\n          }\n        }, t('select_zone')), zones.map(function (item, indx) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1524,\n              columnNumber: 30\n            }\n          }, item.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1529,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1530,\n            columnNumber: 17\n          }\n        }, t('irrigation_crop')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.crop_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              crop_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1531,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1535,\n            columnNumber: 19\n          }\n        }, t('select_crop')), crops.map(function (crop) {\n          var cropType = \"\";\n          listCrop.map(function (croptype) {\n            if (croptype.id === crop.croptype_id) {\n              cropType = croptype.crop;\n            }\n          });\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1544,\n              columnNumber: 30\n            }\n          }, cropType);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1551,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 17\n          }\n        }, t('Irrigation_system_type')), /*#__PURE__*/React.createElement(FormSelect // className={props.typeErrorIrrig == '' ? '' : 'is-invalid'}\n        , {\n          value: irrigData.irrigType,\n          onChange: function onChange(evt) {\n            handleIrrigPick(evt);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          disabled: true,\n          selected: true,\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 19\n          }\n        }, t('select_irriagtion')), listIrrigations.map(function (item) {\n          // if (item.value === irrigationMethod) {\n          //   return <option value={item.value} selected={true}>{item.type}</option>;\n          // } else {\n          //   return <option value={item.value} selected={false}>{item.type}</option>;\n          // }\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.irrigation,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1568,\n              columnNumber: 30\n            }\n          }, t(\"\".concat(item.irrigation)));\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1574,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1575,\n            columnNumber: 19\n          }\n        }, t('efficience_irrigation'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.effIrrig,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: t('efficience_irrigation'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1576,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1582,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1584,\n            columnNumber: 19\n          }\n        }, t('type_reseau')), /*#__PURE__*/React.createElement(FormInput, {\n          value: irrigData.pumpType,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpType: e.target.value\n            }));\n          },\n          id: \"type_reseau\",\n          placeholder: t('type_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1585,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1591,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1593,\n            columnNumber: 19\n          }\n        }, t('debit_reseau'), \" (l/s) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.pumpFlow,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpFlow: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('debit_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1600,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1601,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1602,\n            columnNumber: 19\n          }\n        }, t('nbr_ligne')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.linesNumber,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              linesNumber: e.target.value\n            }));\n          },\n          id: \"nbr_ligne\",\n          placeholder: t('nbr_ligne'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1603,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1609,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1610,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1611,\n            columnNumber: 19\n          }\n        }, t('irrigated_already'), \"(h) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.irrigated_already,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('irrigated_already'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1612,\n            columnNumber: 19\n          }\n        }))), irrigationMethodForm()));\n\n      case 5:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-column align-items-center justify-content-around\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1624,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"20%\",\n          src: clap,\n          alt: \"Congratulations\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1626,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"h6\", {\n          style: {\n            textAlign: \"center\",\n            width: \"88%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 13\n          }\n        }, \"Congratulations, your farm configuration is complete \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 116\n          }\n        }), \" Thank you for filling out all 5 steps of the form. \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1627,\n            columnNumber: 174\n          }\n        }), \"Now it's time to configure your sensors. Please proceed to the next step to add your sensor configuration.\"));\n\n      default:\n        break;\n    }\n  };\n\n  var totalSteps = 5;\n  var percentageComplete = Math.ceil(steps / totalSteps * 100);\n\n  var handleSubmit = function handleSubmit() {\n    switch (steps) {\n      case 0:\n        return addFarm();\n\n      case 1:\n        return addField();\n\n      case 2:\n        return addZone();\n\n      case 3:\n        return addCrop();\n\n      case 4:\n        return addIrrigation();\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1670,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1672,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    className: \"d-flex flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1673,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1674,\n      columnNumber: 13\n    }\n  }, \"Farm Configuration\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textDecoration: \"underline\",\n      fontSize: 12,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1675,\n      columnNumber: 13\n    }\n  }, \"Each step of this form is dependent on the previous step, so please fill out the fields in the correct order to avoid errors or an incomplete submission.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1676,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    animated: true,\n    variant: \"success\",\n    now: percentageComplete,\n    label: \"\".concat(percentageComplete, \"%\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1677,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1682,\n      columnNumber: 11\n    }\n  }, configProcess()), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1686,\n      columnNumber: 13\n    }\n  }, \"Close\"), steps !== 5 ? /*#__PURE__*/React.createElement(Button, {\n    disabled: steps === 1 && coords.Latitude === \"\",\n    variant: \"primary\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1692,\n      columnNumber: 17\n    }\n  }, \"Save & continue process\") : null, steps > 0 && steps < 5 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: prevStep,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1702,\n      columnNumber: 17\n    }\n  }, \"Previous\") : null))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-2 mb-4 d-flex justify-content-between flex-nowrap align-items-center border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1712,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: t('overview'),\n    className: \" mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1713,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    open: toggle,\n    toggle: toggleDropDown,\n    className: \"d-table mr-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1714,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1715,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"TooltipExample\",\n    theme: \"info\",\n    className: \"rounded-circle\",\n    style: {\n      height: 50,\n      width: 50\n    },\n    onClick: toggleDropDown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1716,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    style: {\n      fontSize: 30,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1717,\n      columnNumber: 15\n    }\n  }, \"\\uE145\"), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"left\",\n    open: open,\n    target: \"#TooltipExample\",\n    toggle: toggleToolTip,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1718,\n      columnNumber: 15\n    }\n  }, t('add_element')))), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    style: {\n      zIndex: \"10\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1730,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: handleShow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1731,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 15\n    }\n  }, t('farms'))), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: function onClick() {\n      return ToAddSensorPage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1737,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1738,\n      columnNumber: 15\n    }\n  }, t('sensors'))), /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    onClick: function onClick() {\n      return ToWaterBalancePage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1742,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1743,\n      columnNumber: 15\n    }\n  }, t('water_balance')))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1751,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1752,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1753,\n      columnNumber: 11\n    }\n  }, t('field_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1754,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 d-flex  justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1755,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1756,\n      columnNumber: 15\n    }\n  }, smallStats.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      FilterByStatus: FilterByStatus,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1767,\n        columnNumber: 21\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1784,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1800,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1801,\n      columnNumber: 11\n    }\n  }, t('sensor_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1802,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1803,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1804,\n      columnNumber: 15\n    }\n  }, smallStats2.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      ToSensorPage: ToSensorPage,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1814,\n        columnNumber: 21\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1831,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1847,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeafletMap, {\n    data: layerFarm,\n    sensor: sensorStats,\n    draw: configMap.draw,\n    zoom: mapConfig.zoom,\n    center: mapConfig.center,\n    fromAcrion: mapConfig.fromAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1849,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1852,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1854,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterFields, {\n    smallStats: smallStats,\n    sensorsData: sensorsData,\n    crops: crops,\n    filteredByStatus: farms,\n    sensorStats: sensorStats,\n    fieldStats: fieldStats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1855,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Overview;","map":{"version":3,"names":["React","useEffect","useState","useHistory","Link","Container","Row","Col","CardBody","Card","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Tooltip","FormInput","FormSelect","FormGroup","Form","PageTitle","SmallStats","LeafletMap","SignalCellularNodataIcon","SignalCellular4BarIcon","Modal","ProgressBar","api","useTranslation","FilterFields","swal","useSensorData","AddField","FieldSetupForm","FieldSoilForm","FieldCropForm","CompositeSoil","DripForm","LateralForm","PivotForm","clap","FeatureGroup","MapContainer","Marker","Polygon","Popup","ScaleControl","TileLayer","LeafletGeoCoder","EditControl","L","Overview","props","toggle","setToggle","farms","setFarms","polygon","rectangle","marker","circle","polyline","circlemarker","draw","setDraw","history","steps","setSteps","edit","delete","configMap","setConfigMap","layer","setLayer","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","_onCreated","e","type","layerType","_latlngs","Coordinates","map","coord","Lat","lat","Long","lng","JSON","stringify","EditableMap","setView","tileLayer","subdomains","addTo","editableLayers","drawOptions","position","allowIntersection","drawError","color","timeout","shapeOptions","drawControl","Control","Draw","addControl","on","Event","CREATED","event","layerData","toGeoJSON","console","log","coordinates","geometry","length","addLayer","remove","height","t","i18n","fieldStats","setFS","sensorStats","setSensorStats","open","setOpen","userMapDetails","setUserMapDetails","layerFarm","setLayerFarm","mapConfig","setMapConfig","sensorsData","toggleDropDown","toggleToolTip","getFieldStats","get","response","data","user_map_details","map_link_details","getSensorsStats","sensors","crops","setCrops","dataCrops","setDataCrops","getLayerFarm","then","res","DataFarm","critical","full","opt","item","fields","field","status","smallStats","state","icon","label","value","chartLabels","attrs","md","sm","datasets","fill","borderWidth","backgroundColor","borderColor","online","offline","lowBatt","sensor","id","smallStats2","FilterByStatus","post","farmsData","catch","err","title","ToSensorPage","push","window","location","reload","ToAddSensorPage","ToAddFarmPage","ToAddFieldPage","ToWaterBalancePage","show","setShow","handleClose","handleShow","prevStep","nextStep","listSoils","setListSoils","setFields","zones","setZones","allCities","setAllCities","countries","setCountries","getSoils","Soils","error","getDataFields","newData","Fields","Zones","Crops","itemfield","name","description","Uid","uid","farm_id","Id","crop","fieldId","field_id","zone_id","croptype_id","croptype","croptypes","i","source","getCities","cities","Cities","getCountries","Countries","handleSoilPick","preventDefault","soilType","find","soil","target","setSoilParams","effPluie","rain_eff","RUmax","ru","soilParams","country","setCountry","setCities","handleCountryPick","iso","city","lon","groupName","cityId","farmParams","setFarmParams","userUid","parse","localStorage","getItem","addFarm","name_group","user_uid","city_id","farm_uid","width","dataField","setDataField","addField","farmName","largeur","longueur","parseFloat","toFixed","soilTypeForm","isStandardSoil","setSoilType","soilProperty","field_uid","zone_uid","addZone","text","listSoil","setListSoil","listCrop","setListCrop","allVarieties","setAllVarieties","listIrrigations","setListIrrigations","getCropType","dataCrop","Croptype","getIrrigations","dataIrrig","Irrigations","getVarieties","listVarieties","Varieties","checked","setChecked","cropType","variety","cropVariety","Profondeur","days","plantingDate","growingDate","rootDepth","ecartInter","ecartIntra","density","ruPratique","kcList","surface","cropData","setCropData","handleCropPick","practical_fraction","total","root_max","plant_date","slice","replace","varieties","crop_id","varietyId","crop_variety","all_kc","handleVarietyPick","handleKeyPress","regex","key","currentValue","test","addCrop","previous_type","crop_variety_id","ecart_inter","ecart_intra","irrigType","crop_uid","flowrate","irrigated_already","pivot_shape","irrigation_syst","pivot_length","pivot_coord","full_runtime","lateral","drippers","effIrrig","pumpFlow","pumpType","linesNumber","drippersSpacing","irrigData","setIrrigData","handleIrrigPick","irrigation","irrigationMethodForm","addIrrigation","lines_number","drippers_spacing","configProcess","padding","borderRadius","fontSize","lineHeight","margin","textAlign","index","evt","indx","totalSteps","percentageComplete","Math","ceil","handleSubmit","textDecoration","fontWeight","display","justifyContent","alignItems","zIndex","flexDirection","flexWrap","stats","idx","borderStyle"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/Overview.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from 'react-router-dom'\nimport { Container, Row, Col, CardBody, Card, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields'\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport AddField from \"./AddField\";\nimport FieldSetupForm from \"../components/FieldSettingForms/FieldSetupForm\";\nimport FieldSoilForm from \"../components/FieldSettingForms/FieldSoilForm\";\nimport FieldCropForm from \"../components/FieldSettingForms/FieldCropForm\";\nimport CompositeSoil from \"../components/FieldSettingForms/compositeSoilForm\";\nimport DripForm from \"../components/FieldSettingForms/dripForm\";\nimport LateralForm from \"../components/FieldSettingForms/lateralForm\";\nimport PivotForm from \"../components/FieldSettingForms/pivotForm\";\nimport clap from \"../images/applause.png\";\nimport { FeatureGroup, MapContainer, Marker, Polygon, Popup, ScaleControl, TileLayer } from \"react-leaflet\";\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet-draw/dist/leaflet.draw';\n\n\n\n\nconst Overview = (props) => {\n  const [toggle, setToggle] = useState(false)\n  const [farms, setFarms] = useState([]);\n  const [draw, setDraw] = useState({\n    polygon: true,\n    rectangle: false,\n    marker: false,\n    circle: false,\n    polyline: false,\n    circlemarker: false\n  })\n  const history = useHistory();\n  const [steps, setSteps] = useState(0)\n  // const [offer,setOffer] = useState(null)\n  const [configMap, setConfigMap] = useState({\n    draw: {\n      polygon: true,\n      circle: false,\n      rectangle: false,\n      polyline: false,\n      marker: false,\n      circlemarker: false,\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  })\n  const [layer, setLayer] = useState('')\n\n  const [coords, setCoords] = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  })\n  const _onCreated = e => {\n    let type = e.layerType;\n\n    let layer = e.layer;\n    if (type === \"polygon\" ) {\n      let coords = layer._latlngs[0];\n      const Coordinates = coords.map((coord) => ({\n        Lat: coord.lat,\n        Long: coord.lng,\n      }));\n      if (Coordinates){\n        setLayer(JSON.stringify(Coordinates))\n        setCoords({ Latitude: Coordinates[0].Lat, Longitude : Coordinates[0].Long });\n\n      }\n\n    } \n  };\n \n  const EditableMap = () => {\n    useEffect(() => {\n      // Create a Leaflet map\n      const map = L.map('map').setView([0, 0], 2);\n  \n      // Add a tile layer\n      L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\n      subdomains:['mt0', 'mt1', 'mt2', 'mt3']\n\n      }).addTo(map);\n  \n      // Create an editable feature group\n      const editableLayers = new L.FeatureGroup().addTo(map);\n  \n      // Configure the drawing options\n      const drawOptions = {\n        position: 'topright',\n        draw: {\n          circle: false,\n          marker: false,\n          polyline: false,\n          polygon: {\n            allowIntersection: false,\n            drawError: {\n              color: 'red',\n              timeout: 1000,\n            },\n            shapeOptions: {\n              color: 'blue',\n            },\n          },\n        },\n      };\n  \n      // Add the Leaflet Draw control\n      const drawControl = new L.Control.Draw(drawOptions);\n      map.addControl(drawControl);\n  \n      // Event handler for layer creation\n      map.on(L.Draw.Event.CREATED, function (event) {\n        const layer = event.layer;\n  \n        // Access layer data (e.g., coordinates for polygons)\n        const layerData = layer.toGeoJSON();\n        console.log(layerData);\n  \n        // Update your application state with the layer data\n        // Your logic to handle the layer data goes here\n        let coordinates = [];\n        if (layerData.geometry.type === 'Polygon') {\n          coordinates = layerData.geometry.coordinates[0].map(coord => ({\n            Lat: coord[1],\n            Long: coord[0],\n          }));\n        }\n        if (coordinates.length > 0 ){\n          setLayer(JSON.stringify(coordinates))\n          setCoords({ Latitude: coordinates[0].Lat, Longitude : coordinates[0].Long });\n  \n        }\n        // Add the layer to the editableLayers FeatureGroup\n        editableLayers.addLayer(layer);\n      });\n  \n      // Cleanup when the component is unmounted\n      return () => {\n        map.remove(); // Remove the map instance\n      };\n    }, []);\n  \n    return <div id=\"map\" style={{ height: '350px' }}></div>;\n  };\n\n\n  const { t, i18n } = useTranslation();\n\n  const [fieldStats, setFS] = useState([])\n  const [sensorStats, setSensorStats] = useState([])\n  const [open, setOpen] = useState(false)\n  const [userMapDetails, setUserMapDetails] = useState(\"#\")\n  const [layerFarm, setLayerFarm] = useState([])\n  const [mapConfig, setMapConfig] = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false,\n  })\n\n\n\n  let sensorsData = useSensorData('/sensor/sensor-update-data')\n\n  const toggleDropDown = () => {\n    setToggle(!toggle)\n  }\n\n  const toggleToolTip = () => {\n    setOpen(!open)\n  }\n\n  const getFieldStats = async () => {\n    const response = await api.get('/dashboard/fields');\n    setFS(response.data.farms);\n    setUserMapDetails(response.data.user_map_details.map_link_details)\n  }\n\n  const getSensorsStats = async () => {\n    const response = await api.get('/dashboard/sensors');\n    setSensorStats(response.data.sensors);\n  }\n  const [crops, setCrops] = useState([])\n  const [dataCrops, setDataCrops] = useState([]);\n\n  const getLayerFarm = async () => {\n    await api.get('/farm/farms').then(res => {\n      const DataFarm = res.data.farms;\n      setLayerFarm(DataFarm);\n    })\n  }\n\n  useEffect(() => {\n    // getLastDataSensor()\n    getLayerFarm()\n    getFieldStats();\n    getSensorsStats();\n    // fetchDataCrops()\n  }, [])\n  let critical = 0;\n  let full = 0;\n  let opt = 0;\n\n  fieldStats.map(item => {\n    item.fields.map(field => {\n      let status = field.status\n      if (status) {\n        if (status == \"Optimal\") {\n          opt++\n        }\n        if (status == \"Full\") {\n          full++\n        }\n        if (status == \"Critical\") {\n          critical++\n        }\n      }\n\n    })\n  });\n\n\n\n\n  let smallStats = [\n    {\n      state: `${t('Critical')}`,\n      icon: <i class=\"fas fa-tint-slash\"></i>,\n      label: `${t('fields')}`,\n      value: critical,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n          borderColor: \"rgb(0, 184, 216)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('Optimal')}`,\n      icon: <i class={\"far fa-check-circle\"}></i>,\n      label: `${t('fields')}`,\n      value: opt,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(23,198,113,0.1)\",\n          borderColor: \"rgb(23,198,113)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('Full')}`,\n      icon: <i class=\"fas fa-tint\"></i>,\n      label: `${t('fields')}`,\n      value: full,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    }\n  ]\n\n  let online = 0;\n  let offline = 0;\n  let lowBatt = 0;\n\n  sensorStats.map(item => {\n    let sensor = item.id;\n    if (sensor) {\n      online++;\n    }\n  });\n\n\n  let smallStats2 = [\n    {\n      state: `${t('online')}`,\n      icon: <SignalCellular4BarIcon />,\n      label: `${t('sensors')}`,\n      value: online,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('low_batt')}`,\n      icon: <i class=\"fas fa-battery-quarter\"></i>,\n      label: `${t('sensors')}`,\n      value: lowBatt,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('offline')}`,\n      icon: <SignalCellularNodataIcon />,\n      label: `${t('sensors')}`,\n      value: offline,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    }\n  ]\n\n\n\n  const FilterByStatus = async (status) => {\n    let data = {\n      status: status\n    }\n    await api.post('/field/field-status', data)\n      .then(response => {\n        let farmsData = response.data.farms\n        setFarms(farmsData);\n      }).catch((err) => {\n        swal({\n          title: 'Error',\n          icon: \"error\"\n        });\n      })\n  }\n\n  const ToSensorPage = () => {\n    history.push('/Sensors')\n    window.location.reload()\n  }\n  const ToAddSensorPage = () => {\n    history.push('/AddSensor')\n    window.location.reload()\n  }\n  const ToAddFarmPage = () => {\n    history.push('/AddFarm')\n    window.location.reload()\n  }\n  const ToAddFieldPage = () => {\n    history.push('/AddField')\n    window.location.reload()\n  }\n  const ToWaterBalancePage = () => {\n    history.push('/Bilan')\n    window.location.reload()\n  }\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const prevStep = () => {\n\n    setSteps(steps - 1);\n  }\n  const nextStep = () => {\n\n    setSteps(steps + 1);\n  }\n\n  const [listSoils, setListSoils] = useState([])\n  const [fields, setFields] = useState([])\n  const [zones, setZones] = useState([]);\n  const [allCities, setAllCities] = useState([])\n  const [countries, setCountries] = useState([])\n\n  const getSoils = async () => {\n    try {\n      await api.get('/soils/get-soils')\n        .then(response => {\n          let listSoils = response.data.Soils\n          setListSoils(listSoils)\n\n        }).catch(error => {\n          console.log(error)\n        })\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getDataFields = async () => {\n    await api.get('/field/fields').then(res => {\n      const newData = res.data.farms;\n      setFarms(newData);\n      let Fields = [];\n      let Zones = [];\n      let Crops = []\n      newData.map(item => {\n        let fields = item.fields\n        if (fields) {\n          fields.map(itemfield => {\n            Fields.push({\n              title: itemfield.name,\n              status: itemfield.status,\n              description: itemfield.description,\n              Uid: itemfield.uid,\n              farm_id: itemfield.farm_id,\n              Latitude: itemfield.Latitude,\n              Longitude: itemfield.Longitude,\n              Id: itemfield.id\n            });\n            let zones = itemfield.zones;\n            let crops = itemfield.crops\n            if (crops) {\n              crops.map(crop => {\n                Crops.push({\n                  type: crop.type,\n                  id: crop.id,\n                  Uid: crop.uid,\n                  fieldId: crop.field_id,\n                  zone_id: crop.zone_id,\n                  croptype_id: crop.croptype_id,\n                  croptype: crop.croptypes\n                })\n              })\n            }\n            if (zones) {\n              zones.map(i => {\n                Zones.push({\n                  Id: i.id,\n                  name: i.name,\n                  Uid: i.uid,\n                  source: i.source,\n                  description: i.description,\n                  field_id: i.field_id\n\n                });\n              });\n            };\n          })\n        }\n      });\n      setFields(Fields)\n      setZones(Zones)\n      setCrops(Crops)\n\n    })\n  }\n\n  useEffect(() => {\n    const getDataFields = async () => {\n      await api.get('/field/fields').then(res => {\n        const newData = res.data.farms;\n        setFarms(newData);\n        let Fields = [];\n        let Zones = [];\n        let Crops = []\n        newData.map(item => {\n          let fields = item.fields\n          if (fields) {\n            fields.map(itemfield => {\n              Fields.push({\n                title: itemfield.name,\n                status: itemfield.status,\n                description: itemfield.description,\n                Uid: itemfield.uid,\n                farm_id: itemfield.farm_id,\n                Latitude: itemfield.Latitude,\n                Longitude: itemfield.Longitude,\n                Id: itemfield.id\n              });\n              let zones = itemfield.zones;\n              let crops = itemfield.crops\n              if (crops) {\n                crops.map(crop => {\n                  Crops.push({\n                    type: crop.type,\n                    id: crop.id,\n                    Uid: crop.uid,\n                    fieldId: crop.field_id,\n                    zone_id: crop.zone_id,\n                    croptype_id: crop.croptype_id,\n                    croptype: crop.croptypes\n                  })\n                })\n              }\n              if (zones) {\n                zones.map(i => {\n                  Zones.push({\n                    Id: i.id,\n                    name: i.name,\n                    Uid: i.uid,\n                    source: i.source,\n                    description: i.description,\n                    field_id: i.field_id\n\n                  });\n                });\n              };\n            })\n          }\n        });\n        setFields(Fields)\n        setZones(Zones)\n        setCrops(Crops)\n\n      })\n    }\n    getDataFields()\n  }, [])\n\n  useEffect(() => {\n    const getCities = async () => {\n      await api.get('/cities/get-cities').then(res => {\n        const cities = res.data.Cities;\n        setAllCities(cities);\n\n      })\n    }\n\n    const getCountries = async () => {\n      await api.get('/countries/get-countries').then(res => {\n        const countries = res.data.Countries;\n        setCountries(countries);\n\n      })\n    }\n    getSoils()\n    getCountries()\n    getCities()\n  }, [])\n\n  const handleSoilPick = (e) => {\n    e.preventDefault()\n    const soilType = listSoils.find(\n      (soil) => soil.soil == e.target.value\n    );\n    if (e.target.value !== \"\") {\n      setSoilParams({ effPluie: soilType.rain_eff })\n      setSoilParams({ RUmax: soilType.ru })\n\n    }\n    if (typeof soilType !== \"undefined\") {\n      setSoilParams({\n        ...soilParams,\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      });\n\n    }\n  };\n\n\n\n  // ADD Farm\n\n  const [country, setCountry] = useState('')\n  const [cities, setCities] = useState('')\n\n  const handleCountryPick = (e) => {\n    e.preventDefault();\n    const country = countries.find(\n      (country) => country.iso === e.target.value\n    );\n    let Cities = []\n    if (country) {\n      allCities.map((city) => {\n        if (city.iso === country.iso) {\n          Cities.push({\n            city: city.city,\n            id: city.id,\n            lat: city.lat,\n            lon: city.lon\n          })\n        }\n      });\n\n      setCountry(country.iso);\n      setCities(Cities)\n\n    }\n  };\n  const [farmParams, setFarmParams] = useState({\n    name: \"\",\n    groupName: \"\",\n    cityId: \"\"\n  })\n  const userUid = JSON.parse(localStorage.getItem('user')).id\n\n  const addFarm = async () => {\n\n    let data = {\n      name: farmParams.name,\n      name_group: farmParams.groupName,\n      user_uid: userUid,\n      city_id: farmParams.cityId\n      // Coordinates : layer,\n      // Latitude : coords.Latitude,\n      // Longitude : coords.Longitude\n    }\n    await api.post('/farm/add-farm', data)\n      .then(response => {\n        if (response.data.type === \"success\") {\n          swal('Farm Added', { icon: \"success\" });\n          getLayerFarm()\n          setSteps(steps + 1)\n        }\n      }).catch(err => {\n        swal(err, { icon: \"error\" })\n      })\n  }\n\n\n  // ADD Field\n\n  const [dataField, setDataField] = useState({\n    name: \"\",\n    farm_uid: \"\",\n    width: \"\",\n    length: \"\",\n    Latitude: \"\",\n    Longitude: \"\"\n  })\n  const addField = () => {\n\n    let data = {\n      name: dataField.name,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid,\n      largeur: dataField.width,\n      longueur: dataField.length,\n      coordinates : layer,\n      Latitude: parseFloat(coords.Latitude).toFixed(4),\n      Longitude: parseFloat(coords.Longitude).toFixed(4)\n    }\n\n    api.post('/field/add-field', data)\n      .then(res => {\n\n        if (res.data.type && res.data.type == \"success\") {\n          swal(`${t('field_added')}`, {\n            icon: \"success\",\n          });\n          \n          getDataFields()\n          setSteps(steps + 1)\n        }\n\n      })\n      .catch(() => {\n        swal(`Error`, {\n          icon: \"error\",\n        });\n\n      });\n  }\n  // ADD Soil Zone\n\n  const soilTypeForm = () => {\n    if (isStandardSoil == true)\n      return (\n        null\n\n      );\n    else {\n      return (\n        <CompositeSoil />\n      );\n    }\n  };\n  const [isStandardSoil, setSoilType] = useState(true);\n  const [soilParams, setSoilParams] = useState({\n    soilProperty: \"\",\n    soilType: \"\",\n    field_uid: \"\",\n    zone_uid: \"\",\n    name: \"\",\n    RUmax: \"\",\n    effPluie: \"\",\n  })\n\n\n  const addZone = () => {\n\n    let data = {\n      soilProperty: soilParams.soilProperty,\n      field_uid: soilParams.field_uid,\n      zone_uid: soilParams.zone_uid,\n      name: soilParams.name,\n      RUmax: soilParams.RUmax,\n      effPluie: soilParams.effPluie,\n    }\n    api.post('/zone/add-zone', data)\n      .then(res => {\n        if (res.data.type && res.data.type == \"danger\") {\n          swal({\n            title: 'Cannot add soil',\n            icon: \"error\",\n\n          });\n        }\n        if (res.data.type && res.data.type == \"success\") {\n          swal({\n            title: 'Soil added',\n            icon: \"success\",\n            text: 'Soil added successfully '\n\n          });\n        }\n        getDataFields()\n        setSteps(steps + 1)\n      })\n      .catch((err) => {\n\n        console.log(err)\n\n      });\n  }\n\n\n  const [listSoil, setListSoil] = useState([])\n  const [listCrop, setListCrop] = useState([])\n  const [allVarieties, setAllVarieties] = useState([])\n  const [listIrrigations, setListIrrigations] = useState([])\n\n  useEffect(() => {\n    const getCropType = async () => {\n      try {\n        await api.get('/croptype/list-crop')\n          .then(response => {\n            if (response) {\n              let dataCrop = response.data.Croptype\n              setListCrop(dataCrop)\n            }\n          })\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    const getSoils = async () => {\n      try {\n        await api.get('/soils/get-soils')\n          .then(response => {\n            let listSoils = response.data.Soils\n            setListSoil(listSoils)\n\n          }).catch(error => {\n            console.log(error)\n          })\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    const getIrrigations = async () => {\n      try {\n        await api.get('/irrigations/get-irrigations')\n          .then(response => {\n            if (response) {\n              let dataIrrig = response.data.Irrigations\n              setListIrrigations(dataIrrig)\n            }\n          })\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    const getVarieties = async () => {\n      try {\n        await api.get('/varieties/get-varieties')\n          .then(response => {\n            if (response.data.type === \"success\") {\n              let listVarieties = response.data.Varieties\n              setAllVarieties(listVarieties)\n\n            }\n          }).catch(error => {\n            console.log(error)\n          })\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    getVarieties()\n    getIrrigations()\n    getSoils()\n    getCropType()\n  }, [])\n\n  // ADD Crop \n  const [checked, setChecked] = useState(false)\n\n  const [cropData, setCropData] = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    growingDate: \"\",\n    rootDepth: \"\",\n    ecartInter: \"\",\n    ecartIntra: \"\",\n    density: \"\",\n    ruPratique: \"\",\n    kcList: [],\n    surface: \"\"\n  })\n\n  const handleCropPick = (e) => {\n    e.preventDefault()\n    // props.handleCropType(e)\n\n    const crop = listCrop.find(\n      (crop) => crop.id == e.target.value\n    );\n    if (e.target.value !== '') {\n      setCropData({ ...cropData, cropType: crop.id })\n      setCropData({ ...cropData, ruPratique: crop.practical_fraction })\n      setCropData({ ...cropData, days: crop.total })\n      setCropData({ ...cropData, rootDepth: crop.root_max })\n      setCropData({ ...cropData, plantingDate: crop.plant_date.slice(0, 11).replace('T', '') })\n\n    }\n    let varieties = []\n    if (crop) {\n      const variety = allVarieties.map((variety) => {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          })\n        }\n      });\n\n      setCropData({\n        ...cropData,\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        rootDepth: crop.root_max,\n        ruPratique: crop.practical_fraction,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      });\n\n\n    }\n  };\n\n  const handleVarietyPick = (e) => {\n    e.preventDefault();\n    const variety = allVarieties.find(\n\n      (variety) => variety.id == e.target.value\n\n    )\n\n    if (variety) {\n      setCropData({\n        ...cropData,\n        variety: variety.id,\n\n      });\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    const regex = /^[1-9][0-9]?$|^100$/;\n    const key = event.key;\n    const currentValue = event.target.value + key;\n    if (!regex.test(currentValue)) {\n      event.preventDefault();\n    }\n  };\n  const addCrop = () => {\n\n    let data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction: cropData.ruPratique,\n      density: cropData.density,\n      ecart_inter: cropData.ecartInter,\n      ecart_intra: cropData.ecartIntra,\n      surface: cropData.surface,\n      growingDate: cropData.growingDate,\n\n    }\n\n    api.post('/crop/add-crop', data)\n      .then(res => {\n        if (res.data.type && res.data.type == \"danger\") {\n          swal(`Error`, {\n            icon: \"error\",\n          });\n        }\n        if (res.data.type && res.data.type == \"success\") {\n          swal(`${t('crop_added')}`, {\n            icon: \"success\",\n          });\n          getDataFields()\n          setSteps(steps + 1)\n        }\n      })\n      .catch((err) => {\n        swal(`Error`, {\n          icon: \"error\",\n        });\n\n\n      });\n  }\n\n  // ADD Irrigation\n  const [irrigData, setIrrigData] = useState({\n    irrigType: \"\",\n    zone_uid: \"\",\n    crop_uid: \"\",\n    flowrate: \"\",\n    irrigated_already: \"\",\n    name: \"\",\n    pivot_shape: \"\",\n    irrigation_syst: \"\",\n    pivot_length: \"\",\n    pivot_coord: \"\",\n    full_runtime: \"\",\n    lateral: \"\",\n    drippers: \"\",\n    effIrrig: \"\",\n    pumpFlow: \"\",\n    pumpType: \"\",\n    linesNumber: \"\",\n    drippersSpacing: \"\"\n  })\n  const handleIrrigPick = (e) => {\n    e.preventDefault();\n    const irrigation = listIrrigations.find((irrigation) => {\n      return irrigation.irrigation == e.target.value\n\n    })\n    setIrrigData({ irrigType: irrigation.irrigation })\n\n    if (irrigation) {\n      setIrrigData({\n        ...irrigData,\n        irrigType: irrigation.irrigation,\n        effIrrig: irrigation.effIrrig\n      });\n    }\n  };\n\n  const irrigationMethodForm = () => {\n    switch (irrigData.irrigType) {\n      case `${t('Pivot')}`:\n        return <PivotForm\n          handleFlowRate={(e) => setIrrigData({ ...irrigData, flowrate: e.target.value })}\n          handleIrrgSyst={(e) => setIrrigData({ ...irrigData, irrigation_syst: e.target.value })}\n          handleRunTime={(e) => setIrrigData({ ...irrigData, full_runtime: e.target.value })}\n          handlePivotCoord={(e) => setIrrigData({ ...irrigData, pivot_coord: e.target.value })}\n          handlePivotLength={(e) => setIrrigData({ ...irrigData, pivot_length: e.target.value })}\n          handlePivotShape={(e) => setIrrigData({ ...irrigData, pivot_shape: e.target.value })}\n          irrigation_syst={irrigData.irrigation_syst}\n          pivot_coord={irrigData.pivot_coord}\n          pivot_length={irrigData.pivot_length}\n          pivot_shape={irrigData.pivot_shape}\n          full_runtime={irrigData.full_runtime}\n          flowrate={irrigData.flowrate}\n          name={irrigData.name}\n        />;\n      case `${t('Lateral')}`:\n        return <LateralForm\n          handleLateral={(e) => setIrrigData({ ...irrigData, lateral: e.target.value })}\n          handlePivotLength={(e) => setIrrigData({ ...irrigData, pivot_length: e.target.value })}\n          handleRunTime={(e) => setIrrigData({ ...irrigData, full_runtime: e.target.value })}\n          handleName={(e) => setIrrigData({ ...irrigData, name: e.target.value })}\n          handleFlowRate={(e) => setIrrigData({ ...irrigData, flowrate: e.target.value })}\n          full_runtime={irrigData.full_runtime}\n          flowrate={irrigData.flowrate}\n          name={irrigData.name}\n          pivot_length={irrigData.pivot_length}\n          lateral={irrigData.lateral}\n        />;\n      case `${t('None')}`:\n        return null;\n      default:\n        return (\n          <DripForm\n            handleDrippers={(e) => setIrrigData({ ...irrigData, drippers: e.target.value })}\n            handleIrrigAlrd={(e) => setIrrigData({ ...irrigData, irrigated_already: e.target.value })}\n            handleFlowRate={(e) => setIrrigData({ ...irrigData, flowrate: e.target.value })}\n            flowrate={irrigData.flowrate}\n            drippers={irrigData.drippers}\n            irrigated_already={irrigData.irrigated_already}\n          />\n        );\n    }\n  };\n\n  const addIrrigation = () => {\n\n    let data = {\n      type: irrigData.irrigType,\n      zone_uid: irrigData.zone_uid,\n      crop_uid: irrigData.crop_uid,\n      flowrate: irrigData.flowrate,\n      irrigated_already: irrigData.irrigated_already,\n      name: irrigData.name,\n      pivot_shape: irrigData.pivot_shape,\n      irrigation_syst: irrigData.irrigation_syst,\n      pivot_length: irrigData.pivot_length,\n      pivot_coord: irrigData.pivot_coord,\n      full_runtime: irrigData.full_runtime,\n      lateral: irrigData.lateral,\n      drippers: irrigData.drippers,\n      effIrrig: irrigData.effIrrig,\n      pumpFlow: irrigData.pumpFlow,\n      pumpType: irrigData.pumpType,\n      lines_number: irrigData.linesNumber,\n      drippers_spacing: irrigData.drippersSpacing\n    }\n\n\n    api.post('/irrigation/add-irrigation', data)\n      .then(res => {\n\n        if (res.data.type && res.data.type == \"danger\") {\n          swal(`Error`, {\n            icon: \"error\",\n          });\n        }\n        if (res.data.type && res.data.type == \"success\") {\n          swal(`${t('irrigation_added')}`, {\n            icon: \"success\",\n          });\n          setSteps(steps + 1)\n        }\n      })\n      .catch((err) => {\n\n        swal(`Error`, {\n          icon: \"error\",\n        });\n\n      });\n  }\n\n  const configProcess = () => {\n    switch (steps) {\n      case 0:\n        return (\n          <>\n            <Row className='pb-2'>\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('farm_setup')}`} className=\" mb-1\" />\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To get started, please provide a name and location for your farm. This will help us to identify and locate your farm accurately.\"</p>\n              </div>\n            </Row>\n            <Row>\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <p style={{ margin: \"0px\" }}> {t('name_farm')}</p>\n                <FormInput\n                  placeholder={t('name_farm')}\n                  required\n                  value={farmParams.name}\n                  onChange={(e) => setFarmParams({ ...farmParams, name: e.target.value })}\n                />\n              </Col>\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <p style={{ margin: \"0px\" }}>{t('group_name')}</p>\n                <FormInput\n                  placeholder={t('group_name')}\n                  value={farmParams.groupName}\n                  onChange={(e) => setFarmParams({ ...farmParams, groupName: e.target.value })}\n\n                />\n              </Col>\n            </Row>\n            <Row className=\"pt-1\">\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <p style={{ margin: \"0px\" }}>{t('select_country')}</p>\n                <FormSelect\n                  onChange={handleCountryPick}\n                  value={country}\n                >\n                  {\n                    countries.map(country => {\n                      return (\n                        <option key={country.id} value={country.iso}>{country.name}</option>\n                      )\n                    })\n                  }\n                </FormSelect>\n              </Col>\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <p style={{ margin: \"0px\" }}>{t('select_city')}</p>\n                <FormSelect\n                  value={farmParams.cityId}\n                  onChange={e => setFarmParams({ ...farmParams, cityId: e.target.value })}\n                >\n                  <option selected>{t('select_city')}</option>\n                  {\n                    cities && cities.map(city => {\n                      return (\n                        <option key={city.id} value={city.id}>{city.city}</option>\n                      )\n                    })\n                  }\n                </FormSelect>\n              </Col>\n            </Row>\n\n          </>\n        )\n      case 1:\n        return (\n          <>\n            <Row className='pb-2'>\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('field_setup')}`} className=\" mb-1\" />\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n                <p style={{textAlign:\"center\" , fontSize: '16px', lineHeight: '1.5', margin: '0' }}>To proceed to the next stage, we kindly ask you to draw your field on the map.</p>\n              </div>\n            </Row>\n            <Row>\n\n              <Col lg='6' md=\"12\" sm='12'>\n                <Row>\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('name_field')}</p>\n                    <FormInput\n                      value={dataField.name}\n                      placeholder={t('name_field')}\n                      // className={props.nameError =='' ? '' : 'is-invalid'}\n                      required\n                      onChange={e => setDataField({ ...dataField, name: e.target.value })}\n                    />\n                    {/* <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{props.nameError}</div> */}\n                  </Col>\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('name_farm')}</p>\n                    <FormSelect\n                      value={dataField.farm_uid}\n                      // className={props.farmError =='' ? '' : 'is-invalid'}\n                      required\n                      onChange={e => setDataField({ ...dataField, farm_uid: e.target.value })}\n                    >\n                      <option value=\"\">{t('select_farm')}</option>;\n                      {layerFarm.map((item, index) => {\n                        return <option value={item.uid}>{item.name}</option>;\n                      })}\n                    </FormSelect>\n                  </Col>\n\n                </Row>\n                <Row>\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('width')} (M)</p>\n                    <FormInput\n                      type=\"number\"\n                      placeholder={t('width')}\n                      value={dataField.width}\n                      onChange={e => setDataField({ ...dataField, width: e.target.value })}\n                      required\n                    />\n                  </Col>\n                  <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                    <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('length')} (M)</p>\n                    <FormInput\n                      type=\"number\"\n                      placeholder={t('length')}\n                      value={dataField.length}\n                      onChange={e => setDataField({ ...dataField, length: e.target.value })}\n                      required\n                    />\n                  </Col>\n\n                </Row>\n              </Col>\n              <Col lg='6' md=\"12\" sm='12'>\n                <EditableMap setLayer={setLayer} setCoords={setCoords} />\n              </Col>\n\n            </Row>\n\n          </>\n\n        )\n      case 2:\n        return (\n          <Form className='pb-2'>\n            <Row>\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('soil_info')}`} className=\" mb-1\" />\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your soil type configuration, please provide the appropriate details and associate it with the appropriate field. This will help us to provide accurate recommendations for managing your crops.\"</p>\n              </div>\n            </Row>\n            <Row className=\"py-2 d-flex justify-content-start border-bottom align-items-center\" >\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('soil_zone')}</p>\n                <FormInput\n                  value={soilParams.name}\n                  placeholder={t('soil_zone')}\n                  required\n                  onChange={e => setSoilParams({ ...soilParams, name: e.target.value })}\n\n                />\n                <p style={{ margin: \"0px\" }}>{t('soil_type')}</p>\n                <FormSelect\n                  value={soilParams.soilType}\n                  onChange={handleSoilPick}\n                >\n                  <option value=\"\">{t('select_soil')}</option>\n                  {\n                    listSoils.map((item, index) => {\n                      return <option value={item.soil} >{item.soil}</option>;\n\n                    })\n                  }\n                </FormSelect>\n\n\n              </Col>\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('soil_prop')}</p>\n                <FormSelect\n                  onChange={evt => {\n\n                    setSoilType(!isStandardSoil);\n\n                  }}\n                >\n                  <option selected={isStandardSoil}>Standard</option>\n                  <option selected={!isStandardSoil}>Composite</option>\n                </FormSelect>\n                <p style={{ margin: \"0px\" }}>{t('name_field')}</p>\n                <FormSelect\n                  value={soilParams.field_uid}\n                  onChange={e => setSoilParams({ ...soilParams, field_uid: e.target.value })}\n                  placeholder={t('name_field')}\n                >\n                  <option value=\"\">{t('select_field')}</option>\n                  {fields.map((item, index) => {\n                    return <option value={item.Uid}>{item.title}</option>;\n                  })}\n                </FormSelect>\n              </Col>\n            </Row>\n            <Row form>\n              {soilTypeForm()}\n            </Row>\n            <Row form className=\"py-2\" >\n\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('efficacité_pluie')} (%)</p>\n                  <FormInput type=\"number\" value={soilParams.effPluie} onChange={e => setSoilParams({ ...soilParams, effPluie: e.target.value })} id='effPluie' placeholder={t('efficacité_pluie')}\n                  />\n\n                </FormGroup>\n              </Col>\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>RU max (mm/m)</p>\n                  <FormInput type=\"number\" value={soilParams.RUmax} onChange={e => setSoilParams({ ...soilParams, RUmax: e.target.value })} id='ruMax' placeholder=\"RU max\"\n                  />\n\n                </FormGroup>\n\n              </Col>\n            </Row>\n          </Form>\n        )\n      case 3:\n        return (\n          <Form className='pb-2'>\n            <Row>\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('crop_info')}`} className=\" mb-1\" />\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your crop type configuration, please provide the appropriate details and associate it with the appropriate field and soil type. This will help us to provide personalized recommendations for managing your crops and achieving optimal yields.\"</p>\n              </div>\n            </Row>\n            <Row className=\"py-2 d-flex justify-content-start border-bottom align-items-center\">\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group pt-4\">\n                <p style={{ margin: \"0px\" }}>{t('crop_type')}</p>\n                <FormSelect\n                  onChange={handleCropPick}\n                  placeholder={t('crop_type')}\n                  value={cropData.cropType}\n                >\n                  <option value=\"\">Select Crop</option>\n                  {\n                    listCrop.map(crop => {\n                      return (\n                        <option value={crop.id}>{crop.crop}</option>\n\n                      )\n                    })\n                  }\n                </FormSelect>\n\n                <p style={{ margin: \"0px\" }}>{t('crop_variety')}</p>\n                <FormSelect value={cropData.variety} onChange={handleVarietyPick} id=\"cropVariety\">\n                  <option value=\"\">{t('crop_variety')}</option>\n                  {\n                    cropData.cropVariety.map(variety => (\n                      <option value={variety.varietyId}>{variety.variety}</option>\n                    ))\n                  }\n                </FormSelect>\n                <input type=\"checkbox\" name=\"Autre\" id=\"check\" onClick={() => setChecked(!checked)} /> {t('other')}\n                {\n                  checked\n                    ?\n\n                    <FormInput\n                      value={cropData.variety || \"\"}\n                      placeholder={t('crop_variety')}\n                      id=\"cropVariety\"\n                      onChange={e => setCropData({ ...cropData, variety: e.target.value })}\n                    />\n\n                    :\n                    null\n                }\n\n              </Col>\n              < Col lg=\"4\" md=\"12\" sm=\"12\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('crop_zone')}</p>\n                <FormSelect\n                  value={cropData.zone_uid}\n                  onChange={e => setCropData({ ...cropData, zone_uid: e.target.value })}\n                  placeholder={t('crop_zone')}\n                >\n                  <option>{t('select_zone')}</option>\n\n                  {\n                    zones.map(soil => {\n                      return <option value={soil.Uid}>{soil.name}</option>\n\n                    })\n                  }\n\n                </FormSelect>\n                <p style={{ margin: \"0px\" }}>{t('crop_field')}</p>\n                <FormSelect\n                  value={cropData.field_uid}\n                  onChange={e => setCropData({ ...cropData, field_uid: e.target.value })}\n                  placeholder={t('crop_zone')}\n                >\n                  <option>{t('select_field')}</option>\n                  {\n                    fields.map((item, indx) => {\n                      return <option value={item.Uid}>{item.title}</option>\n                    })\n                  }\n                </FormSelect>\n\n              </Col>\n            </Row>\n            <Row className=\"py-2\">\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('surface')} (m²)</p>\n                  <FormInput type=\"number\" value={cropData.surface} onChange={e => setCropData({ ...cropData, surface: e.target.value })} id='z' placeholder={t('surface')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('depth')} (m)</p>\n                  <FormInput type=\"number\" value={cropData.rootDepth} onChange={e => setCropData({ ...cropData, rootDepth: e.target.value })} id='z' placeholder={t('depth')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('Days')}</p>\n                  <FormInput type=\"number\" value={cropData.days} id='days' onChange={e => setCropData({ ...cropData, days: e.target.value })} placeholder={t('Days')} />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('planting_date')}</p>\n                  <FormInput type=\"date\" value={cropData.growingDate} onChange={e => setCropData({ ...cropData, growingDate: e.target.value })} id='planting_date' />\n\n                </FormGroup>\n\n              </Col>\n              <Col hidden lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('growing_season')}</p>\n                  <FormInput type=\"date\" value={cropData.plantingDate} onChange={e => setCropData({ ...cropData, plantingDate: e.target.value })} id='days' />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('fraction_pratique')} (%) </p>\n                  <FormInput type=\"number\" value={cropData.ruPratique} onChange={e => setCropData({ ...cropData, ruPratique: e.target.value })} id='ruPratique' placeholder={t('fraction_pratique')}\n                  />\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('ecart_inter')} (m)</p>\n                  <FormInput type=\"number\" value={cropData.ecartInter} onChange={e => setCropData({ ...cropData, ecartInter: e.target.value })} id='ecartInter' placeholder={t('ecart_inter')}\n                  />\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('ecart_intra')} (m) </p>\n                  <FormInput type=\"number\" value={cropData.ecartIntra} onChange={e => setCropData({ ...cropData, ecartIntra: e.target.value })} id='ecartIntra' placeholder={t('ecart_intra')}\n                  />\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('densité')} (plants/ha)</p>\n                  <FormInput type=\"number\" value={cropData.density} onChange={e => setCropData({ ...cropData, density: e.target.value })} id='densité' placeholder={t('densité')}\n                  />\n                </FormGroup>\n\n              </Col>\n            </Row>\n          </Form>\n        )\n      case 4:\n        return (\n          <Form className='pb-2'>\n            <Row>\n              <PageTitle subtitle={`${t('step')} ${steps + 1} - ${t('Irrigation_info')}`} className=\" mb-1\" />\n              <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n                <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your irrigation type configuration, please provide the appropriate details and associate it with the appropriate crop type and soil type. This will help us to provide personalized recommendations for managing your crops and optimizing water usage.\"</p>\n              </div>\n            </Row>\n            <Row form>\n              <Col md=\"6\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('irrigation_zone')}</p>\n                <FormSelect\n                  value={irrigData.zone_uid}\n                  onChange={e => setIrrigData({ ...irrigData, zone_uid: e.target.value })}\n                >\n                  <option>{t('select_zone')}</option>\n\n                  {\n                    zones.map((item, indx) => {\n                      return <option value={item.Uid}>{item.name}</option>\n                    })\n                  }\n                </FormSelect>\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('irrigation_crop')}</p>\n                <FormSelect\n                  value={irrigData.crop_uid}\n                  onChange={e => setIrrigData({ ...irrigData, crop_uid: e.target.value })}\n                >\n                  <option>{t('select_crop')}</option>\n                  {\n                    crops.map(crop => {\n                      let cropType = \"\"\n                      listCrop.map(croptype => {\n                        if (croptype.id === crop.croptype_id) {\n                          cropType = croptype.crop\n                        }\n                      })\n                      return <option value={crop.Uid} >{cropType}</option>\n\n                    })\n                  }\n                </FormSelect>\n              </Col>\n\n              <Col md=\"6\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('Irrigation_system_type')}</p>\n                <FormSelect\n                  // className={props.typeErrorIrrig == '' ? '' : 'is-invalid'}\n                  value={irrigData.irrigType}\n                  onChange={evt => {\n                    handleIrrigPick(evt)\n                  }}\n                >\n                  <option disabled selected value=\"\">{t('select_irriagtion')}</option>\n                  {\n                    listIrrigations.map(item => {\n                      // if (item.value === irrigationMethod) {\n                      //   return <option value={item.value} selected={true}>{item.type}</option>;\n                      // } else {\n                      //   return <option value={item.value} selected={false}>{item.type}</option>;\n                      // }\n                      return <option value={item.irrigation} >{t(`${item.irrigation}`)}</option>;\n                    })\n                  }\n                </FormSelect>\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('efficience_irrigation')} (%) </p>\n                  <FormInput type=\"number\" value={irrigData.effIrrig} onChange={e => setIrrigData({ ...irrigData, effIrrig: e.target.value })} id='effIrrig' placeholder={t('efficience_irrigation')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('type_reseau')}</p>\n                  <FormInput value={irrigData.pumpType} onChange={e => setIrrigData({ ...irrigData, pumpType: e.target.value })} id='type_reseau' placeholder={t('type_reseau')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('debit_reseau')} (l/s) </p>\n                  <FormInput type=\"number\" value={irrigData.pumpFlow} onChange={e => setIrrigData({ ...irrigData, pumpFlow: e.target.value })} id='debitReseau' placeholder={t('debit_reseau')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('nbr_ligne')}</p>\n                  <FormInput type='number' value={irrigData.linesNumber} onChange={e => setIrrigData({ ...irrigData, linesNumber: e.target.value })} id='nbr_ligne' placeholder={t('nbr_ligne')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('irrigated_already')}(h) </p>\n                  <FormInput type=\"number\" value={irrigData.irrigated_already} onChange={e => setIrrigData({ ...irrigData, irrigated_already: e.target.value })} id='debitReseau' placeholder={t('irrigated_already')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              {irrigationMethodForm()}\n            </Row>\n          </Form>\n        )\n      case 5:\n        return (\n          <div className=\"d-flex flex-column align-items-center justify-content-around\">\n\n            <img width=\"20%\" src={clap} alt=\"Congratulations\" />\n            <h6 style={{ textAlign: \"center\", width: \"88%\" }}>Congratulations, your farm configuration is complete <br /> Thank you for filling out all 5 steps of the form. <br />\n              Now it's time to configure your sensors. Please proceed to the next step to add your sensor configuration.\n            </h6>\n          </div>\n\n\n        )\n      default:\n        break;\n    }\n  }\n\n  const totalSteps = 5;\n\n  const percentageComplete = Math.ceil(((steps) / totalSteps) * 100);\n\n  const handleSubmit = () => {\n    switch (steps) {\n      case 0:\n        return (\n          addFarm()\n        )\n      case 1:\n        return (\n          addField()\n        )\n      case 2:\n        return (\n          addZone()\n        )\n      case 3:\n        return (\n          addCrop()\n        )\n      case 4:\n        return (\n          addIrrigation()\n        )\n      default:\n        break;\n    }\n  }\n  return (\n    <Container fluid className=\"main-content-container px-3\">\n      <>\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\n          <Modal.Header className=\"d-flex flex-column\" >\n            <Modal.Title>Farm Configuration</Modal.Title>\n            <p style={{ textDecoration: \"underline\", fontSize: 12, fontWeight: \"bold\" }}>Each step of this form is dependent on the previous step, so please fill out the fields in the correct order to avoid errors or an incomplete submission.</p>\n            <div style={{ width: \"100%\", height: 25 }}>\n              <ProgressBar animated variant=\"success\" now={percentageComplete} label={`${percentageComplete}%`} />\n\n            </div>\n\n          </Modal.Header>\n          <Modal.Body>\n            {configProcess()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            {\n              steps !== 5\n                ?\n                <Button disabled={steps === 1 && coords.Latitude === \"\"} variant=\"primary\" onClick={handleSubmit}>\n                  Save & continue process\n                </Button>\n                :\n                null\n\n            }\n            {\n              steps > 0 && steps < 5\n                ?\n                <Button variant=\"primary\" onClick={prevStep}>\n                  Previous\n                </Button>\n                :\n                null\n            }\n          </Modal.Footer>\n        </Modal>\n      </>\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-2 mb-4 d-flex justify-content-between flex-nowrap align-items-center border-bottom\">\n        <PageTitle title={t('overview')} className=\" mb-1\" />\n        <Dropdown open={toggle} toggle={toggleDropDown} className=\"d-table mr-5\">\n          <div className=\"d-flex justify-content-center align-items-center \">\n            <Button id=\"TooltipExample\" theme=\"info\" className=\"rounded-circle\" style={{ height: 50, width: 50 }} onClick={toggleDropDown}  >\n              <i className=\"material-icons\" style={{ fontSize: 30, display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color: \"#fff\" }}>&#xe145;</i>\n              <Tooltip\n                placement=\"left\"\n\n                open={open}\n                target=\"#TooltipExample\"\n                toggle={toggleToolTip}\n              >\n                {t('add_element')}\n              </Tooltip>\n            </Button>\n\n          </div>\n          <DropdownMenu right style={{ zIndex: \"10\" }} >\n            <Link to=\"#\" onClick={handleShow}>\n              <DropdownItem>\n                {t('farms')}\n              </DropdownItem>\n\n            </Link>\n            <Link  to=\"#\" onClick={() => ToAddSensorPage()}>\n              <DropdownItem>\n                {t('sensors')}\n              </DropdownItem>\n            </Link>\n            <Link  to=\"#\" onClick={() => ToWaterBalancePage()}>\n              <DropdownItem>\n                {t('water_balance')}\n              </DropdownItem>\n            </Link>\n          </DropdownMenu>\n        </Dropdown>\n      </Row>\n      {/* Small Stats Blocks */}\n      <Row className=\"mt-4\">\n        <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-4\">\n          <p style={{ margin: 0 }}>{t('field_stats')}</p>\n          <Card small className=\"stats-small h-100\">\n            <CardBody className=\"p-2 d-flex  justify-content-center align-items-center\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  flexWrap: \"wrap\",\n                  width: \"100%\"\n                }}\n              >\n                {/* <Stats /> */}\n                {smallStats.map((stats, idx) => (\n                  <>\n                    <SmallStats\n                      FilterByStatus={FilterByStatus}\n                      style={{\n                        borderColor: \"blue\",\n                        borderWidth: 2,\n                        borderStyle: \"solid\"\n                      }}\n                      id={`small-stats-${idx}`}\n                      variation=\"1\"\n                      chartData={stats.datasets}\n                      chartLabels={stats.chartLabels}\n                      label={stats.label}\n                      value={stats.value}\n                      icon={stats.icon}\n                      state={stats.state}\n                    />\n                    {idx != 2 ? (\n                      <hr\n                        style={{\n                          backgroundColor: \"#ebebeb\",\n                          width: \"1px\",\n                          height: \"75%\"\n                        }}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </>\n                ))}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-4\">\n          <p style={{ margin: 0 }}>{t('sensor_stats')}</p>\n          <Card small className=\"stats-small h-100\">\n            <CardBody className=\"p-2 d-flex justify-content-center align-items-center\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  flexWrap: \"wrap\",\n                  width: \"100%\"\n                }}\n              >\n                {smallStats2.map((stats, idx) => (\n                  <>\n                    <SmallStats\n                      ToSensorPage={ToSensorPage}\n                      style={{\n                        borderColor: \"blue\",\n                        borderWidth: 2,\n                        borderStyle: \"solid\"\n                      }}\n                      id={`small-stats-${idx}`}\n                      variation=\"1\"\n                      chartData={stats.datasets}\n                      chartLabels={stats.chartLabels}\n                      label={stats.label}\n                      value={stats.value}\n                      icon={stats.icon}\n                      state={stats.state}\n                    />\n                    {idx != 2 ? (\n                      <hr\n                        style={{\n                          backgroundColor: \"#ebebeb\",\n                          width: \"1px\",\n                          height: \"75%\"\n                        }}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </>\n                ))}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"\">\n          {/* <h4 style={{ marginBottom: \"-15px\" }}>{t('map')}</h4> */}\n          <LeafletMap data={layerFarm} sensor={sensorStats} draw={configMap.draw} zoom={mapConfig.zoom} center={mapConfig.center} fromAcrion={mapConfig.fromAction} />\n        </Col>\n      </Row>\n      <Row className=\"d-flex justify-content-center align-items-center\">\n      </Row>\n      <Row>\n        <FilterFields\n          smallStats={smallStats}\n          sensorsData={sensorsData}\n          crops={crops}\n          filteredByStatus={farms}\n          sensorStats={sensorStats}\n          fieldStats={fieldStats}\n        />\n      </Row>\n    </Container>\n  )\n}\n\n\nexport default Overview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}