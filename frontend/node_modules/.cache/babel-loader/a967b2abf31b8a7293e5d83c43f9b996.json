{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SatteliteMap.js\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Circle, FeatureGroup, Marker, Popup, useMap, ImageOverlay } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Styles.css\";\nimport useGeoLocation from \"../utils/useGeoLocation\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport api from \"../api/api\";\nimport L from 'leaflet';\nimport MarkerObject from \"./MarkerMap\";\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport axios from \"axios\";\nimport { Card, CardBody, CardImg, CardTitle, Col, FormSelect, Row } from \"shards-react\";\nimport IrrigationMap from '../images/Irrigation-index.png';\nimport ndvi from '../images/ndvi.png';\nimport NitrogenMap from '../images/Nitrogen-Map.png';\nimport PlantHealthMap from '../images/Plant-Health-gci.png';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Button from '@mui/material/Button';\nimport SatelliteAltIcon from '@mui/icons-material/SatelliteAlt';\nimport { Box } from \"@mui/material\";\nimport { ScaleControl } from 'react-leaflet';\nimport Legend from \"./Legend\";\n\nvar SatteliteMap = function SatteliteMap(_ref) {\n  var farms = _ref.farms,\n      data = _ref.data,\n      selectedData = _ref.selectedData,\n      _onEdited = _ref._onEdited,\n      draw = _ref.draw,\n      edit = _ref.edit,\n      drawn = _ref.drawn,\n      satellitesImages = _ref.satellitesImages;\n  var position = [33.8921, 9.5615];\n  var location = useGeoLocation(); //   const map = useMap();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      overlayBounds = _useState2[0],\n      setOverlayBounds = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drawnPolygon = _useState4[0],\n      setDrawnPolygon = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRequesting = _useState6[0],\n      setIsRequesting = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDesignation = _useState8[0],\n      setSelectedDesignation = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      designationData = _useState10[0],\n      setDesignationData = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedDesignationUrl = _useState12[0],\n      setSelectedDesignationUrl = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Map = _useState14[0],\n      setMap = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      markers = _useState16[0],\n      setMarkers = _useState16[1];\n\n  var _useState17 = useState([33.8921, 9.5615]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      center = _useState18[0],\n      setCenter = _useState18[1];\n\n  var _useState19 = useState('-'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      min = _useState20[0],\n      setMin = _useState20[1];\n\n  var _useState21 = useState('-'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      max = _useState22[0],\n      setMax = _useState22[1];\n\n  var designationImageMap = {\n    \"Vegetation index\": ndvi,\n    \"Irrigation index\": IrrigationMap,\n    \"Nitrogen Map\": NitrogenMap,\n    \"Plant Health\": PlantHealthMap\n  };\n  useEffect(function () {\n    if (data && data.length > 0) {\n      var _data$ = data[0],\n          Latitude = _data$.Latitude,\n          Longitude = _data$.Longitude;\n      setCenter([Number(Latitude), Number(Longitude)]);\n      setMarkers([Number(Latitude), Number(Longitude)]);\n    }\n  }, [data]);\n  useEffect(function () {\n    if (data.length > 0) {\n      var coordinates = [];\n      data.map(function (field) {\n        var coord = JSON.parse(field.coordinates);\n\n        if (coord) {\n          coord.map(function (co) {\n            coordinates.push(Object.values(co));\n          });\n        }\n      });\n      setDrawnPolygon(coordinates);\n    }\n  }, [data]);\n\n  var calculateBounds = function calculateBounds(coordinates) {\n    var latitudes = coordinates.map(function (coord) {\n      return coord[1];\n    });\n    var longitudes = coordinates.map(function (coord) {\n      return coord[0];\n    });\n    var bounds = [[Math.min.apply(Math, _toConsumableArray(latitudes)), Math.min.apply(Math, _toConsumableArray(longitudes))], [Math.max.apply(Math, _toConsumableArray(latitudes)), Math.max.apply(Math, _toConsumableArray(longitudes))]];\n    return bounds;\n  }; // const handleCreated = (e) => {\n  //   const type = e.layerType;\n  //   const layer = e.layer;\n  //   if (type === 'polygon') {\n  //     const coordinates = layer.getLatLngs()[0].map(coord => [coord.lng, coord.lat]);\n  //     setDrawnPolygon(coordinates);\n  //   }\n  // };\n  // const handleSendRequest = () => {\n  //   setIsRequesting(true);\n  // };\n\n\n  var handleCardClick = function handleCardClick(selected) {\n    handleDesignationChange({\n      target: {\n        value: selected\n      }\n    });\n  };\n\n  var handleDesignationChange = function handleDesignationChange(event) {\n    var selected = event.target.value;\n    var _designationData$0$se = designationData[0][selected],\n        url = _designationData$0$se.url,\n        min = _designationData$0$se.min,\n        max = _designationData$0$se.max;\n    var bounds = calculateBounds(drawnPolygon);\n    setSelectedDesignation(selected);\n    setSelectedDesignationUrl(url);\n    setOverlayBounds(bounds);\n    setMin(parseFloat(min).toFixed(2));\n    setMax(parseFloat(max).toFixed(2));\n  };\n\n  useEffect(function () {\n    var dataArray = [];\n    satellitesImages.map(function (data) {\n      setDesignationData(data.data);\n    });\n  }, [data, satellitesImages]); // useEffect(() => {\n  //   if (designationData.length > 0 && selectedData.length === 0) {\n  //       const apiUrl = '/field/add-sattelite-images';\n  //       let userUid = JSON.parse(localStorage.getItem('user')).id\n  //       const { Id } = data[0];\n  //       api.post(apiUrl, { data: designationData , field_id : Id , user_uid : userUid , polygon : drawnPolygon })\n  //       .then((response) => {\n  //         const fetchedData = response.data.imagesData\n  //         console.log(fetchedData)\n  //       })\n  //       .catch((error) => {\n  //         // Handle errors\n  //         console.error('API error:', error);\n  //       })\n  //     } \n  // }, [designationData])\n\n  console.log(designationData);\n\n  var _useState23 = useState([36.806389, 10.181667]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      mapCenter = _useState24[0],\n      setMapCenter = _useState24[1];\n\n  var _useState25 = useState(10),\n      _useState26 = _slicedToArray(_useState25, 2),\n      zoomLevel = _useState26[0],\n      setZoomLevel = _useState26[1];\n\n  var mapRef = useRef(null);\n\n  var getCenterFromField = function getCenterFromField() {\n    if (data && data.length > 0) {\n      var firstField = data[0];\n      return [Number(firstField.Latitude), Number(firstField.Longitude)];\n    }\n\n    return null;\n  };\n\n  useEffect(function () {\n    var updateMapCenter = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var centerFromFields;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                centerFromFields = getCenterFromField();\n\n                if (centerFromFields) {\n                  setMapCenter(centerFromFields);\n                  setZoomLevel(17);\n                  mapRef.current.setView(centerFromFields, zoomLevel);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function updateMapCenter() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    updateMapCenter();\n  }, [data, mapRef, zoomLevel]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapContainer, {\n    ref: mapRef,\n    style: {\n      borderRadius: 20,\n      boxShadow: '1px 1px 10px #bbb',\n      height: 300\n    },\n    className: \"markercluster-map\",\n    zoom: zoomLevel,\n    center: mapCenter // maxZoom={18}\n    ,\n    whenCreated: function whenCreated(map) {\n      mapRef.current = map; // Assign the map instance to mapRef.current\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatureGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditControl, {\n    draw: draw,\n    edit: edit,\n    position: \"topright\",\n    onEdited: _onEdited,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ScaleControl, {\n    position: \"bottomleft\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TileLayer, {\n    maxNativeZoom: 18,\n    maxZoom: 20,\n    url: selectedDesignationUrl || 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    map: mapRef.current,\n    min: min,\n    max: max,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LeafletGeoCoder, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), location.loaded && !location.error && /*#__PURE__*/React.createElement(Marker, {\n    position: [location.coordinates.lat, location.coordinates.lng],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, \"My position\")), markers.length > 0 && /*#__PURE__*/React.createElement(Marker, {\n    position: [markers[0], markers[1]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, data[0].title)), markers.length > 0 && /*#__PURE__*/React.createElement(Polygon, {\n    pathOptions: {\n      color: '#26A6B7',\n      opacity: 0.5\n    },\n    positions: drawnPolygon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), selectedDesignationUrl && overlayBounds && /*#__PURE__*/React.createElement(TileLayer, {\n    maxNativeZoom: 18,\n    maxZoom: 20,\n    key: selectedDesignationUrl,\n    url: selectedDesignationUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  })), isRequesting ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"20px\",\n      marginRight: \"0px\",\n      marginLeft: \"0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 10\n    }\n  }, designationData.length > 0 && Object.keys(designationData[0]).map(function (item, indx) {\n    var data = designationData[0][item];\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: \"3\",\n      md: \"12\",\n      sm: \"12\",\n      style: {\n        padding: \"0px\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: \"wrap\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"m-4 p-0 \",\n      key: indx,\n      style: {\n        width: \"150px\",\n        height: \"100px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return handleCardClick(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      width: 100,\n      height: 100,\n      top: true,\n      src: designationImageMap[data.designation],\n      alt: item.designation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"m-0 p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: \"16px\"\n      },\n      className: \"text-center py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 19\n      }\n    }, data.designation))));\n  })));\n};\n\nexport default SatteliteMap;","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Polygon","Circle","FeatureGroup","Marker","Popup","useMap","ImageOverlay","useGeoLocation","EditControl","api","L","MarkerObject","LeafletGeoCoder","axios","Card","CardBody","CardImg","CardTitle","Col","FormSelect","Row","IrrigationMap","ndvi","NitrogenMap","PlantHealthMap","LinearProgress","Button","SatelliteAltIcon","Box","ScaleControl","Legend","SatteliteMap","farms","data","selectedData","_onEdited","draw","edit","drawn","satellitesImages","position","location","overlayBounds","setOverlayBounds","drawnPolygon","setDrawnPolygon","isRequesting","setIsRequesting","selectedDesignation","setSelectedDesignation","designationData","setDesignationData","selectedDesignationUrl","setSelectedDesignationUrl","Map","setMap","markers","setMarkers","center","setCenter","min","setMin","max","setMax","designationImageMap","length","Latitude","Longitude","Number","coordinates","map","field","coord","JSON","parse","co","push","Object","values","calculateBounds","latitudes","longitudes","bounds","Math","handleCardClick","selected","handleDesignationChange","target","value","event","url","parseFloat","toFixed","dataArray","console","log","mapCenter","setMapCenter","zoomLevel","setZoomLevel","mapRef","getCenterFromField","firstField","updateMapCenter","centerFromFields","current","setView","borderRadius","boxShadow","height","loaded","error","lat","lng","title","color","opacity","width","marginTop","marginRight","marginLeft","keys","item","indx","padding","display","justifyContent","alignItems","flexWrap","cursor","designation","fontSize"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SatteliteMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Circle, FeatureGroup, Marker, Popup, useMap, ImageOverlay } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Styles.css\";\nimport useGeoLocation from \"../utils/useGeoLocation\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport api from \"../api/api\";\nimport L from 'leaflet';\nimport MarkerObject from \"./MarkerMap\"\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport axios from \"axios\";\nimport {  Card, CardBody, CardImg, CardTitle, Col, FormSelect, Row } from \"shards-react\";\nimport IrrigationMap from '../images/Irrigation-index.png'\nimport ndvi from '../images/ndvi.png'\nimport NitrogenMap from '../images/Nitrogen-Map.png'\nimport PlantHealthMap from '../images/Plant-Health-gci.png'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Button from '@mui/material/Button';\nimport SatelliteAltIcon from '@mui/icons-material/SatelliteAlt';\nimport { Box } from \"@mui/material\";\n\nimport { ScaleControl } from 'react-leaflet' \nimport Legend from \"./Legend\";\n\nconst SatteliteMap = ({farms, data, selectedData, _onEdited, draw, edit,drawn ,satellitesImages}) => {\n  const position = [33.8921, 9.5615];\n  const location = useGeoLocation();\n  //   const map = useMap();\n  const [overlayBounds, setOverlayBounds] = useState(null);\n  const [drawnPolygon, setDrawnPolygon] = useState(null);\n  const [isRequesting, setIsRequesting] = useState(false);\n  const [selectedDesignation, setSelectedDesignation] = useState('');\n  const [designationData, setDesignationData] = useState([]);\n  const [selectedDesignationUrl, setSelectedDesignationUrl] = useState(null);\n  const [Map, setMap] = useState(null)\n  const [markers, setMarkers] = useState([]);\n  const [center, setCenter] = useState([33.8921, 9.5615]); \n  const [min, setMin] = useState('-');\n  const [max, setMax] = useState('-');\n\n  const designationImageMap = {\n    \"Vegetation index\": ndvi,\n    \"Irrigation index\": IrrigationMap,\n    \"Nitrogen Map\": NitrogenMap,\n    \"Plant Health\": PlantHealthMap,\n  };\n  useEffect(() => {\n    if (data && data.length > 0) {\n      const { Latitude, Longitude } = data[0];\n      setCenter([Number(Latitude), Number(Longitude)]);\n      setMarkers([Number(Latitude), Number(Longitude)]);\n      \n    }\n  }, [data]);\n  useEffect(() => {\n    if( data.length > 0) {\n      let coordinates = []\n      data.map(field=>{\n        let coord = JSON.parse(field.coordinates)\n        if (coord) {\n          coord.map(co => {\n            coordinates.push(Object.values(co))\n          })\n        }\n      })\n      setDrawnPolygon(coordinates)\n    }\n  }, [data])\n  const calculateBounds = (coordinates) => {\n    const latitudes = coordinates.map(coord => coord[1]);\n    const longitudes = coordinates.map(coord => coord[0]);\n\n    const bounds = [\n      [Math.min(...latitudes), Math.min(...longitudes)],\n      [Math.max(...latitudes), Math.max(...longitudes)]\n    ];\n\n    return bounds;\n  };\n\n\n  // const handleCreated = (e) => {\n  //   const type = e.layerType;\n  //   const layer = e.layer;\n\n  //   if (type === 'polygon') {\n  //     const coordinates = layer.getLatLngs()[0].map(coord => [coord.lng, coord.lat]);\n  //     setDrawnPolygon(coordinates);\n  //   }\n  // };\n  // const handleSendRequest = () => {\n  //   setIsRequesting(true);\n  // };\n  const handleCardClick = (selected) => {\n    handleDesignationChange({ target: { value: selected } });\n  };\n  const handleDesignationChange = (event) => {\n    const selected = event.target.value;\n    const { url , min , max } = designationData[0][selected];\n    const bounds = calculateBounds(drawnPolygon);\n    setSelectedDesignation(selected);\n    setSelectedDesignationUrl(url);\n    setOverlayBounds(bounds);\n    setMin(parseFloat(min).toFixed(2));\n    setMax(parseFloat(max).toFixed(2));\n  };\n\n  useEffect(() => {\n    const dataArray = []\n      satellitesImages.map(data=>{\n        setDesignationData(data.data);\n      })\n       \n  \n  }, [data,satellitesImages]);\n  // useEffect(() => {\n  //   if (designationData.length > 0 && selectedData.length === 0) {\n  //       const apiUrl = '/field/add-sattelite-images';\n  //       let userUid = JSON.parse(localStorage.getItem('user')).id\n  //       const { Id } = data[0];\n    \n  //       api.post(apiUrl, { data: designationData , field_id : Id , user_uid : userUid , polygon : drawnPolygon })\n  //       .then((response) => {\n  //         const fetchedData = response.data.imagesData\n  //         console.log(fetchedData)\n  //       })\n  //       .catch((error) => {\n  //         // Handle errors\n  //         console.error('API error:', error);\n  //       })\n  //     } \n    \n\n  // }, [designationData])\n    console.log(designationData)\n\n  const [mapCenter, setMapCenter] = useState([36.806389, 10.181667]);\n  const [zoomLevel, setZoomLevel] = useState(10);\n  const mapRef = useRef(null);\n\n  const getCenterFromField = () => {\n    if (data && data.length > 0) {\n      const firstField = data[0];\n      return [Number(firstField.Latitude), Number(firstField.Longitude)];\n    }\n    return null;\n  };\n  useEffect(() => {\n    const updateMapCenter = async () => {\n      const centerFromFields = getCenterFromField();\n      if (centerFromFields) {\n        setMapCenter(centerFromFields);\n        setZoomLevel(17)\n        mapRef.current.setView(centerFromFields, zoomLevel);\n      }\n    };\n  \n    updateMapCenter();\n  }, [data, mapRef, zoomLevel]);\n\n  return (\n    <div>\n      <MapContainer ref={mapRef}\n        style={{ borderRadius: 20, boxShadow: '1px 1px 10px #bbb', height: 300 }}\n        className=\"markercluster-map\"\n        zoom={zoomLevel}\n        center={mapCenter}\n        // maxZoom={18}\n        whenCreated={(map) => {\n          mapRef.current = map; // Assign the map instance to mapRef.current\n        }}\n      >\n        <FeatureGroup>\n          <EditControl draw={draw} edit={edit} position=\"topright\"  onEdited={_onEdited} />\n          <ScaleControl position=\"bottomleft\" />\n        \n        </FeatureGroup>\n        <TileLayer\n          maxNativeZoom={18}\n          maxZoom={20}\n          url={selectedDesignationUrl || 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'}\n          subdomains={['mt0', 'mt1', 'mt2', 'mt3']}\n        />\n        <Legend map={mapRef.current} min={min} max={max} />\n\n        <LeafletGeoCoder />\n\n        {location.loaded && !location.error && (\n          <Marker position={[location.coordinates.lat, location.coordinates.lng]}>\n            <Popup>My position</Popup>\n          </Marker>\n        )}\n         {markers.length > 0 && (\n          <Marker position={[markers[0], markers[1]]}>\n            <Popup>{data[0].title}</Popup>\n          </Marker>\n        )}\n         {markers.length > 0 && (\n          <Polygon\n            pathOptions={{ color: '#26A6B7' , opacity: 0.5 }}\n            positions={drawnPolygon}\n            \n          />\n        )}\n        {selectedDesignationUrl && overlayBounds && (\n          <TileLayer\n          maxNativeZoom={18}\n          maxZoom={20}\n          key={selectedDesignationUrl}\n            url={selectedDesignationUrl}\n          />\n        )}\n      </MapContainer>\n      {/* <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n        <Button  variant=\"outlined\" startIcon={<SatelliteAltIcon />} onClick={handleSendRequest} disabled={isRequesting || data.length === 0}>\n          {isRequesting ? 'Sending Request...' : 'Satellite Images'}\n        </Button>\n\n      </div> */}\n      {\n        isRequesting ?     \n    <Box sx={{ width: '100%', marginTop: \"10px\" }}>\n        <LinearProgress />\n\n    </Box>\n     : \n         <Row style={{marginTop: \"20px\",marginRight: \"0px\",marginLeft: \"0px\" }}>\n        {designationData.length > 0 &&\n          Object.keys(designationData[0]).map((item, indx) =>{\n            const data = designationData[0][item];\n            return(\n              <Col lg=\"3\" md=\"12\" sm=\"12\"  style={{padding: \"0px\" , display: 'flex',justifyContent: 'center', alignItems: 'center',flexWrap:\"wrap\"}}>\n            \n              <Card className=\"m-4 p-0 \" key={indx} style={{ width: \"150px\",height:\"100px\", cursor: \"pointer\" }} onClick={() => handleCardClick(item)}>\n                <CardImg width={100} height={100} top src={designationImageMap[data.designation]} alt={item.designation} />\n                <CardBody className=\"m-0 p-0\">\n                  <h6 style={{fontSize:\"16px\"}} className=\"text-center py-2\">{data.designation}</h6>\n                </CardBody>\n              </Card>\n              </Col>\n           )\n            \n          }\n         )}\n      </Row>\n      }\n    \n    </div>\n  );\n};\n\nexport default SatteliteMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}