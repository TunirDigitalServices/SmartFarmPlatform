{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/admin/SensorsManagement.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, FormGroup, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react';\nimport PageTitle from '../components/common/PageTitle';\nimport api from '../../src/api/api';\nimport { useTranslation } from 'react-i18next';\nimport Pagination from '../views/Pagination';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport sensorImg from \"../images/smartfarm_capteur.png\";\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport moment from 'moment';\nimport { LinearProgress } from '@mui/material';\n\nvar SensorsManagement = function SensorsManagement() {\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sensorsPerPage = _useState4[0],\n      setSensorPerPage = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      SearchCode = _useState8[0],\n      setSearchCode = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedUser = _useState10[0],\n      setSelectedUser = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedSupplier = _useState12[0],\n      setSelectedSupplier = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      code = _useState16[0],\n      setCode = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sensorId = _useState18[0],\n      setSensorId = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      singleSensor = _useState20[0],\n      setSingleSensor = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userUid = _useState22[0],\n      setUserUid = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      users = _useState24[0],\n      setUsers = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      allSensors = _useState26[0],\n      setAllSensors = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      lastData = _useState28[0],\n      setLastData = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      frequency = _useState30[0],\n      setFrequency = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      existUsers = _useState32[0],\n      setExistUsers = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      existSuppliers = _useState34[0],\n      setExistSuppliers = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      supplierUid = _useState36[0],\n      setSupplierUid = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      supplier = _useState38[0],\n      setSupplier = _useState38[1];\n\n  var _useState39 = useState(new Date()),\n      _useState40 = _slicedToArray(_useState39, 2),\n      currentTime = _useState40[0],\n      setCurrentTime = _useState40[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setCurrentTime(new Date());\n    }, 120000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var getAllSensors = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/admin/all-sensors').then(function (response) {\n                var dataSensors = [];\n                var dataSensorApi = [];\n                var frequencyData = [];\n                var sensorsData = response.data.sensors;\n                sensorsData.map(function (data) {\n                  if (data.data) {\n                    dataSensors.push(data.sensor);\n                    frequencyData.push(data.config);\n                    dataSensorApi.push(data.data);\n                  }\n                });\n                setAllSensors(dataSensors);\n                setLastData(dataSensorApi);\n                setFrequency(frequencyData);\n              }).catch(function (err) {\n                console.log(err);\n              }).finally(function () {\n                return setIsLoading(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAllSensors() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getExistUsers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/admin/exist-users').then(function (response) {\n                var Data = response.data.users;\n                setExistUsers(Data);\n                setSupplier(false);\n                setSupplierUid('');\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getExistUsers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getExistSuppliers = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/admin/exist-suppliers').then(function (response) {\n                var Data = response.data.suppliers;\n                setExistSuppliers(Data);\n                setSupplierUid(Data.uid);\n                setSupplier(true);\n                setUserUid('');\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getExistSuppliers() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getUsersList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api.get(\"/admin/users\").then(function (response) {\n                var usersData = response.data.users;\n                setUsers(usersData);\n              });\n\n            case 2:\n              data = _context4.sent;\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getUsersList() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getAllSensors();\n    getUsersList();\n    getExistUsers();\n    getExistSuppliers();\n  }, []);\n  var filteredSensors = allSensors.filter(function (sensor) {\n    if (SearchCode !== '') {\n      return sensor.code.toLowerCase().includes(SearchCode.toLowerCase());\n    }\n\n    if (selectedUser !== '') {\n      return sensor.user_id == selectedUser;\n    }\n\n    if (selectedSupplier !== '') {\n      return sensor.supplier_id == selectedSupplier;\n    }\n\n    return sensor;\n  }); // Pagination \n\n  var indexOfLastPost = currentPage * sensorsPerPage;\n  var indexOfFirstPost = indexOfLastPost - sensorsPerPage;\n  var currentSensors = filteredSensors.slice(indexOfFirstPost, indexOfLastPost);\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  var assignSensorToUser = function assignSensorToUser(userUid, supplierUid) {\n    var data = {\n      code: code,\n      user_uid: userUid,\n      supplier_uid: supplierUid\n    };\n    api.post('/admin/edit-sensor', data).then(function (response) {\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('sensor_updated')), {\n          icon: \"success\"\n        });\n        setToggle(false);\n        getAllSensors();\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Error'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Error'\n      });\n    });\n  };\n\n  var getSingleSensor = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(sensorid, type) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return api.get(\"/admin/single-sensor/\".concat(sensorid)).then(function (res) {\n                var sensorData = res.data.sensor;\n                setSingleSensor(sensorData);\n                setCode(sensorData.code);\n                existUsers.map(function (user) {\n                  if (user.id === sensorData.user_id) {\n                    setUserUid(user.uid);\n                  }\n                });\n                existSuppliers.map(function (supplier) {\n                  if (supplier.id === sensorData.supplier_id) {\n                    setSupplierUid(supplier.uid);\n                  }\n                });\n              }).catch(function (error) {\n                swal({\n                  title: \"Error\",\n                  icon: \"error\"\n                });\n              });\n\n            case 2:\n              setToggle(!toggle);\n\n              if (type === \"User\") {\n                getExistUsers();\n              }\n\n              if (type === 'Supplier') {\n                getExistSuppliers();\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getSingleSensor(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var resetForm = function resetForm() {\n    setTimeout(function () {\n      setUserUid('');\n      setSupplierUid('');\n    }, 1000);\n  };\n\n  var handleCalculSensor = function handleCalculSensor() {\n    api.post('/calcul/add-sensor-calcul').then(function (response) {\n      console.log(response.data.message);\n\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('calcul_added')), {\n          icon: \"success\"\n        });\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...'\n      });\n    });\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(sensorUid) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              console.log(sensorUid);\n              data = {\n                sensor_uid: sensorUid\n              };\n              _context6.next = 4;\n              return api.delete('/sensor/delete-sensor', {\n                data: data\n              }).then(function (response) {\n                if (response.data.type && response.data.type == \"danger\") {\n                  swal({\n                    title: \"Cannot Delete Sensor\",\n                    icon: \"warning\"\n                  });\n                }\n\n                if (response.data.type == \"success\") {\n                  getAllSensors();\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Cannot Delete Sensor\",\n                  icon: \"Error\",\n                  text: 'Error'\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleDelete(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var confirmDelete = function confirmDelete(sensorUid) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this sensor!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (Delete) {\n      if (Delete) {\n        handleDelete(sensorUid);\n        swal(\" Sensor has been deleted!\", {\n          icon: \"success\"\n        });\n      }\n    }).catch(function (error) {\n      swal({\n        title: \"Cannot Delete sensor\",\n        icon: \"Error\",\n        text: 'Error'\n      });\n    });\n  };\n\n  var fetchDataSensor = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(sensorUid, code) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return api.post('/sensor/activate-synch', {\n                sensor_uid: sensorUid\n              }).then(function (response) {\n                if (response.data.type === \"success\") {\n                  swal(\"\".concat(t('sensor_updated')), {\n                    icon: \"success\"\n                  });\n                  getAllSensors();\n                }\n\n                if (response.data.type === \"danger\") {\n                  swal({\n                    icon: \"error\",\n                    text: 'Error'\n                  });\n                }\n              }).catch(function (err) {\n                swal({\n                  icon: \"error\",\n                  text: 'Error'\n                });\n              });\n\n            case 3:\n              _context7.next = 8;\n              break;\n\n            case 5:\n              _context7.prev = 5;\n              _context7.t0 = _context7[\"catch\"](0);\n              swal({\n                icon: \"error\",\n                text: 'Error'\n              });\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 5]]);\n    }));\n\n    return function fetchDataSensor(_x4, _x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var handleSensorsPerPageChange = function handleSensorsPerPageChange(event) {\n    return setSensorPerPage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('list_sensors'),\n    subtitle: t('list_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('search_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    value: SearchCode,\n    onChange: function onChange(e) {\n      return setSearchCode(e.target.value);\n    },\n    id: \"search\",\n    placeholder: \"Search By code\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      return setSelectedUser(e.target.value);\n    },\n    value: selectedUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  }, selectedUser === \"\" ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 45\n    }\n  }, \"Select by user\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 45\n    }\n  }, t('see_all')), existUsers.sort(function (a, b) {\n    return a.name.localeCompare(b.name);\n  }).map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 52\n      }\n    }, user.name);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      return setSelectedSupplier(e.target.value);\n    },\n    value: selectedSupplier,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 33\n    }\n  }, selectedSupplier === \"\" ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 45\n    }\n  }, \"Select by supplier\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 45\n    }\n  }, t('see_all')), existSuppliers.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 52\n      }\n    }, user.name);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return history.push('/admin/add-sensor');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 29\n    }\n  }, \"Add Sensor\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return handleCalculSensor();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }, \"Calcul\")))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 justify-content-center flex-column align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"px-2\",\n    htmlFor: \"sensorsPerPage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 25\n    }\n  }, \"Sensors per page: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"sensorsPerPage\",\n    value: sensorsPerPage,\n    onChange: handleSensorsPerPageChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, \"20\"))), /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: sensorsPerPage,\n    totalUsers: allSensors.length,\n    paginate: paginate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center table-hover table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 41\n    }\n  }, t('sensor_code')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 41\n    }\n  }, t('user')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 41\n    }\n  }, t('supplier')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 41\n    }\n  }, t('last_reading')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 41\n    }\n  }, t('expected')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 41\n    }\n  }, t('statu')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 41\n    }\n  }, t('actions')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, currentSensors.map(function (sensor, index) {\n    var dataIndex = allSensors.findIndex(function (s) {\n      return s.id === sensor.id;\n    });\n    var nameUser = '-';\n    var nameSupplier = '-';\n    var frequencyValue = '-';\n    var lastDataTime = '-';\n    var formattedTime = '-';\n    users.map(function (user) {\n      if (user.id === sensor.user_id) {\n        nameUser = user.name;\n      }\n    });\n    existSuppliers.map(function (user) {\n      if (user.id === sensor.supplier_id) {\n        nameSupplier = user.name;\n      }\n    });\n\n    if (frequency.length > 0 && lastData.length > 0 && lastData[dataIndex]) {\n      lastDataTime = moment(lastData[dataIndex].time).format('YYYY-MM-DD HH:mm');\n      frequencyValue = frequency[dataIndex].frequence;\n    }\n\n    var newTime = moment(lastDataTime).add(frequencyValue, 'seconds');\n    formattedTime = newTime.format('YYYY-MM-DD HH:mm');\n    var timeStartDifference = moment(lastDataTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\n    var timeEndDifference = moment(formattedTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\n    var sensorState = timeStartDifference < 0 && timeEndDifference > 0 ? 'Active' : 'Inactive';\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 53\n      }\n    }, sensor.code), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 53\n      }\n    }, nameUser), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 53\n      }\n    }, nameSupplier), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 53\n      }\n    }, lastDataTime.toString()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 53\n      }\n    }, formattedTime.toString()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: sensorState === 'Active' ? 'green' : 'red',\n        fontSize: 13,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 53\n      }\n    }, sensorState), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 53\n      }\n    }, sensor.deleted_at === null ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Edit\",\n      onClick: function onClick() {\n        history.push(\"/admin/edit-sensor/\".concat(sensor.id));\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 166\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"History\",\n      onClick: function onClick() {\n        history.push(\"/my-history/\".concat(sensor.code));\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 177\n      }\n    }, \"\\uE889\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"Delete\",\n      onClick: function onClick() {\n        confirmDelete(sensor.uid);\n      },\n      squared: true,\n      theme: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 161\n      }\n    }, \"\\uE872\")), sensor.synchronized === \"0\" ? /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return fetchDataSensor(sensor.uid, sensor.code);\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 163\n      }\n    }, \"\\uE627\")) : null) : null), sensor.deleted_at === null ? /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: function onClick() {\n        return getSingleSensor(sensor.id, 'User');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 69\n      }\n    }, \"Assign to user\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: function onClick() {\n        return getSingleSensor(sensor.id, 'Supplier');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 69\n      }\n    }, \"Assign to supplier\"))) : null, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 53\n      }\n    }));\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    open: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 21\n    }\n  }, \"Sensor code : \", code), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      return assignSensorToUser(userUid, supplierUid);\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 29\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      resetForm();\n      setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 29\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 33\n    }\n  }, \"Select a user to assign sensor\"), supplier === true ? /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: supplierUid,\n    onChange: function onChange(e) {\n      return setSupplierUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 45\n    }\n  }, \"Select Supplier\"), existSuppliers.map(function (supplier) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: supplier.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 60\n      }\n    }, supplier.name);\n  })) : /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: userUid,\n    onChange: function onChange(e) {\n      setUserUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 45\n    }\n  }, \"Select User\"), existUsers.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 60\n      }\n    }, user.name);\n  }))))))));\n};\n\nexport default SensorsManagement;","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","FormGroup","FormInput","ButtonGroup","Button","Modal","ModalHeader","ModalBody","FormSelect","PageTitle","api","useTranslation","Pagination","useHistory","swal","sensorImg","LoadingSpinner","moment","LinearProgress","SensorsManagement","history","toggle","setToggle","sensorsPerPage","setSensorPerPage","currentPage","setCurrentPage","SearchCode","setSearchCode","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isLoading","setIsLoading","code","setCode","sensorId","setSensorId","singleSensor","setSingleSensor","userUid","setUserUid","users","setUsers","allSensors","setAllSensors","lastData","setLastData","frequency","setFrequency","existUsers","setExistUsers","existSuppliers","setExistSuppliers","supplierUid","setSupplierUid","supplier","setSupplier","Date","currentTime","setCurrentTime","interval","setInterval","clearInterval","t","i18n","getAllSensors","get","then","response","dataSensors","dataSensorApi","frequencyData","sensorsData","data","sensors","map","push","sensor","config","catch","err","console","log","finally","getExistUsers","Data","getExistSuppliers","suppliers","uid","getUsersList","usersData","filteredSensors","filter","toLowerCase","includes","user_id","supplier_id","indexOfLastPost","indexOfFirstPost","currentSensors","slice","paginate","pageNumber","assignSensorToUser","user_uid","supplier_uid","post","type","icon","title","text","getSingleSensor","sensorid","res","sensorData","user","id","error","resetForm","setTimeout","handleCalculSensor","message","handleDelete","sensorUid","sensor_uid","delete","confirmDelete","buttons","dangerMode","Delete","fetchDataSensor","handleSensorsPerPageChange","event","target","value","e","sort","a","b","name","localeCompare","length","index","dataIndex","findIndex","s","nameUser","nameSupplier","frequencyValue","lastDataTime","formattedTime","time","format","frequence","newTime","add","timeStartDifference","diff","timeEndDifference","sensorState","fontSize","fontWeight","toString","color","deleted_at","synchronized","display","justifyContent"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/admin/SensorsManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, FormGroup, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react'\nimport PageTitle from '../components/common/PageTitle'\nimport api from '../../src/api/api'\nimport { useTranslation } from 'react-i18next';\nimport Pagination from '../views/Pagination';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport sensorImg from \"../images/smartfarm_capteur.png\"\nimport LoadingSpinner from '../components/common/LoadingSpinner'\nimport moment from 'moment';\nimport { LinearProgress } from '@mui/material';\n\n\nconst SensorsManagement = () => {\n\n    const history = useHistory()\n\n    const [toggle, setToggle] = useState(false)\n\n    const [sensorsPerPage, setSensorPerPage] = useState(10)\n    const [currentPage, setCurrentPage] = useState(1);\n    const [SearchCode, setSearchCode] = useState('')\n    const [selectedUser, setSelectedUser] = useState('')\n    const [selectedSupplier, setSelectedSupplier] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [code, setCode] = useState('')\n    const [sensorId, setSensorId] = useState('')\n\n    const [singleSensor, setSingleSensor] = useState('')\n\n    const [userUid, setUserUid] = useState('')\n    const [users, setUsers] = useState([])\n\n    const [allSensors, setAllSensors] = useState([])\n    const [lastData, setLastData] = useState([])\n    const [frequency, setFrequency] = useState([])\n\n    const [existUsers, setExistUsers] = useState([])\n\n    const [existSuppliers, setExistSuppliers] = useState([])\n    const [supplierUid, setSupplierUid] = useState('')\n\n    const [supplier, setSupplier] = useState(false)\n    const [currentTime, setCurrentTime] = useState(new Date());\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setCurrentTime(new Date());\n        }, 120000);\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n\n    const { t, i18n } = useTranslation();\n\n    const getAllSensors = async () => {\n        await api.get('/admin/all-sensors')\n            .then(response => {\n                let dataSensors = [];\n                let dataSensorApi = [];\n                let frequencyData = [];\n                let sensorsData = response.data.sensors;\n                \n                sensorsData.map(data => {\n                    if (data.data) {\n                        dataSensors.push(data.sensor);\n                        frequencyData.push(data.config);    \n                        dataSensorApi.push(data.data);\n                    }\n                });\n                \n                setAllSensors(dataSensors);\n                setLastData(dataSensorApi);\n                setFrequency(frequencyData);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .finally(() => setIsLoading(false));\n    };\n    \n    const getExistUsers = async () => {\n        await api.get('/admin/exist-users')\n            .then(response => {\n                var Data = response.data.users\n                setExistUsers(Data)\n                setSupplier(false)\n                setSupplierUid('')\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const getExistSuppliers = async () => {\n        await api.get('/admin/exist-suppliers')\n            .then(response => {\n                var Data = response.data.suppliers\n                setExistSuppliers(Data)\n                setSupplierUid(Data.uid)\n                setSupplier(true)\n                setUserUid('')\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n    const getUsersList = async () => {\n        let data = await api.get(\"/admin/users\")\n            .then(response => {\n                let usersData = response.data.users\n                setUsers(usersData)\n            })\n    }\n\n    useEffect(() => {\n        getAllSensors()\n        getUsersList()\n        getExistUsers()\n        getExistSuppliers()\n    }, [])\n    const filteredSensors = allSensors.filter(sensor => {\n        if (SearchCode !== '') {\n            return (\n                sensor.code.toLowerCase().includes(SearchCode.toLowerCase())\n            )\n        }\n        if (selectedUser !== '') {\n            return (\n                sensor.user_id == selectedUser\n            )\n        }\n        if (selectedSupplier !== '') {\n            return (\n                sensor.supplier_id == selectedSupplier\n            )\n        }\n        return sensor\n    })\n\n\n    // Pagination \n\n    const indexOfLastPost = currentPage * sensorsPerPage;\n    const indexOfFirstPost = indexOfLastPost - sensorsPerPage;\n    const currentSensors = filteredSensors.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    const assignSensorToUser = (userUid, supplierUid) => {\n        let data = {\n            code: code,\n            user_uid: userUid,\n            supplier_uid: supplierUid\n        }\n        api.post('/admin/edit-sensor', data)\n            .then(response => {\n                if (response.data.type === 'success') {\n                    swal(`${t('sensor_updated')}`, {\n                        icon: \"success\",\n                    });\n                    setToggle(false)\n                    getAllSensors()\n                }\n                if (response.data.type === 'danger') {\n                    swal({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: 'Error'\n                    })\n\n                }\n            }).catch(err => {\n                swal({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'Error'\n                })\n            })\n    }\n\n    const getSingleSensor = async (sensorid, type) => {\n\n        await api.get(`/admin/single-sensor/${sensorid}`)\n            .then(res => {\n                let sensorData = res.data.sensor\n                setSingleSensor(sensorData)\n                setCode(sensorData.code)\n                existUsers.map(user => {\n                    if (user.id === sensorData.user_id) {\n                        setUserUid(user.uid)\n                    }\n                })\n                existSuppliers.map(supplier => {\n                    if (supplier.id === sensorData.supplier_id) {\n                        setSupplierUid(supplier.uid)\n                    }\n                })\n            }).catch(error => {\n                swal({\n                    title: \"Error\",\n                    icon: \"error\",\n\n                });\n\n            })\n        setToggle(!toggle)\n        if (type === \"User\") {\n            getExistUsers()\n        } if (type === 'Supplier') {\n            getExistSuppliers()\n        }\n    }\n\n    const resetForm = () => {\n        setTimeout(() => {\n            setUserUid('')\n            setSupplierUid('')\n\n        }, 1000)\n    }\n\n\n    const handleCalculSensor = () => {\n        api.post('/calcul/add-sensor-calcul')\n            .then(response => {\n                console.log(response.data.message)\n                if (response.data.type === 'success') {\n                    swal(`${t('calcul_added')}`, {\n                        icon: \"success\",\n                    });\n                }\n                if (response.data.type === 'danger') {\n                    swal({\n                        icon: 'error',\n                        title: 'Oops...',\n                    })\n\n                }\n            }).catch(err => {\n                swal({\n                    icon: 'error',\n                    title: 'Oops...',\n                })\n            })\n    }\n\n    const handleDelete = async sensorUid => {\n        console.log(sensorUid)\n\n        let data = {\n            sensor_uid: sensorUid,\n        }\n        await api.delete('/sensor/delete-sensor', { data: data })\n            .then(response => {\n                if (response.data.type && response.data.type == \"danger\") {\n                    swal({\n                        title: \"Cannot Delete Sensor\",\n                        icon: \"warning\",\n                    });\n                }\n                if (response.data.type == \"success\") {\n                    getAllSensors();\n\n                }\n            }).catch(error => {\n                swal({\n                    title: \"Cannot Delete Sensor\",\n                    icon: \"Error\",\n                    text: 'Error'\n\n                });\n            })\n    }\n\n    const confirmDelete = sensorUid => {\n\n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this sensor!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((Delete) => {\n                if (Delete) {\n                    handleDelete(sensorUid)\n                    swal(\" Sensor has been deleted!\", {\n                        icon: \"success\",\n                    });\n                }\n            }).catch(error => {\n                swal({\n                    title: \"Cannot Delete sensor\",\n                    icon: \"Error\",\n                    text: 'Error'\n\n                });\n            })\n\n    }\n    const fetchDataSensor = async (sensorUid, code) => {\n        try {\n            await api.post('/sensor/activate-synch', { sensor_uid: sensorUid })\n                .then(response => {\n                    if (response.data.type === \"success\") {\n                        swal(`${t('sensor_updated')}`, {\n                            icon: \"success\",\n                        });\n                        getAllSensors()\n                    }\n                    if (response.data.type === \"danger\") {\n                        swal({\n                            icon: \"error\",\n                            text: 'Error'\n                        });\n                    }\n                }).catch(err => {\n                    swal({\n                        icon: \"error\",\n                        text: 'Error'\n                    });\n                })\n\n        } catch (error) {\n            swal({\n                icon: \"error\",\n                text: 'Error'\n            });\n        }\n\n\n    }\n\n    const handleSensorsPerPageChange = (event) => setSensorPerPage(event.target.value);\n    return (\n        <>\n            <Container>\n                <Row noGutters className=\"page-header py-4\">\n                    <PageTitle\n                        sm=\"4\"\n                        title={t('list_sensors')}\n                        subtitle={t('list_sensors')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                <Row>\n                    <PageTitle\n                        sm=\"4\"\n                        subtitle={t('search_sensors')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                <Row form className=\"d-flex justify-content-center\">\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                                <FormInput\n                                    value={SearchCode}\n                                    onChange={(e) => setSearchCode(e.target.value)}\n                                    id=\"search\"\n                                    placeholder=\"Search By code\" />\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                                <FormSelect onChange={(e) => setSelectedUser(e.target.value)} value={selectedUser}>\n                                    {\n                                        selectedUser === \"\"\n                                            ?\n                                            <option value=\"\">Select by user</option>\n                                            :\n                                            <option value=\"\">{t('see_all')}</option>\n\n                                    }\n\n                                    {\n\n\n                                        existUsers.sort((a, b) => a.name.localeCompare(b.name)).map(user => {\n                                            return <option value={user.id}>{user.name}</option>\n\n                                        })\n                                    }\n                                </FormSelect>\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                                <FormSelect onChange={(e) => setSelectedSupplier(e.target.value)} value={selectedSupplier}>\n                                    {\n                                        selectedSupplier === \"\"\n                                            ?\n                                            <option value=\"\">Select by supplier</option>\n                                            :\n                                            <option value=\"\">{t('see_all')}</option>\n\n                                    }\n                                    {\n                                        existSuppliers.map(user => {\n                                            return <option value={user.id}>{user.name}</option>\n\n                                        })\n                                    }\n                                </FormSelect>\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                    <Col lg=\"3\" md=\"12\" sm=\"12\">\n                        <ButtonGroup>\n                            <Button outline onClick={() => history.push('/admin/add-sensor')}>Add Sensor</Button>\n                            <Button outline onClick={() => handleCalculSensor()}>Calcul</Button>\n\n                        </ButtonGroup>\n                    </Col>\n\n                </Row>\n                <Row className=\"py-2 justify-content-center flex-column align-items-center\">\n                    <div className=\"d-flex justify-content-center align-items-start\">\n                        <label className='px-2' htmlFor=\"sensorsPerPage\">Sensors per page: </label>\n                        <select id=\"sensorsPerPage\" value={sensorsPerPage} onChange={handleSensorsPerPageChange}>\n                            <option value=\"10\">10</option>\n                            <option value=\"20\">20</option>\n                        </select>\n\n                    </div>\n                    <Pagination usersPerPage={sensorsPerPage} totalUsers={allSensors.length} paginate={paginate} />\n\n                </Row>\n                <Card className=\"my-2\" >\n\n                    {\n                        isLoading\n                            ?\n                            <LinearProgress />\n                            :\n                            <table className=\"table mb-0 text-center table-hover table-responsive-lg\">\n                                <thead className=\"bg-light\">\n                                    <tr>\n                                        <th scope=\"col\" className=\"border-0\">{t('sensor_code')}</th>\n                                        <th scope=\"col\" className=\"border-0\">{t('user')}</th>\n                                        <th scope=\"col\" className=\"border-0\">{t('supplier')}</th>\n                                        <th scope=\"col\" className=\"border-0\">{t('last_reading')}</th>\n                                        <th scope=\"col\" className=\"border-0\">{t('expected')}</th>\n                                        <th scope=\"col\" className=\"border-0\">{t('statu')}</th>\n                                        <th scope=\"col\" className=\"border-0\">{t('actions')}</th>\n                                        <th scope=\"col\" className=\"border-0\"></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        currentSensors.map((sensor, index) => {\n                                            const dataIndex = allSensors.findIndex((s) => s.id === sensor.id);\n\n                                            let nameUser = '-'\n                                            let nameSupplier = '-'\n                                            let frequencyValue = '-'\n                                            let lastDataTime = '-'\n                                            let formattedTime = '-'\n                                            users.map(user => {\n                                                if (user.id === sensor.user_id) {\n                                                    nameUser = user.name\n                                                }\n                                            })\n                                            existSuppliers.map(user => {\n                                                if (user.id === sensor.supplier_id) {\n                                                    nameSupplier = user.name\n                                                }\n                                            })\n                                            if (frequency.length > 0 && lastData.length > 0 && lastData[dataIndex]) {\n                                                    lastDataTime = moment(lastData[dataIndex].time).format('YYYY-MM-DD HH:mm')\n                                                     frequencyValue = frequency[dataIndex].frequence\n                                            }\n                                            const newTime = moment(lastDataTime).add(frequencyValue, 'seconds');\n                                            formattedTime = newTime.format('YYYY-MM-DD HH:mm');\n                                            const timeStartDifference = moment(lastDataTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\n                                            const timeEndDifference = moment(formattedTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\n\n                                            const sensorState = timeStartDifference < 0 && timeEndDifference > 0 ? 'Active' : 'Inactive';\n\n                                            return (\n                                                <tr key={index}>\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{sensor.code}</td>\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{nameUser}</td>\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{nameSupplier}</td>\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{lastDataTime.toString()}</td>\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{formattedTime.toString()}</td>\n                                                    <td style={{ color: sensorState === 'Active' ? 'green' : 'red', fontSize: 13 ,fontWeight: 'bold'}}>{sensorState}</td>\n                                                    <td>\n                                                        {\n                                                            sensor.deleted_at === null\n                                                                ?\n                                                                <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                                    <Button title=\"Edit\" onClick={() => { history.push(`/admin/edit-sensor/${sensor.id}`) }} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\n                                                                    <Button title=\"History\" onClick={() => { history.push(`/my-history/${sensor.code}`) }} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i></Button>\n                                                                    <Button title=\"Delete\" onClick={() => { confirmDelete(sensor.uid) }} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\n                                                                    {\n                                                                        sensor.synchronized === \"0\"\n                                                                            ?\n                                                                            <Button onClick={() => fetchDataSensor(sensor.uid, sensor.code)} squared theme=\"info\"><i className='material-icons'>&#xe627;</i></Button>\n                                                                            :\n                                                                            null\n                                                                    }\n\n                                                                </ButtonGroup>\n                                                                :\n                                                                null\n                                                        }\n\n                                                    </td>\n                                                    {\n                                                        sensor.deleted_at === null\n                                                            ?\n                                                            <td>\n                                                                <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                                    <Button outline onClick={() => getSingleSensor(sensor.id, 'User')}>Assign to user</Button>\n                                                                    <Button outline onClick={() => getSingleSensor(sensor.id, 'Supplier')}>Assign to supplier</Button>\n                                                                </ButtonGroup>\n\n                                                            </td>\n\n                                                            :\n                                                            null\n                                                    }\n                                                    <td></td>\n\n\n                                                </tr>\n\n                                            )\n                                        })\n                                    }\n\n                                </tbody>\n                            </table>\n                    }\n\n\n                </Card>\n            </Container>\n            <Modal centered={true} open={toggle}>\n                <ModalHeader className=\"d-flex justify-content-between align-items-center\">\n                    <div>\n                        Sensor code : {code}\n                    </div>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"flex-end\",\n\n                        }}\n                    >\n                        <Button\n                            // theme=\"success\"\n                            onClick={() => assignSensorToUser(userUid, supplierUid)}\n                            className=\"mb-2 mr-1 btn btn-success\"\n                        >\n                            <i class={`fa fa-check mx-2`}></i>\n                            {t('save')}\n                        </Button>\n                        <Button\n                            // theme=\"success\"\n                            className=\"mb-2 mr-1 btn btn-danger\"\n                            onClick={() => { resetForm(); setToggle(false) }}\n                        >\n                            <i class={`fa fa-times mx-2`}></i>\n                            {t('cancel')}\n                        </Button>\n                    </div>\n                </ModalHeader>\n                <ModalBody>\n                    <Row className='d-flex justify-content-center'>\n                        <Col lg='6' md='8' sm='8'>\n                            <FormGroup>\n                                <label htmlFor=\"users\">Select a user to assign sensor</label>\n                                {\n                                    supplier === true\n                                        ?\n                                        <FormSelect\n                                            id=\"users\"\n                                            value={supplierUid}\n                                            onChange={(e) => setSupplierUid(e.target.value)}\n                                        >\n                                            <option value=\"\">Select Supplier</option>\n\n                                            {\n                                                existSuppliers.map(supplier => {\n                                                    return <option value={supplier.uid}>{supplier.name}</option>\n\n                                                })\n                                            }\n                                        </FormSelect>\n\n                                        :\n                                        <FormSelect\n                                            id=\"users\"\n                                            value={userUid}\n                                            onChange={(e) => { setUserUid(e.target.value) }}\n                                        >\n                                            <option value=\"\">Select User</option>\n\n                                            {\n                                                existUsers.map(user => {\n\n                                                    return <option value={user.uid}>{user.name}</option>\n\n                                                })\n                                            }\n                                        </FormSelect>\n                                }\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n\n                </ModalBody>\n            </Modal>\n\n        </>\n    )\n}\n\nexport default SensorsManagement"],"mappings":"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"},"metadata":{},"sourceType":"module"}