{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/Weather.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, Card, CardHeader, CardBody, FormSelect } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport WeatherSmallStat from \"./weatherSmallStat\";\nimport api from \"../api/api\";\nimport moment from 'moment';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\n\nvar Weather = function Weather() {\n  var offer = JSON.parse(localStorage.getItem('user')).offer_type;\n\n  var _useState = useState({\n    lat: '36.799746',\n    lon: '10.186000'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      coord = _useState2[0],\n      setCoord = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      farms = _useState6[0],\n      setFarms = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      farmSelected = _useState8[0],\n      setFarmSelected = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      weatherData = _useState10[0],\n      setWeatherData = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentWeatherData = _useState12[0],\n      setCurrentWeatherData = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      todayWeatherForecast = _useState14[0],\n      setTodayWeatherForecast = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isTemp = _useState16[0],\n      setFlag = _useState16[1];\n\n  var _useState17 = useState(\"snow\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      t = _useState18[0],\n      st = _useState18[1];\n\n  var getFarms = function getFarms() {\n    api.get('/farm/farms').then(function (res) {\n      var DataFarm = res.data;\n      setFarms(DataFarm.farms);\n\n      if (DataFarm.farms.length > 0) {\n        setCoord({\n          lat: DataFarm.farms[0].Latitude,\n          lon: DataFarm.farms[0].Longitude\n        });\n        setFarmSelected(DataFarm.farms[0].name);\n      }\n\n      console.log(DataFarm);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(function () {\n    getFarms();\n  }, []);\n  useEffect(function () {\n    var weather = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return api.post(\"/weather/get-data\", {\n                  type: 'day',\n                  lat: coord.lat,\n                  lon: coord.lon\n                }).then(function (response) {\n                  var today = {};\n                  var weatherData = response.data.data;\n                  today.city = weatherData.name;\n                  today.wind = weatherData.wind.speed;\n                  today.windDirection = weatherData.wind.deg;\n                  today.date = new Date(weatherData.dt * 1000);\n                  today.temp = weatherData.main.feels_like.toFixed(1);\n                  today.tempMax = weatherData.main.temp_max.toFixed(1);\n                  today.tempMin = weatherData.main.temp_min.toFixed(1);\n                  today.main = weatherData.weather[0].main;\n                  today.description = weatherData.weather[0].description;\n                  today.icon = weatherData.weather[0].icon;\n                  today.humidity = weatherData.main.humidity;\n                  today.pressure = weatherData.main.pressure;\n                  today.visibility = weatherData.visibility;\n                  setCurrentWeatherData(today);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function weather() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var weatherForecast = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = {\n                  type: 'forecast',\n                  lat: coord.lat,\n                  lon: coord.lon\n                };\n                _context2.next = 3;\n                return api.post(\"/weather/get-data\", data).then(function (response) {\n                  var weatherData = response.data.data;\n                  var listForecast = weatherData.list;\n                  var days = [];\n\n                  for (var i = 0; i < listForecast.length; i += 8) {\n                    var temp = {};\n                    temp.date = new Date(listForecast[i + 5].dt_txt);\n                    temp.temp = listForecast[i].main.feels_like.toFixed(0);\n                    temp.temp_max = listForecast[i].main.temp_max.toFixed(0);\n                    temp.temp_min = listForecast[i].main.temp_min.toFixed(0);\n                    temp.humidity = listForecast[i].main.humidity;\n                    temp.pressure = listForecast[i].main.pressure;\n                    temp.wind = listForecast[i].wind.speed;\n                    temp.main = listForecast[i].weather[0].main;\n                    temp.description = listForecast[i + 3].weather[0].description;\n                    temp.icon = listForecast[i].weather[0].icon;\n                    days.push(temp);\n                  }\n\n                  setWeatherData(days);\n                  setTodayWeatherForecast(listForecast.slice(0, 4));\n                }).catch(function (error) {\n                  console.log(error);\n                }).finally(function () {\n                  return setTimeout(function () {\n                    setIsLoading(false);\n                  }, 1500);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function weatherForecast() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    weather();\n    weatherForecast();\n  }, [coord.lat, coord.lon]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4 py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: \"Weather Forecast\",\n    subtitle: \"Overview\",\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Today's forecast\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, offer === '2' ? /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-flex align-items-center justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      setCoord({\n        lat: e.target.value.split(\",\")[0],\n        lon: e.target.value.split(\",\")[1]\n      });\n      setFarmSelected(e.target.selectedOptions[0].text);\n    },\n    value: coord,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, \"Select Farm\"), farms.map(function (farm) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\".concat(farm.Latitude, \",\").concat(farm.Longitude),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, farm.name);\n  }))) : null, isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mb-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 62\n    }\n  }, farmSelected)), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"m-4 p-2\",\n    style: {\n      borderRadius: 20,\n      boxShadow: \"1px 2px 9px #bbb\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      textAlign: 'center',\n      fontWeight: 'bold',\n      fontSize: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, moment(currentWeatherData.date).locale('En').format(\"dddd, D MMM\")), /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      textTransform: \"uppercase\",\n      textAlign: 'center',\n      fontWeight: 'lighter',\n      fontSize: 18\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, currentWeatherData.description), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"http://openweathermap.org/img/w/\".concat(currentWeatherData.icon, \".png\"),\n    style: {\n      width: \"100%\",\n      maxWidth: 120\n    },\n    alt: \"weather SVG\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontSize: \"80px\",\n      margin: 0,\n      lineHeight: \"110px\",\n      marginLeft: -10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, parseFloat(currentWeatherData.temp).toFixed(0)), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      lineHeight: \"80px\",\n      marginLeft: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 23\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }, \"Wind: \", currentWeatherData.wind, \" Km/h\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 19\n    }\n  }, \"Humidity: \", currentWeatherData.humidity, \" %\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }, \"Pressure: \", currentWeatherData.pressure, \" Pa\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, \"Temp Moy: \", (Number(currentWeatherData.tempMax) + Number(currentWeatherData.tempMin)) / 2, \" \\xB0C\")), /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, todayWeatherForecast && todayWeatherForecast.map(function (todayForecast) {\n    var time = moment(todayForecast.dt_txt).format('LT');\n    return /*#__PURE__*/React.createElement(WeatherSmallStat, {\n      icon: todayForecast.weather[0].icon,\n      Temp: todayForecast.main.temp,\n      humidity: todayForecast.main.humidity,\n      wind: todayForecast.wind.speed,\n      date: time,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 27\n      }\n    });\n  })))))))), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, \"Upcomming days forecast\"), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"d-flex p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, weatherData && weatherData.map(function (forecast) {\n    var date = moment(forecast.date).locale('En').format('dddd, MMM D');\n    return /*#__PURE__*/React.createElement(WeatherSmallStat, {\n      icon: forecast.icon,\n      humidity: forecast.humidity,\n      Temp: forecast.temp,\n      maxTemp: forecast.temp_max,\n      minTemp: forecast.temp_min,\n      wind: forecast.wind,\n      date: date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    });\n  }))));\n};\n\nexport default Weather;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","CardHeader","CardBody","FormSelect","PageTitle","WeatherSmallStat","api","moment","LoadingSpinner","Weather","offer","JSON","parse","localStorage","getItem","offer_type","lat","lon","coord","setCoord","isLoading","setIsLoading","farms","setFarms","farmSelected","setFarmSelected","weatherData","setWeatherData","currentWeatherData","setCurrentWeatherData","todayWeatherForecast","setTodayWeatherForecast","isTemp","setFlag","t","st","getFarms","get","then","res","DataFarm","data","length","Latitude","Longitude","name","console","log","catch","error","weather","post","type","response","today","city","wind","speed","windDirection","deg","date","Date","dt","temp","main","feels_like","toFixed","tempMax","temp_max","tempMin","temp_min","description","icon","humidity","pressure","visibility","weatherForecast","listForecast","list","days","i","dt_txt","push","slice","finally","setTimeout","e","target","value","split","selectedOptions","text","map","farm","borderRadius","boxShadow","textAlign","fontWeight","fontSize","locale","format","textTransform","display","flexDirection","width","maxWidth","margin","lineHeight","marginLeft","parseFloat","Number","todayForecast","time","forecast"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  FormSelect,\n} from \"shards-react\";\n\nimport PageTitle from \"../components/common/PageTitle\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport WeatherSmallStat from \"./weatherSmallStat\";\nimport api from \"../api/api\"\nimport moment from 'moment'\nimport LoadingSpinner from '../components/common/LoadingSpinner'\n\nconst Weather = () => { \n\n\n  let offer = JSON.parse(localStorage.getItem('user')).offer_type\n  const [coord,setCoord] = useState({lat : '36.799746', lon : '10.186000'})\n  const [isLoading,setIsLoading] = useState(true)\n  const [farms,setFarms] = useState([])\n  const [farmSelected,setFarmSelected] = useState(\"\")\n  const [weatherData, setWeatherData] = useState([]);\n  const [currentWeatherData, setCurrentWeatherData] = useState({});\n  const [todayWeatherForecast, setTodayWeatherForecast] = useState([]);\n  const [isTemp, setFlag] = useState(true);\n  const [t, st] = useState(\"snow\");\n  \n\n\n\n  const  getFarms = () => {\n    api.get('/farm/farms')\n    .then(res =>{\n      const DataFarm = res.data;\n      setFarms(DataFarm.farms);\n      if(DataFarm.farms.length > 0 ){\n          setCoord({\n            lat : DataFarm.farms[0].Latitude,\n            lon : DataFarm.farms[0].Longitude\n          })\n          setFarmSelected(DataFarm.farms[0].name)\n      }\n      console.log(DataFarm)\n  }).catch(error=>{\n    console.log(error)\n  })\n  }\n\n  useEffect(()=>{\n    getFarms()\n  },[])\n\n\n  useEffect(() => {\n\n    const weather = async () => {\n\n      await api.post(\"/weather/get-data\",{type : 'day' ,lat : coord.lat , lon : coord.lon})\n      \n      .then((response) => {\n        var today = {};\n        let weatherData = response.data.data\n        today.city = weatherData.name\n        today.wind = weatherData.wind.speed;\n        today.windDirection = weatherData.wind.deg;\n        today.date = new Date(weatherData.dt*1000);\n        today.temp = ((weatherData.main.feels_like)).toFixed(1);\n        today.tempMax = ((weatherData.main.temp_max)).toFixed(1);\n        today.tempMin = ((weatherData.main.temp_min)).toFixed(1);\n        today.main = weatherData.weather[0].main;\n        today.description = weatherData.weather[0].description;\n        today.icon = weatherData.weather[0].icon;\n        today.humidity = weatherData.main.humidity;\n        today.pressure = weatherData.main.pressure;\n        today.visibility = weatherData.visibility;\n\n        setCurrentWeatherData(today)\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n    }\n \n     const weatherForecast = async () => {\n      let data = {\n        type  : 'forecast',\n        lat  : coord.lat,\n        lon : coord.lon\n      }\n    await api.post(\"/weather/get-data\",data)\n      .then((response) => {\n          let weatherData = response.data.data;\n          let listForecast = weatherData.list;\n          let days = [];\n  for(let i = 0; i < listForecast.length; i+=8) { \n      var temp = {};\n      temp.date = new Date(listForecast[i+5].dt_txt);\n      temp.temp = ((listForecast[i].main.feels_like)).toFixed(0);\n      temp.temp_max = ((listForecast[i].main.temp_max)).toFixed(0);\n      temp.temp_min = ((listForecast[i].main.temp_min)).toFixed(0);\n      temp.humidity = listForecast[i].main.humidity;\n      temp.pressure = listForecast[i].main.pressure;\n      temp.wind = listForecast[i].wind.speed;\n      temp.main = listForecast[i].weather[0].main;\n      temp.description = listForecast[i+3].weather[0].description;\n      temp.icon = listForecast[i].weather[0].icon;\n      days.push(temp);\n    }   \n          setWeatherData(days)\n          setTodayWeatherForecast(listForecast.slice(0,4))\n      })\n      .catch(function(error) {\n        console.log(error);\n      }).finally(() => setTimeout(()=>{\n        setIsLoading(false)\n\n        },1500)\n      )\n    }\n    weather()\n    weatherForecast()\n  }, [coord.lat , coord.lon]);\n  return (\n    <Container fluid className=\"main-content-container px-4 py-2\">\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          sm=\"4\"\n          title=\"Weather Forecast\"\n          subtitle=\"Overview\"\n          className=\"text-sm-left\"\n        />\n      </Row>\n      <h5>Today's forecast</h5>\n      <Row>\n        <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-4\">\n          <Card small className=\"h-100\">\n            {\n              offer === '2'\n              ?\n            <CardHeader className=\"border-bottom d-flex align-items-center justify-content-center\">\n                <FormSelect onChange={(e)=> {setCoord({lat :  e.target.value.split(\",\")[0],lon : e.target.value.split(\",\")[1] }); setFarmSelected(e.target.selectedOptions[0].text)}} value={coord}>\n                  <option value=\"\">Select Farm</option>\n                      {\n                        farms.map(farm=>{\n                          \n                          return(\n                            <option value={`${farm.Latitude},${farm.Longitude}`}>{farm.name}</option>\n\n                          )\n                        })\n                      }\n\n                </FormSelect>\n                \n            </CardHeader>\n              :\n              null\n            }\n            {\n              isLoading\n              ?\n              <LoadingSpinner />\n              :\n            <CardBody>\n              <Row>\n              <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-12\"><h3>{farmSelected}</h3></Col>\n                <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"m-4 p-2\" style={{borderRadius:20,boxShadow :\"1px 2px 9px #bbb\"}}>\n                    <h5 style={{textAlign : 'center' ,fontWeight :'bold' ,fontSize : 24}}>\n                      {moment(currentWeatherData.date).locale('En').format(\"dddd, D MMM\")}\n                    </h5> \n                    <h6  style={{textTransform:\"uppercase\",textAlign : 'center' ,fontWeight :'lighter' ,fontSize : 18}}>{currentWeatherData.description}</h6>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\"\n                      }}\n                    >\n                      <img\n                        src={`http://openweathermap.org/img/w/${currentWeatherData.icon}.png`}\n                        style={{ width: \"100%\", maxWidth: 120 }}\n                        alt=\"weather SVG\"\n                      />\n                      <h2\n                        style={{\n                          fontSize: \"80px\",\n                          margin: 0,\n                          lineHeight: \"110px\",\n                          marginLeft: -10\n                        }}\n                      >\n                        {parseFloat(currentWeatherData.temp).toFixed(0)}\n                      </h2>\n                      <h4 style={{ lineHeight: \"80px\", marginLeft: 5 }}>°C</h4>\n\n                  </div>\n                  {/* <p style={{ margin: 5, fontSize: 25 }}>{currentWeatherData.main.summary}</p>\n                </p> */}\n                  <p style={{ margin: 5 }}>Wind: {currentWeatherData.wind} Km/h</p>\n                  <p style={{ margin: 5 }}>Humidity: {currentWeatherData.humidity} %</p> \n                  <p style={{ margin: 5 }}>Pressure: {currentWeatherData.pressure} Pa</p> \n                  <p style={{ margin: 5 }}>Temp Moy: {(Number(currentWeatherData.tempMax) + Number(currentWeatherData.tempMin) )/ 2 } °C</p> \n\n                </Col>\n                <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                    <Row className=\"d-flex justify-content-center align-items-center\" >\n\n                    {\n                      todayWeatherForecast && todayWeatherForecast.map(todayForecast=>{\n                        let time = moment(todayForecast.dt_txt).format('LT')\n\n                        return(\n                          <WeatherSmallStat\n                          icon={todayForecast.weather[0].icon}\n                          Temp={todayForecast.main.temp}\n                          humidity={todayForecast.main.humidity}\n                          wind={todayForecast.wind.speed}\n                          date={time}\n                          />\n\n                        )\n                      })\n                    }\n                    </Row>\n                </Col>\n              </Row>\n            </CardBody>\n            }\n          </Card>\n        </Col>\n      </Row>\n      <h5>Upcomming days forecast</h5>\n        <Card small className=\"d-flex p-2\" >\n      <Row className=\"d-flex justify-content-center align-items-center \">\n\n            {\n              weatherData && weatherData.map(forecast=>{\n                let date = moment(forecast.date).locale('En').format('dddd, MMM D')\n                return (\n                    <WeatherSmallStat\n                      icon={forecast.icon}\n                      humidity={forecast.humidity}\n                      Temp={forecast.temp}\n                      maxTemp={forecast.temp_max}\n                      minTemp={forecast.temp_min}\n                      wind={forecast.wind}\n                      date={date}\n                    />\n                )\n              })\n            }\n      </Row>\n        </Card>\n    </Container>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}