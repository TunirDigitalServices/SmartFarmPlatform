{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/Overview.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from 'react-router-dom';\nimport { Container, Row, Col, CardBody, Card } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport drop from '../images/drop.png';\nimport drop1 from '../images/drop1.png';\nimport drop2 from '../images/drop2.png';\nimport temp from '../images/temp.png';\nimport humidity from '../images/humidity.png';\nimport press from '../images/press.png';\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields';\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport SmallStatsFields from \"../components/common/SmallStatsFields\";\n\nvar Overview = function Overview(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      farms = _useState2[0],\n      setFarms = _useState2[1];\n\n  var _useState3 = useState({\n    polygon: false,\n    circle: false,\n    rectangle: false,\n    polyline: false,\n    marker: false,\n    circlemarker: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      draw = _useState4[0],\n      setDraw = _useState4[1];\n\n  var history = useHistory(); // const [offer,setOffer] = useState(null)\n  // let user = JSON.parse(localStorage.getItem(\"user\"));\n  // let offerType = user.offer_type;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fieldStats = _useState6[0],\n      setFS = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sensorStats = _useState8[0],\n      setSensorStats = _useState8[1];\n\n  var _useState9 = useState(\"#\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userMapDetails = _useState10[0],\n      setUserMapDetails = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      layerFarm = _useState12[0],\n      setLayerFarm = _useState12[1];\n\n  var _useState13 = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mapConfig = _useState14[0],\n      setMapConfig = _useState14[1];\n\n  var getFieldStats = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/dashboard/fields');\n\n            case 2:\n              response = _context.sent;\n              setFS(response.data.farms);\n              setUserMapDetails(response.data.user_map_details.map_link_details);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFieldStats() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getSensorsStats = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/dashboard/sensors');\n\n            case 2:\n              response = _context2.sent;\n              setSensorStats(response.data.sensors);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getSensorsStats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      crops = _useState16[0],\n      setCrops = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dataCrops = _useState18[0],\n      setDataCrops = _useState18[1];\n\n  var fetchDataCrops = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/crop/crops').then(function (response) {\n                var dataCrops = response.data.farms;\n                setDataCrops(dataCrops);\n                var Crops = [];\n                dataCrops.map(function (farm) {\n                  var fields = farm.fields;\n\n                  if (fields) {\n                    fields.map(function (field) {\n                      var crops = field.crops;\n\n                      if (crops) {\n                        crops.map(function (crop) {\n                          Crops.push({\n                            type: crop.type,\n                            id: crop.id,\n                            fieldId: crop.field_id\n                          });\n                        });\n                      }\n                    });\n                  }\n                });\n                setCrops(Crops);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function fetchDataCrops() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getLayerFarm = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api.get('/farm/farms').then(function (res) {\n                var DataFarm = res.data.farms;\n                setLayerFarm(DataFarm);\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getLayerFarm() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // getLastDataSensor()\n    getLayerFarm();\n    getFieldStats();\n    getSensorsStats(); // fetchDataCrops()\n  }, []);\n  var critical = 0;\n  var full = 0;\n  var opt = 0;\n  fieldStats.map(function (item) {\n    item.fields.map(function (field) {\n      var status = field.status;\n\n      if (status) {\n        if (status == \"Optimal\") {\n          opt++;\n        }\n\n        if (status == \"Full\") {\n          full++;\n        }\n\n        if (status == \"Critical\") {\n          critical++;\n        }\n      }\n    });\n  });\n  var smallStats = [{\n    state: \"\".concat(t('Critical')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint-slash\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: critical,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n      borderColor: \"rgb(0, 184, 216)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Optimal')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: opt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(23,198,113,0.1)\",\n      borderColor: \"rgb(23,198,113)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Full')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: full,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  var online = 0;\n  var offline = 0;\n  var lowBatt = 0;\n  sensorStats.map(function (item) {\n    var sensor = item.id;\n\n    if (sensor) {\n      online++;\n    }\n  });\n  var smallStats2 = [{\n    state: \"\".concat(t('online')),\n    icon: /*#__PURE__*/React.createElement(SignalCellular4BarIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: online,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('low_batt')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-battery-quarter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: lowBatt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('offline')),\n    icon: /*#__PURE__*/React.createElement(SignalCellularNodataIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: offline,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  var smallStats3 = [{\n    state: \"20 cm\",\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        color: \"#F6BE47\"\n      },\n      src: drop,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }),\n    label: \"33%\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"40 cm\",\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: drop2,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }),\n    label: \"20%\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"60 cm\",\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: drop1,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }),\n    label: \"10%\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  var smallStats4 = [{\n    state: \"\".concat(t('Temp.'), \" (\\xB0C)\"),\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: temp,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }),\n    label: \"19\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Humidity'), \" (%)\"),\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: humidity,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 15\n      }\n    }),\n    label: \"33\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Pression'), \" (kPa)\"),\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: press,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 15\n      }\n    }),\n    label: \"99\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n\n  var FilterByStatus = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(status) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              data = {\n                status: status\n              };\n              _context5.next = 3;\n              return api.post('/field/field-status', data).then(function (response) {\n                var farmsData = response.data.farms;\n                setFarms(farmsData);\n              }).catch(function (err) {\n                swal({\n                  title: 'Error',\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function FilterByStatus(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var ToSensorPage = function ToSensorPage() {\n    history.push('/Sensors');\n    window.location.reload();\n  };\n\n  var sensorsData = useSensorData('/sensor/sensor-update-data');\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: t('overview'),\n    className: \"text-sm-left mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      marginBottom: \"-15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, t('stats')))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }\n  }, t('field_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0 d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }\n  }, smallStats.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      FilterByStatus: FilterByStatus,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 9\n    }\n  }, t('sensor_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0 d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, smallStats2.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      ToSensorPage: ToSensorPage,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 19\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  }, t('sensor_stats_air')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0 d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }\n  }, smallStats4.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStatsFields // ToSensorPage={ToSensorPage}\n    , {\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\" // chartData={stats.datasets}\n      // chartLabels={stats.chartLabels}\n      ,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 19\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 9\n    }\n  }, t('sensor_stats_soil')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0 d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  }, smallStats3.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStatsFields // ToSensorPage={ToSensorPage}\n    , {\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\" // chartData={stats.datasets}\n      // chartLabels={stats.chartLabels}\n      ,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 19\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FilterFields, {\n    smallStats: smallStats,\n    sensorsData: sensorsData,\n    crops: crops,\n    filteredByStatus: farms,\n    sensorStats: sensorStats,\n    fieldStats: fieldStats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      marginBottom: \"-15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 9\n    }\n  }, t('map'))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LeafletMap, {\n    data: layerFarm,\n    sensor: sensorStats,\n    draw: draw,\n    zoom: mapConfig.zoom,\n    center: mapConfig.center,\n    fromAcrion: mapConfig.fromAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }\n  }))));\n};\n\nOverview.propTypes = {\n  /**\n   * The small stats dataset.\n   */\n  smallStats: PropTypes.array\n};\nOverview.defaultProps = {// smallStats: [\n  //   {\n  //     state: \"Critical\",\n  //     icon: <i class=\"fas fa-tint-slash\"></i>,\n  //     label: \"Fields\",\n  //     value: critical,\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"6\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n  //         borderColor: \"rgb(0, 184, 216)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Optimal\",\n  //     icon: <i class={\"far fa-check-circle\"}></i>,\n  //     label: \"Fields\",\n  //     value: opt,\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"6\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(23,198,113,0.1)\",\n  //         borderColor: \"rgb(23,198,113)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Full\",\n  //     icon: <i class=\"fas fa-tint\"></i>,\n  //     label: \"Fields\",\n  //     value: full,\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   }\n  // ],\n  // smallStats2: [\n  //   {\n  //     state: \"Online\",\n  //     icon: <SignalCellular4BarIcon />,\n  //     label: \"Sensors\",\n  //     value: \"21\",\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Low Battery\",\n  //     icon: <i class=\"fas fa-battery-quarter\"></i>,\n  //     label: \"Sensors\",\n  //     value: \"3\",\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Offline\",\n  //     icon: <SignalCellularNodataIcon />,\n  //     label: \"Sensors\",\n  //     value: \"1\",\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   }\n  // ]\n};\nexport default Overview;","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useHistory","Container","Row","Col","CardBody","Card","PageTitle","SmallStats","LeafletMap","SignalCellularNodataIcon","SignalCellular4BarIcon","drop","drop1","drop2","temp","humidity","press","api","useTranslation","FilterFields","swal","useSensorData","SmallStatsFields","Overview","props","farms","setFarms","polygon","circle","rectangle","polyline","marker","circlemarker","draw","setDraw","history","t","i18n","fieldStats","setFS","sensorStats","setSensorStats","userMapDetails","setUserMapDetails","layerFarm","setLayerFarm","zoom","center","fromAction","mapConfig","setMapConfig","getFieldStats","get","response","data","user_map_details","map_link_details","getSensorsStats","sensors","crops","setCrops","dataCrops","setDataCrops","fetchDataCrops","then","Crops","map","farm","fields","field","crop","push","type","id","fieldId","field_id","catch","err","console","log","getLayerFarm","res","DataFarm","critical","full","opt","item","status","smallStats","state","icon","label","value","chartLabels","attrs","md","sm","datasets","fill","borderWidth","backgroundColor","borderColor","online","offline","lowBatt","sensor","smallStats2","smallStats3","color","smallStats4","FilterByStatus","post","farmsData","title","ToSensorPage","window","location","reload","sensorsData","marginBottom","margin","display","flexDirection","flexWrap","width","stats","idx","borderStyle","height","propTypes","array","defaultProps"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/Overview.js"],"sourcesContent":["import React ,{useEffect,useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {useHistory} from 'react-router-dom'\nimport { Container, Row, Col, CardBody, Card } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport drop from '../images/drop.png'\nimport drop1 from '../images/drop1.png'\nimport drop2 from '../images/drop2.png'\nimport temp from '../images/temp.png'\nimport humidity from '../images/humidity.png'\nimport press from '../images/press.png'\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields'\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport SmallStatsFields from \"../components/common/SmallStatsFields\";\n\n\n\nconst Overview = (props) => {\n  const [farms,setFarms] = useState([]);\n  const [draw,setDraw] = useState({\n         polygon: false,\n        circle: false,\n        rectangle: false,\n        polyline: false,\n        marker: false,\n        circlemarker: false\n  })\n  const history = useHistory();\n  // const [offer,setOffer] = useState(null)\n\n  // let user = JSON.parse(localStorage.getItem(\"user\"));\n  // let offerType = user.offer_type;\n  const { t, i18n } = useTranslation();\n\n  const [fieldStats , setFS] = useState([])\n  const [sensorStats , setSensorStats] = useState([])\n\n  const [userMapDetails , setUserMapDetails] = useState(\"#\")\n\n  const [layerFarm , setLayerFarm] = useState([])\n  const [mapConfig,setMapConfig] = useState({\n    zoom:\"\",\n    center:[],\n    fromAction: false,\n  })\n  const getFieldStats = async () => {\n    const response = await api.get('/dashboard/fields');\n    setFS(response.data.farms); \n    setUserMapDetails(response.data.user_map_details.map_link_details)\n  }\n\n  const getSensorsStats = async () => {\n    const response = await api.get('/dashboard/sensors');                            \n      setSensorStats(response.data.sensors);\n    }\n    const [crops , setCrops] =useState([])\n    const [dataCrops, setDataCrops] = useState([]);\n\n    const fetchDataCrops = async () => {\n        await api.get('/crop/crops')\n        .then(response => {\n          let dataCrops = response.data.farms;\n          setDataCrops(dataCrops)\n          let Crops = [];\n          dataCrops.map(farm => {\n            let fields = farm.fields;\n            if (fields) {\n              fields.map(field => {\n               let crops = field.crops\n               if(crops){\n                crops.map(crop=>{\n                  Crops.push({\n                    type : crop.type,\n                    id : crop.id,\n                    fieldId : crop.field_id\n                  })\n                })\n               }\n              })\n            }\n          })\n          setCrops(Crops)\n        }).catch(err=>{\n          console.log(err)\n        })\n      }\n\n     const getLayerFarm = async () =>{\n      await api.get('/farm/farms').then(res =>{\n        const DataFarm = res.data.farms;\n        setLayerFarm(DataFarm);\n      })\n     } \n\n    useEffect(()=>{\n      // getLastDataSensor()\n      getLayerFarm()\n      getFieldStats(); \n      getSensorsStats();\n      // fetchDataCrops()\n    },[])\n    let critical = 0;\n    let full = 0;\n    let opt = 0;\n            \n    fieldStats.map(item => {\n      item.fields.map(field=>{\n        let status = field.status\n        if(status){\n          if(status == \"Optimal\") {\n            opt++\n          }\n          if(status == \"Full\") {\n            full++\n          }\n          if(status == \"Critical\") {\n            critical++\n          }\n        }\n\n      })\n    });\n    \n    let smallStats = [\n      {\n        state: `${t('Critical')}`,\n        icon: <i class=\"fas fa-tint-slash\"></i>,\n        label: `${t('fields')}`,\n        value: critical,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"6\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n            borderColor: \"rgb(0, 184, 216)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `${t('Optimal')}`,\n        icon: <i class={\"far fa-check-circle\"}></i>,\n        label: `${t('fields')}`,\n        value: opt,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"6\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(23,198,113,0.1)\",\n            borderColor: \"rgb(23,198,113)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `${t('Full')}`,\n        icon: <i class=\"fas fa-tint\"></i>,\n        label: `${t('fields')}`,\n        value:full,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      }\n    ]\n\n      let online = 0;\n      let offline = 0;\n      let lowBatt = 0;\n\n    sensorStats.map(item => {\n      let sensor = item.id;\n      if(sensor){\n        online++;\n      }\n    });\n              \n   let smallStats2 = [\n      {\n        state: `${t('online')}`,\n        icon: <SignalCellular4BarIcon />,\n        label: `${t('sensors')}`,\n        value: online,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `${t('low_batt')}`,\n        icon: <i class=\"fas fa-battery-quarter\"></i>,\n        label: `${t('sensors')}`,\n        value: lowBatt,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `${t('offline')}`,\n        icon: <SignalCellularNodataIcon />,\n        label: `${t('sensors')}`,\n        value: offline,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      }\n    ]\n\n    let smallStats3 = [\n      {\n        state: `20 cm`,\n        icon: <img style={{color:\"#F6BE47\"}} src={drop} alt=\"\" />,\n        label: `33%`,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `40 cm`,\n        icon: <img src={drop2} alt=\"\" />,\n        label: `20%`,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `60 cm`,\n        icon: <img src={drop1} alt=\"\" />,\n        label: `10%`,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      }\n    ]\n    let smallStats4 = [\n      {\n        state: `${t('Temp.')} (°C)`    ,\n        icon: <img  src={temp} alt=\"\" />,\n        label: `19`,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `${t('Humidity')} (%)`,\n        icon: <img src={humidity} alt=\"\" />,\n        label: `33`,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      },\n      {\n        state: `${t('Pression')} (kPa)`,\n        icon: <img src={press} alt=\"\" />,\n        label: `99`,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: { md: \"4\", sm: \"6\" },\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(255,180,0,0.1)\",\n            borderColor: \"rgb(255,180,0)\",\n            data: []\n          }\n        ]\n      }\n    ]\n\n     const  FilterByStatus = async (status) =>{\n        let data = {\n          status :status\n        }\n         await api.post('/field/field-status',data)\n         .then(response =>{ \n           let farmsData = response.data.farms\n           setFarms(farmsData);\n         }).catch((err)=>{\n          swal({\n            title: 'Error',\n            icon: \"error\"\n        });\n         })\n      }\n\n      const ToSensorPage =() => {\n        history.push('/Sensors') \n        window.location.reload()\n      }\n\n      let sensorsData = useSensorData('/sensor/sensor-update-data')\n\nreturn(\n  <Container fluid className=\"main-content-container px-4\">\n    {/* Page Header */}\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle title={t('overview')} className=\"text-sm-left mb-3\" />\n    </Row>\n\n    <Row>\n      <Col lg=\"12\" md=\"6\" sm=\"6\" className=\"mb-4\">\n        <h4 style={{ marginBottom: \"-15px\" }}>{t('stats')}</h4>\n      </Col>\n    </Row>\n\n    {/* Small Stats Blocks */}\n    <Row>\n      <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-4\">\n        <p style={{ margin: 0 }}>{t('field_stats')}</p>\n        <Card small className=\"stats-small\">\n          <CardBody className=\"p-0 d-flex\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                width: \"100%\"\n              }}\n            >\n              {/* <Stats /> */}\n              {smallStats.map((stats, idx) => (\n                <>\n                  <SmallStats\n                      FilterByStatus={FilterByStatus}\n                    style={{\n                      borderColor: \"blue\",\n                      borderWidth: 2,\n                      borderStyle: \"solid\"\n                    }}\n                    id={`small-stats-${idx}`}\n                    variation=\"1\"\n                    chartData={stats.datasets}\n                    chartLabels={stats.chartLabels}\n                    label={stats.label}\n                    value={stats.value}\n                    icon={stats.icon}\n                    state={stats.state}\n                  />\n                  {idx != 2 ? (\n                    <hr\n                      style={{\n                        backgroundColor: \"#ebebeb\",\n                        width: \"1px\",\n                        height: \"75%\"\n                      }}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ))}\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n      <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-4\">\n        <p style={{ margin: 0 }}>{t('sensor_stats')}</p>\n        <Card small className=\"stats-small\">\n          <CardBody className=\"p-0 d-flex\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                width: \"100%\"\n              }}\n            >\n              {smallStats2.map((stats, idx) => (\n                <>\n                  <SmallStats\n                  ToSensorPage={ToSensorPage}\n                    style={{\n                      borderColor: \"blue\",\n                      borderWidth: 2,\n                      borderStyle: \"solid\"\n                    }}\n                    id={`small-stats-${idx}`}\n                    variation=\"1\"\n                    chartData={stats.datasets}\n                    chartLabels={stats.chartLabels}\n                    label={stats.label}\n                    value={stats.value}\n                    icon={stats.icon}\n                    state={stats.state}\n                  />\n                  {idx != 2 ? (\n                    <hr\n                      style={{\n                        backgroundColor: \"#ebebeb\",\n                        width: \"1px\",\n                        height: \"75%\"\n                      }}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ))}\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n      <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-4\">\n        <p style={{ margin: 0 }}>{t('sensor_stats_air')}</p>\n        <Card small className=\"stats-small\">\n          <CardBody className=\"p-0 d-flex\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                width: \"100%\"\n              }}\n            >\n              {smallStats4.map((stats, idx) => (\n                <>\n                  <SmallStatsFields\n                  // ToSensorPage={ToSensorPage}\n                    style={{\n                      borderColor: \"blue\",\n                      borderWidth: 2,\n                      borderStyle: \"solid\"\n                    }}\n                    id={`small-stats-${idx}`}\n                    variation=\"1\"\n                    // chartData={stats.datasets}\n                    // chartLabels={stats.chartLabels}\n                    label={stats.label}\n                    value={stats.value}\n                    icon={stats.icon}\n                    state={stats.state}\n                  />\n                  {idx != 2 ? (\n                    <hr\n                      style={{\n                        backgroundColor: \"#ebebeb\",\n                        width: \"1px\",\n                        height: \"75%\"\n                      }}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ))}\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n      <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-4\">\n        <p style={{ margin: 0 }}>{t('sensor_stats_soil')}</p>\n        <Card small className=\"stats-small\">\n          <CardBody className=\"p-0 d-flex\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"wrap\",\n                width: \"100%\"\n              }}\n            >\n              {smallStats3.map((stats, idx) => (\n                <>\n                  <SmallStatsFields\n                  // ToSensorPage={ToSensorPage}\n                    style={{\n                      borderColor: \"blue\",\n                      borderWidth: 2,\n                      borderStyle: \"solid\"\n                    }}\n                    id={`small-stats-${idx}`}\n                    variation=\"1\"\n                    // chartData={stats.datasets}\n                    // chartLabels={stats.chartLabels}\n                    label={stats.label}\n                    value={stats.value}\n                    icon={stats.icon}\n                    state={stats.state}\n                  />\n                  {idx != 2 ? (\n                    <hr\n                      style={{\n                        backgroundColor: \"#ebebeb\",\n                        width: \"1px\",\n                        height: \"75%\"\n                      }}\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ))}\n            </div>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n    <Row>\n        <FilterFields \n          smallStats={smallStats}\n          sensorsData={sensorsData}\n          crops={crops}\n          filteredByStatus={farms} \n          sensorStats={sensorStats} \n          fieldStats={fieldStats}\n          />\n    </Row>\n    <Row>\n      <Col lg=\"12\" md=\"6\" sm=\"6\" className=\"mb-4\">\n        <h4 style={{ marginBottom: \"-15px\" }}>{t('map')}</h4>\n      </Col>\n      <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-4\">\n        <LeafletMap data={layerFarm} sensor={sensorStats}  draw={draw} zoom={mapConfig.zoom} center={mapConfig.center} fromAcrion={mapConfig.fromAction}/>\n      </Col>\n    </Row>\n  </Container>\n  )}\n\nOverview.propTypes = {\n  /**\n   * The small stats dataset.\n   */\n  smallStats: PropTypes.array\n};\n\n\nOverview.defaultProps = {\n  \n  // smallStats: [\n  //   {\n  //     state: \"Critical\",\n  //     icon: <i class=\"fas fa-tint-slash\"></i>,\n  //     label: \"Fields\",\n  //     value: critical,\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"6\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n  //         borderColor: \"rgb(0, 184, 216)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Optimal\",\n  //     icon: <i class={\"far fa-check-circle\"}></i>,\n  //     label: \"Fields\",\n  //     value: opt,\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"6\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(23,198,113,0.1)\",\n  //         borderColor: \"rgb(23,198,113)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Full\",\n  //     icon: <i class=\"fas fa-tint\"></i>,\n  //     label: \"Fields\",\n  //     value: full,\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   }\n  // ],\n  // smallStats2: [\n  //   {\n  //     state: \"Online\",\n  //     icon: <SignalCellular4BarIcon />,\n  //     label: \"Sensors\",\n  //     value: \"21\",\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Low Battery\",\n  //     icon: <i class=\"fas fa-battery-quarter\"></i>,\n  //     label: \"Sensors\",\n  //     value: \"3\",\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     state: \"Offline\",\n  //     icon: <SignalCellularNodataIcon />,\n  //     label: \"Sensors\",\n  //     value: \"1\",\n  //     chartLabels: [null, null, null, null, null, null, null],\n  //     attrs: { md: \"4\", sm: \"6\" },\n  //     datasets: [\n  //       {\n  //         label: \"Today\",\n  //         fill: \"start\",\n  //         borderWidth: 1.5,\n  //         backgroundColor: \"rgba(255,180,0,0.1)\",\n  //         borderColor: \"rgb(255,180,0)\",\n  //         data: []\n  //       }\n  //     ]\n  //   }\n  // ]\n};\n\nexport default Overview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}