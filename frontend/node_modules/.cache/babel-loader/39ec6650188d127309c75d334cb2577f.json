{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/Sensors.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, FormInput, Button, Card, CardBody } from \"shards-react\";\nimport { FormSelect } from \"shards-react\";\nimport \"./../assets/Styles.css\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport DBSensor from \"./Sensor\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\nimport drop from '../images/drop.png';\nimport drop1 from '../images/drop1.png';\nimport drop2 from '../images/drop2.png';\nimport temp from '../images/temp.png';\nimport humidity from '../images/humidity.png';\nimport press from '../images/press.png';\nimport useSensorData from \"../utils/useSensorData\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport SmallStatsFields from \"../components/common/SmallStatsFields\";\nexport default function Sensors() {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataSensors = _useState2[0],\n      setDataSensors = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataFields = _useState4[0],\n      setDataFields = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dataCrops = _useState6[0],\n      setDataCrops = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fields = _useState8[0],\n      setFields = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchCode = _useState10[0],\n      setSearchCode = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      searchField = _useState12[0],\n      setSearchField = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchState = _useState14[0],\n      setSearchState = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sensorData = _useState16[0],\n      setSensorData = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      readingtime = _useState18[0],\n      setReadingTime = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      batteryLevel = _useState20[0],\n      setBatteryLevel = _useState20[1];\n\n  var _useState21 = useState(true),\n      _useState22 = _slicedToArray(_useState21, 2),\n      isLoading = _useState22[0],\n      setIsLoading = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      crops = _useState24[0],\n      setCrops = _useState24[1];\n\n  var _useState25 = useState({\n    temp: '',\n    humidity: '',\n    pressure: '',\n    humidityMV1: '',\n    humidityMV2: '',\n    humidityMV3: ''\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      dataSensor = _useState26[0],\n      setDataSensor = _useState26[1];\n\n  var fetchDataSensors = function fetchDataSensors() {\n    api.get(\"/sensor/sensors\").then(function (response) {\n      var sensorData = response.data;\n      setTimeout(function () {\n        setDataSensors(sensorData);\n\n        if (sensorData.length > 0) {\n          setSearchCode(sensorData[0].code);\n        }\n      }, 2600);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var fetchDataFields = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get(\"/field/fields\").then(function (response) {\n                var fieldData = response.data.farms;\n                setDataFields(fieldData);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchDataFields() {\n      return _ref.apply(this, arguments);\n    };\n  }(); // const fetchDataCrops = async () => {\n  //   await api.get('/crop/crops')\n  //   .then(response => {\n  //     let dataCrops = response.data.farms;\n  //     setDataCrops(dataCrops)\n  //     let Crops = [];\n  //     dataCrops.map(farm => {\n  //       let fields = farm.fields;\n  //       if (fields) {\n  //         fields.map(field => {\n  //          let crops = field.crops\n  //          if(crops){\n  //           crops.map(crop=>{\n  //             Crops.push({\n  //               type : crop.type,\n  //               id : crop.id,\n  //               fieldId : crop.field_id\n  //             })\n  //           })\n  //          }\n  //         })\n  //       }\n  //     })\n  //     setCrops(Crops)\n  //   }).catch(err=>{\n  //     console.log(err)\n  //   })\n  // }\n\n\n  var sensorsData = useSensorData('/sensor/sensor-update-data');\n  useEffect(function () {\n    fetchDataSensors();\n    fetchDataFields(); // fetchDataCrops()\n  }, []);\n\n  var getFields = function getFields() {\n    var Field = [];\n    dataFields.map(function (farm) {\n      var fields = farm.fields;\n\n      if (fields) {\n        fields.map(function (field) {\n          Field.push({\n            name: field.name,\n            id: field.id,\n            uid: field.uid,\n            sensors: field.sensors\n          });\n        });\n      }\n    });\n    setFields(Field);\n  };\n\n  useEffect(function () {\n    getFields();\n  }, [dataFields]);\n  var filteredSensors = sensorsData.filter(function (sensor) {\n    var charge = sensor.charge;\n    console.log(charge);\n\n    if (searchCode != '' && !searchState) {\n      return sensor.code.toLowerCase().includes(searchCode.toLowerCase());\n    }\n\n    if (searchState === 'online') {\n      return sensor.charge > 3.000;\n    }\n\n    if (searchState === 'low') {\n      return sensor.charge <= 2.000;\n    }\n\n    if (searchState === 'offline') {\n      var today = moment();\n      return moment(sensor.time.slice(0, 10)).format('YYYY-MM-DD') != today.format('YYYY-MM-DD');\n    }\n\n    return sensor;\n  });\n  useEffect(function () {\n    sensorsData.map(function (data) {\n      if (data) {\n        setDataSensor({\n          temp: data.temperature,\n          humidity: data.humidity,\n          pressure: data.pressure / 1000\n        });\n      }\n    });\n  }, [sensorsData]);\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      mappingMv1 = _useState28[0],\n      setMappingMv1 = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      mappingMv2 = _useState30[0],\n      setMappingMv2 = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      mappingMv3 = _useState32[0],\n      setMappingMv3 = _useState32[1];\n\n  var mappingMv = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dateSensor, idSensor, vals) {\n      var dataMapping, urlMapping;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dataMapping = {\n                vals: vals,\n                date: dateSensor,\n                sensor_id: idSensor\n              };\n              urlMapping = '/sensor/sensor-mapping';\n              _context3.next = 5;\n              return api.post(urlMapping, dataMapping).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          if (response.data.type === \"success\") {\n                            setMappingMv1(response.data.valMapping[0]);\n                            setMappingMv2(response.data.valMapping[1]);\n                            setMappingMv3(response.data.valMapping[2]);\n                          }\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x4) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()).catch(function (error) {\n                console.log(error);\n              }).finally(function () {\n                return setIsLoading(false);\n              });\n\n            case 5:\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function mappingMv(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var smallStats3 = [{\n    state: \"20 cm (%)\",\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        color: \"#F6BE47\"\n      },\n      src: drop,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }),\n    label: mappingMv1,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"40 cm (%)\",\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: drop2,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }),\n    label: mappingMv2,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"60 cm (%)\",\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: drop1,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }),\n    label: mappingMv3,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  var smallStats4 = [{\n    state: \"\".concat(t('Temp.'), \" (\\xB0C)\"),\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: temp,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }),\n    label: dataSensor.temp,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Humidity'), \" (%)\"),\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: humidity,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }),\n    label: dataSensor.humidity,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Pression'), \" (kPa)\"),\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: press,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    }),\n    label: dataSensor.pressure ? parseFloat(dataSensor.pressure).toFixed(2) : \"\",\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  useEffect(function () {\n    sensorsData.map( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(sensors) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return mappingMv(sensors.time, sensors.sensor_id, [sensors.mv1, sensors.mv2, sensors.mv3]);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  }, [sensorsData]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header d-flex justify-content-between align-items-center  py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('sensors'),\n    subtitle: t('overview'),\n    className: \"text-sm-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, t('search_sensors')), /*#__PURE__*/React.createElement(FormSelect, {\n    value: searchCode,\n    onChange: function onChange(e) {\n      return setSearchCode(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    disabled: true,\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, t('sensor_code')), dataSensors.map(function (sensor) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: sensor.code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 24\n      }\n    }, sensor.code);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 11\n    }\n  }, t('filter_state')), /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(evt) {\n      setSearchState(evt.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"online\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }, t('online')), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"low\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, t('low_batt')), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, t('offline'))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }\n  }, t('sensor_stats_air')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 19\n    }\n  }, smallStats4.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStatsFields // ToSensorPage={ToSensorPage}\n    , {\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\" // chartData={stats.datasets}\n      // chartLabels={stats.chartLabels}\n      ,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, t('sensor_stats_soil')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0 d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, smallStats3.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStatsFields // ToSensorPage={ToSensorPage}\n    , {\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\" // chartData={stats.datasets}\n      // chartLabels={stats.chartLabels}\n      ,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 23\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  })))))), isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DBSensor, {\n    filteredSensors: filteredSensors,\n    chargeLevel: batteryLevel,\n    readingtime: readingtime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 15\n    }\n  })));\n}","map":{"version":3,"names":["React","useEffect","useState","Container","Row","Col","FormInput","Button","Card","CardBody","FormSelect","PageTitle","DBSensor","api","useTranslation","LoadingSpinner","drop","drop1","drop2","temp","humidity","press","useSensorData","moment","useHistory","SmallStatsFields","Sensors","t","i18n","history","dataSensors","setDataSensors","dataFields","setDataFields","dataCrops","setDataCrops","fields","setFields","searchCode","setSearchCode","searchField","setSearchField","searchState","setSearchState","sensorData","setSensorData","readingtime","setReadingTime","batteryLevel","setBatteryLevel","isLoading","setIsLoading","crops","setCrops","pressure","humidityMV1","humidityMV2","humidityMV3","dataSensor","setDataSensor","fetchDataSensors","get","then","response","data","setTimeout","length","code","catch","error","console","log","fetchDataFields","fieldData","farms","sensorsData","getFields","Field","map","farm","field","push","name","id","uid","sensors","filteredSensors","filter","sensor","charge","toLowerCase","includes","today","time","slice","format","temperature","mappingMv1","setMappingMv1","mappingMv2","setMappingMv2","mappingMv3","setMappingMv3","mappingMv","dateSensor","idSensor","vals","dataMapping","date","sensor_id","urlMapping","post","type","valMapping","finally","smallStats3","state","icon","color","label","chartLabels","attrs","md","sm","datasets","fill","borderWidth","backgroundColor","borderColor","smallStats4","parseFloat","toFixed","mv1","mv2","mv3","display","flexDirection","alignItems","e","target","value","evt","margin","flexWrap","width","stats","idx","borderStyle","height"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/Sensors.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col, FormInput,Button,Card,CardBody } from \"shards-react\";\nimport { FormSelect } from \"shards-react\";\nimport \"./../assets/Styles.css\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport DBSensor from \"./Sensor\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport LoadingSpinner from \"../components/common/LoadingSpinner\";\nimport drop from '../images/drop.png'\nimport drop1 from '../images/drop1.png'\nimport drop2 from '../images/drop2.png'\nimport temp from '../images/temp.png'\nimport humidity from '../images/humidity.png'\nimport press from '../images/press.png'\nimport useSensorData from \"../utils/useSensorData\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\nimport SmallStatsFields from \"../components/common/SmallStatsFields\";\n\nexport default function Sensors() {\n  const { t, i18n } = useTranslation();\n  const history = useHistory()\n  const [dataSensors, setDataSensors] = useState([]);\n  const [dataFields, setDataFields] = useState([]);\n  const [dataCrops, setDataCrops] = useState([]);\n  const [fields, setFields] = useState([]);\n  const [searchCode, setSearchCode] = useState('')\n  const [searchField, setSearchField] = useState('')\n  const [searchState, setSearchState] = useState('')\n  const [sensorData, setSensorData] = useState([]);\n  const [readingtime,setReadingTime] = useState('')\n  const [batteryLevel, setBatteryLevel] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [crops , setCrops] = useState([])\n  const [dataSensor,setDataSensor] = useState({\n    temp : '',\n    humidity :'',\n    pressure :'',\n    humidityMV1 :'',\n    humidityMV2 :'',\n    humidityMV3 :'' \n  })\n  const fetchDataSensors =  () => {\n    api.get(`/sensor/sensors`)\n      .then(response => {\n        let sensorData = response.data;\n        setTimeout(()=>{\n          setDataSensors(sensorData);\n          if(sensorData.length > 0 ){\n            setSearchCode(sensorData[0].code)\n          }\n        },2600)\n      }).catch(error=>{\n        console.log(error)\n      })\n  };\n  const fetchDataFields = async () => {\n    await api.get(`/field/fields`)\n      .then(response => {\n        let fieldData = response.data.farms;\n        setDataFields(fieldData);\n      })\n  };\n  // const fetchDataCrops = async () => {\n  //   await api.get('/crop/crops')\n  //   .then(response => {\n  //     let dataCrops = response.data.farms;\n  //     setDataCrops(dataCrops)\n  //     let Crops = [];\n  //     dataCrops.map(farm => {\n  //       let fields = farm.fields;\n  //       if (fields) {\n  //         fields.map(field => {\n  //          let crops = field.crops\n  //          if(crops){\n  //           crops.map(crop=>{\n  //             Crops.push({\n  //               type : crop.type,\n  //               id : crop.id,\n  //               fieldId : crop.field_id\n  //             })\n  //           })\n  //          }\n  //         })\n  //       }\n  //     })\n  //     setCrops(Crops)\n  //   }).catch(err=>{\n  //     console.log(err)\n  //   })\n  // }\n\n  let sensorsData = useSensorData('/sensor/sensor-update-data')  \n\n  useEffect(() => {\n    fetchDataSensors();\n    fetchDataFields()\n    // fetchDataCrops()\n  }, []);\n\n  const getFields = () => {\n    let Field = [];\n    dataFields.map(farm => {\n      let fields = farm.fields;\n      if (fields) {\n        fields.map(field => {\n          Field.push({\n            name: field.name,\n            id: field.id,\n            uid: field.uid,\n            sensors : field.sensors\n          })\n        })\n      }\n    })\n    setFields(Field)\n  }\n\n  useEffect(() => {\n    getFields()\n  }, [dataFields])\n\n\n  const filteredSensors =  sensorsData.filter((sensor)=>{\n    let charge = sensor.charge\n    console.log(charge)\n      if ((searchCode != '' && !searchState)) {\n        return (\n          sensor.code.toLowerCase().includes(searchCode.toLowerCase())\n\n        )\n      }\n      if (searchState === 'online' ) {\n        return (\n          sensor.charge > 3.000 \n\n        )\n      }\n      if (searchState === 'low') {\n        return (\n          sensor.charge <= 2.000\n\n        )\n      }\n      if (searchState === 'offline') {\n        let today = moment()\n        return (\n         moment(sensor.time.slice(0,10)).format('YYYY-MM-DD') != today.format('YYYY-MM-DD')\n\n        )\n      }\n      return sensor\n  }\n  \n  );\n\n  useEffect(()=>{\n    sensorsData.map(data=>{\n      if(data){\n        setDataSensor({\n          temp : data.temperature,\n          humidity : data.humidity,\n          pressure: data.pressure / 1000,\n\n        })\n      }\n    })\n  },[sensorsData])\n\n  const [mappingMv1,setMappingMv1] = useState(\"\")\n  const [mappingMv2,setMappingMv2] = useState(\"\")\n  const [mappingMv3,setMappingMv3] = useState(\"\")\n  \n  const mappingMv = async (dateSensor, idSensor, vals) => {\n    try {\n      let dataMapping = {\n        vals: vals,\n        date: dateSensor,\n        sensor_id: idSensor\n      }\n      let urlMapping = '/sensor/sensor-mapping'\n  \n      await api.post(urlMapping,dataMapping)\n      .then(async response=>{\n          if(response.data.type === \"success\"){\n            setMappingMv1(response.data.valMapping[0])\n            setMappingMv2(response.data.valMapping[1])\n            setMappingMv3(response.data.valMapping[2])\n  \n          }\n        }).catch(error=>{\n          console.log(error)\n        }).finally(()=>setIsLoading(false))\n      \n    } catch (error) {\n      console.log(error)\n  \n    }\n  }\n\n  let smallStats3 = [\n    {\n      state: `20 cm (%)`,\n      icon: <img style={{color:\"#F6BE47\"}} src={drop} alt=\"\" />,\n      label: mappingMv1,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `40 cm (%)`,\n      icon: <img src={drop2} alt=\"\" />,\n      label: mappingMv2,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `60 cm (%)`,\n      icon: <img src={drop1} alt=\"\" />,\n      label: mappingMv3,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    }\n  ]\n  let smallStats4 = [\n    {\n      state: `${t('Temp.')} (°C)`    ,\n      icon: <img  src={temp} alt=\"\" />,\n      label: dataSensor.temp,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('Humidity')} (%)`,\n      icon: <img src={humidity} alt=\"\" />,\n      label: dataSensor.humidity,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('Pression')} (kPa)`,\n      icon: <img src={press} alt=\"\" />,\n      label: dataSensor.pressure ? parseFloat(dataSensor.pressure).toFixed(2) : \"\",\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    }\n  ]\n  \n  useEffect(()=>{\n\n   \n    sensorsData.map(async sensors=>{\n        await mappingMv(sensors.time, sensors.sensor_id, [sensors.mv1, sensors.mv2, sensors.mv3])                                 \n\n\n    })\n    \n  },[sensorsData]) \n  return (\n    <Container fluid className=\"main-content-container px-4\">\n      {/* Page Header */}\n      <Row noGutters className=\"page-header d-flex justify-content-between align-items-center  py-4\">\n        <PageTitle\n          sm=\"4\"\n          title={t('sensors')}\n          subtitle={t('overview')}\n          className=\"text-sm-left\"\n        />\n         {/* <div>\n            <Button theme=\"info\" onClick={() => history.push('/my-history')}><i className='material-icons'>&#xe889;</i> View History</Button>\n          </div> */}\n      </Row>\n      <Row\n        style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <Col lg=\"6\" md=\"8\" sm=\"8\" className=\"mb-4\">\n          <h6 className=\"m-0\">{t('search_sensors')}</h6>\n          <FormSelect\n            value={searchCode}\n            onChange={(e) => setSearchCode(e.target.value)}\n          >\n            <option value=\"\" disabled selected>{t('sensor_code')}</option>\n            {\n              dataSensors.map(sensor=>{\n                return <option value={sensor.code}>{sensor.code}</option>\n\n              })\n            }\n            </FormSelect>\n        </Col>\n        <Col lg=\"6\" md=\"8\" sm=\"8\" className=\"mb-4\">\n          {\" \"}\n          <h6 className=\"m-0\">{t('filter_state')}</h6>\n          <FormSelect onChange={evt => { setSearchState(evt.target.value) }}>\n            <option value='online'>{t('online')}</option>\n            <option value='low'>{t('low_batt')}</option>\n            <option value='offline'>{t('offline')}</option>\n          </FormSelect>\n        </Col>\n        {/* <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"mb-4\">\n          {\" \"}\n          <h6 className=\"m-0\">{t('filter_field')}</h6>\n          <FormSelect value={searchField} onChange={evt =>  setSearchField(evt.target.value)}>\n            <option value=\"\" >{t('select_field')}</option>\n            {\n              fields.map(field => (\n                <option value={field.id}>{field.name}</option>\n              ))\n            }\n          </FormSelect>\n        </Col> */}\n      </Row>\n      <Row>\n            <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-4\">\n            <p style={{ margin: 0 }}>{t('sensor_stats_air')}</p>\n            <Card small className=\"stats-small\">\n                <CardBody className=\"p-0 d-flex\">\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      width: \"100%\"\n                    }}\n                  >\n                    {smallStats4.map((stats, idx) => (\n                      <>\n                        <SmallStatsFields\n                        // ToSensorPage={ToSensorPage}\n                          style={{\n                            borderColor: \"blue\",\n                            borderWidth: 2,\n                            borderStyle: \"solid\"\n                          }}\n                          id={`small-stats-${idx}`}\n                          variation=\"1\"\n                          // chartData={stats.datasets}\n                          // chartLabels={stats.chartLabels}\n                          label={stats.label}\n                          value={stats.value}\n                          icon={stats.icon}\n                          state={stats.state}\n                        />\n                        {idx != 2 ? (\n                          <hr\n                            style={{\n                              backgroundColor: \"#ebebeb\",\n                              width: \"1px\",\n                              height: \"75%\"\n                            }}\n                          />\n                        ) : (\n                          <></>\n                        )}\n                      </>\n                    ))}\n                  </div>\n                </CardBody>\n            </Card>\n          </Col>\n          <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-4\">\n            <p style={{ margin: 0 }}>{t('sensor_stats_soil')}</p>\n            <Card small className=\"stats-small\">\n              <CardBody className=\"p-0 d-flex\">\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    width: \"100%\"\n                  }}\n                >\n                  {smallStats3.map((stats, idx) => (\n                    <>\n                      <SmallStatsFields\n                      // ToSensorPage={ToSensorPage}\n                        style={{\n                          borderColor: \"blue\",\n                          borderWidth: 2,\n                          borderStyle: \"solid\"\n                        }}\n                        id={`small-stats-${idx}`}\n                        variation=\"1\"\n                        // chartData={stats.datasets}\n                        // chartLabels={stats.chartLabels}\n                        label={stats.label}\n                        value={stats.value}\n                        icon={stats.icon}\n                        state={stats.state}\n                      />\n                      {idx != 2 ? (\n                        <hr\n                          style={{\n                            backgroundColor: \"#ebebeb\",\n                            width: \"1px\",\n                            height: \"75%\"\n                          }}\n                        />\n                      ) : (\n                        <></>\n                      )}\n                    </>\n                  ))}\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n        </Row>\n     \n\n        {\n          isLoading ?\n          <LoadingSpinner />\n      \n            : \n            <Row>\n              <DBSensor filteredSensors={filteredSensors} chargeLevel={batteryLevel} readingtime={readingtime}/>\n          </Row>\n        }\n\n    </Container>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}