{"ast":null,"code":"import _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/FieldSettingForms/standardSoil.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Form, FormSelect, Button, Slider } from \"shards-react\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction StandardSoil(props) {\n  var _this = this;\n\n  var soilTypes = [\"Clay\", \"Loamy sand\", \"Sand\", \"Loam\"];\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDisabled = _useState2[0],\n      setIsDisabled = _useState2[1];\n\n  var _useState3 = useState(_objectSpread({}, props)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  useEffect(function () {\n    if (state.depth != 0) {\n      setIsDisabled(false);\n    }\n  }, []);\n  useEffect(function () {\n    if (props.onChange) {\n      props.onChange(state);\n    }\n  }, [state]);\n\n  var depthInput = function depthInput() {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        textAlign: \"center\"\n      },\n      disabled: isDisabled,\n      className: \"form-control\",\n      onChange: function onChange(evt) {\n        return setState(_objectSpread({}, state, {\n          depth: evt.target.value\n        }));\n      },\n      value: state.depth,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, t('depth')), depthInput()), /*#__PURE__*/React.createElement(Col, {\n    md: \"9\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(evt) {\n      return setState(_objectSpread({}, state, {\n        uni: evt.target.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, soilTypes.map(function (item, index) {\n    if (index == soilTypes.indexOf(state.uni)) {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        selected: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }\n      }, item);\n    } else {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }\n      }, item);\n    }\n  }))))));\n}\n\nStandardSoil.propTypes = {\n  depth: PropTypes.number,\n  uni: PropTypes.string\n};\nStandardSoil.defaultProps = {\n  depth: 0,\n  uni: \"Clay\",\n  soilProprety: \"Standard\"\n};\nexport default StandardSoil;","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Row","Col","Form","FormSelect","Button","Slider","useTranslation","StandardSoil","props","soilTypes","isDisabled","setIsDisabled","state","setState","t","i18n","depth","onChange","depthInput","textAlign","evt","target","value","margin","uni","map","item","index","indexOf","propTypes","number","string","defaultProps","soilProprety"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/FieldSettingForms/standardSoil.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Form, FormSelect, Button, Slider } from \"shards-react\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction StandardSoil(props) {\n  const soilTypes = [\"Clay\", \"Loamy sand\", \"Sand\", \"Loam\"];\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [state, setState] = useState({ ...props });\n  const { t, i18n } = useTranslation();\n\n  useEffect(() => {\n    if (state.depth != 0) {\n      setIsDisabled(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (props.onChange) {\n      props.onChange(state);\n    }\n  }, [state]);\n\n  const depthInput = () => {\n    return (\n      <input\n        style={{ textAlign: \"center\" }}\n        disabled={isDisabled}\n        className=\"form-control\"\n        onChange={evt => setState({ ...state, depth: evt.target.value })}\n        value={state.depth}\n      />\n    );\n  };\n\n  return (\n    <>\n      <>\n        <Col md=\"3\" className=\"form-group\">\n          <p style={{ margin: \"0px\" }}>{t('depth')}</p>\n          {depthInput()}\n        </Col>\n        <Col md=\"9\" className=\"form-group\">\n          <div>\n            <p style={{ margin: \"0px\" }}>{t('soil_type')}</p>\n            <FormSelect\n              onChange={evt => setState({ ...state, uni: evt.target.value })}\n            >\n              {soilTypes.map((item, index) => {\n                if (index == soilTypes.indexOf(state.uni)) {\n                  return <option selected={true}>{item}</option>;\n                } else {\n                  return <option>{item}</option>;\n                }\n              })}\n            </FormSelect>\n          </div>\n        </Col>\n      </>\n    </>\n  );\n}\n\nStandardSoil.propTypes = {\n  depth: PropTypes.number,\n  uni: PropTypes.string\n};\n\nStandardSoil.defaultProps = {\n  depth: 0,\n  uni: \"Clay\",\n  soilProprety:\"Standard\"\n};\n\nexport default StandardSoil;"],"mappings":"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"},"metadata":{},"sourceType":"module"}