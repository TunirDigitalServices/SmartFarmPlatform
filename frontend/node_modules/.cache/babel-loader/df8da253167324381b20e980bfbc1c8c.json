{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport api from '../api/api';\n\nvar useSensorData = function useSensorData(url, sensorCode, sensorLatLon) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sensorData = _useState2[0],\n      setSensorData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allDataSensor = _useState4[0],\n      setAllDataSensor = _useState4[1];\n\n  var userUid = JSON.parse(localStorage.getItem('user')).id;\n  var data = {\n    userUid: userUid,\n    sensorCode: sensorCode,\n    sensorLatLon: sensorLatLon\n  };\n\n  var getDataSensor = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.post(url, data).then( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(response) {\n                  var dataSensor;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          dataSensor = response.sensors;\n                          setSensorData({});\n                          setAllDataSensor(dataSensor);\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getDataSensor() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getDataSensor();\n    setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!url) {\n                _context3.next = 3;\n                break;\n              }\n\n              _context3.next = 3;\n              return getDataSensor();\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })), 30000);\n  }, []);\n  return allDataSensor;\n};\n\nexport default useSensorData;","map":{"version":3,"names":["React","useEffect","useState","api","useSensorData","url","sensorCode","sensorLatLon","sensorData","setSensorData","allDataSensor","setAllDataSensor","userUid","JSON","parse","localStorage","getItem","id","data","getDataSensor","post","then","response","dataSensor","sensors","catch","error","console","log","setInterval"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/utils/useSensorData.js"],"sourcesContent":["import React ,{useEffect,useState} from 'react'\nimport api from '../api/api'\n\n\n\nconst useSensorData = (url, sensorCode, sensorLatLon) => {\n    const [sensorData, setSensorData] = useState([]);\n    const [allDataSensor, setAllDataSensor] = useState([]);\n    let userUid = JSON.parse(localStorage.getItem('user')).id\n\n\n    let data = {\n        userUid : userUid,\n\t\tsensorCode : sensorCode,\n\t\tsensorLatLon: sensorLatLon\n      }\n      const getDataSensor = async () => {\n         await api.post(url,data)\n          .then(async response=>{\n            let dataSensor = response.sensors\n                setSensorData({})\n                setAllDataSensor(dataSensor)\n          }).catch(error=>{\n            console.log(error)\n          })\n\n      }\n  useEffect(()=>{\n     getDataSensor();\n     \n     setInterval(async () => {\n      if (url) {\n        await getDataSensor()\n      }\n    }, 30000);\n  },[])\nreturn allDataSensor\n\n\n}\n\nexport default useSensorData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,UAAN,EAAkBC,YAAlB,EAAmC;EAAA,gBACjBL,QAAQ,CAAC,EAAD,CADS;EAAA;EAAA,IAC9CM,UAD8C;EAAA,IAClCC,aADkC;;EAAA,iBAEXP,QAAQ,CAAC,EAAD,CAFG;EAAA;EAAA,IAE9CQ,aAF8C;EAAA,IAE/BC,gBAF+B;;EAGrD,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,EAAvD;EAGA,IAAIC,IAAI,GAAG;IACPN,OAAO,EAAGA,OADH;IAEbN,UAAU,EAAGA,UAFA;IAGbC,YAAY,EAAEA;EAHD,CAAX;;EAKE,IAAMY,aAAa;IAAA,oEAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACbhB,GAAG,CAACiB,IAAJ,CAASf,GAAT,EAAaa,IAAb,EACJG,IADI;gBAAA,qEACC,iBAAMC,QAAN;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;0BACAC,UADA,GACaD,QAAQ,CAACE,OADtB;0BAEAf,aAAa,CAAC,EAAD,CAAb;0BACAE,gBAAgB,CAACY,UAAD,CAAhB;;wBAHA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CADD;;gBAAA;kBAAA;gBAAA;cAAA,KAKFE,KALE,CAKI,UAAAC,KAAK,EAAE;gBACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;cACD,CAPI,CADa;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbP,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAWJlB,SAAS,CAAC,YAAI;IACXkB,aAAa;IAEbU,WAAW,wEAAC;MAAA;QAAA;UAAA;YAAA;cAAA,KACPxB,GADO;gBAAA;gBAAA;cAAA;;cAAA;cAAA,OAEHc,aAAa,EAFV;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAD,IAIT,KAJS,CAAX;EAKF,CARQ,EAQP,EARO,CAAT;EASF,OAAOT,aAAP;AAGC,CAlCD;;AAoCA,eAAeN,aAAf"},"metadata":{},"sourceType":"module"}