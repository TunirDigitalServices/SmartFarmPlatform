{"ast":null,"code":"import _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorHistoryChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nvar SensorHistoryChart = function SensorHistoryChart(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var dataMv1 = [];\n    var dataMv2 = [];\n    var dataMv3 = [];\n    var temperature = [];\n    var humidity = [];\n    var tempSubSoil = [];\n    var altitude = [];\n    var pressure = [];\n    var array = [];\n    data && data.forEach(function (sensorData) {\n      var dateTime = moment(sensorData.time); // use the full timestamp\n\n      var hour = dateTime.format('MMM Do HH:00'); // format date as \"MMM Do HH:00\"\n\n      dataMv1.push(parseFloat(sensorData.mv1).toFixed(2));\n      dataMv2.push(parseFloat(sensorData.mv2).toFixed(2));\n      dataMv3.push(parseFloat(sensorData.mv3).toFixed(2));\n      temperature.push(parseFloat(sensorData.temperature).toFixed(2));\n      altitude.push(parseFloat(sensorData.altitude));\n      pressure.push(parseFloat(sensorData.pressure).toFixed(2) / 1000);\n      tempSubSoil.push(parseFloat(sensorData.ts).toFixed(2));\n      humidity.push(parseFloat(sensorData.humidity).toFixed(2));\n      labels.push(hour);\n    });\n    labels.reverse();\n    dataMv1.reverse();\n    dataMv2.reverse();\n    dataMv3.reverse();\n    temperature.reverse();\n    altitude.reverse();\n    pressure.reverse();\n    tempSubSoil.reverse();\n    humidity.reverse();\n    var state = {\n      labels: labels,\n      datasets: [{\n        label: 'Temperature',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: temperature,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#f46835\"\n      }, {\n        label: 'Humidity',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: humidity,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#2D40E5\"\n      }, {\n        label: 'Pressure',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: pressure,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#4BC0C0\"\n      }, {\n        label: 'Altitude',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: altitude,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#2ab49f\"\n      }, {\n        label: 'Temperature subsoil',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: tempSubSoil,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#8621e4\"\n      }, {\n        label: 'Niveau 1',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataMv1,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#FC5566\"\n      }, {\n        label: 'Niveau 2',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataMv2,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#3CB371\"\n      }, {\n        label: 'Niveau 3',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataMv3,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#1E90FF\"\n      }]\n    };\n    setState(state);\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('Sensor History')),\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SensorHistoryChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useTranslation","SensorHistoryChart","data","state","setState","t","i18n","getChartData","labels","dataMv1","dataMv2","dataMv3","temperature","humidity","tempSubSoil","altitude","pressure","array","forEach","sensorData","dateTime","time","hour","format","push","parseFloat","mv1","toFixed","mv2","mv3","ts","reverse","datasets","label","lineTension","borderWidth","fill","backgroundColor","borderColor","title","display","text","fontSize","legend","position"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorHistoryChart.js"],"sourcesContent":["import moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nconst SensorHistoryChart = ({ data }) => {\n  const [state, setState] = useState(null);\n  const { t, i18n } = useTranslation();\n\n  const getChartData = () => {\n    let labels = [];\n    let dataMv1 = [];\n    let dataMv2 = [];\n    let dataMv3 = [];\n    let temperature = [];\n    let humidity = [];\n    let tempSubSoil = [];\n    let altitude = [];\n    let pressure = [];\n    let array = []\n\n    data &&\n      data.forEach(sensorData => {\n        const dateTime = moment(sensorData.time); // use the full timestamp\n              const hour = dateTime.format('MMM Do HH:00'); // format date as \"MMM Do HH:00\"\n        dataMv1.push(parseFloat(sensorData.mv1).toFixed(2));\n        dataMv2.push(parseFloat(sensorData.mv2).toFixed(2));\n        dataMv3.push(parseFloat(sensorData.mv3).toFixed(2));\n        temperature.push(parseFloat(sensorData.temperature).toFixed(2));\n        altitude.push(parseFloat(sensorData.altitude));\n        pressure.push(parseFloat(sensorData.pressure).toFixed(2) / 1000);\n        tempSubSoil.push(parseFloat(sensorData.ts).toFixed(2));\n        humidity.push(parseFloat(sensorData.humidity).toFixed(2));\n        labels.push(hour);\n \n      });\n      labels.reverse();\n      dataMv1.reverse();\n      dataMv2.reverse();\n      dataMv3.reverse();\n      temperature.reverse();\n      altitude.reverse();\n      pressure.reverse();\n      tempSubSoil.reverse();\n      humidity.reverse();\n    const state = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Temperature',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: temperature,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#f46835\"\n        },\n        {\n          label: 'Humidity',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: humidity,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#2D40E5\"\n        },\n        {\n          label: 'Pressure',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: pressure,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#4BC0C0\"\n        },\n        {\n          label: 'Altitude',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: altitude,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#2ab49f\"\n        },\n        {\n          label: 'Temperature subsoil',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: tempSubSoil,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#8621e4\"\n        },\n        {\n          label: 'Niveau 1',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: dataMv1,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#FC5566\"\n        },\n        {\n          label: 'Niveau 2',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: dataMv2,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#3CB371\"\n        },\n        {\n          label: 'Niveau 3',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: dataMv3,\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"#1E90FF\"\n        },\n      ]\n    };\n    setState(state);\n  };\n\n  useEffect(() => {\n    getChartData();\n  }, [data]);\n\n  return (\n    <Line\n      data={state}\n      options={{\n        title: {\n          display: true,\n          text: `${t('Sensor History')}`,\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'bottom'\n        }\n      }}\n    />\n  );\n};\n\nexport default SensorHistoryChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}