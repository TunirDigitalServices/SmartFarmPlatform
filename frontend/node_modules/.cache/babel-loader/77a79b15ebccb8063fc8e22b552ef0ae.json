{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\src\\\\views\\\\SatelliteImages.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col, CardBody, CardHeader, Card, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport LeafletMap from \"./map\";\nimport { Line } from \"react-chartjs-2\";\nimport SatteliteMap from \"./SatteliteMap\";\nimport moment from \"moment\";\nimport api from \"../api/api\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport Button from \"@mui/material/Button\";\nimport SatelliteAltIcon from \"@mui/icons-material/SatelliteAlt\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\n\nvar SatelliteImages = function SatelliteImages() {\n  var _useState = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      coords = _useState2[0],\n      setCoords = _useState2[1];\n\n  var _useState3 = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false,\n    draw: {\n      polygon: false,\n      circle: false,\n      rectangle: false,\n      polyline: false,\n      marker: false,\n      circlemarker: false\n    }\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mapConfig = _useState4[0],\n      setMapConfig = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dates = _useState6[0],\n      setDates = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fields = _useState8[0],\n      setFields = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      farms = _useState10[0],\n      setFarms = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedField = _useState12[0],\n      setSelectedField = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      satellitesImages = _useState14[0],\n      setSatellitesImages = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedImages = _useState16[0],\n      setSelectedImages = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      dataDisplayed = _useState18[0],\n      setDataDisplayed = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      polygonDisplayed = _useState20[0],\n      setPolygonDisplayed = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      loadingImages = _useState22[0],\n      setLoadingImages = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      selectedImageUrl = _useState24[0],\n      setSelectedImageUrl = _useState24[1];\n\n  var _useState25 = useState(moment().format(\"D MMM YYYY\")),\n      _useState26 = _slicedToArray(_useState25, 2),\n      selectedDate = _useState26[0],\n      setSelectedDate = _useState26[1];\n\n  var getSatelliteImages = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var fieldId, apiUrl, response, fetchedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              setLoadingImages(true);\n              fieldId = selectedField[0].Id;\n              apiUrl = \"/field/get-sattelite-images/\".concat(fieldId);\n              _context.next = 6;\n              return api.get(apiUrl);\n\n            case 6:\n              response = _context.sent;\n              // Assuming the backend now returns image URLs\n              fetchedData = response.data.imagesData.map(function (image) {\n                return _objectSpread({}, image, {\n                  // Add a preview URL if needed (for thumbnails)\n                  previewUrl: image.image_url // or generate thumbnails on backend\n\n                });\n              });\n              setSatellitesImages(fetchedData);\n              setLoadingImages(false);\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(\"API error:\", _context.t0);\n              setLoadingImages(false);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function getSatelliteImages() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  console.log(satellitesImages);\n  useEffect(function () {\n    var getDataFields = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return api.get(\"/field/fields\").then(function (res) {\n                  var newData = res.data.farms;\n                  setFarms(newData);\n                  var Fields = [];\n                  newData.map(function (item) {\n                    var fields = item.fields;\n\n                    if (fields) {\n                      fields.map(function (itemfield) {\n                        Fields.push({\n                          title: itemfield.name,\n                          status: itemfield.status,\n                          description: itemfield.description,\n                          Uid: itemfield.uid,\n                          farm_id: itemfield.farm_id,\n                          Latitude: itemfield.Latitude,\n                          Longitude: itemfield.Longitude,\n                          coordinates: itemfield.coordinates,\n                          Id: itemfield.id\n                        });\n                      });\n                    }\n                  });\n                  setFields(Fields);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getDataFields() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getDataFields();\n  }, []);\n  useEffect(function () {\n    if (selectedField.length > 0) {\n      getSatelliteImages();\n    }\n  }, [selectedField]);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  useEffect(function () {\n    // Generate an array of dates for the next 7 days\n    var next7Days = Array.from({\n      length: 6\n    }, function (_, index) {\n      return moment().subtract(index, \"days\").format(\"D MMM YYYY\");\n    });\n    var ascendingDates = next7Days.reverse();\n    setDates(ascendingDates);\n  }, []);\n\n  var formatDate = function formatDate(dateString) {\n    // Parse the input date string using Moment.js\n    var parsedDate = moment(dateString, \"D MMM YYYY\"); // Format the date in the desired format (YYYY-MM-DD)\n\n    var formattedDate = parsedDate.format(\"YYYY-MM-DD\");\n    return formattedDate;\n  };\n\n  var handleDateClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(date) {\n      var formattedDate, filteredData, fieldId, userId, apiUrl, response, newImages;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setSelectedDate(date);\n              formattedDate = formatDate(date); // Filter existing images first\n\n              filteredData = satellitesImages.filter(function (data) {\n                return moment(data.created_at).format(\"D MMM YYYY\") === date;\n              });\n              setSelectedImages(filteredData); // If no images for this date, fetch from backend\n\n              if (!(filteredData.length === 0)) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.prev = 5;\n              setLoadingImages(true);\n              fieldId = selectedField[0].Id;\n              userId = JSON.parse(localStorage.getItem(\"user\")).id;\n              apiUrl = \"/satellite-images/\".concat(userId, \"/\").concat(fieldId, \"/\").concat(formattedDate);\n              _context3.next = 12;\n              return api.get(apiUrl);\n\n            case 12:\n              response = _context3.sent;\n\n              if (response.data.imagesData && response.data.imagesData.length > 0) {\n                newImages = response.data.imagesData.map(function (img) {\n                  return _objectSpread({}, img, {\n                    previewUrl: img.image_url\n                  });\n                });\n                setSatellitesImages(function (prev) {\n                  return [].concat(_toConsumableArray(prev), _toConsumableArray(newImages));\n                });\n                setSelectedImages(newImages);\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 16:\n              _context3.prev = 16;\n              _context3.t0 = _context3[\"catch\"](5);\n              console.error(\"API error:\", _context3.t0);\n\n            case 19:\n              _context3.prev = 19;\n              setLoadingImages(false);\n              return _context3.finish(19);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 16, 19, 22]]);\n    }));\n\n    return function handleDateClick(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getSelectedField = function getSelectedField(e) {\n    var selectedId = e.target.value;\n    var selected = fields && fields.filter(function (field) {\n      return field.Id == selectedId;\n    });\n    setSelectedField(selected);\n  };\n\n  useEffect(function () {\n    var filtredData = satellitesImages.filter(function (data) {\n      return moment(data.created_at).format(\"D MMM YYYY\") === selectedDate && data.field_id === selectedField[0].Id;\n    });\n    setSelectedImages(filtredData);\n  }, [selectedDate, selectedField]);\n\n  var handleClick = function handleClick(image) {\n    if (image) {\n      var imageUrl = \"http://localhost:8000\".concat(image.image_url); // Prepend the backend URL\n\n      setSelectedImageUrl(imageUrl); // Save the full image URL with localhost\n\n      setDataDisplayed(image.data || []); // Save data for the selected image (e.g., coordinates or metadata)\n\n      setPolygonDisplayed(image.polygon || []); // Save polygon data if applicable\n    }\n  };\n\n  var renderImageGallery = function renderImageGallery() {\n    if (loadingImages) {\n      return /*#__PURE__*/React.createElement(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        my: 2,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (selectedImages.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: \"#bebebe\",\n          textAlign: \"center\",\n          padding: \"20px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, t(\"no_images_available\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(100px, 1fr))\",\n        gap: \"10px\",\n        padding: \"10px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 7\n      }\n    }, selectedImages.map(function (image, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        onClick: function onClick() {\n          return handleClick(image);\n        },\n        style: {\n          cursor: \"pointer\",\n          border: selectedImageUrl === image.image_url ? \"2px solid #29B2C4\" : \"1px solid #ddd\",\n          borderRadius: \"4px\",\n          overflow: \"hidden\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: image.previewUrl || image.image_url,\n        alt: \"Satellite \".concat(index),\n        style: {\n          width: \"100%\",\n          height: \"80px\",\n          objectFit: \"cover\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: \"4px\",\n          fontSize: \"18px\",\n          textAlign: \"center\",\n          textTransform: 'uppercase',\n          font: font\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }\n      }, image.type));\n    }));\n  };\n\n  console.log(selectedImageUrl);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-3 pb-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"page-header py-2 mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    subtitle: t(\"overview\"),\n    title: t(\"Satellite Images\"),\n    className: \" mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    className: \"main-content-container p-3 border bg-light rounded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"pt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"py-2 d-md-block d-lg-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-0\",\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    value: selectedField,\n    onChange: getSelectedField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, t(\"select_field\")), fields.map(function (field) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: field.Id,\n      value: field.Id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 27\n      }\n    }, field.title);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SatteliteMap, {\n    farms: farms,\n    data: selectedField,\n    satellitesImages: selectedImages,\n    selectedData: dataDisplayed,\n    drawn: polygonDisplayed,\n    draw: mapConfig.draw,\n    edit: mapConfig.edit,\n    zoom: coords.zoom,\n    center: coords.center,\n    fromAction: coords.fromAction,\n    selectedImageUrl: selectedImageUrl,\n    renderImageGallery: renderImageGallery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mt-0\",\n    style: {\n      height: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, fields.length === 0 ? /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-none d-lg-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    value: selectedField,\n    onChange: getSelectedField,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 23\n    }\n  }, t(\"select_field\")), fields.map(function (field) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: field.Id,\n      value: field.Id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 27\n      }\n    }, field.title);\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 19\n    }\n  }, selectedField.length > 0 && selectedField.map(function (field) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        fontSize: 14,\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 33\n      }\n    }, t(\"lat\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 35\n      }\n    }, field.Latitude))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      style: {\n        fontSize: 14,\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 33\n      }\n    }, t(\"lon\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 35\n      }\n    }, field.Longitude)))), /*#__PURE__*/React.createElement(Row, {\n      className: \"border-bottom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"12\",\n      md: \"12\",\n      sm: \"12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: 14,\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 33\n      }\n    }, t(\"name_field\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 53\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 35\n      }\n    }, field.title)))));\n  }), selectedField.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"#bebebe\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#bebebe\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 25\n    }\n  }, t(\"message_image\")), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-satellite\",\n    style: {\n      fontSize: \"40px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 23\n    }\n  }, selectedField.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      fontSize: 14,\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, \" \", \"Satellite Images List\"), /*#__PURE__*/React.createElement(Calendar, {\n    onChange: function onChange(date) {\n      return handleDateClick(moment(date).format(\"D MMM YYYY\"));\n    },\n    value: selectedDate ? new Date(moment(selectedDate, \"D MMM YYYY\")) : null,\n    locale: localStorage.getItem(\"local\") ? \"\".concat(localStorage.getItem(\"local\"), \"-\").concat(localStorage.getItem(\"local\").toUpperCase()) : \"en-EN\",\n    tileContent: function tileContent(_ref4) {\n      var date = _ref4.date,\n          view = _ref4.view;\n      var formattedDate = moment(date).format(\"D MMM YYYY\");\n      var hasSatelliteImages = satellitesImages.some(function (data) {\n        return moment(data.created_at).format(\"D MMM YYYY\") === formattedDate;\n      });\n      return view === \"month\" && hasSatelliteImages ? /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          color: \"#29B2C4\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 35\n        }\n      }, \"\\u2022\") : null;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 29\n    }\n  })))))))))));\n};\n\nexport default SatelliteImages;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","CardBody","CardHeader","Card","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Tooltip","FormInput","FormSelect","FormGroup","Form","PageTitle","useTranslation","LeafletMap","Line","SatteliteMap","moment","api","CircularProgress","Box","LinearProgress","Button","SatelliteAltIcon","ListAltIcon","Calendar","SatelliteImages","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","draw","polygon","circle","rectangle","polyline","marker","circlemarker","mapConfig","setMapConfig","dates","setDates","fields","setFields","farms","setFarms","selectedField","setSelectedField","satellitesImages","setSatellitesImages","selectedImages","setSelectedImages","dataDisplayed","setDataDisplayed","polygonDisplayed","setPolygonDisplayed","loadingImages","setLoadingImages","selectedImageUrl","setSelectedImageUrl","format","selectedDate","setSelectedDate","getSatelliteImages","fieldId","Id","apiUrl","get","response","fetchedData","data","imagesData","map","image","previewUrl","image_url","console","error","log","getDataFields","then","res","newData","Fields","item","itemfield","push","title","name","status","description","Uid","uid","farm_id","coordinates","id","length","t","i18n","next7Days","Array","from","_","index","subtract","ascendingDates","reverse","formatDate","dateString","parsedDate","formattedDate","handleDateClick","date","filteredData","filter","created_at","userId","JSON","parse","localStorage","getItem","newImages","img","prev","getSelectedField","e","selectedId","target","value","selected","field","filtredData","field_id","handleClick","imageUrl","renderImageGallery","color","textAlign","padding","display","gridTemplateColumns","gap","cursor","border","borderRadius","overflow","width","height","objectFit","fontSize","textTransform","font","type","edit","fontWeight","justifyContent","alignItems","flexDirection","Date","toUpperCase","view","hasSatelliteImages","some"],"sources":["C:/Users/lenovo/Desktop/smartFarm/backoffice/frontend/src/views/SatelliteImages.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  CardHeader,\r\n  Card,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Tooltip,\r\n  FormInput,\r\n  FormSelect,\r\n  FormGroup,\r\n  Form\r\n} from \"shards-react\";\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport LeafletMap from \"./map\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport SatteliteMap from \"./SatteliteMap\";\r\nimport moment from \"moment\";\r\nimport api from \"../api/api\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { Box, LinearProgress } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SatelliteAltIcon from \"@mui/icons-material/SatelliteAlt\";\r\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst SatelliteImages = () => {\r\n  const [coords, setCoords] = useState({\r\n    Latitude: \"\",\r\n    Longitude: \"\",\r\n    zoom: \"\",\r\n    center: [],\r\n    fromAction: false\r\n  });\r\n  const [mapConfig, setMapConfig] = useState({\r\n    zoom: \"\",\r\n    center: [],\r\n    fromAction: false,\r\n    draw: {\r\n      polygon: false,\r\n      circle: false,\r\n      rectangle: false,\r\n      polyline: false,\r\n      marker: false,\r\n      circlemarker: false\r\n    }\r\n  });\r\n  const [dates, setDates] = useState([]);\r\n  const [fields, setFields] = useState([]);\r\n  const [farms, setFarms] = useState([]);\r\n  const [selectedField, setSelectedField] = useState([]);\r\n  const [satellitesImages, setSatellitesImages] = useState([]);\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [dataDisplayed, setDataDisplayed] = useState([]);\r\n  const [polygonDisplayed, setPolygonDisplayed] = useState([]);\r\n  const [loadingImages, setLoadingImages] = useState(false);\r\n  const [selectedImageUrl, setSelectedImageUrl] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    moment().format(\"D MMM YYYY\")\r\n  );\r\n\r\n  const getSatelliteImages = async () => {\r\n    try {\r\n      setLoadingImages(true);\r\n      const fieldId = selectedField[0].Id;\r\n      const apiUrl = `/field/get-sattelite-images/${fieldId}`;\r\n      const response = await api.get(apiUrl);\r\n      \r\n      // Assuming the backend now returns image URLs\r\n      const fetchedData = response.data.imagesData.map(image => ({\r\n        ...image,\r\n        // Add a preview URL if needed (for thumbnails)\r\n        previewUrl: image.image_url // or generate thumbnails on backend\r\n      }));\r\n      \r\n      setSatellitesImages(fetchedData);\r\n      setLoadingImages(false);\r\n    } catch (error) {\r\n      console.error(\"API error:\", error);\r\n      setLoadingImages(false);\r\n    }\r\n  };\r\n\r\n  console.log(satellitesImages)\r\n  useEffect(() => {\r\n    const getDataFields = async () => {\r\n      await api.get(\"/field/fields\").then(res => {\r\n        const newData = res.data.farms;\r\n        setFarms(newData);\r\n        let Fields = [];\r\n        newData.map(item => {\r\n          let fields = item.fields;\r\n          if (fields) {\r\n            fields.map(itemfield => {\r\n              Fields.push({\r\n                title: itemfield.name,\r\n                status: itemfield.status,\r\n                description: itemfield.description,\r\n                Uid: itemfield.uid,\r\n                farm_id: itemfield.farm_id,\r\n                Latitude: itemfield.Latitude,\r\n                Longitude: itemfield.Longitude,\r\n                coordinates: itemfield.coordinates,\r\n                Id: itemfield.id\r\n              });\r\n            });\r\n          }\r\n        });\r\n        setFields(Fields);\r\n      });\r\n    };\r\n    getDataFields();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedField.length > 0) {\r\n      getSatelliteImages();\r\n    }\r\n  }, [selectedField]);\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    // Generate an array of dates for the next 7 days\r\n    const next7Days = Array.from({ length: 6 }, (_, index) =>\r\n      moment()\r\n        .subtract(index, \"days\")\r\n        .format(\"D MMM YYYY\")\r\n    );\r\n\r\n    const ascendingDates = next7Days.reverse();\r\n\r\n    setDates(ascendingDates);\r\n  }, []);\r\n\r\n  const formatDate = dateString => {\r\n    // Parse the input date string using Moment.js\r\n    const parsedDate = moment(dateString, \"D MMM YYYY\");\r\n\r\n    // Format the date in the desired format (YYYY-MM-DD)\r\n    const formattedDate = parsedDate.format(\"YYYY-MM-DD\");\r\n\r\n    return formattedDate;\r\n  };\r\n\r\n  const handleDateClick = async (date) => {\r\n    setSelectedDate(date);\r\n    const formattedDate = formatDate(date);\r\n    \r\n    // Filter existing images first\r\n    const filteredData = satellitesImages.filter(\r\n      data => moment(data.created_at).format(\"D MMM YYYY\") === date\r\n    );\r\n    \r\n    setSelectedImages(filteredData);\r\n    \r\n    // If no images for this date, fetch from backend\r\n    if (filteredData.length === 0) {\r\n      try {\r\n        setLoadingImages(true);\r\n        const fieldId = selectedField[0].Id;\r\n        const userId = JSON.parse(localStorage.getItem(\"user\")).id;\r\n        const apiUrl = `/satellite-images/${userId}/${fieldId}/${formattedDate}`;\r\n        \r\n        const response = await api.get(apiUrl);\r\n        if (response.data.imagesData && response.data.imagesData.length > 0) {\r\n          const newImages = response.data.imagesData.map(img => ({\r\n            ...img,\r\n            previewUrl: img.image_url\r\n          }));\r\n          \r\n          setSatellitesImages(prev => [...prev, ...newImages]);\r\n          setSelectedImages(newImages);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"API error:\", error);\r\n      } finally {\r\n        setLoadingImages(false);\r\n      }\r\n    }\r\n  };\r\n  const getSelectedField = e => {\r\n    const selectedId = e.target.value;\r\n    const selected = fields && fields.filter(field => field.Id == selectedId);\r\n    setSelectedField(selected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filtredData = satellitesImages.filter(data => {\r\n      return (\r\n        moment(data.created_at).format(\"D MMM YYYY\") === selectedDate &&\r\n        data.field_id === selectedField[0].Id\r\n      );\r\n    });\r\n    setSelectedImages(filtredData);\r\n  }, [selectedDate, selectedField]);\r\n\r\n  const handleClick = (image) => {\r\n    if (image) {\r\n      const imageUrl = `http://localhost:8000${image.image_url}`; // Prepend the backend URL\r\n      setSelectedImageUrl(imageUrl); // Save the full image URL with localhost\r\n      setDataDisplayed(image.data || []); // Save data for the selected image (e.g., coordinates or metadata)\r\n      setPolygonDisplayed(image.polygon || []); // Save polygon data if applicable\r\n    }\r\n  };\r\n\r\n\r\n  const renderImageGallery = () => {\r\n    if (loadingImages) {\r\n      return (\r\n        <Box display=\"flex\" justifyContent=\"center\" my={2}>\r\n          <CircularProgress />\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    if (selectedImages.length === 0) {\r\n      return (\r\n        <div style={{ \r\n          color: \"#bebebe\", \r\n          textAlign: \"center\",\r\n          padding: \"20px\"\r\n        }}>\r\n          <p>{t(\"no_images_available\")}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(auto-fill, minmax(100px, 1fr))\",\r\n        gap: \"10px\",\r\n        padding: \"10px\"\r\n      }}>\r\n        {selectedImages.map((image, index) => (\r\n          <div \r\n            key={index}\r\n            onClick={() => handleClick(image)}\r\n            style={{\r\n              cursor: \"pointer\",\r\n              border: selectedImageUrl === image.image_url \r\n                ? \"2px solid #29B2C4\" \r\n                : \"1px solid #ddd\",\r\n              borderRadius: \"4px\",\r\n              overflow: \"hidden\"\r\n            }}\r\n          >\r\n            <img \r\n              src={image.previewUrl || image.image_url} \r\n              alt={`Satellite ${index}`}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"80px\",\r\n                objectFit: \"cover\"\r\n              }}\r\n            />\r\n            <div style={{\r\n              padding: \"4px\",\r\n              fontSize: \"18px\",\r\n              textAlign: \"center\",\r\n              textTransform:'uppercase',\r\n              font\r\n            }}>\r\n              {image.type}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\nconsole.log(selectedImageUrl)\r\n  return (\r\n    <Container fluid className=\"main-content-container px-3 pb-2\">\r\n      <Row className=\"page-header py-2 mb-4\">\r\n        <PageTitle\r\n          subtitle={t(\"overview\")}\r\n          title={t(\"Satellite Images\")}\r\n          className=\" mb-1\"\r\n        />\r\n      </Row>\r\n\r\n      <Container className=\"main-content-container p-3 border bg-light rounded\">\r\n        <Row>\r\n          <Col lg=\"8\" md=\"12\" sm=\"12\">\r\n            <Row className=\"pt-4\">\r\n              <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"py-2 d-md-block d-lg-none\">\r\n                {/* Select input on mobile view */}\r\n                <Card className=\"mt-0\" style={{ height: \"100%\" }}>\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <FormSelect\r\n                      value={selectedField}\r\n                      onChange={getSelectedField}\r\n                    >\r\n                      <option value=\"\">{t(\"select_field\")}</option>\r\n                      {fields.map(field => {\r\n                        return (\r\n                          <option key={field.Id} value={field.Id}>\r\n                            {field.title}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </FormSelect>\r\n                  </CardHeader>\r\n                </Card>\r\n              </Col>\r\n              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                <SatteliteMap\r\n                  farms={farms}\r\n                  data={selectedField}\r\n                  satellitesImages={selectedImages}\r\n                  selectedData={dataDisplayed}\r\n                  drawn={polygonDisplayed}\r\n                  draw={mapConfig.draw}\r\n                  edit={mapConfig.edit}\r\n                  zoom={coords.zoom}\r\n                  center={coords.center}\r\n                  fromAction={coords.fromAction}\r\n                  selectedImageUrl={selectedImageUrl}\r\n                  renderImageGallery={renderImageGallery}\r\n\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"my-2\">\r\n            <Card className=\"mt-0\" style={{ height: \"100%\" }}>\r\n              {fields.length === 0 ? (\r\n                <LinearProgress />\r\n              ) : (\r\n                <>\r\n                  <CardHeader className=\"border-bottom d-none d-lg-block\">\r\n                    <FormSelect\r\n                      value={selectedField}\r\n                      onChange={getSelectedField}\r\n                    >\r\n                      <option value=\"\">{t(\"select_field\")}</option>\r\n                      {fields.map(field => {\r\n                        return (\r\n                          <option key={field.Id} value={field.Id}>\r\n                            {field.title}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </FormSelect>\r\n                  </CardHeader>\r\n                  <CardBody className=\"p-1\">\r\n                    {selectedField.length > 0 &&\r\n                      selectedField.map(field => {\r\n                        return (\r\n                          <>\r\n                            <Row>\r\n                              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <h5\r\n                                  style={{ fontSize: 14, textAlign: \"center\" }}\r\n                                >\r\n                                  {t(\"lat\")}{\" \"}\r\n                                  <span\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textAlign: \"center\"\r\n                                    }}\r\n                                  >\r\n                                    {field.Latitude}\r\n                                  </span>\r\n                                </h5>\r\n                              </Col>\r\n                              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <h5\r\n                                  style={{ fontSize: 14, textAlign: \"center\" }}\r\n                                >\r\n                                  {t(\"lon\")}{\" \"}\r\n                                  <span\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textAlign: \"center\"\r\n                                    }}\r\n                                  >\r\n                                    {field.Longitude}\r\n                                  </span>\r\n                                </h5>\r\n                              </Col>\r\n                            </Row>\r\n                            <Row className=\"border-bottom\">\r\n                              <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                                <h6\r\n                                  style={{ fontSize: 14, textAlign: \"center\" }}\r\n                                >\r\n                                  {t(\"name_field\")} <br />{\" \"}\r\n                                  <span\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      textAlign: \"center\"\r\n                                    }}\r\n                                  >\r\n                                    {field.title}\r\n                                  </span>\r\n                                </h6>\r\n                              </Col>\r\n                            </Row>\r\n                          </>\r\n                        );\r\n                      })}\r\n                    {selectedField.length === 0 && (\r\n                      <div\r\n                        style={{\r\n                          color: \"#bebebe\",\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          alignItems: \"center\",\r\n                          flexDirection: \"column\",\r\n                          padding: \"10px\"\r\n                        }}\r\n                      >\r\n                        <p style={{ color: \"#bebebe\", textAlign: \"center\" }}>\r\n                          {t(\"message_image\")}\r\n                        </p>\r\n                        <i\r\n                          className=\"fas fa-satellite\"\r\n                          style={{ fontSize: \"40px\" }}\r\n                        ></i>\r\n                      </div>\r\n                    )}\r\n                    <Row className=\"my-2\">\r\n                      <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                        {selectedField.length > 0 && (\r\n                          <>\r\n                            <h5 style={{ fontSize: 14, textAlign: \"center\" }}>\r\n                              {\" \"}\r\n                              Satellite Images List\r\n                            </h5>\r\n                            <Calendar\r\n                              onChange={date =>\r\n                                handleDateClick(\r\n                                  moment(date).format(\"D MMM YYYY\")\r\n                                )\r\n                              }\r\n                              value={\r\n                                selectedDate\r\n                                  ? new Date(moment(selectedDate, \"D MMM YYYY\"))\r\n                                  : null\r\n                              }\r\n                              locale={\r\n                                localStorage.getItem(\"local\")\r\n                                  ? `${localStorage.getItem(\r\n                                      \"local\"\r\n                                    )}-${localStorage\r\n                                      .getItem(\"local\")\r\n                                      .toUpperCase()}`\r\n                                  : \"en-EN\"\r\n                              }\r\n                              tileContent={({ date, view }) => {\r\n                                const formattedDate = moment(date).format(\r\n                                  \"D MMM YYYY\"\r\n                                );\r\n                                const hasSatelliteImages = satellitesImages.some(\r\n                                  data =>\r\n                                    moment(data.created_at).format(\r\n                                      \"D MMM YYYY\"\r\n                                    ) === formattedDate\r\n                                );\r\n\r\n                                return view === \"month\" &&\r\n                                  hasSatelliteImages ? (\r\n                                  <span\r\n                                    style={{\r\n                                      fontWeight: \"bold\",\r\n                                      color: \"#29B2C4\"\r\n                                    }}\r\n                                  >\r\n                                    •\r\n                                  </span>\r\n                                ) : null;\r\n                              }}\r\n                            />\r\n                          </>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SatelliteImages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}