{"ast":null,"code":"import _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/admin/FieldsList.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../api/api';\nimport { Container, Card, Row, Col, CardHeader, Nav, NavItem, NavLink, CardBody, Button, Form, FormInput, FormSelect, FormGroup } from 'shards-react';\nimport PageTitle from '../components/common/PageTitle';\nimport { useTranslation } from \"react-i18next\";\nimport FieldList from '../views/FieldList';\nimport CropList from '../views/CropList';\nimport ZoneList from '../views/ZoneList';\nimport IrrigationList from '../views/IrrigationList';\nimport swal from 'sweetalert';\nimport DripForm from '../components/FieldSettingForms/dripForm';\nimport PivotForm from '../components/FieldSettingForms/pivotForm';\nimport LateralForm from '../components/FieldSettingForms/lateralForm';\nimport CompositeSoil from '../components/FieldSettingForms/compositeSoilForm';\nimport LeafletMap from '../views/map';\n\nvar FieldsList = function FieldsList() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      layerType = _useState6[0],\n      setLayerType = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      layer = _useState8[0],\n      setLayer = _useState8[1];\n\n  var _useState9 = useState({\n    draw: {\n      polygon: false,\n      circle: false,\n      rectangle: false,\n      polyline: true,\n      marker: true,\n      circlemarker: false\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      configMap = _useState10[0],\n      setConfigMap = _useState10[1];\n\n  var params = useParams();\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fields = _useState12[0],\n      setFields = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listSoil = _useState14[0],\n      setListSoil = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      listCrop = _useState16[0],\n      setListCrop = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      allVarieties = _useState18[0],\n      setAllVarieties = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      listIrrigations = _useState20[0],\n      setListIrrigations = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      crops = _useState22[0],\n      setCrops = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      zones = _useState24[0],\n      setZones = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      irrigations = _useState26[0],\n      setIrrig = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      farms = _useState28[0],\n      setFarms = _useState28[1];\n\n  var Uid = params.uid;\n\n  var _useState29 = useState('field'),\n      _useState30 = _slicedToArray(_useState29, 2),\n      elemValue = _useState30[0],\n      setView = _useState30[1];\n\n  var _useState31 = useState({\n    name: \"\",\n    farm_uid: \"\",\n    description: \"\"\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      dataField = _useState32[0],\n      setDataField = _useState32[1];\n\n  var _useState33 = useState({\n    farmError: \"\",\n    nameError: \"\"\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      errors = _useState34[0],\n      setErrors = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      checked = _useState36[0],\n      setChecked = _useState36[1];\n\n  var _useState37 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    rootDepth: \"\",\n    ecartInter: \"\",\n    ecartIntra: \"\",\n    density: \"\",\n    ruPratique: \"\",\n    kcList: []\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      cropData = _useState38[0],\n      setCropData = _useState38[1];\n\n  var _useState39 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    zoneName: \"\",\n    source: \"1\",\n    soilProperty: \"\",\n    soilType: \"\",\n    RUmax: \"\",\n    effPluie: \"\"\n  }),\n      _useState40 = _slicedToArray(_useState39, 2),\n      soilData = _useState40[0],\n      setSoilData = _useState40[1];\n\n  var _useState41 = useState(true),\n      _useState42 = _slicedToArray(_useState41, 2),\n      isStandardSoil = _useState42[0],\n      setSoilType = _useState42[1];\n\n  var _useState43 = useState({\n    irrigType: \"\",\n    zone_uid: \"\",\n    crop_uid: \"\",\n    flowrate: \"\",\n    irrigated_already: \"\",\n    name: \"\",\n    pivot_shape: \"\",\n    irrigation_syst: \"\",\n    pivot_length: \"\",\n    pivot_coord: \"\",\n    full_runtime: \"\",\n    lateral: \"\",\n    drippers: \"\",\n    effIrrig: \"\",\n    pumpFlow: \"\"\n  }),\n      _useState44 = _slicedToArray(_useState43, 2),\n      irrigData = _useState44[0],\n      setIrrigData = _useState44[1];\n\n  var getFieldsByUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"/admin/user/\".concat(Uid, \"/fields\");\n              _context.next = 3;\n              return api.get(url).then(function (response) {\n                if (response.data.type === \"success\") {\n                  var FarmsData = response.data.farms;\n                  setFarms(FarmsData);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFieldsByUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getFields = function getFields() {\n    var Fields = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (field) {\n          Fields.push({\n            title: field.name,\n            status: field.status,\n            description: field.description,\n            Uid: field.uid,\n            farm_id: field.farm_id,\n            Id: field.id\n          });\n        });\n      }\n    });\n    setFields(Fields);\n  };\n\n  var getZones = function getZones() {\n    var Zones = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (itemZone) {\n          var zones = itemZone.zones;\n\n          if (zones) {\n            zones.map(function (i) {\n              Zones.push({\n                Id: i.id,\n                name: i.name,\n                Uid: i.uid,\n                source: i.source,\n                description: i.description,\n                field_id: i.field_id\n              });\n            });\n          }\n\n          ;\n        });\n      }\n\n      ;\n    });\n    setZones(Zones);\n  };\n\n  var getCrops = function getCrops() {\n    var Crops = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (itemCrop) {\n          var crops = itemCrop.crops;\n\n          if (crops) {\n            crops.map(function (i) {\n              Crops.push({\n                type: i.type,\n                Uid: i.uid,\n                irrigations: i.irrigations,\n                Id: i.id,\n                field_id: i.field_id,\n                zone_id: i.zone_id,\n                croptype_id: i.croptype_id,\n                croptype: i.croptypes\n              });\n            });\n          }\n\n          ;\n        });\n      }\n\n      ;\n    });\n    setCrops(Crops);\n  };\n\n  var getIrrig = function getIrrig() {\n    var Irrigations = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (itemCrop) {\n          var crops = itemCrop.crops;\n\n          if (crops) {\n            crops.map(function (i) {\n              var irrigations = i.irrigations;\n\n              if (irrigations) {\n                irrigations.map(function (itemIrrig) {\n                  Irrigations.push({\n                    type: itemIrrig.type,\n                    address: itemIrrig.address,\n                    pivotShape: itemIrrig.pivot_shape,\n                    flowrate: itemIrrig.flowrate,\n                    lateral: itemIrrig.lateral,\n                    Uid: itemIrrig.uid,\n                    crop_id: itemIrrig.crop_id,\n                    zone_id: itemIrrig.zone_id\n                  });\n                });\n              }\n            });\n          }\n\n          ;\n        });\n      }\n\n      ;\n    });\n    setIrrig(Irrigations);\n  };\n\n  useEffect(function () {\n    getFieldsByUser();\n\n    var getCropType = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setListSoil(listSoils);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var getIrrigations = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.get('/irrigations/get-irrigations').then(function (response) {\n                  if (response) {\n                    var dataIrrig = response.data.Irrigations;\n                    setListIrrigations(dataIrrig);\n                  }\n                });\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 5]]);\n      }));\n\n      return function getIrrigations() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var getVarieties = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.get('/varieties/get-varieties').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listVarieties = response.data.Varieties;\n                    setAllVarieties(listVarieties);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      return function getVarieties() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getIrrigations();\n    getSoils();\n    getCropType();\n  }, []);\n  useEffect(function () {\n    getFields();\n    getCrops();\n    getZones();\n    getIrrig();\n  }, [farms]);\n\n  var goProfile = function goProfile() {\n    history.push(\"/admin/user/\".concat(Uid));\n    window.location.reload();\n  };\n\n  var goFarms = function goFarms() {\n    history.push(\"/admin/user/\".concat(Uid, \"/farms\"));\n    window.location.reload();\n  };\n\n  var goSensor = function goSensor() {\n    history.push(\"/admin/user/\".concat(Uid, \"/sensors\"));\n    window.location.reload();\n  };\n\n  var handleName = function handleName(e) {};\n\n  var handleUidFarm = function handleUidFarm(e) {\n    setDataField({\n      farm_uid: e.target.value\n    });\n  };\n\n  var handleDescription = function handleDescription(e) {\n    setDataField({\n      description: e.target.value\n    });\n  };\n\n  var validate = function validate() {\n    var nameError = '';\n    var farmError = '';\n\n    if (!dataField.name) {\n      nameError = 'not_empty';\n      setErrors(_objectSpread({}, errors, {\n        nameError: nameError\n      }));\n      return false;\n    } else {\n      setErrors({\n        nameError: \"\"\n      });\n    }\n\n    if (dataField.farm_uid == '') {\n      farmError = 'not_empty';\n      setErrors({\n        farmError: farmError\n      });\n      return false;\n    }\n\n    if (dataField.farm_uid) {\n      setErrors({\n        farmError: \"\"\n      });\n    }\n\n    return true;\n  };\n\n  var _onCreated = function _onCreated(e) {\n    var type = e.layerType;\n    setLayerType(type);\n    var layer = e.layer;\n\n    if (type === \"marker\") {\n      layer.bindPopup('Field Name');\n    } else {\n      console.log(\"_onCreated: something else created:\", type, e);\n    }\n\n    if (type === \"polyline\") {\n      var _coords = layer._latlngs;\n\n      var Coordinates = _coords.map(function (coord) {\n        return {\n          Lat: coord.lat,\n          Long: coord.lng\n        };\n      });\n\n      if (Coordinates) setLayer(JSON.stringify(Coordinates));\n    } else {\n      setCoords({\n        Latitude: layer.getLatLng().lat,\n        Longitude: layer.getLatLng().lng\n      });\n    }\n  };\n\n  var addField = function addField() {\n    var data = {\n      name: dataField.name,\n      description: dataField.description,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid //   Latitude: this.state.Latitude,\n      //   Longitude: this.state.Longitude\n\n    };\n    api.post('/field/add-field', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('field_added')), {\n          icon: \"success\"\n        });\n        getFields();\n      }\n    }).catch(function () {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault(); // const isValid = validate();\n    // if (isValid) {\n\n    addField(); // }\n  };\n\n  var resetForm = function resetForm() {\n    setDataField({\n      name: \"\",\n      description: \"\",\n      farm_uid: \"\"\n    });\n  };\n\n  var cropHandleSubmit = function cropHandleSubmit(event) {\n    event.preventDefault();\n    addCrop();\n  };\n\n  var addCrop = function addCrop() {\n    var data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction: cropData.ruPratique,\n      density: cropData.density,\n      ecart_inter: cropData.ecartInter,\n      ecart_intra: cropData.ecartIntra\n    };\n    api.post('/crop/add-crop', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('crop_added')), {\n          icon: \"success\"\n        });\n        getCrops();\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var zoneHandleSubmit = function zoneHandleSubmit(event) {\n    event.preventDefault();\n    addZone();\n  };\n\n  var addZone = function addZone() {\n    var data = {\n      soilProperty: soilData.soilProperty,\n      field_uid: soilData.field_uid,\n      zone_uid: soilData.zone_uid,\n      name: soilData.zoneName,\n      source: soilData.source,\n      RUmax: soilData.RUmax,\n      effPluie: soilData.effPluie\n    };\n    api.post('/zone/add-zone', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('soil_added')), {\n          icon: \"success\"\n        });\n        getZones();\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var IrrigHandleSubmit = function IrrigHandleSubmit(event) {\n    event.preventDefault();\n    addIrrigation();\n  };\n\n  var addIrrigation = function addIrrigation() {\n    var data = {\n      type: irrigData.irrigType,\n      zone_uid: irrigData.zone_uid,\n      crop_uid: irrigData.crop_uid,\n      flowrate: irrigData.flowrate,\n      irrigated_already: irrigData.irrigated_already,\n      name: irrigData.name,\n      pivot_shape: irrigData.pivot_shape,\n      irrigation_syst: irrigData.irrigation_syst,\n      pivot_length: irrigData.pivot_length,\n      pivot_coord: irrigData.pivot_coord,\n      full_runtime: irrigData.full_runtime,\n      lateral: irrigData.lateral,\n      drippers: irrigData.drippers,\n      effIrrig: irrigData.effIrrig,\n      pumpFlow: irrigData.pumpFlow\n    };\n    api.post('/irrigation/add-irrigation', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('irrigation_added')), {\n          icon: \"success\"\n        });\n        getIrrig();\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = listSoil.find(function (soil) {\n      return soil.soil == e.target.value;\n    });\n\n    if (typeof soilType !== \"undefined\") {\n      setSoilData(_objectSpread({}, soilData, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  };\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault(); // props.handleCropType(e)\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        ruPratique: crop.practical_fraction\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        days: crop.total\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        rootDepth: crop.root_max\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', '')\n      }));\n    }\n\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        rootDepth: crop.root_max,\n        ruPratique: crop.practical_fraction,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.id == e.target.value;\n    });\n\n    if (variety) {\n      setCropData(_objectSpread({}, cropData, {\n        variety: variety.id\n      }));\n    }\n  };\n\n  var _useState45 = useState({\n    clay: \"\",\n    sand: \"\",\n    silt: \"\"\n  }),\n      _useState46 = _slicedToArray(_useState45, 2),\n      soilCompos = _useState46[0],\n      setSoilCompos = _useState46[1];\n\n  var soilTypeForm = function soilTypeForm() {\n    if (isStandardSoil == true) return null;else {\n      return /*#__PURE__*/React.createElement(CompositeSoil, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  var handleIrrigPick = function handleIrrigPick(e) {\n    e.preventDefault();\n    var irrigation = listIrrigations.find(function (irrigation) {\n      return irrigation.irrigation == e.target.value;\n    }); //  setIM(irrigation.irrigation)\n\n    setIrrigData({\n      irrigType: irrigation.irrigation\n    }); // props.handleEffIrrig(irrigation.effIrrig)\n\n    if (irrigation) {\n      setIrrigData(_objectSpread({}, irrigData, {\n        irrigType: irrigation.irrigation,\n        effIrrig: irrigation.effIrrig\n      }));\n    }\n  };\n\n  var irrigationMethodForm = function irrigationMethodForm() {\n    switch (irrigData.irrigType) {\n      case \"\".concat(t('Pivot')):\n        return /*#__PURE__*/React.createElement(PivotForm, {\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          handleIrrgSyst: function handleIrrgSyst(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigation_syst: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handlePivotCoord: function handlePivotCoord(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_coord: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handlePivotShape: function handlePivotShape(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_shape: e.target.value\n            }));\n          },\n          irrigation_syst: irrigData.irrigation_syst,\n          pivot_coord: irrigData.pivot_coord,\n          pivot_length: irrigData.pivot_length,\n          pivot_shape: irrigData.pivot_shape,\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 22\n          }\n        });\n\n      case \"\".concat(t('Lateral')):\n        return /*#__PURE__*/React.createElement(LateralForm, {\n          handleLateral: function handleLateral(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              lateral: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handleName: function handleName(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              name: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          pivot_length: irrigData.pivot_length,\n          lateral: irrigData.lateral,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 22\n          }\n        });\n\n      case \"\".concat(t('None')):\n        return null;\n\n      default:\n        return /*#__PURE__*/React.createElement(DripForm, {\n          handleDrippers: function handleDrippers(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              drippers: e.target.value\n            }));\n          },\n          handleIrrigAlrd: function handleIrrigAlrd(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          flowrate: irrigData.flowrate,\n          drippers: irrigData.drippers,\n          irrigated_already: irrigData.irrigated_already,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 19\n          }\n        });\n    }\n  };\n\n  useEffect(function () {\n    if (cropData.ecartInter !== \"\" && cropData.ecartIntra !== \"\") {\n      var formule = 10000 / (Number(cropData.ecartInter) * Number(cropData.ecartIntra));\n      setCropData(_objectSpread({}, cropData, {\n        density: formule\n      }));\n    }\n  }, [cropData.ecartInter, cropData.ecartIntra]);\n\n  var renderAddSetup = function renderAddSetup() {\n    switch (elemValue) {\n      case 'field':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            width: \"auto\",\n            float: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 25\n          }\n        }, t(\"field_setup\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: handleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 25\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: resetForm // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 25\n          }\n        }), t('cancel')))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 29\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field'),\n          className: errors.nameError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 27\n          }\n        }, errors.nameError)), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 820,\n            columnNumber: 29\n          }\n        }, t('name_farm')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid,\n          className: errors.farmError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              farm_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 31\n          }\n        }, t('select_farm')), \";\", farms.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 40\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          md: \"6\",\n          sm: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 27\n          }\n        }, t('desc')), /*#__PURE__*/React.createElement(\"textarea\", {\n          value: dataField.description,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              description: e.target.value\n            }));\n          },\n          style: {\n            height: \"220px\"\n          },\n          class: \"form-control\",\n          placeholder: \"Description\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 27\n          }\n        }))))))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_fields'),\n          subtitle: t('my_fields'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FieldList, {\n          Fields: getFields,\n          FieldsList: fields,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 23\n          }\n        })))));\n\n      case 'soil':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 23\n          }\n        }, t('soil_info')), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: zoneHandleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 27\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: \"\" // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 27\n          }\n        }), t('cancel'))))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 15\n          }\n        }, t('soil_zone')), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilData.zoneName,\n          placeholder: t('soil_zone'),\n          required: true,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              zoneName: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilData.field_uid,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('name_field'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 17\n          }\n        }, t('select_field')), fields.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 26\n            }\n          }, item.title);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 946,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 15\n          }\n        }, t('source')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilData.source,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              source: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 17\n          }\n        }, \"Manual\"))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }\n        }, t('soil_prop')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: function onChange(evt) {\n            setSoilType(!isStandardSoil);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 17\n          }\n        }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n          selected: !isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 17\n          }\n        }, \"Composite\"))), soilTypeForm()), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }\n        }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilData.soilType,\n          onChange: handleSoilPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 15\n          }\n        }, t('select_soil')), listSoil.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.soil,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 28\n            }\n          }, item.soil);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 17\n          }\n        }, t('efficacité_pluie'), \" (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilData.effPluie,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: t('efficacité_pluie'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 17\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilData.RUmax,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 17\n          }\n        }))))))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_zones'),\n          subtitle: t('my_zones'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1019,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ZoneList, {\n          zonesList: zones,\n          Zones: getZones,\n          Fields: fields // state={this.dataChange}\n          ,\n          listSoils: listSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 23\n          }\n        })))));\n\n      case 'crop':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 23\n          }\n        }, t('crop_info')), \" \", /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: cropHandleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1061,\n            columnNumber: 27\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: \"\" // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 27\n          }\n        }), t('cancel'))))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1084,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 13\n          }\n        }, t('crop_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.zone_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              zone_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 15\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 29\n            }\n          }, soil.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1104,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 13\n          }\n        }, t('crop_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.field_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 15\n          }\n        }, t('select_field')), fields.map(function (field) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: field.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 34\n            }\n          }, field.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1121,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 13\n          }\n        }, t('crop_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCropPick,\n          placeholder: t('crop_type'),\n          value: cropData.cropType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 15\n          }\n        }, \"Select Crop\"), listCrop.map(function (crop) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 21\n            }\n          }, crop.crop);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 15\n          }\n        }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.variety,\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 17\n          }\n        }, t('crop_variety')), cropData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.varietyId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 27\n            }\n          }, variety.variety);\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"Autre\",\n          id: \"check\",\n          onClick: function onClick() {\n            return setChecked(!checked);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 15\n          }\n        }), \" \", t('other'), checked ? /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.variety || \"\",\n          placeholder: t('crop_variety'),\n          id: \"cropVariety\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              variety: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 23\n          }\n        }) : null))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1171,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }\n        }, t('prev_type')), /*#__PURE__*/React.createElement(FormInput, {\n          onChange: \"\",\n          placeholder: t('prev_type'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1174,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 15\n          }\n        }, t('depth'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.rootDepth,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              rootDepth: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('depth'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1182,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 15\n          }\n        }, t('Days')), /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.days,\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: t('Days'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1192,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 15\n          }\n        }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.plantingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 17\n          }\n        }, t('fraction_pratique'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.ruPratique,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: t('fraction_pratique'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1215,\n            columnNumber: 17\n          }\n        }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.ecartInter,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartInter: e.target.value\n            }));\n          },\n          id: \"ecartInter\",\n          placeholder: t('ecart_inter'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 17\n          }\n        }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.ecartIntra,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartIntra: e.target.value\n            }));\n          },\n          id: \"ecartIntra\",\n          placeholder: t('ecart_intra'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 17\n          }\n        }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.density,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              density: e.target.value\n            }));\n          },\n          id: \"densit\\xE9\",\n          placeholder: t('densité'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1232,\n            columnNumber: 17\n          }\n        }))))))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1241,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_crops'),\n          subtitle: t('my_crops'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1242,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CropList, {\n          cropsList: crops,\n          Crops: getCrops,\n          Fields: fields,\n          Zones: zones,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 23\n          }\n        })))));\n\n      case 'irrig':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1275,\n            columnNumber: 23\n          }\n        }, t('Irrigation_info')), \" \", /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: IrrigHandleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1283,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1288,\n            columnNumber: 27\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: \"\" // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1296,\n            columnNumber: 27\n          }\n        }), t('cancel'))))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1302,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1314,\n            columnNumber: 35\n          }\n        }, t('irrigation_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.zone_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              zone_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1315,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 37\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 53\n            }\n          }, soil.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1329,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 35\n          }\n        }, t('irrigation_crop')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.crop_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              crop_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1331,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1335,\n            columnNumber: 37\n          }\n        }, t('select_crop')), crops.map(function (crop) {\n          var cropType = \"\";\n          listCrop.map(function (croptype) {\n            if (croptype.id === crop.croptype_id) {\n              cropType = croptype.crop;\n            }\n          });\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1344,\n              columnNumber: 53\n            }\n          }, cropType);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1351,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1352,\n            columnNumber: 35\n          }\n        }, t('Irrigation_system_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.irrigType,\n          onChange: function onChange(evt) {\n            handleIrrigPick(evt);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1353,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          disabled: true,\n          selected: true,\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 37\n          }\n        }, t('select_irriagtion')), listIrrigations.map(function (item) {\n          // if (item.value === irrigationMethod) {\n          //   return <option value={item.value} selected={true}>{item.type}</option>;\n          // } else {\n          //   return <option value={item.value} selected={false}>{item.type}</option>;\n          // }\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.irrigation,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 46\n            }\n          }, t(\"\".concat(item.irrigation)));\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1370,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1371,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 39\n          }\n        }, t('efficience_irrigation'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: irrigData.effIrrig,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: t('efficience_irrigation'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 39\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1381,\n            columnNumber: 39\n          }\n        }, t('debit_reseau'), \" (m\\xB3/h) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: irrigData.pumpFlow,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpFlow: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('debit_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1382,\n            columnNumber: 39\n          }\n        })))), irrigationMethodForm()))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1394,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_irrigations'),\n          subtitle: t('my_irrigations'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1395,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IrrigationList, {\n          irrigationsList: irrigations,\n          Irrigations: getIrrig,\n          Crops: crops,\n          Zones: zones,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1404,\n            columnNumber: 23\n          }\n        })))));\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1417,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            width: \"auto\",\n            float: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 25\n          }\n        }, t(\"field_setup\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1432,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: handleSubmit // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 25\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: resetForm // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 25\n          }\n        }), t('cancel')))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1456,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1457,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_fields'),\n          subtitle: t('my_fields'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1478,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1485,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1486,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1488,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 29\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field'),\n          className: errors.nameError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: handleName,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1490,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1499,\n            columnNumber: 27\n          }\n        }, errors.nameError)), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1501,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1502,\n            columnNumber: 29\n          }\n        }, t('name_farm')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid,\n          className: errors.farmError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: handleUidFarm,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1509,\n            columnNumber: 31\n          }\n        }, t('select_farm')), \";\", farms.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1511,\n              columnNumber: 40\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1516,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          md: \"6\",\n          sm: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1519,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1520,\n            columnNumber: 27\n          }\n        }, t('desc')), /*#__PURE__*/React.createElement(\"textarea\", {\n          value: dataField.description,\n          onChange: handleDescription,\n          style: {\n            height: \"220px\"\n          },\n          class: \"form-control\",\n          placeholder: \"Description\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1521,\n            columnNumber: 27\n          }\n        }))))))))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1542,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    justified: true,\n    pills: true,\n    className: \"bg-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1543,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1544,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1545,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: goProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1546,\n      columnNumber: 19\n    }\n  }, t('profile')))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1549,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1550,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: goFarms,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1551,\n      columnNumber: 19\n    }\n  }, t('farms')))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1554,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    active: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1555,\n      columnNumber: 17\n    }\n  }, t('fields'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1559,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: goSensor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1561,\n      columnNumber: 21\n    }\n  }, t('sensors'))))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1565,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    subtitle: t('fields'),\n    md: \"12\",\n    className: \"ml-sm-auto mr-sm-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1566,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \" d-flex justify-content-center align-items-center py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1568,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1569,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1570,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1571,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"field\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"field\" ? \"bg-info rounded text-dark \" : 'rounded text-dark '),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1572,\n      columnNumber: 21\n    }\n  }, t('field_setup'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"soil\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"soil\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1577,\n      columnNumber: 21\n    }\n  }, t('soil_info'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1581,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"crop\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"crop\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 21\n    }\n  }, t('crop_info'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1584,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"irrig\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"irrig\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585,\n      columnNumber: 21\n    }\n  }, t('Irrigation_info')))))), renderAddSetup(), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(LeafletMap, {\n    _onCreated: _onCreated,\n    data: farms,\n    uid: Uid,\n    draw: configMap.draw,\n    edit: configMap.edit,\n    zoom: coords.zoom,\n    center: coords.center,\n    fromAction: coords.fromAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default FieldsList;","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useHistory","api","Container","Card","Row","Col","CardHeader","Nav","NavItem","NavLink","CardBody","Button","Form","FormInput","FormSelect","FormGroup","PageTitle","useTranslation","FieldList","CropList","ZoneList","IrrigationList","swal","DripForm","PivotForm","LateralForm","CompositeSoil","LeafletMap","FieldsList","t","i18n","history","toggle","setToggle","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","layerType","setLayerType","layer","setLayer","draw","polygon","circle","rectangle","polyline","marker","circlemarker","edit","delete","configMap","setConfigMap","params","fields","setFields","listSoil","setListSoil","listCrop","setListCrop","allVarieties","setAllVarieties","listIrrigations","setListIrrigations","crops","setCrops","zones","setZones","irrigations","setIrrig","farms","setFarms","Uid","uid","elemValue","setView","name","farm_uid","description","dataField","setDataField","farmError","nameError","errors","setErrors","checked","setChecked","field_uid","zone_uid","cropType","variety","cropVariety","Profondeur","days","plantingDate","rootDepth","ecartInter","ecartIntra","density","ruPratique","kcList","cropData","setCropData","zoneName","source","soilProperty","soilType","RUmax","effPluie","soilData","setSoilData","isStandardSoil","setSoilType","irrigType","crop_uid","flowrate","irrigated_already","pivot_shape","irrigation_syst","pivot_length","pivot_coord","full_runtime","lateral","drippers","effIrrig","pumpFlow","irrigData","setIrrigData","getFieldsByUser","url","get","then","response","data","type","FarmsData","catch","error","console","log","getFields","Fields","map","item","field","push","title","status","farm_id","Id","id","getZones","Zones","itemZone","i","field_id","getCrops","Crops","itemCrop","zone_id","croptype_id","croptype","croptypes","getIrrig","Irrigations","itemIrrig","address","pivotShape","crop_id","getCropType","dataCrop","Croptype","getSoils","listSoils","Soils","getIrrigations","dataIrrig","getVarieties","listVarieties","Varieties","goProfile","window","location","reload","goFarms","goSensor","handleName","e","handleUidFarm","target","value","handleDescription","validate","_onCreated","bindPopup","_latlngs","Coordinates","coord","Lat","lat","Long","lng","JSON","stringify","getLatLng","addField","farmName","post","res","icon","handleSubmit","event","preventDefault","resetForm","cropHandleSubmit","addCrop","previous_type","crop_variety_id","practical_fraction","ecart_inter","ecart_intra","err","zoneHandleSubmit","addZone","IrrigHandleSubmit","addIrrigation","handleSoilPick","find","soil","ru","rain_eff","handleCropPick","crop","total","root_max","plant_date","slice","replace","varieties","varietyId","crop_variety","all_kc","handleVarietyPick","clay","sand","silt","soilCompos","setSoilCompos","soilTypeForm","handleIrrigPick","irrigation","irrigationMethodForm","formule","Number","renderAddSetup","display","justifyContent","width","float","textAlign","marginTop","flexWrap","margin","index","height","position","alignItems","evt","paddingBottom"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/admin/FieldsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link, useParams, useHistory } from 'react-router-dom'\nimport api from '../api/api'\nimport { Container, Card, Row,Col, CardHeader ,Nav,NavItem,NavLink ,CardBody,Button,Form,FormInput,FormSelect,FormGroup} from 'shards-react'\nimport PageTitle from '../components/common/PageTitle'\nimport { useTranslation } from \"react-i18next\";\nimport FieldList from '../views/FieldList'\nimport CropList from '../views/CropList'\nimport ZoneList from '../views/ZoneList'\nimport IrrigationList from '../views/IrrigationList'\nimport swal from 'sweetalert'\nimport DripForm from '../components/FieldSettingForms/dripForm'\nimport PivotForm from '../components/FieldSettingForms/pivotForm'\nimport LateralForm from '../components/FieldSettingForms/lateralForm'\nimport CompositeSoil from '../components/FieldSettingForms/compositeSoilForm'\nimport LeafletMap from '../views/map'\n\n\nconst FieldsList = () => {\n\n    const { t, i18n } = useTranslation();\n    const history = useHistory()\n    const [toggle, setToggle] = useState(false);\n    const [coords,setCoords] = useState({\n      Latitude : \"\",\n      Longitude : \"\",\n      zoom: \"\",\n      center: [],\n      fromAction : false\n    })\n    const [layerType,setLayerType] = useState('')\n    const [layer,setLayer] = useState('')\n    const [configMap,setConfigMap] = useState({\n      draw : {\n        polygon: false,\n        circle: false,\n        rectangle: false,\n        polyline: true,\n        marker:true,\n        circlemarker: false,\n      },\n      edit : {\n        delete: false,\n        edit: false\n      }\n    })\n    const params = useParams();\n    const [fields, setFields] = useState([]);\n    const [listSoil,setListSoil] = useState([])\n    const [listCrop,setListCrop] = useState([])\n    const [allVarieties,setAllVarieties] = useState([])\n    const [listIrrigations,setListIrrigations] = useState([])\n\n    const [crops, setCrops] = useState([]);\n    const [zones, setZones] = useState([]);\n    const [irrigations, setIrrig] = useState([]);\n    const [farms, setFarms] = useState([])\n    let Uid = params.uid;\n    const [elemValue,setView] = useState('field')\n    const [dataField,setDataField] = useState({\n        name : \"\",\n        farm_uid :\"\",\n        description :\"\"\n    })\n    const [errors,setErrors] = useState({\n        farmError :\"\",\n        nameError :\"\"\n    })\n\n    const [checked,setChecked] = useState(false)\n    const [cropData,setCropData] = useState({\n      field_uid :\"\",\n      zone_uid :\"\",\n      cropType:\"\",\n      variety: '',\n      cropVariety: [],\n      Profondeur: \"\",\n      days: \"\",\n      plantingDate: \"\",\n      rootDepth:\"\",\n      ecartInter :\"\",\n      ecartIntra :\"\",\n      density :\"\",\n      ruPratique :\"\",\n      kcList: []\n    })  \n    const [soilData,setSoilData] = useState({\n      field_uid :\"\",\n      zone_uid :\"\",\n      zoneName:\"\",\n      source :\"1\",\n      soilProperty:\"\",\n      soilType :\"\",\n      RUmax: \"\",\n      effPluie: \"\",\n    })\n    const [isStandardSoil, setSoilType] = useState(true);\n\n    const [irrigData,setIrrigData] = useState({\n       irrigType : \"\",\n          zone_uid: \"\",\n          crop_uid: \"\",\n          flowrate: \"\",\n          irrigated_already: \"\" ,\n          name: \"\",\n          pivot_shape:\"\",\n          irrigation_syst:\"\", \n          pivot_length: \"\",\n          pivot_coord: \"\",\n          full_runtime: \"\",\n          lateral:\"\",\n          drippers : \"\",\n          effIrrig: \"\",\n          pumpFlow : \"\"\n    })\n\n\n    const getFieldsByUser = async () => {\n        let url = `/admin/user/${Uid}/fields`;\n        await api.get(url)\n            .then(response => {\n                if (response.data.type === \"success\") {\n                    let FarmsData = response.data.farms\n                    setFarms(FarmsData);\n                }\n\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n    const getFields = () => {\n        let Fields = [];\n        farms.map(item => {\n            let fields = item.fields;\n            if (fields) {\n                fields.map(field => {\n                    Fields.push({\n                        title: field.name,\n                        status: field.status,\n                        description: field.description,\n                        Uid: field.uid,\n                        farm_id: field.farm_id,\n                        Id: field.id\n                    })\n                })\n            }\n        })\n        setFields(Fields)\n    }\n\n    const getZones = () => {\n        let Zones = [];\n        farms.map(item => {\n            let fields = item.fields;\n            if (fields) {\n                fields.map(itemZone => {\n                    let zones = itemZone.zones;\n                    if (zones) {\n                        zones.map(i => {\n                            Zones.push({\n                                Id: i.id,\n                                name: i.name,\n                                Uid: i.uid,\n                                source: i.source,\n                                description: i.description,\n                                field_id: i.field_id\n\n                            });\n                        });\n                    };\n                });\n            };\n        })\n        setZones(Zones)\n    }\n\n    const getCrops = () => {\n        let Crops = [];\n        farms.map(item => {\n            let fields = item.fields;\n            if (fields) {\n                fields.map(itemCrop => {\n                    let crops = itemCrop.crops;\n                    if (crops) {\n                        crops.map(i => {\n                            Crops.push({\n                                type: i.type,\n                                Uid: i.uid,\n                                irrigations: i.irrigations,\n                                Id: i.id,\n                                field_id: i.field_id,\n                                zone_id: i.zone_id,\n                                croptype_id :i.croptype_id,\n                                croptype : i.croptypes\n                            });\n                        });\n                    };\n                });\n            };\n        })\n        setCrops(Crops)\n    }\n\n    const getIrrig = () => {\n        let Irrigations = [];\n        farms.map(item => {\n            let fields = item.fields;\n            if (fields) {\n                fields.map(itemCrop => {\n                    let crops = itemCrop.crops;\n                    if (crops) {\n                        crops.map(i => {\n                            let irrigations = i.irrigations\n                            if (irrigations) {\n                                irrigations.map(itemIrrig => {\n                                    Irrigations.push({\n                                        type: itemIrrig.type,\n                                        address: itemIrrig.address,\n                                        pivotShape: itemIrrig.pivot_shape,\n                                        flowrate: itemIrrig.flowrate,\n                                        lateral: itemIrrig.lateral,\n                                        Uid: itemIrrig.uid,\n                                        crop_id: itemIrrig.crop_id,\n                                        zone_id: itemIrrig.zone_id,\n\n                                    });\n\n                                })\n                            }\n                        });\n                    };\n                });\n            };\n        })\n        setIrrig(Irrigations)\n    }\n\n\n    useEffect(() => {\n        getFieldsByUser();\n        const getCropType = async () => {\n          try {\n              await api.get('/croptype/list-crop')\n                  .then(response => {\n                      if (response) {\n                          let dataCrop = response.data.Croptype\n                          setListCrop(dataCrop)\n                      }\n                  })\n\n          } catch (error) {\n              console.log(error)\n          }\n      }\n      const getSoils = async () => {\n          try {\n              await api.get('/soils/get-soils')\n                  .then(response => {\n                      let listSoils = response.data.Soils\n                      setListSoil(listSoils)\n                      \n                  }).catch(error => {\n                      console.log(error)\n                  })\n\n          } catch (error) {\n              console.log(error)\n          }\n      }\n      const getIrrigations = async () => {\n        try {\n          await api.get('/irrigations/get-irrigations')\n            .then(response => {\n              if (response) {\n                let dataIrrig = response.data.Irrigations\n                setListIrrigations(dataIrrig)\n              }\n            })\n  \n        } catch (error) {\n          console.log(error)\n        }\n      }\n       const getVarieties = async () => {\n        try {\n            await api.get('/varieties/get-varieties')\n                .then(response => {\n                    if (response.data.type === \"success\") {\n                        let listVarieties = response.data.Varieties\n                        setAllVarieties(listVarieties)\n  \n                    }\n                }).catch(error => {\n                    console.log(error)\n                })\n  \n        } catch (error) {\n            console.log(error)\n        }\n    }\n      getVarieties()\n      getIrrigations()\n      getSoils()\n      getCropType()\n    }, [])\n\n    useEffect(() => {\n        getFields();\n        getCrops();\n        getZones();\n        getIrrig();\n    }, [farms])\n\n    const goProfile = () => {\n        history.push(`/admin/user/${Uid}`);\n        window.location.reload();\n    }\n    const goFarms = () => {\n        history.push(`/admin/user/${Uid}/farms`);\n        window.location.reload();\n    }\n    const goSensor = () => {\n        history.push(`/admin/user/${Uid}/sensors`);\n        window.location.reload();\n    }\n\n    const handleName = (e) => {\n      \n      };\n     const handleUidFarm = (e) => {\n        setDataField({\n          farm_uid: e.target.value,\n        });\n      };\n    \n     const handleDescription = (e) => {\n        setDataField({\n          description: e.target.value,\n        });\n      };\n\n     const validate = () => {\n        let nameError = '';\n        let farmError = '';\n        if (!dataField.name) {\n          nameError = 'not_empty';\n          setErrors({ ...errors , nameError :nameError })\n          return false\n        } else {\n          setErrors({nameError :\"\"})\n        }\n        if (dataField.farm_uid == '') {\n          farmError = 'not_empty';\n          setErrors({ farmError })\n          return false\n        }\n        if (dataField.farm_uid) {\n          setErrors({ farmError: \"\" })\n        }\n        return true;\n      };\n    \n      const _onCreated = e => {\n        let type = e.layerType;\n        setLayerType(type)\n        let layer = e.layer;\n        if (type === \"marker\") {\n          layer.bindPopup('Field Name');\n        } else {\n          console.log(\"_onCreated: something else created:\", type, e);\n        }\n        if (type === \"polyline\") {\n          let coords = layer._latlngs;\n          const Coordinates = coords.map((coord) => ({\n            Lat: coord.lat,\n            Long: coord.lng,\n          }));\n          if (Coordinates)\n            setLayer(JSON.stringify(Coordinates))\n        } else {\n          setCoords({ Latitude: layer.getLatLng().lat , Longitude: layer.getLatLng().lng  });\n        }\n      \n      };\n    \n    const  addField = () => {\n    \n        let data = {\n          name: dataField.name,\n          description: dataField.description,\n          farmName: dataField.farmName,\n          farm_uid: dataField.farm_uid,\n        //   Latitude: this.state.Latitude,\n        //   Longitude: this.state.Longitude\n        }\n    \n        api.post('/field/add-field', data)\n          .then(res => {\n            \n            if (res.data.type && res.data.type == \"danger\") {\n                swal(`Error`, {\n                    icon: \"error\",\n                });\n            }\n            if (res.data.type && res.data.type == \"success\") {\n                swal(`${t('field_added')}`, {\n                    icon: \"success\",\n                });\n                getFields()\n            }\n    \n          })\n          .catch(() => {\n            swal(`Error`, {\n                icon: \"error\",\n            });\n    \n          });\n      }\n    const  handleSubmit = (event) => {\n    event.preventDefault()\n\n    // const isValid = validate();\n    // if (isValid) {\n        addField()\n    // }\n    }\n   const resetForm = () => {\n        setDataField({\n          name: \"\",\n          description: \"\",\n          farm_uid: \"\"\n        });\n      };  \n\n     const cropHandleSubmit = (event) => {\n        event.preventDefault()\n        addCrop()\n      }\n    \n    \n     const addCrop = () => {\n    \n        let data = {\n          zone_uid: cropData.zone_uid,\n          field_uid: cropData.field_uid,\n          croptype_id: cropData.cropType,\n          previous_type: cropData.previous_type,\n          plantingDate: cropData.plantingDate,\n          rootDepth: cropData.rootDepth,\n          days: cropData.days,\n          crop_variety_id: cropData.variety,\n          practical_fraction : cropData.ruPratique,\n          density : cropData.density,\n          ecart_inter : cropData.ecartInter,\n          ecart_intra : cropData.ecartIntra\n        }\n    \n        api.post('/crop/add-crop', data)\n          .then(res => {\n            if (res.data.type && res.data.type == \"danger\") {\n              swal(`Error`, {\n                icon: \"error\",\n             });\n            }\n            if (res.data.type && res.data.type == \"success\") {\n              swal(`${t('crop_added')}`, {\n                icon: \"success\",\n              });\n              getCrops()\n            }\n          })\n          .catch((err) => {\n            swal(`Error`, {\n              icon: \"error\",\n            });\n    \n    \n          });\n      }\n\n      const zoneHandleSubmit = (event) => {\n        event.preventDefault()\n        addZone()\n    \n    \n      }\n    \n    \n      const addZone = () => {\n    \n        let data = {\n          soilProperty: soilData.soilProperty,\n          field_uid: soilData.field_uid,\n          zone_uid: soilData.zone_uid,\n          name: soilData.zoneName,\n          source: soilData.source,\n          RUmax: soilData.RUmax,\n          effPluie: soilData.effPluie,\n        }\n        api.post('/zone/add-zone', data)\n          .then(res => {\n      \n            if (res.data.type && res.data.type == \"danger\") {\n              swal(`Error`, {\n                icon: \"error\",\n             });\n            }\n            if (res.data.type && res.data.type == \"success\") {\n              swal(`${t('soil_added')}`, {\n                icon: \"success\",\n              });\n              getZones()\n            }\n          })\n          .catch((err) => {\n            swal(`Error`, {\n              icon: \"error\",\n           });\n    \n    \n          });\n      }\n\n     const IrrigHandleSubmit = (event) => {\n        event.preventDefault()\n       \n          addIrrigation()\n    \n        \n    \n      }\n    \n   \n    \n    \n     const addIrrigation = () => {\n    \n        let data = {\n          type: irrigData.irrigType,\n          zone_uid: irrigData.zone_uid,\n          crop_uid: irrigData.crop_uid,\n          flowrate: irrigData.flowrate,\n          irrigated_already: irrigData.irrigated_already,\n          name: irrigData.name,\n          pivot_shape:irrigData.pivot_shape,\n          irrigation_syst: irrigData.irrigation_syst,\n          pivot_length: irrigData.pivot_length,\n          pivot_coord: irrigData.pivot_coord,\n          full_runtime: irrigData.full_runtime,\n          lateral:irrigData.lateral,\n          drippers : irrigData.drippers,\n          effIrrig: irrigData.effIrrig,\n          pumpFlow : irrigData.pumpFlow\n    \n        }\n    \n    \n        api.post('/irrigation/add-irrigation', data)\n          .then(res => {\n            \n            if (res.data.type && res.data.type == \"danger\") {\n              swal(`Error`, {\n                icon: \"error\",\n             });\n            }\n            if (res.data.type && res.data.type == \"success\") {\n              swal(`${t('irrigation_added')}`, {\n                icon: \"success\",\n              });\n              getIrrig()\n            }\n          })\n          .catch((err) => {\n            \n            swal(`Error`, {\n              icon: \"error\",\n           });\n    \n          });\n      }\n    \n\n\n\n      const handleSoilPick = (e) => {\n        e.preventDefault()\n        const soilType = listSoil.find(\n            (soil) => soil.soil == e.target.value\n        );\n        \n        if (typeof soilType !== \"undefined\") {\n            setSoilData({\n                ...soilData,\n                soilType: soilType.soil,\n                RUmax: soilType.ru,\n                effPluie: soilType.rain_eff\n            });\n    \n        }\n    };\n    const handleCropPick = (e) => {\n      e.preventDefault()\n      // props.handleCropType(e)\n\n      const crop = listCrop.find(\n        (crop) => crop.id == e.target.value\n        );\n        if(e.target.value !== ''){\n           setCropData({...cropData, cropType : crop.id})\n          setCropData({...cropData, ruPratique : crop.practical_fraction})\n          setCropData({...cropData,days : crop.total})\n          setCropData({...cropData,rootDepth : crop.root_max})\n          setCropData({...cropData, plantingDate : crop.plant_date.slice(0, 11).replace('T', '')})\n  \n        }\n        let varieties = []\n        if (crop) {\n          const variety = allVarieties.map((variety) => {\n            if (variety.crop_id === crop.id) {\n              varieties.push({\n                varietyId :variety.id,\n                variety: variety.crop_variety\n              })\n            }\n          });\n          \n          setCropData({\n            ...cropData,\n              cropType: crop.id,\n              variety: crop.crop_variety,\n              cropVariety: varieties,\n              rootDepth: crop.root_max,\n              ruPratique :crop.practical_fraction,\n              days: crop.total,\n              plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n              kcList: crop.all_kc\n            });\n            \n  \n      }\n  };\n  const handleVarietyPick = (e) => {\n    e.preventDefault();\n    const variety = allVarieties.find(\n     \n        (variety) => variety.id == e.target.value\n  \n    )\n    \n    if (variety) {\n        setCropData({\n            ...cropData,\n            variety: variety.id,\n         \n        });\n    }\n  };\n  const [soilCompos,setSoilCompos] = useState({\n    clay : \"\",\n    sand : \"\",\n    silt : \"\"\n\n  })\n    const soilTypeForm = () => {\n      if (isStandardSoil == true)\n        return (\n            null\n         \n        );\n      else {\n        return (\n          <CompositeSoil />\n        );\n      }\n    };\n\n    const handleIrrigPick = (e) => {\n      e.preventDefault();\n       const irrigation = listIrrigations.find((irrigation) => {\n        return irrigation.irrigation == e.target.value\n    \n       })\n      //  setIM(irrigation.irrigation)\n      setIrrigData({irrigType : irrigation.irrigation})\n      // props.handleEffIrrig(irrigation.effIrrig)\n       \n      if (irrigation) {\n          setIrrigData({\n              ...irrigData,\n              irrigType : irrigation.irrigation,\n              effIrrig : irrigation.effIrrig\n          });\n      }\n    };\n\n\n    const irrigationMethodForm = () => {\n      switch (irrigData.irrigType) {\n          case `${t('Pivot')}`:\n              return <PivotForm\n                  handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\n                  handleIrrgSyst={(e) => setIrrigData({...irrigData , irrigation_syst : e.target.value})}\n                  handleRunTime={(e) => setIrrigData({...irrigData, full_runtime : e.target.value})}\n                  handlePivotCoord={(e) => setIrrigData({...irrigData,pivot_coord :e.target.value})}\n                  handlePivotLength={(e) => setIrrigData({...irrigData, pivot_length : e.target.value})}\n                  handlePivotShape={(e) => setIrrigData({...irrigData, pivot_shape : e.target.value})}\n                  irrigation_syst={irrigData.irrigation_syst}\n                  pivot_coord={irrigData.pivot_coord}\n                  pivot_length={irrigData.pivot_length}\n                  pivot_shape={irrigData.pivot_shape}\n                  full_runtime={irrigData.full_runtime}\n                  flowrate={irrigData.flowrate}\n                  name={irrigData.name}\n              />;\n          case `${t('Lateral')}`:\n              return <LateralForm\n                  handleLateral={(e) => setIrrigData({...irrigData , lateral: e.target.value})}\n                  handlePivotLength={(e) => setIrrigData({...irrigData , pivot_length : e.target.value})}\n                  handleRunTime={(e) => setIrrigData({...irrigData , full_runtime :e.target.value})}\n                  handleName={(e) => setIrrigData({...irrigData ,  name : e.target.value})}\n                  handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\n                  full_runtime={irrigData.full_runtime}\n                  flowrate={irrigData.flowrate}\n                  name={irrigData.name}\n                  pivot_length={irrigData.pivot_length}\n                  lateral={irrigData.lateral}\n              />;\n          case `${t('None')}`:\n              return null;\n          default:\n              return (\n                  <DripForm\n                    handleDrippers={(e) => setIrrigData({ ...irrigData , drippers : e.target.value})}\n                    handleIrrigAlrd={(e) => setIrrigData({...irrigData , irrigated_already : e.target.value })}\n                    handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\n                    flowrate={irrigData.flowrate}\n                    drippers={irrigData.drippers}\n                    irrigated_already={irrigData.irrigated_already}\n                   />\n              );\n      }\n  };\n  useEffect(()=>{\n    if(cropData.ecartInter !== \"\" && cropData.ecartIntra !== \"\"){\n    \n    let formule  = 10000 / (Number(cropData.ecartInter) * Number(cropData.ecartIntra))\n    setCropData({...cropData , density :formule})\n  }\n  },[cropData.ecartInter,cropData.ecartIntra])\n    const renderAddSetup = () => {\n        switch (elemValue) {\n          case 'field':\n            return (\n              <div>\n                <Card small className=\"h-100\">\n                  <CardHeader className=\"border-bottom\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-start\",\n                        width: \"auto\",\n                        float: \"left\"\n                      }}\n                    >\n                      <div>\n                        <h6 className=\"m-0\" style={{ textAlign: \"left\" }}>{t(\"field_setup\")}</h6>{\" \"}\n                      </div>\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\"\n                      }}\n                    >\n                      <Button\n                        onClick={handleSubmit}\n                        theme=\"info\"\n                        className=\"mb-2 mr-1 btn btn-success\"\n                      >\n                        <i class={`fa fa-check mx-2`}></i>\n                        {t('save')}\n                      </Button>\n                      <Button\n                        onClick={resetForm}\n                        // theme=\"success\"\n                        className=\"mb-2 mr-1 btn btn-danger\"\n                      >\n                        <i class={`fa fa-times mx-2`}></i>\n                        {t('cancel')}\n                      </Button>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\"\n                      }}\n                    >\n                       <Col lg=\"6\" sm=\"12\" md=\"6\">\n                      <Form>\n                        <Row>\n                          <Col lg='6' md=\"6\" sm='6' className=\"form-group\">\n                            <p style={{ margin: \"0px\" , textAlign:\"left\"}}>{t('name_field')}</p>\n                            <FormInput\n                              value={dataField.name}\n                              placeholder={t('name_field')}\n                              className={errors.nameError =='' ? '' : 'is-invalid'}\n                              required\n                              onChange={ e => setDataField({...dataField ,  name: e.target.value,})}\n                            />\n\n\n                          <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{errors.nameError}</div>\n                          </Col>\n                          <Col  lg='6' md=\"6\" sm='6'  className=\"form-group\">\n                            <p style={{ margin: \"0px\", textAlign:\"left\" }}>{t('name_farm')}</p>\n                            <FormSelect\n                                value={dataField.farm_uid}\n                                className={errors.farmError =='' ? '' : 'is-invalid'}\n                                required\n                                onChange={e => setDataField({...dataField ,  farm_uid: e.target.value,})}\n                            >\n                              <option value=\"\">{t('select_farm')}</option>;\n                              {farms.map((item, index) => {\n                                return <option value={item.uid}>{item.name}</option>;\n                              })}\n                            </FormSelect>\n                          </Col>\n                        </Row>\n                        <Row>\n\n                        <Col lg='12' md=\"6\" sm='6'>\n                        <FormGroup>\n                          <p style={{ margin: \"0px\",textAlign: \"left\" }}>{t('desc')}</p>\n                          <textarea\n                            value={dataField.description}\n                            onChange={e => setDataField({...dataField ,  description: e.target.value,})}\n                            style={{ height: \"220px\" }}\n                            class=\"form-control\"\n                            placeholder=\"Description\"\n                          ></textarea>\n                        </FormGroup>\n                        </Col>\n                        </Row>\n                      </Form>\n                     </Col>\n\n                    </div>\n                    <Row noGutters className=\"page-header py-4\">\n                      <PageTitle\n                        sm=\"4\"\n                        title={t('my_fields')}\n                        subtitle={t('my_fields')}\n                        className=\"text-sm-left\"\n                      />\n                    </Row>\n                    <Row className='px-2'>\n                      <FieldList\n                        Fields={getFields}\n                        FieldsList={fields}\n                      />\n                    </Row>\n                    \n                  </CardBody>\n                </Card>\n              </div>\n            )\n          case 'soil':\n            return (\n              <div style={{ position: \"relative\" }}>\n                <Card small className=\"h-100\">\n                  <CardHeader className=\"border-bottom\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\"\n                      }}\n                    >\n                      <h6 className=\"m-0\">{t('soil_info')}</h6>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\"\n                        }}\n                      >\n                        <Button\n                          onClick={zoneHandleSubmit}\n                          theme=\"info\"\n                          className=\"mb-2 mr-1 btn btn-success\"\n                        >\n                          <i class={`fa fa-check mx-2`}></i>\n                          {t('save')}\n                        </Button>\n                        <Button\n                          onClick={\"\"}\n                          // theme=\"success\"\n                          className=\"mb-2 mr-1 btn btn-danger\"\n                        >\n                          <i class={`fa fa-times mx-2`}></i>\n                          {t('cancel')}\n                        </Button>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\"\n                      }}\n                    >\n                     <Col lg=\"12\" sm=\"12\" md=\"6\">\n        <Form>\n          <Row form>\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('soil_zone')}</p>\n              <FormInput\n                value={soilData.zoneName}\n                placeholder={t('soil_zone')}\n                required\n                onChange={e => setSoilData({...soilData , zoneName : e.target.value})}\n\n              />\n            </Col>\n\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('name_field')}</p>\n              <FormSelect\n                value={soilData.field_uid}\n                onChange={e => setSoilData({...soilData , field_uid : e.target.value})}\n                placeholder={t('name_field')}\n              >\n                <option value=\"\">{t('select_field')}</option>\n                {fields.map((item, index) => {\n                  return <option value={item.Uid}>{item.title}</option>;\n                })}\n              </FormSelect>\n            </Col>\n\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('source')}</p>\n              <FormSelect\n                value={soilData.source}\n                onChange={e => setSoilData({...soilData , source : e.target.value})}\n              >\n                <option value=\"1\" >Manual</option>\n              </FormSelect>\n\n            </Col>\n\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('soil_prop')}</p>\n              <FormSelect\n                onChange={evt => {\n                 \n                  setSoilType(!isStandardSoil);\n                  \n                }}\n              >\n                <option selected={isStandardSoil}>Standard</option>\n                <option selected={!isStandardSoil}>Composite</option>\n              </FormSelect>\n            </Col>\n            {soilTypeForm()}\n          </Row>\n          <Row form>\n          <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n          <div>\n            <p style={{ margin: \"0px\" }}>{t('soil_type')}</p>\n            <FormSelect\n            value={soilData.soilType}\n              onChange={handleSoilPick}\n            >\n              <option value=\"\">{t('select_soil')}</option>\n              {\n                listSoil.map((item, index) => {  \n                    return <option value={item.soil} >{item.soil}</option>;\n                \n                })\n              }\n            </FormSelect>\n          </div>\n        </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('efficacité_pluie')} (%)</p>\n                <FormInput value={soilData.effPluie} onChange={e => setSoilData({...soilData,effPluie : e.target.value})} id='effPluie' placeholder={t('efficacité_pluie')}\n                />\n\n              </FormGroup>\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>RU max (mm/m)</p>\n                <FormInput value={soilData.RUmax} onChange={e => setSoilData({...soilData,RUmax : e.target.value})} id='ruMax' placeholder=\"RU max\"\n                />\n\n              </FormGroup>\n\n            </Col>\n          </Row>\n        </Form>\n      </Col>\n                    </div>\n                    <Row noGutters className=\"page-header py-4\">\n                      <PageTitle\n                        sm=\"4\"\n                        title={t('my_zones')}\n                        subtitle={t('my_zones')}\n                        className=\"text-sm-left\"\n                      />\n                    </Row>\n                    <Row className=\"px-2\">\n  \n                      <ZoneList\n                        zonesList={zones}\n                        Zones={getZones}\n                        Fields={fields}\n                        // state={this.dataChange}\n                        listSoils={listSoil}\n  \n                      />\n  \n  \n                    </Row>\n  \n                  </CardBody>\n                </Card>\n              </div>\n            )\n          case 'crop':\n            return (\n              <div>\n                <Card small className=\"h-100\">\n                  <CardHeader className=\"border-bottom\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\"\n                      }}\n                    >\n                      <h6 className=\"m-0\">{t('crop_info')}</h6>{\" \"}\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\"\n                        }}\n                      >\n                        <Button\n                          onClick={cropHandleSubmit}\n                          theme=\"info\"\n                          className=\"mb-2 mr-1 btn btn-success\"\n                        >\n                          <i class={`fa fa-check mx-2`}></i>\n                          {t('save')}\n                        </Button>\n                        <Button\n                          onClick={\"\"}\n                          // theme=\"success\"\n                          className=\"mb-2 mr-1 btn btn-danger\"\n                        >\n                          <i class={`fa fa-times mx-2`}></i>\n                          {t('cancel')}\n                        </Button>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\"\n                      }}\n                    >\n                         <Col lg=\"12\" sm=\"12\" md=\"6\">\n      <Form>\n        <Row form>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('crop_zone')}</p>\n            <FormSelect\n              value={cropData.zone_uid}\n              onChange={e=> setCropData({...cropData , zone_uid : e.target.value})}\n              placeholder={t('crop_zone')}\n            >\n              <option>{t('select_zone')}</option>\n\n                  {\n                    zones.map(soil=>{\n                     return <option value={soil.Uid}>{soil.name}</option>\n\n                    })\n                  }\n              \n            </FormSelect>\n          </Col>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('crop_field')}</p>\n            <FormSelect\n              value={cropData.field_uid}\n              onChange={e => setCropData({...cropData , field_uid : e.target.value})}\n              placeholder={t('crop_zone')}\n            >\n              <option>{t('select_field')}</option>\n                      {\n                        fields.map(field=>{\n                          return <option value={field.Uid}>{field.title}</option>\n                          \n                        })\n                      }\n            </FormSelect>\n          </Col>\n        </Row>\n        <Row form>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('crop_type')}</p>\n            <FormSelect\n              onChange={handleCropPick}\n              placeholder={t('crop_type')}\n              value={cropData.cropType}\n            >\n              <option value=\"\">Select Crop</option>\n              {\n                listCrop.map(crop => {\n                  return (\n                    <option value={crop.id}>{crop.crop}</option>\n\n                  )\n                })\n              }\n            </FormSelect>\n          </Col>\n          <Col lg=\"6\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('crop_variety')}</p>\n              <FormSelect value={cropData.variety} onChange={handleVarietyPick} id=\"cropVariety\">\n                <option value=\"\">{t('crop_variety')}</option>\n                {\n                      cropData.cropVariety.map(variety => (\n                          <option value={variety.varietyId}>{variety.variety}</option>\n                      ))\n                  }\n              </FormSelect>\n              <input type=\"checkbox\" name=\"Autre\" id=\"check\" onClick={() => setChecked(!checked)} /> {t('other')}\n                  {\n                      checked\n                      ?\n\n                      <FormInput \n                      value={cropData.variety || \"\"}\n                      placeholder={t('crop_variety')}\n                      id=\"cropVariety\"\n                      onChange={e => setCropData({...cropData , variety : e.target.value})}\n                      />\n\n                      :\n                      null\n                  }\n                      \n            </FormGroup>\n\n          </Col>\n        </Row>\n        <Row form>\n           <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('prev_type')}</p>\n            <FormInput\n              onChange={\"\"}\n              placeholder={t('prev_type')}\n            />\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('depth')} (m)</p>\n              <FormInput value={cropData.rootDepth} onChange={e => setCropData({...cropData,rootDepth :e.target.value})} id='z' placeholder={t('depth')}\n              />\n\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('Days')}</p>\n\n              <FormInput value={cropData.days} id='days' onChange={e => setCropData({...cropData,days :e.target.value})} placeholder={t('Days')} />\n\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('growing_season')}</p>\n              <FormInput type=\"date\" value={cropData.plantingDate} onChange={e => setCropData({...cropData,plantingDate :e.target.value})} id='days' />\n\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('fraction_pratique')} (%) </p>\n                <FormInput value={cropData.ruPratique} onChange={e => setCropData({...cropData,ruPratique :e.target.value})} id='ruPratique' placeholder={t('fraction_pratique')}\n                />\n              </FormGroup>\n\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('ecart_inter')} (m)</p>\n                <FormInput value={cropData.ecartInter} onChange={e => setCropData({...cropData,ecartInter :e.target.value})} id='ecartInter' placeholder={t('ecart_inter')}\n                />\n              </FormGroup>\n\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('ecart_intra')} (m) </p>\n                <FormInput value={cropData.ecartIntra} onChange={e => setCropData({...cropData,ecartIntra :e.target.value})} id='ecartIntra' placeholder={t('ecart_intra')}\n                />\n              </FormGroup>\n\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('densité')} (plants/ha)</p>\n                <FormInput value={cropData.density} onChange={e => setCropData({...cropData,density :e.target.value})} id='densité' placeholder={t('densité')}\n                />\n              </FormGroup>\n\n            </Col>\n        </Row>\n      </Form>\n    </Col>\n                    </div>\n                    <Row noGutters className=\"page-header py-4\">\n                      <PageTitle\n                        sm=\"4\"\n                        title={t('my_crops')}\n                        subtitle={t('my_crops')}\n                        className=\"text-sm-left\"\n                      />\n                    </Row>\n                    <Row className=\"px-2\">\n  \n                      <CropList\n                        cropsList={crops}\n                        Crops={getCrops}\n                        Fields={fields}\n                        Zones={zones}\n                      />\n  \n                    </Row>\n                  </CardBody>\n                </Card>\n              </div>\n            )\n          case 'irrig':\n            return (\n              <div>\n                <Card small className=\"h-100\">\n                  <CardHeader className=\"border-bottom\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\"\n                      }}\n                    >\n                      <h6 className=\"m-0\">{t('Irrigation_info')}</h6>{\" \"}\n  \n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\"\n                        }}\n                      >\n                        <Button\n                          onClick={IrrigHandleSubmit}\n                          theme=\"info\"\n                          className=\"mb-2 mr-1 btn btn-success\"\n                        >\n                          <i class={`fa fa-check mx-2`}></i>\n                          {t('save')}\n                        </Button>\n                        <Button\n                          onClick={\"\"}\n                          // theme=\"success\"\n                          className=\"mb-2 mr-1 btn btn-danger\"\n                        >\n                          <i class={`fa fa-times mx-2`}></i>\n                          {t('cancel')}\n                        </Button>\n                      </div>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\"\n                      }}\n                    >\n                         <Col lg=\"12\" sm=\"12\" md=\"6\">\n                            <Form>\n                              <Row form>\n                                <Col md=\"6\" className=\"form-group\">\n                                  <p style={{ margin: \"0px\" }}>{t('irrigation_zone')}</p>\n                                  <FormSelect\n                                  value={irrigData.zone_uid}\n                                  onChange={e => setIrrigData({...irrigData , zone_uid : e.target.value})}\n                                  >\n                                    <option>{t('select_zone')}</option>\n                                          {\n                                            zones.map(soil=>{\n                                              return<option value={soil.Uid} >{soil.name}</option>\n\n                                            })\n                                          }\n                                    \n                                  </FormSelect>\n                                </Col>\n                                <Col md=\"6\" className=\"form-group\">\n                                  <p style={{ margin: \"0px\" }}>{t('irrigation_crop')}</p>\n                                  <FormSelect\n                                  value={irrigData.crop_uid}\n                                  onChange={e => setIrrigData({...irrigData , crop_uid : e.target.value}) }\n                                  >\n                                    <option>{t('select_crop')}</option>\n                                           {\n                                            crops.map(crop=>{\n                                              let cropType= \"\"\n                                              listCrop.map(croptype=>{\n                                                if(croptype.id === crop.croptype_id){\n                                                  cropType = croptype.crop\n                                                }\n                                              })\n                                             return <option value={crop.Uid} >{cropType}</option>\n\n                                            })\n                                          }\n                                  </FormSelect>\n                                </Col>\n                              \n                                <Col md=\"6\" className=\"form-group\">\n                                  <p style={{ margin: \"0px\" }}>{t('Irrigation_system_type')}</p>\n                                  <FormSelect\n                                    value={irrigData.irrigType}\n                                    onChange={evt => {\n                                      handleIrrigPick(evt)\n                                    }}\n                                  >\n                                    <option disabled selected value=\"\">{t('select_irriagtion')}</option>\n                                    {listIrrigations.map(item => {\n                                      // if (item.value === irrigationMethod) {\n                                      //   return <option value={item.value} selected={true}>{item.type}</option>;\n                                      // } else {\n                                      //   return <option value={item.value} selected={false}>{item.type}</option>;\n                                      // }\n                                      return <option value={item.irrigation} >{t(`${item.irrigation}`)}</option>;\n                                    })}\n                                  </FormSelect>\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\">\n                                    <FormGroup>\n                                      <p style={{ margin: \"0px\" }}>{t('efficience_irrigation')} (%) </p>\n                                      <FormInput value={irrigData.effIrrig} onChange={e => setIrrigData({...irrigData , effIrrig :e.target.value})} id='effIrrig' placeholder={t('efficience_irrigation')}\n                                      />\n\n                                    </FormGroup>\n\n                                  </Col>\n                                  <Col lg=\"4\" md=\"8\" sm=\"8\">\n                                    <FormGroup>\n                                      <p style={{ margin: \"0px\" }}>{t('debit_reseau')} (m³/h) </p>\n                                      <FormInput value={irrigData.pumpFlow} onChange={e => setIrrigData({...irrigData , pumpFlow :e.target.value})} id='debitReseau' placeholder={t('debit_reseau')}\n                                      />\n\n                                    </FormGroup>\n\n                                  </Col>\n                              </Row>\n                              {irrigationMethodForm()}\n\n                            </Form>\n                         </Col>\n                    </div>\n                    <Row noGutters className=\"page-header py-4\">\n                      <PageTitle\n                        sm=\"4\"\n                        title={t('my_irrigations')}\n                        subtitle={t('my_irrigations')}\n                        className=\"text-sm-left\"\n                      />\n                    </Row>\n                    <Row className=\"px-2\">\n  \n                      <IrrigationList\n                        irrigationsList={irrigations}\n                        Irrigations={getIrrig}\n                        Crops={crops}\n                        Zones={zones}\n                      />\n                    </Row>\n                  </CardBody>\n                </Card>\n              </div>\n            )\n          default:\n            return (\n              <div>\n                <Card small className=\"h-100\">\n                  <CardHeader className=\"border-bottom\">\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-start\",\n                        width: \"auto\",\n                        float: \"left\"\n                      }}\n                    >\n                      <div>\n                        <h6 className=\"m-0\" style={{ textAlign: \"left\" }}>{t(\"field_setup\")}</h6>{\" \"}\n                      </div>\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"flex-end\"\n                      }}\n                    >\n                      <Button\n                        onClick={handleSubmit}\n                        // theme=\"success\"\n                        className=\"mb-2 mr-1 btn btn-success\"\n                      >\n                        <i class={`fa fa-check mx-2`}></i>\n                        {t('save')}\n                      </Button>\n                      <Button\n                        onClick={resetForm}\n                        // theme=\"success\"\n                        className=\"mb-2 mr-1 btn btn-danger\"\n                      >\n                        <i class={`fa fa-times mx-2`}></i>\n                        {t('cancel')}\n                      </Button>\n                    </div>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                      <Row noGutters className=\"page-header py-4\">\n                      <PageTitle\n                        sm=\"4\"\n                        title={t('my_fields')}\n                        subtitle={t('my_fields')}\n                        className=\"text-sm-left\"\n                      />\n                    </Row>\n                    {/* <Row>\n                      <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                        <Card small>\n                          <CardHeader>{t('active_fields')}</CardHeader>\n                          <CardBody>\n                            <FieldList\n                              Fields={getDataFields}\n                              FieldsList={farmsData}\n                            />\n                          </CardBody>\n                        </Card>\n                      </Col>\n                    </Row> */}\n                    <div\n                      style={{\n                        display: \"flex\",\n                        marginTop: \"20px\",\n                        flexWrap: \"wrap\"\n                      }}\n                    >\n                      <Col lg=\"6\" sm=\"12\" md=\"6\">\n                      <Form>\n                        <Row>\n                          <Col lg='6' md=\"6\" sm='6' className=\"form-group\">\n                            <p style={{ margin: \"0px\" , textAlign:\"left\"}}>{t('name_field')}</p>\n                            <FormInput\n                              value={dataField.name}\n                              placeholder={t('name_field')}\n                              className={errors.nameError =='' ? '' : 'is-invalid'}\n                              required\n                              onChange={handleName}\n                            />\n\n\n                          <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{errors.nameError}</div>\n                          </Col>\n                          <Col  lg='6' md=\"6\" sm='6'  className=\"form-group\">\n                            <p style={{ margin: \"0px\", textAlign:\"left\" }}>{t('name_farm')}</p>\n                            <FormSelect\n                                value={dataField.farm_uid}\n                                className={errors.farmError =='' ? '' : 'is-invalid'}\n                                required\n                                onChange={handleUidFarm}\n                            >\n                              <option value=\"\">{t('select_farm')}</option>;\n                              {farms.map((item, index) => {\n                                return <option value={item.uid}>{item.name}</option>;\n                              })}\n                            </FormSelect>\n                          </Col>\n                        </Row>\n                        <Row>\n\n                        <Col lg='12' md=\"6\" sm='6'>\n                        <FormGroup>\n                          <p style={{ margin: \"0px\",textAlign: \"left\" }}>{t('desc')}</p>\n                          <textarea\n                            value={dataField.description}\n                            onChange={handleDescription}\n                            style={{ height: \"220px\" }}\n                            class=\"form-control\"\n                            placeholder=\"Description\"\n                          ></textarea>\n                        </FormGroup>\n                        </Col>\n                        </Row>\n                      </Form>\n                     </Col>\n                    </div>\n                  </CardBody>\n                </Card>\n              </div>\n            )\n        }\n      }\n    return (\n        <>\n            <Container fluid className=\"main-content-container py-4\">\n            <Nav justified pills className=\"bg-white\">\n              <NavItem>\n                <NavLink>\n                  <Link onClick={goProfile}>{t('profile')}</Link> \n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink>\n                  <Link onClick={goFarms}>{t('farms')}</Link>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink active>\n                 {t('fields')}\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink>\n                    <Link onClick={goSensor}>{t('sensors')}</Link>\n                </NavLink>\n              </NavItem>\n        </Nav>\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle subtitle={t('fields')} md=\"12\" className=\"ml-sm-auto mr-sm-auto\" />\n        </Row>\n        <Row className=' d-flex justify-content-center align-items-center py-2'>\n              <Col lg='12' md='12' sm='12'>\n                <Nav tabs style={{ paddingBottom: 10 }}>\n                  <NavItem>\n                    <NavLink id=\"field\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"field\" ? \"bg-info rounded text-dark \" : 'rounded text-dark '}`} href=\"#\">\n                      {t('field_setup')}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink id=\"soil\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"soil\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'}`} href=\"#\">\n                      {t('soil_info')}\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink id=\"crop\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"crop\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'}`} href=\"#\">{t('crop_info')}</NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink id=\"irrig\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"irrig\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">{t('Irrigation_info')}</NavLink>\n                  </NavItem>\n                </Nav>\n\n              </Col>\n\n            </Row>\n               {renderAddSetup()}\n               <Row>\n                    <Col lg='12' md=\"12\" sm=\"12\">\n                        <LeafletMap _onCreated={_onCreated} data={farms} uid={Uid} draw={configMap.draw} edit={configMap.edit} zoom={coords.zoom} center={coords.center} fromAction={coords.fromAction}   />\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default FieldsList"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA8BC,GAA9B,EAAmCC,UAAnC,EAA+CC,GAA/C,EAAmDC,OAAnD,EAA2DC,OAA3D,EAAoEC,QAApE,EAA6EC,MAA7E,EAAoFC,IAApF,EAAyFC,SAAzF,EAAmGC,UAAnG,EAA8GC,SAA9G,QAA8H,cAA9H;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,0CAArB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,aAAP,MAA0B,mDAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EAAA,sBAEDX,cAAc,EAFb;EAAA,IAEbY,CAFa,mBAEbA,CAFa;EAAA,IAEVC,IAFU,mBAEVA,IAFU;;EAGrB,IAAMC,OAAO,GAAG/B,UAAU,EAA1B;;EAHqB,gBAIOH,QAAQ,CAAC,KAAD,CAJf;EAAA;EAAA,IAIdmC,MAJc;EAAA,IAINC,SAJM;;EAAA,iBAKMpC,QAAQ,CAAC;IAClCqC,QAAQ,EAAG,EADuB;IAElCC,SAAS,EAAG,EAFsB;IAGlCC,IAAI,EAAE,EAH4B;IAIlCC,MAAM,EAAE,EAJ0B;IAKlCC,UAAU,EAAG;EALqB,CAAD,CALd;EAAA;EAAA,IAKdC,MALc;EAAA,IAKPC,SALO;;EAAA,iBAYY3C,QAAQ,CAAC,EAAD,CAZpB;EAAA;EAAA,IAYd4C,SAZc;EAAA,IAYJC,YAZI;;EAAA,iBAaI7C,QAAQ,CAAC,EAAD,CAbZ;EAAA;EAAA,IAad8C,KAbc;EAAA,IAaRC,QAbQ;;EAAA,iBAcY/C,QAAQ,CAAC;IACxCgD,IAAI,EAAG;MACLC,OAAO,EAAE,KADJ;MAELC,MAAM,EAAE,KAFH;MAGLC,SAAS,EAAE,KAHN;MAILC,QAAQ,EAAE,IAJL;MAKLC,MAAM,EAAC,IALF;MAMLC,YAAY,EAAE;IANT,CADiC;IASxCC,IAAI,EAAG;MACLC,MAAM,EAAE,KADH;MAELD,IAAI,EAAE;IAFD;EATiC,CAAD,CAdpB;EAAA;EAAA,IAcdE,SAdc;EAAA,IAcJC,YAdI;;EA4BrB,IAAMC,MAAM,GAAGzD,SAAS,EAAxB;;EA5BqB,kBA6BOF,QAAQ,CAAC,EAAD,CA7Bf;EAAA;EAAA,IA6Bd4D,MA7Bc;EAAA,IA6BNC,SA7BM;;EAAA,kBA8BU7D,QAAQ,CAAC,EAAD,CA9BlB;EAAA;EAAA,IA8Bd8D,QA9Bc;EAAA,IA8BLC,WA9BK;;EAAA,kBA+BU/D,QAAQ,CAAC,EAAD,CA/BlB;EAAA;EAAA,IA+BdgE,QA/Bc;EAAA,IA+BLC,WA/BK;;EAAA,kBAgCkBjE,QAAQ,CAAC,EAAD,CAhC1B;EAAA;EAAA,IAgCdkE,YAhCc;EAAA,IAgCDC,eAhCC;;EAAA,kBAiCwBnE,QAAQ,CAAC,EAAD,CAjChC;EAAA;EAAA,IAiCdoE,eAjCc;EAAA,IAiCEC,kBAjCF;;EAAA,kBAmCKrE,QAAQ,CAAC,EAAD,CAnCb;EAAA;EAAA,IAmCdsE,KAnCc;EAAA,IAmCPC,QAnCO;;EAAA,kBAoCKvE,QAAQ,CAAC,EAAD,CApCb;EAAA;EAAA,IAoCdwE,KApCc;EAAA,IAoCPC,QApCO;;EAAA,kBAqCWzE,QAAQ,CAAC,EAAD,CArCnB;EAAA;EAAA,IAqCd0E,WArCc;EAAA,IAqCDC,QArCC;;EAAA,kBAsCK3E,QAAQ,CAAC,EAAD,CAtCb;EAAA;EAAA,IAsCd4E,KAtCc;EAAA,IAsCPC,QAtCO;;EAuCrB,IAAIC,GAAG,GAAGnB,MAAM,CAACoB,GAAjB;;EAvCqB,kBAwCO/E,QAAQ,CAAC,OAAD,CAxCf;EAAA;EAAA,IAwCdgF,SAxCc;EAAA,IAwCJC,OAxCI;;EAAA,kBAyCYjF,QAAQ,CAAC;IACtCkF,IAAI,EAAG,EAD+B;IAEtCC,QAAQ,EAAE,EAF4B;IAGtCC,WAAW,EAAE;EAHyB,CAAD,CAzCpB;EAAA;EAAA,IAyCdC,SAzCc;EAAA,IAyCJC,YAzCI;;EAAA,kBA8CMtF,QAAQ,CAAC;IAChCuF,SAAS,EAAE,EADqB;IAEhCC,SAAS,EAAE;EAFqB,CAAD,CA9Cd;EAAA;EAAA,IA8CdC,MA9Cc;EAAA,IA8CPC,SA9CO;;EAAA,kBAmDQ1F,QAAQ,CAAC,KAAD,CAnDhB;EAAA;EAAA,IAmDd2F,OAnDc;EAAA,IAmDNC,UAnDM;;EAAA,kBAoDU5F,QAAQ,CAAC;IACtC6F,SAAS,EAAE,EAD2B;IAEtCC,QAAQ,EAAE,EAF4B;IAGtCC,QAAQ,EAAC,EAH6B;IAItCC,OAAO,EAAE,EAJ6B;IAKtCC,WAAW,EAAE,EALyB;IAMtCC,UAAU,EAAE,EAN0B;IAOtCC,IAAI,EAAE,EAPgC;IAQtCC,YAAY,EAAE,EARwB;IAStCC,SAAS,EAAC,EAT4B;IAUtCC,UAAU,EAAE,EAV0B;IAWtCC,UAAU,EAAE,EAX0B;IAYtCC,OAAO,EAAE,EAZ6B;IAatCC,UAAU,EAAE,EAb0B;IActCC,MAAM,EAAE;EAd8B,CAAD,CApDlB;EAAA;EAAA,IAoDdC,QApDc;EAAA,IAoDLC,WApDK;;EAAA,kBAoEU5G,QAAQ,CAAC;IACtC6F,SAAS,EAAE,EAD2B;IAEtCC,QAAQ,EAAE,EAF4B;IAGtCe,QAAQ,EAAC,EAH6B;IAItCC,MAAM,EAAE,GAJ8B;IAKtCC,YAAY,EAAC,EALyB;IAMtCC,QAAQ,EAAE,EAN4B;IAOtCC,KAAK,EAAE,EAP+B;IAQtCC,QAAQ,EAAE;EAR4B,CAAD,CApElB;EAAA;EAAA,IAoEdC,QApEc;EAAA,IAoELC,WApEK;;EAAA,kBA8EiBpH,QAAQ,CAAC,IAAD,CA9EzB;EAAA;EAAA,IA8EdqH,cA9Ec;EAAA,IA8EEC,WA9EF;;EAAA,kBAgFYtH,QAAQ,CAAC;IACvCuH,SAAS,EAAG,EAD2B;IAEpCzB,QAAQ,EAAE,EAF0B;IAGpC0B,QAAQ,EAAE,EAH0B;IAIpCC,QAAQ,EAAE,EAJ0B;IAKpCC,iBAAiB,EAAE,EALiB;IAMpCxC,IAAI,EAAE,EAN8B;IAOpCyC,WAAW,EAAC,EAPwB;IAQpCC,eAAe,EAAC,EARoB;IASpCC,YAAY,EAAE,EATsB;IAUpCC,WAAW,EAAE,EAVuB;IAWpCC,YAAY,EAAE,EAXsB;IAYpCC,OAAO,EAAC,EAZ4B;IAapCC,QAAQ,EAAG,EAbyB;IAcpCC,QAAQ,EAAE,EAd0B;IAepCC,QAAQ,EAAG;EAfyB,CAAD,CAhFpB;EAAA;EAAA,IAgFdC,SAhFc;EAAA,IAgFJC,YAhFI;;EAmGrB,IAAMC,eAAe;IAAA,oEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAChBC,GADgB,yBACKzD,GADL;cAAA;cAAA,OAEd1E,GAAG,CAACoI,GAAJ,CAAQD,GAAR,EACDE,IADC,CACI,UAAAC,QAAQ,EAAI;gBACd,IAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,SAA3B,EAAsC;kBAClC,IAAIC,SAAS,GAAGH,QAAQ,CAACC,IAAT,CAAc/D,KAA9B;kBACAC,QAAQ,CAACgE,SAAD,CAAR;gBACH;cAEJ,CAPC,EAOCC,KAPD,CAOO,UAAAC,KAAK,EAAI;gBACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;cACH,CATC,CAFc;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAfT,eAAe;MAAA;IAAA;EAAA,GAArB;;EAcA,IAAMY,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpB,IAAIC,MAAM,GAAG,EAAb;IACAvE,KAAK,CAACwE,GAAN,CAAU,UAAAC,IAAI,EAAI;MACd,IAAIzF,MAAM,GAAGyF,IAAI,CAACzF,MAAlB;;MACA,IAAIA,MAAJ,EAAY;QACRA,MAAM,CAACwF,GAAP,CAAW,UAAAE,KAAK,EAAI;UAChBH,MAAM,CAACI,IAAP,CAAY;YACRC,KAAK,EAAEF,KAAK,CAACpE,IADL;YAERuE,MAAM,EAAEH,KAAK,CAACG,MAFN;YAGRrE,WAAW,EAAEkE,KAAK,CAAClE,WAHX;YAIRN,GAAG,EAAEwE,KAAK,CAACvE,GAJH;YAKR2E,OAAO,EAAEJ,KAAK,CAACI,OALP;YAMRC,EAAE,EAAEL,KAAK,CAACM;UANF,CAAZ;QAQH,CATD;MAUH;IACJ,CAdD;IAeA/F,SAAS,CAACsF,MAAD,CAAT;EACH,CAlBD;;EAoBA,IAAMU,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAIC,KAAK,GAAG,EAAZ;IACAlF,KAAK,CAACwE,GAAN,CAAU,UAAAC,IAAI,EAAI;MACd,IAAIzF,MAAM,GAAGyF,IAAI,CAACzF,MAAlB;;MACA,IAAIA,MAAJ,EAAY;QACRA,MAAM,CAACwF,GAAP,CAAW,UAAAW,QAAQ,EAAI;UACnB,IAAIvF,KAAK,GAAGuF,QAAQ,CAACvF,KAArB;;UACA,IAAIA,KAAJ,EAAW;YACPA,KAAK,CAAC4E,GAAN,CAAU,UAAAY,CAAC,EAAI;cACXF,KAAK,CAACP,IAAN,CAAW;gBACPI,EAAE,EAAEK,CAAC,CAACJ,EADC;gBAEP1E,IAAI,EAAE8E,CAAC,CAAC9E,IAFD;gBAGPJ,GAAG,EAAEkF,CAAC,CAACjF,GAHA;gBAIP+B,MAAM,EAAEkD,CAAC,CAAClD,MAJH;gBAKP1B,WAAW,EAAE4E,CAAC,CAAC5E,WALR;gBAMP6E,QAAQ,EAAED,CAAC,CAACC;cANL,CAAX;YASH,CAVD;UAWH;;UAAA;QACJ,CAfD;MAgBH;;MAAA;IACJ,CApBD;IAqBAxF,QAAQ,CAACqF,KAAD,CAAR;EACH,CAxBD;;EA0BA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAIC,KAAK,GAAG,EAAZ;IACAvF,KAAK,CAACwE,GAAN,CAAU,UAAAC,IAAI,EAAI;MACd,IAAIzF,MAAM,GAAGyF,IAAI,CAACzF,MAAlB;;MACA,IAAIA,MAAJ,EAAY;QACRA,MAAM,CAACwF,GAAP,CAAW,UAAAgB,QAAQ,EAAI;UACnB,IAAI9F,KAAK,GAAG8F,QAAQ,CAAC9F,KAArB;;UACA,IAAIA,KAAJ,EAAW;YACPA,KAAK,CAAC8E,GAAN,CAAU,UAAAY,CAAC,EAAI;cACXG,KAAK,CAACZ,IAAN,CAAW;gBACPX,IAAI,EAAEoB,CAAC,CAACpB,IADD;gBAEP9D,GAAG,EAAEkF,CAAC,CAACjF,GAFA;gBAGPL,WAAW,EAAEsF,CAAC,CAACtF,WAHR;gBAIPiF,EAAE,EAAEK,CAAC,CAACJ,EAJC;gBAKPK,QAAQ,EAAED,CAAC,CAACC,QALL;gBAMPI,OAAO,EAAEL,CAAC,CAACK,OANJ;gBAOPC,WAAW,EAAEN,CAAC,CAACM,WAPR;gBAQPC,QAAQ,EAAGP,CAAC,CAACQ;cARN,CAAX;YAUH,CAXD;UAYH;;UAAA;QACJ,CAhBD;MAiBH;;MAAA;IACJ,CArBD;IAsBAjG,QAAQ,CAAC4F,KAAD,CAAR;EACH,CAzBD;;EA2BA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB,IAAIC,WAAW,GAAG,EAAlB;IACA9F,KAAK,CAACwE,GAAN,CAAU,UAAAC,IAAI,EAAI;MACd,IAAIzF,MAAM,GAAGyF,IAAI,CAACzF,MAAlB;;MACA,IAAIA,MAAJ,EAAY;QACRA,MAAM,CAACwF,GAAP,CAAW,UAAAgB,QAAQ,EAAI;UACnB,IAAI9F,KAAK,GAAG8F,QAAQ,CAAC9F,KAArB;;UACA,IAAIA,KAAJ,EAAW;YACPA,KAAK,CAAC8E,GAAN,CAAU,UAAAY,CAAC,EAAI;cACX,IAAItF,WAAW,GAAGsF,CAAC,CAACtF,WAApB;;cACA,IAAIA,WAAJ,EAAiB;gBACbA,WAAW,CAAC0E,GAAZ,CAAgB,UAAAuB,SAAS,EAAI;kBACzBD,WAAW,CAACnB,IAAZ,CAAiB;oBACbX,IAAI,EAAE+B,SAAS,CAAC/B,IADH;oBAEbgC,OAAO,EAAED,SAAS,CAACC,OAFN;oBAGbC,UAAU,EAAEF,SAAS,CAAChD,WAHT;oBAIbF,QAAQ,EAAEkD,SAAS,CAAClD,QAJP;oBAKbO,OAAO,EAAE2C,SAAS,CAAC3C,OALN;oBAMblD,GAAG,EAAE6F,SAAS,CAAC5F,GANF;oBAOb+F,OAAO,EAAEH,SAAS,CAACG,OAPN;oBAQbT,OAAO,EAAEM,SAAS,CAACN;kBARN,CAAjB;gBAYH,CAbD;cAcH;YACJ,CAlBD;UAmBH;;UAAA;QACJ,CAvBD;MAwBH;;MAAA;IACJ,CA5BD;IA6BA1F,QAAQ,CAAC+F,WAAD,CAAR;EACH,CAhCD;;EAmCA3K,SAAS,CAAC,YAAM;IACZuI,eAAe;;IACf,IAAMyC,WAAW;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAER3K,GAAG,CAACoI,GAAJ,CAAQ,qBAAR,EACDC,IADC,CACI,UAAAC,QAAQ,EAAI;kBACd,IAAIA,QAAJ,EAAc;oBACV,IAAIsC,QAAQ,GAAGtC,QAAQ,CAACC,IAAT,CAAcsC,QAA7B;oBACAhH,WAAW,CAAC+G,QAAD,CAAX;kBACH;gBACJ,CANC,CAFQ;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAWdhC,OAAO,CAACC,GAAR;;cAXc;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAX8B,WAAW;QAAA;MAAA;IAAA,GAAjB;;IAcF,IAAMG,QAAQ;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEH9K,GAAG,CAACoI,GAAJ,CAAQ,kBAAR,EACDC,IADC,CACI,UAAAC,QAAQ,EAAI;kBACd,IAAIyC,SAAS,GAAGzC,QAAQ,CAACC,IAAT,CAAcyC,KAA9B;kBACArH,WAAW,CAACoH,SAAD,CAAX;gBAEH,CALC,EAKCrC,KALD,CAKO,UAAAC,KAAK,EAAI;kBACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;gBACH,CAPC,CAFG;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAYTC,OAAO,CAACC,GAAR;;cAZS;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAARiC,QAAQ;QAAA;MAAA;IAAA,GAAd;;IAeA,IAAMG,cAAc;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEbjL,GAAG,CAACoI,GAAJ,CAAQ,8BAAR,EACHC,IADG,CACE,UAAAC,QAAQ,EAAI;kBAChB,IAAIA,QAAJ,EAAc;oBACZ,IAAI4C,SAAS,GAAG5C,QAAQ,CAACC,IAAT,CAAc+B,WAA9B;oBACArG,kBAAkB,CAACiH,SAAD,CAAlB;kBACD;gBACF,CANG,CAFa;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAWnBtC,OAAO,CAACC,GAAR;;cAXmB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAdoC,cAAc;QAAA;MAAA;IAAA,GAApB;;IAcC,IAAME,YAAY;MAAA,qEAAG;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEVnL,GAAG,CAACoI,GAAJ,CAAQ,0BAAR,EACDC,IADC,CACI,UAAAC,QAAQ,EAAI;kBACd,IAAIA,QAAQ,CAACC,IAAT,CAAcC,IAAd,KAAuB,SAA3B,EAAsC;oBAClC,IAAI4C,aAAa,GAAG9C,QAAQ,CAACC,IAAT,CAAc8C,SAAlC;oBACAtH,eAAe,CAACqH,aAAD,CAAf;kBAEH;gBACJ,CAPC,EAOC1C,KAPD,CAOO,UAAAC,KAAK,EAAI;kBACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;gBACH,CATC,CAFU;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAchBC,OAAO,CAACC,GAAR;;cAdgB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAH;;MAAA,gBAAZsC,YAAY;QAAA;MAAA;IAAA,GAAlB;;IAiBDA,YAAY;IACZF,cAAc;IACdH,QAAQ;IACRH,WAAW;EACZ,CAlEQ,EAkEN,EAlEM,CAAT;EAoEAhL,SAAS,CAAC,YAAM;IACZmJ,SAAS;IACTgB,QAAQ;IACRL,QAAQ;IACRY,QAAQ;EACX,CALQ,EAKN,CAAC7F,KAAD,CALM,CAAT;;EAOA,IAAM8G,SAAS,GAAG,SAAZA,SAAY,GAAM;IACpBxJ,OAAO,CAACqH,IAAR,uBAA4BzE,GAA5B;IACA6G,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACH,CAHD;;EAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;IAClB5J,OAAO,CAACqH,IAAR,uBAA4BzE,GAA5B;IACA6G,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACH,CAHD;;EAIA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACnB7J,OAAO,CAACqH,IAAR,uBAA4BzE,GAA5B;IACA6G,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACH,CAHD;;EAKA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO,CAEvB,CAFH;;EAGC,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACD,CAAD,EAAO;IAC1B3G,YAAY,CAAC;MACXH,QAAQ,EAAE8G,CAAC,CAACE,MAAF,CAASC;IADR,CAAD,CAAZ;EAGD,CAJF;;EAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,CAAD,EAAO;IAC9B3G,YAAY,CAAC;MACXF,WAAW,EAAE6G,CAAC,CAACE,MAAF,CAASC;IADX,CAAD,CAAZ;EAGD,CAJF;;EAMA,IAAME,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACpB,IAAI9G,SAAS,GAAG,EAAhB;IACA,IAAID,SAAS,GAAG,EAAhB;;IACA,IAAI,CAACF,SAAS,CAACH,IAAf,EAAqB;MACnBM,SAAS,GAAG,WAAZ;MACAE,SAAS,mBAAMD,MAAN;QAAeD,SAAS,EAAEA;MAA1B,GAAT;MACA,OAAO,KAAP;IACD,CAJD,MAIO;MACLE,SAAS,CAAC;QAACF,SAAS,EAAE;MAAZ,CAAD,CAAT;IACD;;IACD,IAAIH,SAAS,CAACF,QAAV,IAAsB,EAA1B,EAA8B;MAC5BI,SAAS,GAAG,WAAZ;MACAG,SAAS,CAAC;QAAEH,SAAS,EAATA;MAAF,CAAD,CAAT;MACA,OAAO,KAAP;IACD;;IACD,IAAIF,SAAS,CAACF,QAAd,EAAwB;MACtBO,SAAS,CAAC;QAAEH,SAAS,EAAE;MAAb,CAAD,CAAT;IACD;;IACD,OAAO,IAAP;EACD,CAnBF;;EAqBC,IAAMgH,UAAU,GAAG,SAAbA,UAAa,CAAAN,CAAC,EAAI;IACtB,IAAIrD,IAAI,GAAGqD,CAAC,CAACrJ,SAAb;IACAC,YAAY,CAAC+F,IAAD,CAAZ;IACA,IAAI9F,KAAK,GAAGmJ,CAAC,CAACnJ,KAAd;;IACA,IAAI8F,IAAI,KAAK,QAAb,EAAuB;MACrB9F,KAAK,CAAC0J,SAAN,CAAgB,YAAhB;IACD,CAFD,MAEO;MACLxD,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDL,IAAnD,EAAyDqD,CAAzD;IACD;;IACD,IAAIrD,IAAI,KAAK,UAAb,EAAyB;MACvB,IAAIlG,OAAM,GAAGI,KAAK,CAAC2J,QAAnB;;MACA,IAAMC,WAAW,GAAGhK,OAAM,CAAC0G,GAAP,CAAW,UAACuD,KAAD;QAAA,OAAY;UACzCC,GAAG,EAAED,KAAK,CAACE,GAD8B;UAEzCC,IAAI,EAAEH,KAAK,CAACI;QAF6B,CAAZ;MAAA,CAAX,CAApB;;MAIA,IAAIL,WAAJ,EACE3J,QAAQ,CAACiK,IAAI,CAACC,SAAL,CAAeP,WAAf,CAAD,CAAR;IACH,CARD,MAQO;MACL/J,SAAS,CAAC;QAAEN,QAAQ,EAAES,KAAK,CAACoK,SAAN,GAAkBL,GAA9B;QAAoCvK,SAAS,EAAEQ,KAAK,CAACoK,SAAN,GAAkBH;MAAjE,CAAD,CAAT;IACD;EAEF,CArBD;;EAuBF,IAAOI,QAAQ,GAAG,SAAXA,QAAW,GAAM;IAEpB,IAAIxE,IAAI,GAAG;MACTzD,IAAI,EAAEG,SAAS,CAACH,IADP;MAETE,WAAW,EAAEC,SAAS,CAACD,WAFd;MAGTgI,QAAQ,EAAE/H,SAAS,CAAC+H,QAHX;MAITjI,QAAQ,EAAEE,SAAS,CAACF,QAJX,CAKX;MACA;;IANW,CAAX;IASA/E,GAAG,CAACiN,IAAJ,CAAS,kBAAT,EAA6B1E,IAA7B,EACGF,IADH,CACQ,UAAA6E,GAAG,EAAI;MAEX,IAAIA,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,QAAtC,EAAgD;QAC5CnH,IAAI,UAAU;UACV8L,IAAI,EAAE;QADI,CAAV,CAAJ;MAGH;;MACD,IAAID,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,SAAtC,EAAiD;QAC7CnH,IAAI,WAAIO,CAAC,CAAC,aAAD,CAAL,GAAwB;UACxBuL,IAAI,EAAE;QADkB,CAAxB,CAAJ;QAGArE,SAAS;MACZ;IAEF,CAfH,EAgBGJ,KAhBH,CAgBS,YAAM;MACXrH,IAAI,UAAU;QACV8L,IAAI,EAAE;MADI,CAAV,CAAJ;IAID,CArBH;EAsBD,CAjCH;;EAkCA,IAAOC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;IACjCA,KAAK,CAACC,cAAN,GADiC,CAGjC;IACA;;IACIP,QAAQ,GALqB,CAMjC;EACC,CAPD;;EAQD,IAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;IACnBrI,YAAY,CAAC;MACXJ,IAAI,EAAE,EADK;MAEXE,WAAW,EAAE,EAFF;MAGXD,QAAQ,EAAE;IAHC,CAAD,CAAZ;EAKD,CANJ;;EAQE,IAAMyI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD,EAAW;IACjCA,KAAK,CAACC,cAAN;IACAG,OAAO;EACR,CAHF;;EAMA,IAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;IAEnB,IAAIlF,IAAI,GAAG;MACT7C,QAAQ,EAAEa,QAAQ,CAACb,QADV;MAETD,SAAS,EAAEc,QAAQ,CAACd,SAFX;MAGTyE,WAAW,EAAE3D,QAAQ,CAACZ,QAHb;MAIT+H,aAAa,EAAEnH,QAAQ,CAACmH,aAJf;MAKT1H,YAAY,EAAEO,QAAQ,CAACP,YALd;MAMTC,SAAS,EAAEM,QAAQ,CAACN,SANX;MAOTF,IAAI,EAAEQ,QAAQ,CAACR,IAPN;MAQT4H,eAAe,EAAEpH,QAAQ,CAACX,OARjB;MASTgI,kBAAkB,EAAGrH,QAAQ,CAACF,UATrB;MAUTD,OAAO,EAAGG,QAAQ,CAACH,OAVV;MAWTyH,WAAW,EAAGtH,QAAQ,CAACL,UAXd;MAYT4H,WAAW,EAAGvH,QAAQ,CAACJ;IAZd,CAAX;IAeAnG,GAAG,CAACiN,IAAJ,CAAS,gBAAT,EAA2B1E,IAA3B,EACGF,IADH,CACQ,UAAA6E,GAAG,EAAI;MACX,IAAIA,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,QAAtC,EAAgD;QAC9CnH,IAAI,UAAU;UACZ8L,IAAI,EAAE;QADM,CAAV,CAAJ;MAGD;;MACD,IAAID,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CnH,IAAI,WAAIO,CAAC,CAAC,YAAD,CAAL,GAAuB;UACzBuL,IAAI,EAAE;QADmB,CAAvB,CAAJ;QAGArD,QAAQ;MACT;IACF,CAbH,EAcGpB,KAdH,CAcS,UAACqF,GAAD,EAAS;MACd1M,IAAI,UAAU;QACZ8L,IAAI,EAAE;MADM,CAAV,CAAJ;IAKD,CApBH;EAqBD,CAtCF;;EAwCC,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACX,KAAD,EAAW;IAClCA,KAAK,CAACC,cAAN;IACAW,OAAO;EAGR,CALD;;EAQA,IAAMA,OAAO,GAAG,SAAVA,OAAU,GAAM;IAEpB,IAAI1F,IAAI,GAAG;MACT5B,YAAY,EAAEI,QAAQ,CAACJ,YADd;MAETlB,SAAS,EAAEsB,QAAQ,CAACtB,SAFX;MAGTC,QAAQ,EAAEqB,QAAQ,CAACrB,QAHV;MAITZ,IAAI,EAAEiC,QAAQ,CAACN,QAJN;MAKTC,MAAM,EAAEK,QAAQ,CAACL,MALR;MAMTG,KAAK,EAAEE,QAAQ,CAACF,KANP;MAOTC,QAAQ,EAAEC,QAAQ,CAACD;IAPV,CAAX;IASA9G,GAAG,CAACiN,IAAJ,CAAS,gBAAT,EAA2B1E,IAA3B,EACGF,IADH,CACQ,UAAA6E,GAAG,EAAI;MAEX,IAAIA,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,QAAtC,EAAgD;QAC9CnH,IAAI,UAAU;UACZ8L,IAAI,EAAE;QADM,CAAV,CAAJ;MAGD;;MACD,IAAID,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CnH,IAAI,WAAIO,CAAC,CAAC,YAAD,CAAL,GAAuB;UACzBuL,IAAI,EAAE;QADmB,CAAvB,CAAJ;QAGA1D,QAAQ;MACT;IACF,CAdH,EAeGf,KAfH,CAeS,UAACqF,GAAD,EAAS;MACd1M,IAAI,UAAU;QACZ8L,IAAI,EAAE;MADM,CAAV,CAAJ;IAKD,CArBH;EAsBD,CAjCD;;EAmCD,IAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,KAAD,EAAW;IAClCA,KAAK,CAACC,cAAN;IAEEa,aAAa;EAIhB,CAPF;;EAYA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;IAEzB,IAAI5F,IAAI,GAAG;MACTC,IAAI,EAAER,SAAS,CAACb,SADP;MAETzB,QAAQ,EAAEsC,SAAS,CAACtC,QAFX;MAGT0B,QAAQ,EAAEY,SAAS,CAACZ,QAHX;MAITC,QAAQ,EAAEW,SAAS,CAACX,QAJX;MAKTC,iBAAiB,EAAEU,SAAS,CAACV,iBALpB;MAMTxC,IAAI,EAAEkD,SAAS,CAAClD,IANP;MAOTyC,WAAW,EAACS,SAAS,CAACT,WAPb;MAQTC,eAAe,EAAEQ,SAAS,CAACR,eARlB;MASTC,YAAY,EAAEO,SAAS,CAACP,YATf;MAUTC,WAAW,EAAEM,SAAS,CAACN,WAVd;MAWTC,YAAY,EAAEK,SAAS,CAACL,YAXf;MAYTC,OAAO,EAACI,SAAS,CAACJ,OAZT;MAaTC,QAAQ,EAAGG,SAAS,CAACH,QAbZ;MAcTC,QAAQ,EAAEE,SAAS,CAACF,QAdX;MAeTC,QAAQ,EAAGC,SAAS,CAACD;IAfZ,CAAX;IAoBA/H,GAAG,CAACiN,IAAJ,CAAS,4BAAT,EAAuC1E,IAAvC,EACGF,IADH,CACQ,UAAA6E,GAAG,EAAI;MAEX,IAAIA,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,QAAtC,EAAgD;QAC9CnH,IAAI,UAAU;UACZ8L,IAAI,EAAE;QADM,CAAV,CAAJ;MAGD;;MACD,IAAID,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB0E,GAAG,CAAC3E,IAAJ,CAASC,IAAT,IAAiB,SAAtC,EAAiD;QAC/CnH,IAAI,WAAIO,CAAC,CAAC,kBAAD,CAAL,GAA6B;UAC/BuL,IAAI,EAAE;QADyB,CAA7B,CAAJ;QAGA9C,QAAQ;MACT;IACF,CAdH,EAeG3B,KAfH,CAeS,UAACqF,GAAD,EAAS;MAEd1M,IAAI,UAAU;QACZ8L,IAAI,EAAE;MADM,CAAV,CAAJ;IAID,CArBH;EAsBD,CA5CF;;EAiDC,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAACvC,CAAD,EAAO;IAC5BA,CAAC,CAACyB,cAAF;IACA,IAAM1G,QAAQ,GAAGlD,QAAQ,CAAC2K,IAAT,CACb,UAACC,IAAD;MAAA,OAAUA,IAAI,CAACA,IAAL,IAAazC,CAAC,CAACE,MAAF,CAASC,KAAhC;IAAA,CADa,CAAjB;;IAIA,IAAI,OAAOpF,QAAP,KAAoB,WAAxB,EAAqC;MACjCI,WAAW,mBACJD,QADI;QAEPH,QAAQ,EAAEA,QAAQ,CAAC0H,IAFZ;QAGPzH,KAAK,EAAED,QAAQ,CAAC2H,EAHT;QAIPzH,QAAQ,EAAEF,QAAQ,CAAC4H;MAJZ,GAAX;IAOH;EACJ,CAfC;;EAgBF,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAC5C,CAAD,EAAO;IAC5BA,CAAC,CAACyB,cAAF,GAD4B,CAE5B;;IAEA,IAAMoB,IAAI,GAAG9K,QAAQ,CAACyK,IAAT,CACX,UAACK,IAAD;MAAA,OAAUA,IAAI,CAAClF,EAAL,IAAWqC,CAAC,CAACE,MAAF,CAASC,KAA9B;IAAA,CADW,CAAb;;IAGE,IAAGH,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,EAAtB,EAAyB;MACtBxF,WAAW,mBAAKD,QAAL;QAAeZ,QAAQ,EAAG+I,IAAI,CAAClF;MAA/B,GAAX;MACDhD,WAAW,mBAAKD,QAAL;QAAeF,UAAU,EAAGqI,IAAI,CAACd;MAAjC,GAAX;MACApH,WAAW,mBAAKD,QAAL;QAAcR,IAAI,EAAG2I,IAAI,CAACC;MAA1B,GAAX;MACAnI,WAAW,mBAAKD,QAAL;QAAcN,SAAS,EAAGyI,IAAI,CAACE;MAA/B,GAAX;MACApI,WAAW,mBAAKD,QAAL;QAAeP,YAAY,EAAG0I,IAAI,CAACG,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,GAArC,EAA0C,EAA1C;MAA9B,GAAX;IAED;;IACD,IAAIC,SAAS,GAAG,EAAhB;;IACA,IAAIN,IAAJ,EAAU;MACR,IAAM9I,OAAO,GAAG9B,YAAY,CAACkF,GAAb,CAAiB,UAACpD,OAAD,EAAa;QAC5C,IAAIA,OAAO,CAAC8E,OAAR,KAAoBgE,IAAI,CAAClF,EAA7B,EAAiC;UAC/BwF,SAAS,CAAC7F,IAAV,CAAe;YACb8F,SAAS,EAAErJ,OAAO,CAAC4D,EADN;YAEb5D,OAAO,EAAEA,OAAO,CAACsJ;UAFJ,CAAf;QAID;MACF,CAPe,CAAhB;MASA1I,WAAW,mBACND,QADM;QAEPZ,QAAQ,EAAE+I,IAAI,CAAClF,EAFR;QAGP5D,OAAO,EAAE8I,IAAI,CAACQ,YAHP;QAIPrJ,WAAW,EAAEmJ,SAJN;QAKP/I,SAAS,EAAEyI,IAAI,CAACE,QALT;QAMPvI,UAAU,EAAEqI,IAAI,CAACd,kBANV;QAOP7H,IAAI,EAAE2I,IAAI,CAACC,KAPJ;QAQP3I,YAAY,EAAE0I,IAAI,CAACG,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,EAA6BC,OAA7B,CAAqC,GAArC,EAA0C,EAA1C,CARP;QASPzI,MAAM,EAAEoI,IAAI,CAACS;MATN,GAAX;IAaH;EACJ,CAxCC;;EAyCF,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACvD,CAAD,EAAO;IAC/BA,CAAC,CAACyB,cAAF;IACA,IAAM1H,OAAO,GAAG9B,YAAY,CAACuK,IAAb,CAEZ,UAACzI,OAAD;MAAA,OAAaA,OAAO,CAAC4D,EAAR,IAAcqC,CAAC,CAACE,MAAF,CAASC,KAApC;IAAA,CAFY,CAAhB;;IAMA,IAAIpG,OAAJ,EAAa;MACTY,WAAW,mBACJD,QADI;QAEPX,OAAO,EAAEA,OAAO,CAAC4D;MAFV,GAAX;IAKH;EACF,CAfD;;EAjnBuB,kBAioBY5J,QAAQ,CAAC;IAC1CyP,IAAI,EAAG,EADmC;IAE1CC,IAAI,EAAG,EAFmC;IAG1CC,IAAI,EAAG;EAHmC,CAAD,CAjoBpB;EAAA;EAAA,IAioBhBC,UAjoBgB;EAAA,IAioBLC,aAjoBK;;EAuoBrB,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,IAAIzI,cAAc,IAAI,IAAtB,EACE,OACI,IADJ,CADF,KAKK;MACH,oBACE,oBAAC,aAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF;IAGD;EACF,CAXD;;EAaA,IAAM0I,eAAe,GAAG,SAAlBA,eAAkB,CAAC9D,CAAD,EAAO;IAC7BA,CAAC,CAACyB,cAAF;IACC,IAAMsC,UAAU,GAAG5L,eAAe,CAACqK,IAAhB,CAAqB,UAACuB,UAAD,EAAgB;MACvD,OAAOA,UAAU,CAACA,UAAX,IAAyB/D,CAAC,CAACE,MAAF,CAASC,KAAzC;IAEA,CAHkB,CAAnB,CAF4B,CAM7B;;IACA/D,YAAY,CAAC;MAACd,SAAS,EAAGyI,UAAU,CAACA;IAAxB,CAAD,CAAZ,CAP6B,CAQ7B;;IAEA,IAAIA,UAAJ,EAAgB;MACZ3H,YAAY,mBACLD,SADK;QAERb,SAAS,EAAGyI,UAAU,CAACA,UAFf;QAGR9H,QAAQ,EAAG8H,UAAU,CAAC9H;MAHd,GAAZ;IAKH;EACF,CAjBD;;EAoBA,IAAM+H,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;IACjC,QAAQ7H,SAAS,CAACb,SAAlB;MACI,eAAQvF,CAAC,CAAC,OAAD,CAAT;QACI,oBAAO,oBAAC,SAAD;UACH,cAAc,EAAE,wBAACiK,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAgBX,QAAQ,EAAGwE,CAAC,CAACE,MAAF,CAASC;YAApC,GAAnB;UAAA,CADb;UAEH,cAAc,EAAE,wBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAiBR,eAAe,EAAGqE,CAAC,CAACE,MAAF,CAASC;YAA5C,GAAnB;UAAA,CAFb;UAGH,aAAa,EAAE,uBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAgBL,YAAY,EAAGkE,CAAC,CAACE,MAAF,CAASC;YAAxC,GAAnB;UAAA,CAHZ;UAIH,gBAAgB,EAAE,0BAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAeN,WAAW,EAAEmE,CAAC,CAACE,MAAF,CAASC;YAArC,GAAnB;UAAA,CAJf;UAKH,iBAAiB,EAAE,2BAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAgBP,YAAY,EAAGoE,CAAC,CAACE,MAAF,CAASC;YAAxC,GAAnB;UAAA,CALhB;UAMH,gBAAgB,EAAE,0BAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAgBT,WAAW,EAAGsE,CAAC,CAACE,MAAF,CAASC;YAAvC,GAAnB;UAAA,CANf;UAOH,eAAe,EAAEhE,SAAS,CAACR,eAPxB;UAQH,WAAW,EAAEQ,SAAS,CAACN,WARpB;UASH,YAAY,EAAEM,SAAS,CAACP,YATrB;UAUH,WAAW,EAAEO,SAAS,CAACT,WAVpB;UAWH,YAAY,EAAES,SAAS,CAACL,YAXrB;UAYH,QAAQ,EAAEK,SAAS,CAACX,QAZjB;UAaH,IAAI,EAAEW,SAAS,CAAClD,IAbb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAP;;MAeJ,eAAQlD,CAAC,CAAC,SAAD,CAAT;QACI,oBAAO,oBAAC,WAAD;UACH,aAAa,EAAE,uBAACiK,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAiBJ,OAAO,EAAEiE,CAAC,CAACE,MAAF,CAASC;YAAnC,GAAnB;UAAA,CADZ;UAEH,iBAAiB,EAAE,2BAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAiBP,YAAY,EAAGoE,CAAC,CAACE,MAAF,CAASC;YAAzC,GAAnB;UAAA,CAFhB;UAGH,aAAa,EAAE,uBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAiBL,YAAY,EAAEkE,CAAC,CAACE,MAAF,CAASC;YAAxC,GAAnB;UAAA,CAHZ;UAIH,UAAU,EAAE,oBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAkBlD,IAAI,EAAG+G,CAAC,CAACE,MAAF,CAASC;YAAlC,GAAnB;UAAA,CAJT;UAKH,cAAc,EAAE,wBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAgBX,QAAQ,EAAGwE,CAAC,CAACE,MAAF,CAASC;YAApC,GAAnB;UAAA,CALb;UAMH,YAAY,EAAEhE,SAAS,CAACL,YANrB;UAOH,QAAQ,EAAEK,SAAS,CAACX,QAPjB;UAQH,IAAI,EAAEW,SAAS,CAAClD,IARb;UASH,YAAY,EAAEkD,SAAS,CAACP,YATrB;UAUH,OAAO,EAAEO,SAAS,CAACJ,OAVhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAP;;MAYJ,eAAQhG,CAAC,CAAC,MAAD,CAAT;QACI,OAAO,IAAP;;MACJ;QACI,oBACI,oBAAC,QAAD;UACE,cAAc,EAAE,wBAACiK,CAAD;YAAA,OAAO5D,YAAY,mBAAMD,SAAN;cAAkBH,QAAQ,EAAGgE,CAAC,CAACE,MAAF,CAASC;YAAtC,GAAnB;UAAA,CADlB;UAEE,eAAe,EAAE,yBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAiBV,iBAAiB,EAAGuE,CAAC,CAACE,MAAF,CAASC;YAA9C,GAAnB;UAAA,CAFnB;UAGE,cAAc,EAAE,wBAACH,CAAD;YAAA,OAAO5D,YAAY,mBAAKD,SAAL;cAAgBX,QAAQ,EAAGwE,CAAC,CAACE,MAAF,CAASC;YAApC,GAAnB;UAAA,CAHlB;UAIE,QAAQ,EAAEhE,SAAS,CAACX,QAJtB;UAKE,QAAQ,EAAEW,SAAS,CAACH,QALtB;UAME,iBAAiB,EAAEG,SAAS,CAACV,iBAN/B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADJ;IAjCR;EA4CH,CA7CC;;EA8CF3H,SAAS,CAAC,YAAI;IACZ,IAAG4G,QAAQ,CAACL,UAAT,KAAwB,EAAxB,IAA8BK,QAAQ,CAACJ,UAAT,KAAwB,EAAzD,EAA4D;MAE5D,IAAI2J,OAAO,GAAI,SAASC,MAAM,CAACxJ,QAAQ,CAACL,UAAV,CAAN,GAA8B6J,MAAM,CAACxJ,QAAQ,CAACJ,UAAV,CAA7C,CAAf;MACAK,WAAW,mBAAKD,QAAL;QAAgBH,OAAO,EAAE0J;MAAzB,GAAX;IACD;EACA,CANQ,EAMP,CAACvJ,QAAQ,CAACL,UAAV,EAAqBK,QAAQ,CAACJ,UAA9B,CANO,CAAT;;EAOE,IAAM6J,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IACzB,QAAQpL,SAAR;MACE,KAAK,OAAL;QACE,oBACE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,IAAD;UAAM,KAAK,MAAX;UAAY,SAAS,EAAC,OAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,UAAD;UAAY,SAAS,EAAC,eAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLqL,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE,YAFX;YAGLC,KAAK,EAAE,MAHF;YAILC,KAAK,EAAE;UAJF,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAQE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAI,SAAS,EAAC,KAAd;UAAoB,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAb,CAA3B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAmDzO,CAAC,CAAC,aAAD,CAApD,CADF,EAC4E,GAD5E,CARF,CADF,eAaE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE;UAFX,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME,oBAAC,MAAD;UACE,OAAO,EAAE9C,YADX;UAEE,KAAK,EAAC,MAFR;UAGE,SAAS,EAAC,2BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGxL,CAAC,CAAC,MAAD,CANJ,CANF,eAcE,oBAAC,MAAD;UACE,OAAO,EAAE2L,SADX,CAEE;UAFF;UAGE,SAAS,EAAC,0BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMG3L,CAAC,CAAC,QAAD,CANJ,CAdF,CAbF,CADF,eAsCE,oBAAC,QAAD;UAAU,SAAS,EAAC,MAApB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELK,SAAS,EAAE,MAFN;YAGLC,QAAQ,EAAE;UAHL,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOG,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,GAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACD,oBAAC,IAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAA0B,SAAS,EAAC,YAApC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,MAAM,EAAE,KAAV;YAAkBH,SAAS,EAAC;UAA5B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAgDzO,CAAC,CAAC,YAAD,CAAjD,CADF,eAEE,oBAAC,SAAD;UACE,KAAK,EAAEqD,SAAS,CAACH,IADnB;UAEE,WAAW,EAAElD,CAAC,CAAC,YAAD,CAFhB;UAGE,SAAS,EAAEyD,MAAM,CAACD,SAAP,IAAmB,EAAnB,GAAwB,EAAxB,GAA6B,YAH1C;UAIE,QAAQ,MAJV;UAKE,QAAQ,EAAG,kBAAAyG,CAAC;YAAA,OAAI3G,YAAY,mBAAKD,SAAL;cAAkBH,IAAI,EAAE+G,CAAC,CAACE,MAAF,CAASC;YAAjC,GAAhB;UAAA,CALd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,eAWA;UAAK,SAAS,EAAC,kBAAf;UAAkC,KAAK,EAAE;YAACqE,SAAS,EAAE;UAAZ,CAAzC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA+DhL,MAAM,CAACD,SAAtE,CAXA,CADF,eAcE,oBAAC,GAAD;UAAM,EAAE,EAAC,GAAT;UAAa,EAAE,EAAC,GAAhB;UAAoB,EAAE,EAAC,GAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEoL,MAAM,EAAE,KAAV;YAAiBH,SAAS,EAAC;UAA3B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAgDzO,CAAC,CAAC,WAAD,CAAjD,CADF,eAEE,oBAAC,UAAD;UACI,KAAK,EAAEqD,SAAS,CAACF,QADrB;UAEI,SAAS,EAAEM,MAAM,CAACF,SAAP,IAAmB,EAAnB,GAAwB,EAAxB,GAA6B,YAF5C;UAGI,QAAQ,MAHZ;UAII,QAAQ,EAAE,kBAAA0G,CAAC;YAAA,OAAI3G,YAAY,mBAAKD,SAAL;cAAkBF,QAAQ,EAAE8G,CAAC,CAACE,MAAF,CAASC;YAArC,GAAhB;UAAA,CAJf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBpK,CAAC,CAAC,aAAD,CAAnB,CANF,OAOG4C,KAAK,CAACwE,GAAN,CAAU,UAACC,IAAD,EAAOwH,KAAP,EAAiB;UAC1B,oBAAO;YAAQ,KAAK,EAAExH,IAAI,CAACtE,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BsE,IAAI,CAACnE,IAA/B,CAAP;QACD,CAFA,CAPH,CAFF,CAdF,CADF,eA8BE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEA,oBAAC,GAAD;UAAK,EAAE,EAAC,IAAR;UAAa,EAAE,EAAC,GAAhB;UAAoB,EAAE,EAAC,GAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE0L,MAAM,EAAE,KAAV;YAAgBH,SAAS,EAAE;UAA3B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAgDzO,CAAC,CAAC,MAAD,CAAjD,CADF,eAEE;UACE,KAAK,EAAEqD,SAAS,CAACD,WADnB;UAEE,QAAQ,EAAE,kBAAA6G,CAAC;YAAA,OAAI3G,YAAY,mBAAKD,SAAL;cAAkBD,WAAW,EAAE6G,CAAC,CAACE,MAAF,CAASC;YAAxC,GAAhB;UAAA,CAFb;UAGE,KAAK,EAAE;YAAE0E,MAAM,EAAE;UAAV,CAHT;UAIE,KAAK,EAAC,cAJR;UAKE,WAAW,EAAC,aALd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADA,CAFA,CA9BF,CADC,CAPH,CADF,eA0DE,oBAAC,GAAD;UAAK,SAAS,MAAd;UAAe,SAAS,EAAC,kBAAzB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UACE,EAAE,EAAC,GADL;UAEE,KAAK,EAAE9O,CAAC,CAAC,WAAD,CAFV;UAGE,QAAQ,EAAEA,CAAC,CAAC,WAAD,CAHb;UAIE,SAAS,EAAC,cAJZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CA1DF,eAkEE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UACE,MAAM,EAAEkH,SADV;UAEE,UAAU,EAAEtF,MAFd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CAlEF,CAtCF,CADF,CADF;;MAqHF,KAAK,MAAL;QACE,oBACE;UAAK,KAAK,EAAE;YAAEmN,QAAQ,EAAE;UAAZ,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,IAAD;UAAM,KAAK,MAAX;UAAY,SAAS,EAAC,OAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,UAAD;UAAY,SAAS,EAAC,eAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLV,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE,eAFX;YAGLU,UAAU,EAAE;UAHP,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAI,SAAS,EAAC,KAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAqBhP,CAAC,CAAC,WAAD,CAAtB,CAPF,eAQE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE;UAFX,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME,oBAAC,MAAD;UACE,OAAO,EAAElC,gBADX;UAEE,KAAK,EAAC,MAFR;UAGE,SAAS,EAAC,2BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGpM,CAAC,CAAC,MAAD,CANJ,CANF,eAcE,oBAAC,MAAD;UACE,OAAO,EAAE,EADX,CAEE;UAFF;UAGE,SAAS,EAAC,0BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGA,CAAC,CAAC,QAAD,CANJ,CAdF,CARF,CADF,CADF,eAmCE,oBAAC,QAAD;UAAU,SAAS,EAAC,MAApB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELK,SAAS,EAAE,MAFN;YAGLC,QAAQ,EAAE;UAHL,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOC,oBAAC,GAAD;UAAK,EAAE,EAAC,IAAR;UAAa,EAAE,EAAC,IAAhB;UAAqB,EAAE,EAAC,GAAxB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACb,oBAAC,IAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,WAAD,CAA/B,CADF,eAEE,oBAAC,SAAD;UACE,KAAK,EAAEmF,QAAQ,CAACN,QADlB;UAEE,WAAW,EAAE7E,CAAC,CAAC,WAAD,CAFhB;UAGE,QAAQ,MAHV;UAIE,QAAQ,EAAE,kBAAAiK,CAAC;YAAA,OAAI7E,WAAW,mBAAKD,QAAL;cAAgBN,QAAQ,EAAGoF,CAAC,CAACE,MAAF,CAASC;YAApC,GAAf;UAAA,CAJb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,eAYE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwE,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,YAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAEmF,QAAQ,CAACtB,SADlB;UAEE,QAAQ,EAAE,kBAAAoG,CAAC;YAAA,OAAI7E,WAAW,mBAAKD,QAAL;cAAgBtB,SAAS,EAAGoG,CAAC,CAACE,MAAF,CAASC;YAArC,GAAf;UAAA,CAFb;UAGE,WAAW,EAAEpK,CAAC,CAAC,YAAD,CAHhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBA,CAAC,CAAC,cAAD,CAAnB,CALF,EAMG4B,MAAM,CAACwF,GAAP,CAAW,UAACC,IAAD,EAAOwH,KAAP,EAAiB;UAC3B,oBAAO;YAAQ,KAAK,EAAExH,IAAI,CAACvE,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BuE,IAAI,CAACG,KAA/B,CAAP;QACD,CAFA,CANH,CAFF,CAZF,eA0BE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEoH,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,QAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAEmF,QAAQ,CAACL,MADlB;UAEE,QAAQ,EAAE,kBAAAmF,CAAC;YAAA,OAAI7E,WAAW,mBAAKD,QAAL;cAAgBL,MAAM,EAAGmF,CAAC,CAACE,MAAF,CAASC;YAAlC,GAAf;UAAA,CAFb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAIE;UAAQ,KAAK,EAAC,GAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,YAJF,CAFF,CA1BF,eAqCE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwE,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,WAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,QAAQ,EAAE,kBAAAiP,GAAG,EAAI;YAEf3J,WAAW,CAAC,CAACD,cAAF,CAAX;UAED,CALH;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAQ,QAAQ,EAAEA,cAAlB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,cAPF,eAQE;UAAQ,QAAQ,EAAE,CAACA,cAAnB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,eARF,CAFF,CArCF,EAkDGyI,YAAY,EAlDf,CADF,eAqDE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEc,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,WAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACA,KAAK,EAAEmF,QAAQ,CAACH,QADhB;UAEE,QAAQ,EAAEwH,cAFZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAIE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBxM,CAAC,CAAC,aAAD,CAAnB,CAJF,EAMI8B,QAAQ,CAACsF,GAAT,CAAa,UAACC,IAAD,EAAOwH,KAAP,EAAiB;UAC1B,oBAAO;YAAQ,KAAK,EAAExH,IAAI,CAACqF,IAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA4BrF,IAAI,CAACqF,IAAjC,CAAP;QAEH,CAHD,CANJ,CAFF,CADA,CADA,eAkBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEkC,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,kBAAD,CAA/B,SADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAEmF,QAAQ,CAACD,QAA3B;UAAqC,QAAQ,EAAE,kBAAA+E,CAAC;YAAA,OAAI7E,WAAW,mBAAKD,QAAL;cAAcD,QAAQ,EAAG+E,CAAC,CAACE,MAAF,CAASC;YAAlC,GAAf;UAAA,CAAhD;UAA0G,EAAE,EAAC,UAA7G;UAAwH,WAAW,EAAEpK,CAAC,CAAC,kBAAD,CAAtI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAlBF,eA0BE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,mBADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAEzJ,QAAQ,CAACF,KAA3B;UAAkC,QAAQ,EAAE,kBAAAgF,CAAC;YAAA,OAAI7E,WAAW,mBAAKD,QAAL;cAAcF,KAAK,EAAGgF,CAAC,CAACE,MAAF,CAASC;YAA/B,GAAf;UAAA,CAA7C;UAAoG,EAAE,EAAC,OAAvG;UAA+G,WAAW,EAAC,QAA3H;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA1BF,CArDF,CADa,CAPD,CADF,eAqGE,oBAAC,GAAD;UAAK,SAAS,MAAd;UAAe,SAAS,EAAC,kBAAzB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UACE,EAAE,EAAC,GADL;UAEE,KAAK,EAAEpK,CAAC,CAAC,UAAD,CAFV;UAGE,QAAQ,EAAEA,CAAC,CAAC,UAAD,CAHb;UAIE,SAAS,EAAC,cAJZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CArGF,eA6GE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE,oBAAC,QAAD;UACE,SAAS,EAAEwC,KADb;UAEE,KAAK,EAAEqF,QAFT;UAGE,MAAM,EAAEjG,MAHV,CAIE;UAJF;UAKE,SAAS,EAAEE,QALb;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CA7GF,CAnCF,CADF,CADF;;MAoKF,KAAK,MAAL;QACE,oBACE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,IAAD;UAAM,KAAK,MAAX;UAAY,SAAS,EAAC,OAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,UAAD;UAAY,SAAS,EAAC,eAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLuM,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE,eAFX;YAGLU,UAAU,EAAE;UAHP,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAI,SAAS,EAAC,KAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAqBhP,CAAC,CAAC,WAAD,CAAtB,CAPF,EAO4C,GAP5C,eAQE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE;UAFX,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME,oBAAC,MAAD;UACE,OAAO,EAAE1C,gBADX;UAEE,KAAK,EAAC,MAFR;UAGE,SAAS,EAAC,2BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMG5L,CAAC,CAAC,MAAD,CANJ,CANF,eAcE,oBAAC,MAAD;UACE,OAAO,EAAE,EADX,CAEE;UAFF;UAGE,SAAS,EAAC,0BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGA,CAAC,CAAC,QAAD,CANJ,CAdF,CARF,CADF,CADF,eAmCE,oBAAC,QAAD;UAAU,SAAS,EAAC,MAApB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELK,SAAS,EAAE,MAFN;YAGLC,QAAQ,EAAE;UAHL,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOK,oBAAC,GAAD;UAAK,EAAE,EAAC,IAAR;UAAa,EAAE,EAAC,IAAhB;UAAqB,EAAE,EAAC,GAAxB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACnB,oBAAC,IAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,WAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAE2E,QAAQ,CAACb,QADlB;UAEE,QAAQ,EAAE,kBAAAmG,CAAC;YAAA,OAAGrF,WAAW,mBAAKD,QAAL;cAAgBb,QAAQ,EAAGmG,CAAC,CAACE,MAAF,CAASC;YAApC,GAAd;UAAA,CAFb;UAGE,WAAW,EAAEpK,CAAC,CAAC,WAAD,CAHhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASA,CAAC,CAAC,aAAD,CAAV,CALF,EAQQwC,KAAK,CAAC4E,GAAN,CAAU,UAAAsF,IAAI,EAAE;UACf,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAAC5J,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0B4J,IAAI,CAACxJ,IAA/B,CAAP;QAEA,CAHD,CARR,CAFF,CADF,eAmBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE0L,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,YAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAE2E,QAAQ,CAACd,SADlB;UAEE,QAAQ,EAAE,kBAAAoG,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAgBd,SAAS,EAAGoG,CAAC,CAACE,MAAF,CAASC;YAArC,GAAf;UAAA,CAFb;UAGE,WAAW,EAAEpK,CAAC,CAAC,WAAD,CAHhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASA,CAAC,CAAC,cAAD,CAAV,CALF,EAOY4B,MAAM,CAACwF,GAAP,CAAW,UAAAE,KAAK,EAAE;UAChB,oBAAO;YAAQ,KAAK,EAAEA,KAAK,CAACxE,GAArB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA2BwE,KAAK,CAACE,KAAjC,CAAP;QAED,CAHD,CAPZ,CAFF,CAnBF,CADF,eAqCE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEoH,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,WAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,QAAQ,EAAE6M,cADZ;UAEE,WAAW,EAAE7M,CAAC,CAAC,WAAD,CAFhB;UAGE,KAAK,EAAE2E,QAAQ,CAACZ,QAHlB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,iBALF,EAOI/B,QAAQ,CAACoF,GAAT,CAAa,UAAA0F,IAAI,EAAI;UACnB,oBACE;YAAQ,KAAK,EAAEA,IAAI,CAAClF,EAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAyBkF,IAAI,CAACA,IAA9B,CADF;QAID,CALD,CAPJ,CAFF,CADF,eAmBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE8B,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,cAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UAAY,KAAK,EAAE2E,QAAQ,CAACX,OAA5B;UAAqC,QAAQ,EAAEwJ,iBAA/C;UAAkE,EAAE,EAAC,aAArE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBxN,CAAC,CAAC,cAAD,CAAnB,CADF,EAGQ2E,QAAQ,CAACV,WAAT,CAAqBmD,GAArB,CAAyB,UAAApD,OAAO;UAAA,oBAC5B;YAAQ,KAAK,EAAEA,OAAO,CAACqJ,SAAvB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAmCrJ,OAAO,CAACA,OAA3C,CAD4B;QAAA,CAAhC,CAHR,CAFF,eAUE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,OAA5B;UAAoC,EAAE,EAAC,OAAvC;UAA+C,OAAO,EAAE;YAAA,OAAMJ,UAAU,CAAC,CAACD,OAAF,CAAhB;UAAA,CAAxD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAVF,OAU0F3D,CAAC,CAAC,OAAD,CAV3F,EAYU2D,OAAO,gBAGP,oBAAC,SAAD;UACA,KAAK,EAAEgB,QAAQ,CAACX,OAAT,IAAoB,EAD3B;UAEA,WAAW,EAAEhE,CAAC,CAAC,cAAD,CAFd;UAGA,EAAE,EAAC,aAHH;UAIA,QAAQ,EAAE,kBAAAiK,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAgBX,OAAO,EAAGiG,CAAC,CAACE,MAAF,CAASC;YAAnC,GAAf;UAAA,CAJX;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAHO,GAWP,IAvBV,CADF,CAnBF,CArCF,eAuFE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACG,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,IAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACC;UAAG,KAAK,EAAE;YAAEwE,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,WAAD,CAA/B,CADD,eAEC,oBAAC,SAAD;UACE,QAAQ,EAAE,EADZ;UAEE,WAAW,EAAEA,CAAC,CAAC,WAAD,CAFhB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFD,CADH,eAQE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,OAAD,CAA/B,SADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE2E,QAAQ,CAACN,SAA3B;UAAsC,QAAQ,EAAE,kBAAA4F,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcN,SAAS,EAAE4F,CAAC,CAACE,MAAF,CAASC;YAAlC,GAAf;UAAA,CAAjD;UAA2G,EAAE,EAAC,GAA9G;UAAkH,WAAW,EAAEpK,CAAC,CAAC,OAAD,CAAhI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CARF,eAiBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,MAAD,CAA/B,CADF,eAGE,oBAAC,SAAD;UAAW,KAAK,EAAE2E,QAAQ,CAACR,IAA3B;UAAiC,EAAE,EAAC,MAApC;UAA2C,QAAQ,EAAE,kBAAA8F,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcR,IAAI,EAAE8F,CAAC,CAACE,MAAF,CAASC;YAA7B,GAAf;UAAA,CAAtD;UAA2G,WAAW,EAAEpK,CAAC,CAAC,MAAD,CAAzH;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAHF,CADF,CAjBF,eA0BE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,gBAAD,CAA/B,CADF,eAEE,oBAAC,SAAD;UAAW,IAAI,EAAC,MAAhB;UAAuB,KAAK,EAAE2E,QAAQ,CAACP,YAAvC;UAAqD,QAAQ,EAAE,kBAAA6F,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcP,YAAY,EAAE6F,CAAC,CAACE,MAAF,CAASC;YAArC,GAAf;UAAA,CAAhE;UAA6H,EAAE,EAAC,MAAhI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA1BF,eAkCE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACI,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEwE,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,mBAAD,CAA/B,UADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE2E,QAAQ,CAACF,UAA3B;UAAuC,QAAQ,EAAE,kBAAAwF,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcF,UAAU,EAAEwF,CAAC,CAACE,MAAF,CAASC;YAAnC,GAAf;UAAA,CAAlD;UAA6G,EAAE,EAAC,YAAhH;UAA6H,WAAW,EAAEpK,CAAC,CAAC,mBAAD,CAA3I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADJ,CAlCF,eA0CI,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,aAAD,CAA/B,SADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE2E,QAAQ,CAACL,UAA3B;UAAuC,QAAQ,EAAE,kBAAA2F,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcL,UAAU,EAAE2F,CAAC,CAACE,MAAF,CAASC;YAAnC,GAAf;UAAA,CAAlD;UAA6G,EAAE,EAAC,YAAhH;UAA6H,WAAW,EAAEpK,CAAC,CAAC,aAAD,CAA3I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA1CJ,eAkDI,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,aAAD,CAA/B,UADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE2E,QAAQ,CAACJ,UAA3B;UAAuC,QAAQ,EAAE,kBAAA0F,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcJ,UAAU,EAAE0F,CAAC,CAACE,MAAF,CAASC;YAAnC,GAAf;UAAA,CAAlD;UAA6G,EAAE,EAAC,YAAhH;UAA6H,WAAW,EAAEpK,CAAC,CAAC,aAAD,CAA3I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAlDJ,eA0DI,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,SAAD,CAA/B,iBADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAE2E,QAAQ,CAACH,OAA3B;UAAoC,QAAQ,EAAE,kBAAAyF,CAAC;YAAA,OAAIrF,WAAW,mBAAKD,QAAL;cAAcH,OAAO,EAAEyF,CAAC,CAACE,MAAF,CAASC;YAAhC,GAAf;UAAA,CAA/C;UAAuG,EAAE,EAAC,YAA1G;UAAoH,WAAW,EAAEpK,CAAC,CAAC,SAAD,CAAlI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CA1DJ,CAvFF,CADmB,CAPL,CADF,eAsKE,oBAAC,GAAD;UAAK,SAAS,MAAd;UAAe,SAAS,EAAC,kBAAzB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UACE,EAAE,EAAC,GADL;UAEE,KAAK,EAAEA,CAAC,CAAC,UAAD,CAFV;UAGE,QAAQ,EAAEA,CAAC,CAAC,UAAD,CAHb;UAIE,SAAS,EAAC,cAJZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CAtKF,eA8KE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE,oBAAC,QAAD;UACE,SAAS,EAAEsC,KADb;UAEE,KAAK,EAAE4F,QAFT;UAGE,MAAM,EAAEtG,MAHV;UAIE,KAAK,EAAEY,KAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CA9KF,CAnCF,CADF,CADF;;MAiOF,KAAK,OAAL;QACE,oBACE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,IAAD;UAAM,KAAK,MAAX;UAAY,SAAS,EAAC,OAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,UAAD;UAAY,SAAS,EAAC,eAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACL6L,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE,eAFX;YAGLU,UAAU,EAAE;UAHP,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE;UAAI,SAAS,EAAC,KAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAqBhP,CAAC,CAAC,iBAAD,CAAtB,CAPF,EAOkD,GAPlD,eASE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE;UAFX,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME,oBAAC,MAAD;UACE,OAAO,EAAEhC,iBADX;UAEE,KAAK,EAAC,MAFR;UAGE,SAAS,EAAC,2BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGtM,CAAC,CAAC,MAAD,CANJ,CANF,eAcE,oBAAC,MAAD;UACE,OAAO,EAAE,EADX,CAEE;UAFF;UAGE,SAAS,EAAC,0BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGA,CAAC,CAAC,QAAD,CANJ,CAdF,CATF,CADF,CADF,eAoCE,oBAAC,QAAD;UAAU,SAAS,EAAC,MAApB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELK,SAAS,EAAE,MAFN;YAGLC,QAAQ,EAAE;UAHL,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOK,oBAAC,GAAD;UAAK,EAAE,EAAC,IAAR;UAAa,EAAE,EAAC,IAAhB;UAAqB,EAAE,EAAC,GAAxB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACG,oBAAC,IAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,IAAI,MAAT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,SAAS,EAAC,YAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,iBAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACA,KAAK,EAAEoG,SAAS,CAACtC,QADjB;UAEA,QAAQ,EAAE,kBAAAmG,CAAC;YAAA,OAAI5D,YAAY,mBAAKD,SAAL;cAAiBtC,QAAQ,EAAGmG,CAAC,CAACE,MAAF,CAASC;YAArC,GAAhB;UAAA,CAFX;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAIE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASpK,CAAC,CAAC,aAAD,CAAV,CAJF,EAMUwC,KAAK,CAAC4E,GAAN,CAAU,UAAAsF,IAAI,EAAE;UACd,oBAAM;YAAQ,KAAK,EAAEA,IAAI,CAAC5J,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA2B4J,IAAI,CAACxJ,IAAhC,CAAN;QAED,CAHD,CANV,CAFF,CADF,eAiBE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,SAAS,EAAC,YAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE0L,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,iBAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACA,KAAK,EAAEoG,SAAS,CAACZ,QADjB;UAEA,QAAQ,EAAE,kBAAAyE,CAAC;YAAA,OAAI5D,YAAY,mBAAKD,SAAL;cAAiBZ,QAAQ,EAAGyE,CAAC,CAACE,MAAF,CAASC;YAArC,GAAhB;UAAA,CAFX;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAIE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASpK,CAAC,CAAC,aAAD,CAAV,CAJF,EAMUsC,KAAK,CAAC8E,GAAN,CAAU,UAAA0F,IAAI,EAAE;UACd,IAAI/I,QAAQ,GAAE,EAAd;UACA/B,QAAQ,CAACoF,GAAT,CAAa,UAAAmB,QAAQ,EAAE;YACrB,IAAGA,QAAQ,CAACX,EAAT,KAAgBkF,IAAI,CAACxE,WAAxB,EAAoC;cAClCvE,QAAQ,GAAGwE,QAAQ,CAACuE,IAApB;YACD;UACF,CAJD;UAKD,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAAChK,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA2BiB,QAA3B,CAAP;QAEA,CATD,CANV,CAFF,CAjBF,eAuCE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,SAAS,EAAC,YAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE6K,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,wBAAD,CAA/B,CADF,eAEE,oBAAC,UAAD;UACE,KAAK,EAAEoG,SAAS,CAACb,SADnB;UAEE,QAAQ,EAAE,kBAAA0J,GAAG,EAAI;YACflB,eAAe,CAACkB,GAAD,CAAf;UACD,CAJH;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME;UAAQ,QAAQ,MAAhB;UAAiB,QAAQ,MAAzB;UAA0B,KAAK,EAAC,EAAhC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAoCjP,CAAC,CAAC,mBAAD,CAArC,CANF,EAOGoC,eAAe,CAACgF,GAAhB,CAAoB,UAAAC,IAAI,EAAI;UAC3B;UACA;UACA;UACA;UACA;UACA,oBAAO;YAAQ,KAAK,EAAEA,IAAI,CAAC2G,UAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAkChO,CAAC,WAAIqH,IAAI,CAAC2G,UAAT,EAAnC,CAAP;QACD,CAPA,CAPH,CAFF,CAvCF,eA0DE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACI,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEY,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,uBAAD,CAA/B,UADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAEoG,SAAS,CAACF,QAA5B;UAAsC,QAAQ,EAAE,kBAAA+D,CAAC;YAAA,OAAI5D,YAAY,mBAAKD,SAAL;cAAiBF,QAAQ,EAAE+D,CAAC,CAACE,MAAF,CAASC;YAApC,GAAhB;UAAA,CAAjD;UAA8G,EAAE,EAAC,UAAjH;UAA4H,WAAW,EAAEpK,CAAC,CAAC,uBAAD,CAA1I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADJ,CA1DF,eAmEI,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE4O,MAAM,EAAE;UAAV,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA8B5O,CAAC,CAAC,cAAD,CAA/B,gBADF,eAEE,oBAAC,SAAD;UAAW,KAAK,EAAEoG,SAAS,CAACD,QAA5B;UAAsC,QAAQ,EAAE,kBAAA8D,CAAC;YAAA,OAAI5D,YAAY,mBAAKD,SAAL;cAAiBD,QAAQ,EAAE8D,CAAC,CAACE,MAAF,CAASC;YAApC,GAAhB;UAAA,CAAjD;UAA8G,EAAE,EAAC,aAAjH;UAA+H,WAAW,EAAEpK,CAAC,CAAC,cAAD,CAA7I;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADF,CAnEJ,CADF,EA8EGiO,oBAAoB,EA9EvB,CADH,CAPL,CADF,eA4FE,oBAAC,GAAD;UAAK,SAAS,MAAd;UAAe,SAAS,EAAC,kBAAzB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,SAAD;UACE,EAAE,EAAC,GADL;UAEE,KAAK,EAAEjO,CAAC,CAAC,gBAAD,CAFV;UAGE,QAAQ,EAAEA,CAAC,CAAC,gBAAD,CAHb;UAIE,SAAS,EAAC,cAJZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADF,CA5FF,eAoGE,oBAAC,GAAD;UAAK,SAAS,EAAC,MAAf;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEE,oBAAC,cAAD;UACE,eAAe,EAAE0C,WADnB;UAEE,WAAW,EAAE+F,QAFf;UAGE,KAAK,EAAEnG,KAHT;UAIE,KAAK,EAAEE,KAJT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CApGF,CApCF,CADF,CADF;;MAuJF;QACE,oBACE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,IAAD;UAAM,KAAK,MAAX;UAAY,SAAS,EAAC,OAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,UAAD;UAAY,SAAS,EAAC,eAAtB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UACE,KAAK,EAAE;YACL6L,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE,YAFX;YAGLC,KAAK,EAAE,MAHF;YAILC,KAAK,EAAE;UAJF,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAQE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAI,SAAS,EAAC,KAAd;UAAoB,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAb,CAA3B;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAmDzO,CAAC,CAAC,aAAD,CAApD,CADF,EAC4E,GAD5E,CARF,CADF,eAaE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELC,cAAc,EAAE;UAFX,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME,oBAAC,MAAD;UACE,OAAO,EAAE9C,YADX,CAEE;UAFF;UAGE,SAAS,EAAC,2BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMGxL,CAAC,CAAC,MAAD,CANJ,CANF,eAcE,oBAAC,MAAD;UACE,OAAO,EAAE2L,SADX,CAEE;UAFF;UAGE,SAAS,EAAC,0BAHZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAKE;UAAG,KAAK,oBAAR;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EALF,EAMG3L,CAAC,CAAC,QAAD,CANJ,CAdF,CAbF,CADF,eAsCE,oBAAC,QAAD;UAAU,SAAS,EAAC,MAApB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACI,oBAAC,GAAD;UAAK,SAAS,MAAd;UAAe,SAAS,EAAC,kBAAzB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,SAAD;UACE,EAAE,EAAC,GADL;UAEE,KAAK,EAAEA,CAAC,CAAC,WAAD,CAFV;UAGE,QAAQ,EAAEA,CAAC,CAAC,WAAD,CAHb;UAIE,SAAS,EAAC,cAJZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADA,CADJ,eAsBE;UACE,KAAK,EAAE;YACLqO,OAAO,EAAE,MADJ;YAELK,SAAS,EAAE,MAFN;YAGLC,QAAQ,EAAE;UAHL,CADT;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAOE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,IAAf;UAAoB,EAAE,EAAC,GAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,IAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE,oBAAC,GAAD;UAAK,EAAE,EAAC,GAAR;UAAY,EAAE,EAAC,GAAf;UAAmB,EAAE,EAAC,GAAtB;UAA0B,SAAS,EAAC,YAApC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEC,MAAM,EAAE,KAAV;YAAkBH,SAAS,EAAC;UAA5B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAgDzO,CAAC,CAAC,YAAD,CAAjD,CADF,eAEE,oBAAC,SAAD;UACE,KAAK,EAAEqD,SAAS,CAACH,IADnB;UAEE,WAAW,EAAElD,CAAC,CAAC,YAAD,CAFhB;UAGE,SAAS,EAAEyD,MAAM,CAACD,SAAP,IAAmB,EAAnB,GAAwB,EAAxB,GAA6B,YAH1C;UAIE,QAAQ,MAJV;UAKE,QAAQ,EAAEwG,UALZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,eAWA;UAAK,SAAS,EAAC,kBAAf;UAAkC,KAAK,EAAE;YAACyE,SAAS,EAAE;UAAZ,CAAzC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA+DhL,MAAM,CAACD,SAAtE,CAXA,CADF,eAcE,oBAAC,GAAD;UAAM,EAAE,EAAC,GAAT;UAAa,EAAE,EAAC,GAAhB;UAAoB,EAAE,EAAC,GAAvB;UAA4B,SAAS,EAAC,YAAtC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAEoL,MAAM,EAAE,KAAV;YAAiBH,SAAS,EAAC;UAA3B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAgDzO,CAAC,CAAC,WAAD,CAAjD,CADF,eAEE,oBAAC,UAAD;UACI,KAAK,EAAEqD,SAAS,CAACF,QADrB;UAEI,SAAS,EAAEM,MAAM,CAACF,SAAP,IAAmB,EAAnB,GAAwB,EAAxB,GAA6B,YAF5C;UAGI,QAAQ,MAHZ;UAII,QAAQ,EAAE2G,aAJd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAME;UAAQ,KAAK,EAAC,EAAd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAkBlK,CAAC,CAAC,aAAD,CAAnB,CANF,OAOG4C,KAAK,CAACwE,GAAN,CAAU,UAACC,IAAD,EAAOwH,KAAP,EAAiB;UAC1B,oBAAO;YAAQ,KAAK,EAAExH,IAAI,CAACtE,GAApB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAA0BsE,IAAI,CAACnE,IAA/B,CAAP;QACD,CAFA,CAPH,CAFF,CAdF,CADF,eA8BE,oBAAC,GAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAEA,oBAAC,GAAD;UAAK,EAAE,EAAC,IAAR;UAAa,EAAE,EAAC,GAAhB;UAAoB,EAAE,EAAC,GAAvB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACA,oBAAC,SAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACE;UAAG,KAAK,EAAE;YAAE0L,MAAM,EAAE,KAAV;YAAgBH,SAAS,EAAE;UAA3B,CAAV;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAAgDzO,CAAC,CAAC,MAAD,CAAjD,CADF,eAEE;UACE,KAAK,EAAEqD,SAAS,CAACD,WADnB;UAEE,QAAQ,EAAEiH,iBAFZ;UAGE,KAAK,EAAE;YAAEyE,MAAM,EAAE;UAAV,CAHT;UAIE,KAAK,EAAC,cAJR;UAKE,WAAW,EAAC,aALd;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAFF,CADA,CAFA,CA9BF,CADA,CAPF,CAtBF,CAtCF,CADF,CADF;IAvpBJ;EAkxBD,CAnxBH;;EAoxBA,oBACI,uDACI,oBAAC,SAAD;IAAW,KAAK,MAAhB;IAAiB,SAAS,EAAC,6BAA3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA,oBAAC,GAAD;IAAK,SAAS,MAAd;IAAe,KAAK,MAApB;IAAqB,SAAS,EAAC,UAA/B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD;IAAM,OAAO,EAAEpF,SAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA2B1J,CAAC,CAAC,SAAD,CAA5B,CADF,CADF,CADF,eAME,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD;IAAM,OAAO,EAAE8J,OAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAyB9J,CAAC,CAAC,OAAD,CAA1B,CADF,CADF,CANF,eAWE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,MAAM,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACEA,CAAC,CAAC,QAAD,CADH,CADF,CAXF,eAgBE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,IAAD;IAAM,OAAO,EAAE+J,QAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAA0B/J,CAAC,CAAC,SAAD,CAA3B,CADJ,CADF,CAhBF,CADA,eAuBJ,oBAAC,GAAD;IAAK,SAAS,MAAd;IAAe,SAAS,EAAC,kBAAzB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAW,QAAQ,EAAEA,CAAC,CAAC,QAAD,CAAtB;IAAkC,EAAE,EAAC,IAArC;IAA0C,SAAS,EAAC,uBAApD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAvBI,eA0BJ,oBAAC,GAAD;IAAK,SAAS,EAAC,wDAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACM,oBAAC,GAAD;IAAK,EAAE,EAAC,IAAR;IAAa,EAAE,EAAC,IAAhB;IAAqB,EAAE,EAAC,IAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,GAAD;IAAK,IAAI,MAAT;IAAU,KAAK,EAAE;MAAEkP,aAAa,EAAE;IAAjB,CAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,EAAE,EAAC,OAAZ;IAAoB,OAAO,EAAE,iBAACjF,CAAD;MAAA,OAAOhH,OAAO,CAAEgH,CAAC,CAACE,MAAF,CAASvC,EAAX,CAAd;IAAA,CAA7B;IAA4D,SAAS,YAAK5E,SAAS,KAAK,OAAd,GAAwB,4BAAxB,GAAuD,oBAA5D,CAArE;IAAyJ,IAAI,EAAC,GAA9J;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGhD,CAAC,CAAC,aAAD,CADJ,CADF,CADF,eAME,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,EAAE,EAAC,MAAZ;IAAmB,OAAO,EAAE,iBAACiK,CAAD;MAAA,OAAOhH,OAAO,CAAEgH,CAAC,CAACE,MAAF,CAASvC,EAAX,CAAd;IAAA,CAA5B;IAA2D,SAAS,YAAK5E,SAAS,KAAK,MAAd,GAAuB,4BAAvB,GAAsD,mBAA3D,CAApE;IAAsJ,IAAI,EAAC,GAA3J;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGhD,CAAC,CAAC,WAAD,CADJ,CADF,CANF,eAWE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,EAAE,EAAC,MAAZ;IAAmB,OAAO,EAAE,iBAACiK,CAAD;MAAA,OAAOhH,OAAO,CAAEgH,CAAC,CAACE,MAAF,CAASvC,EAAX,CAAd;IAAA,CAA5B;IAA2D,SAAS,YAAK5E,SAAS,KAAK,MAAd,GAAuB,4BAAvB,GAAsD,mBAA3D,CAApE;IAAsJ,IAAI,EAAC,GAA3J;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAgKhD,CAAC,CAAC,WAAD,CAAjK,CADF,CAXF,eAcE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAS,EAAE,EAAC,OAAZ;IAAoB,OAAO,EAAE,iBAACiK,CAAD;MAAA,OAAOhH,OAAO,CAAEgH,CAAC,CAACE,MAAF,CAASvC,EAAX,CAAd;IAAA,CAA7B;IAA4D,SAAS,YAAK5E,SAAS,KAAK,OAAd,GAAwB,2BAAxB,GAAsD,mBAA3D,CAArE;IAAuJ,IAAI,EAAC,GAA5J;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAiKhD,CAAC,CAAC,iBAAD,CAAlK,CADF,CAdF,CADF,CADN,CA1BI,EAkDIoO,cAAc,EAlDlB,eAmDG,oBAAC,GAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACK,oBAAC,GAAD;IAAK,EAAE,EAAC,IAAR;IAAa,EAAE,EAAC,IAAhB;IAAqB,EAAE,EAAC,IAAxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,UAAD;IAAY,UAAU,EAAE7D,UAAxB;IAAoC,IAAI,EAAE3H,KAA1C;IAAiD,GAAG,EAAEE,GAAtD;IAA2D,IAAI,EAAErB,SAAS,CAACT,IAA3E;IAAiF,IAAI,EAAES,SAAS,CAACF,IAAjG;IAAuG,IAAI,EAAEb,MAAM,CAACH,IAApH;IAA0H,MAAM,EAAEG,MAAM,CAACF,MAAzI;IAAiJ,UAAU,EAAEE,MAAM,CAACD,UAApK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADL,CAnDH,CADJ,CADJ;AA6DH,CA9iDD;;AAgjDA,eAAeV,UAAf"},"metadata":{},"sourceType":"module"}