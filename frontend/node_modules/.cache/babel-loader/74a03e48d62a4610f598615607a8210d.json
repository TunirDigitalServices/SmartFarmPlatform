{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { QrcodeResultFormat, Html5QrcodeSupportedFormats } from \"./core\";\n\nvar BarcodeDetectorDelegate = function () {\n  function BarcodeDetectorDelegate(requestedFormats, verbose, logger) {\n    this.formatMap = new Map([[Html5QrcodeSupportedFormats.QR_CODE, \"qr_code\"], [Html5QrcodeSupportedFormats.AZTEC, \"aztec\"], [Html5QrcodeSupportedFormats.CODABAR, \"codabar\"], [Html5QrcodeSupportedFormats.CODE_39, \"code_39\"], [Html5QrcodeSupportedFormats.CODE_93, \"code_93\"], [Html5QrcodeSupportedFormats.CODE_128, \"code_128\"], [Html5QrcodeSupportedFormats.DATA_MATRIX, \"data_matrix\"], [Html5QrcodeSupportedFormats.ITF, \"itf\"], [Html5QrcodeSupportedFormats.EAN_13, \"ean_13\"], [Html5QrcodeSupportedFormats.EAN_8, \"ean_8\"], [Html5QrcodeSupportedFormats.PDF_417, \"pdf417\"], [Html5QrcodeSupportedFormats.UPC_A, \"upc_a\"], [Html5QrcodeSupportedFormats.UPC_E, \"upc_e\"]]);\n    this.reverseFormatMap = this.createReverseFormatMap();\n\n    if (!BarcodeDetectorDelegate.isSupported()) {\n      throw \"Use html5qrcode.min.js without edit, Use \" + \"BarcodeDetectorDelegate only if it isSupported();\";\n    }\n\n    this.verbose = verbose;\n    this.logger = logger;\n    var formats = this.createBarcodeDetectorFormats(requestedFormats);\n    this.detector = new BarcodeDetector(formats);\n\n    if (!this.detector) {\n      throw \"BarcodeDetector detector not supported\";\n    }\n  }\n\n  BarcodeDetectorDelegate.isSupported = function () {\n    if (!(\"BarcodeDetector\" in window)) {\n      return false;\n    }\n\n    var dummyDetector = new BarcodeDetector({\n      formats: [\"qr_code\"]\n    });\n    return typeof dummyDetector !== \"undefined\";\n  };\n\n  BarcodeDetectorDelegate.prototype.decodeAsync = function (canvas) {\n    return __awaiter(this, void 0, void 0, function () {\n      var barcodes, largestBarcode;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4, this.detector.detect(canvas)];\n\n          case 1:\n            barcodes = _a.sent();\n\n            if (!barcodes || barcodes.length === 0) {\n              throw \"No barcode or QR code detected.\";\n            }\n\n            largestBarcode = this.selectLargestBarcode(barcodes);\n            return [2, {\n              text: largestBarcode.rawValue,\n              format: QrcodeResultFormat.create(this.toHtml5QrcodeSupportedFormats(largestBarcode.format))\n            }];\n        }\n      });\n    });\n  };\n\n  BarcodeDetectorDelegate.prototype.selectLargestBarcode = function (barcodes) {\n    var largestBarcode = null;\n    var maxArea = 0;\n\n    for (var _i = 0, barcodes_1 = barcodes; _i < barcodes_1.length; _i++) {\n      var barcode = barcodes_1[_i];\n      var area = barcode.boundingBox.width * barcode.boundingBox.height;\n\n      if (area > maxArea) {\n        maxArea = area;\n        largestBarcode = barcode;\n      }\n    }\n\n    if (!largestBarcode) {\n      throw \"No largest barcode found\";\n    }\n\n    return largestBarcode;\n  };\n\n  BarcodeDetectorDelegate.prototype.createBarcodeDetectorFormats = function (requestedFormats) {\n    var formats = [];\n\n    for (var _i = 0, requestedFormats_1 = requestedFormats; _i < requestedFormats_1.length; _i++) {\n      var requestedFormat = requestedFormats_1[_i];\n\n      if (this.formatMap.has(requestedFormat)) {\n        formats.push(this.formatMap.get(requestedFormat));\n      } else {\n        this.logger.warn(requestedFormat + \" is not supported by\" + \"BarcodeDetectorDelegate\");\n      }\n    }\n\n    return {\n      formats: formats\n    };\n  };\n\n  BarcodeDetectorDelegate.prototype.toHtml5QrcodeSupportedFormats = function (barcodeDetectorFormat) {\n    if (!this.reverseFormatMap.has(barcodeDetectorFormat)) {\n      throw \"reverseFormatMap doesn't have \" + barcodeDetectorFormat;\n    }\n\n    return this.reverseFormatMap.get(barcodeDetectorFormat);\n  };\n\n  BarcodeDetectorDelegate.prototype.createReverseFormatMap = function () {\n    var result = new Map();\n    this.formatMap.forEach(function (value, key, _) {\n      result.set(value, key);\n    });\n    return result;\n  };\n\n  return BarcodeDetectorDelegate;\n}();\n\nexport { BarcodeDetectorDelegate };","map":null,"metadata":{},"sourceType":"module"}