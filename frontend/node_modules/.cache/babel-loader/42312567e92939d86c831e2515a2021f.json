{"ast":null,"code":"import _defineProperty from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/MySimulations.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Nav, NavItem, NavLink, FormInput, FormSelect, Button, ButtonGroup } from 'shards-react';\nimport PageTitle from \"../common/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport api from '../../api/api';\nimport moment from 'moment';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport position from '../../images/pin.png';\nimport soil from \"../../images/soil.png\";\nimport crop from \"../../images/crop.png\";\nimport swal from 'sweetalert';\nimport WaterChart from './WaterChart';\n\nvar MySimulations = function MySimulations() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      allSimulations = _useState6[0],\n      setAllSimulations = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      singleSimulation = _useState8[0],\n      setSingleSimulation = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      simulationId = _useState10[0],\n      setSimulationId = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      chartData = _useState12[0],\n      setChartData = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Pe = _useState14[0],\n      setPe = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      allVarieties = _useState16[0],\n      setAllVarieties = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      weather = _useState18[0],\n      setWeather = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      listCrop = _useState20[0],\n      setListCrop = _useState20[1];\n\n  var _useState21 = useState('pos'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      elemValue = _useState22[0],\n      setElemValue = _useState22[1];\n\n  var _useState23 = useState({}),\n      _useState24 = _slicedToArray(_useState23, 2),\n      pluie = _useState24[0],\n      setPluie = _useState24[1];\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      irrigatedAlready = _useState26[0],\n      setIrrigatedAlready = _useState26[1];\n\n  var _useState27 = useState({\n    Kc: \"\",\n    ET0: \"\",\n    surfaceIrrig: \"\",\n    RUmax: \"\",\n    Profondeur: \"\",\n    effPluie: \"\",\n    ruPratique: \"\",\n    effIrrig: \"\",\n    country: \"\",\n    cities: [],\n    city: \"\",\n    cropType: \"\",\n    cropVariety: [],\n    variety: '',\n    days: \"\",\n    plantingDate: \"\",\n    soilType: \"\",\n    temperature: null,\n    kcList: [],\n    daysWeather: []\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      InputsData = _useState28[0],\n      setInputsData = _useState28[1];\n\n  var _useState29 = useState(null),\n      _useState30 = _slicedToArray(_useState29, 2),\n      nameError = _useState30[0],\n      setNameError = _useState30[1];\n\n  var _useState31 = useState(null),\n      _useState32 = _slicedToArray(_useState31, 2),\n      cropError = _useState32[0],\n      setCropError = _useState32[1];\n\n  var _useState33 = useState(null),\n      _useState34 = _slicedToArray(_useState33, 2),\n      soilError = _useState34[0],\n      setSoilError = _useState34[1];\n\n  var _useState35 = useState(null),\n      _useState36 = _slicedToArray(_useState35, 2),\n      cityError = _useState36[0],\n      setCityError = _useState36[1];\n\n  var _useState37 = useState(null),\n      _useState38 = _slicedToArray(_useState37, 2),\n      error = _useState38[0],\n      setError = _useState38[1];\n\n  var _useState39 = useState({\n    lat: '',\n    lon: ''\n  }),\n      _useState40 = _slicedToArray(_useState39, 2),\n      coord = _useState40[0],\n      setCoord = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      allSoils = _useState42[0],\n      setAllSoils = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      allCountry = _useState44[0],\n      setAllCountry = _useState44[1];\n\n  var _useState45 = useState([]),\n      _useState46 = _slicedToArray(_useState45, 2),\n      allCity = _useState46[0],\n      setAllCity = _useState46[1];\n\n  var _useState47 = useState({\n    name: \"\",\n    cityId: \"\",\n    cropTypeId: \"\",\n    soilTypeId: \"\",\n    cropVarietyId: \"\"\n  }),\n      _useState48 = _slicedToArray(_useState47, 2),\n      dataSimulation = _useState48[0],\n      setDataSimulation = _useState48[1];\n\n  var ETC = Number(InputsData.ET0) * Number(InputsData.Kc);\n  var RuMax = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n  var RuInitial = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n  var Epuisement_maximal = Number(InputsData.RUmax) * Number(InputsData.Profondeur) * Number(InputsData.ruPratique) / 100;\n  var RuMin = Number(RuMax) - Number(Epuisement_maximal);\n  var VolumeIrrigation = sumIrrig * 10;\n  var VolumeTotalEauIrrigation = Number(VolumeIrrigation) * Number(InputsData.surfaceIrrig);\n  var Deficit = sumETC - sumPluie;\n\n  var getVarieties = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/varieties/get-varieties').then(function (response) {\n                if (response.data.type === \"success\") {\n                  var listVarieties = response.data.Varieties;\n                  setAllVarieties(listVarieties);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getVarieties() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getCitiesList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/cities/list-cities').then(function (response) {\n                var cities = response.data.Cities;\n\n                if (response && response.data.type === \"success\") {\n                  setAllCity(cities);\n                }\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getCitiesList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getWeather();\n  }, [coord.lat, coord.lon]);\n  useEffect(function () {\n    getCitiesList();\n\n    var getCropType = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setAllSoils(listSoils);\n                  var Ru = \"\";\n\n                  if (listSoils) {\n                    listSoils.map(function (item) {\n                      Ru = item.ru;\n                    });\n                    setInputsData(_objectSpread({}, InputsData, {\n                      RUmax: Ru\n                    }));\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var getCountries = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.get('/countries/get-countries').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listCountries = response.data.Countries;\n                    setAllCountry(listCountries);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      return function getCountries() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getCountries();\n    getSoils();\n    getCropType();\n  }, []); // useEffect(() => {\n  //     let sum = Object.values(pluie).reduce((a, v) => a + Number(v), 0)\n  //     setSumPluie(sum)\n  // }, [pluie])\n\n  var getWeather = function getWeather() {\n    var data = {\n      lat: coord.lat,\n      lon: coord.lon,\n      type: 'forecast'\n    };\n    api.post('/weather/get-data', data).then(function (response) {\n      var weatherData = response.data.data;\n      var listForecast = weatherData.list;\n      var days = [];\n\n      for (var i = 0; i < listForecast.length; i += 8) {\n        var temp = {};\n        temp.date = new Date(listForecast[i + 5].dt_txt);\n        temp.rain = listForecast[i].rain;\n        temp.temp = listForecast[i].main.feels_like.toFixed(0);\n        temp.temp_max = listForecast[i].main.temp_max.toFixed(0);\n        temp.temp_min = listForecast[i].main.temp_min.toFixed(0);\n        temp.humidity = listForecast[i].main.humidity;\n        temp.pressure = listForecast[i].main.pressure;\n        temp.wind = listForecast[i].wind.speed;\n        temp.main = listForecast[i].weather[0].main;\n        temp.description = listForecast[i + 3].weather[0].description;\n        temp.icon = listForecast[i].weather[0].icon;\n        days.push(temp);\n      }\n\n      setWeather(days);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleSoilPick = function handleSoilPick(value) {\n    if (value) {\n      setDataSimulation(_objectSpread({}, dataSimulation, {\n        soilTypeId: value\n      }));\n    }\n\n    var soilType = allSoils.find(function (soil) {\n      return soil.id == value;\n    });\n\n    if (typeof soilType !== \"undefined\") {\n      setInputsData(_objectSpread({}, InputsData, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effIrrig: soilType.fc,\n        ruPratique: soilType.practical_fraction,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  };\n\n  var handleCropPick = function handleCropPick(value) {\n    if (value) {\n      setDataSimulation(_objectSpread({}, dataSimulation, {\n        cropTypeId: value\n      }));\n    }\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == value;\n    });\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setInputsData(_objectSpread({}, InputsData, {\n        cropType: crop.crop,\n        variety: '',\n        cropVariety: varieties,\n        Profondeur: crop.root_max,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.crop_variety === e.target.value;\n    });\n\n    if (variety) {\n      setInputsData(_objectSpread({}, InputsData, {\n        cropType: \"\",\n        variety: variety.crop_variety,\n        Profondeur: variety.root_max,\n        days: variety.total,\n        plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n        kcList: variety.all_kc\n      }));\n    }\n  };\n\n  var handleCountryPick = function handleCountryPick(e) {\n    e.preventDefault();\n    var country = allCountry.find(function (country) {\n      return country.iso === e.target.value;\n    });\n    var cities = [];\n\n    if (country) {\n      var city = allCity.map(function (city) {\n        if (city.iso === country.iso) {\n          cities.push({\n            city: city.city,\n            id: city.id\n          });\n        }\n      });\n      setInputsData(_objectSpread({}, InputsData, {\n        country: country.iso,\n        cities: cities\n      }));\n    }\n  };\n\n  var handleCityPick = function handleCityPick(e) {\n    e.preventDefault();\n    var city = allCity.find(function (city) {\n      return city.name === e.city.value;\n    });\n\n    if (city) {\n      setInputsData(_objectSpread({}, InputsData, {\n        city: city.city,\n        daysWeather: city.weather_data_days\n      }));\n    }\n  };\n\n  var onChangeHandler = function onChangeHandler(value, indx) {\n    setPluie(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, value));\n    });\n    var formulePe = Number(value) * Number(InputsData.effPluie) / 100;\n    setPe(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, formulePe));\n    });\n  };\n\n  var onChangeHandlerIrrigated = function onChangeHandlerIrrigated(value, indx) {\n    setIrrigatedAlready(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, value));\n    });\n\n    if (value) {\n      var formulePe = Number(value) * Number(InputsData.effPluie) / 100;\n      setPe(function (state) {\n        return _objectSpread({}, state, _defineProperty({}, indx, formulePe));\n      });\n    }\n  };\n\n  var _useState49 = useState(0),\n      _useState50 = _slicedToArray(_useState49, 2),\n      sumNbrIrrig = _useState50[0],\n      setSumNbrIrrig = _useState50[1];\n\n  var _useState51 = useState(0),\n      _useState52 = _slicedToArray(_useState51, 2),\n      sumIrrig = _useState52[0],\n      setSumIrrig = _useState52[1];\n\n  var _useState53 = useState(0),\n      _useState54 = _slicedToArray(_useState53, 2),\n      sumPluie = _useState54[0],\n      setSumPluie = _useState54[1];\n\n  var _useState55 = useState(0),\n      _useState56 = _slicedToArray(_useState55, 2),\n      sumETC = _useState56[0],\n      setSumETC = _useState56[1];\n\n  var getAllSimulations = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return api.get('/simulation/get-simulations').then(function (result) {\n                var listSimulations = result.data.simulations;\n\n                if (result.data.type === \"success\") {\n                  setAllSimulations(listSimulations);\n                }\n              }).catch(function (err) {\n                console.log(err);\n              }).finally(function () {\n                return setIsLoading(false);\n              });\n\n            case 3:\n              _context6.next = 7;\n              break;\n\n            case 5:\n              _context6.prev = 5;\n              _context6.t0 = _context6[\"catch\"](0);\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 5]]);\n    }));\n\n    return function getAllSimulations() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getAllSimulations();\n  }, []);\n\n  var getSingleSimulation = function getSingleSimulation(simulationId) {\n    var data = {\n      simulation_id: simulationId\n    };\n\n    try {\n      api.post('/simulation/single-simulation', data).then(function (result) {\n        var data = [];\n        var simulation = result.data.Simulation;\n\n        if (result.data.type === \"success\") {\n          setSingleSimulation(simulation.result);\n          setInputsData(_objectSpread({}, InputsData, {\n            ET0: \"\",\n            surfaceIrrig: simulation.inputs.surfaceIrrig,\n            RUmax: simulation.inputs.RUmax,\n            Profondeur: simulation.inputs.Profondeur,\n            effPluie: simulation.inputs.effPluie,\n            ruPratique: simulation.inputs.surfaceIrrig,\n            effIrrig: simulation.inputs.effIrrig,\n            country: simulation.inputs.country,\n            city: simulation.inputs.city,\n            cropType: simulation.inputs.cropType,\n            cropVariety: [],\n            variety: '',\n            days: simulation.inputs.days,\n            plantingDate: simulation.inputs.plantingDate,\n            soilType: simulation.inputs.soilType,\n            temperature: null\n          }));\n          setDataSimulation({\n            name: simulation.name,\n            cropTypeId: simulation.croptype_id,\n            soilTypeId: simulation.soiltype_id,\n            cityId: simulation.city_id\n          });\n          setSumETC(simulation.sumETC);\n          setSumIrrig(simulation.sumIrrig);\n          setSumNbrIrrig(simulation.sumNbrIrrig);\n          simulation.result.map(function (result) {\n            if (result) {\n              data.push(result.bilan);\n            }\n          });\n          setChartData(data);\n        }\n      }).catch(function (err) {});\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  var handleEdit = function handleEdit() {\n    var data = {\n      simulation_id: simulationId,\n      name: dataSimulation.name,\n      city_id: dataSimulation.cityId,\n      croptype_id: dataSimulation.cropTypeId,\n      soiltype_id: dataSimulation.soilTypeId,\n      cropvariety_id: dataSimulation.cropVarietyId,\n      inputs: InputsData\n    };\n    api.post('/simulation/edit-simulation', data).then(function (response) {\n      var simulationResult = response.data.simulation;\n\n      if (response.data.type === \"success\") {\n        swal({\n          icon: 'info',\n          title: 'OK',\n          text: 'Simulation edited'\n        });\n        getAllSimulations();\n      }\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setIsLoading(true);\n    });\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(simulationId) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              data = {\n                simulation_id: simulationId\n              };\n              _context7.next = 3;\n              return api.delete('/simulation/delete-simulation', {\n                data: data\n              }).then(function (response) {\n                if (response.data.type && response.data.type == \"danger\") {\n                  swal({\n                    title: \"Cannot Delete Simulation\",\n                    icon: \"warning\"\n                  });\n                }\n\n                if (response.data.type == \"success\") {\n                  getAllSimulations();\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Cannot Delete Simulation\",\n                  icon: \"error\",\n                  text: 'error_delete_simulation'\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var confirmDelete = function confirmDelete(simulationId) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this simulation!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (Delete) {\n      if (Delete) {\n        handleDelete(simulationId);\n        swal(\" Simulation has been deleted!\", {\n          icon: \"success\"\n        });\n      }\n    }).catch(function (error) {\n      swal({\n        title: \"Cannot Delete Simulation\",\n        icon: \"error\",\n        text: 'error_delete_simulation'\n      });\n    });\n  };\n\n  var returnInputs = function returnInputs() {\n    switch (elemValue) {\n      case \"pos\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          className: \"py-4\",\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"country\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 33\n          }\n        }, \"Country\"), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"country\",\n          value: InputsData.country || '',\n          onChange: handleCountryPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 37\n          }\n        }, \"Select Country\"), allCountry.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 45\n            }\n          }, country.name);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          className: \"py-4\",\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 33\n          }\n        }, \"City\"), /*#__PURE__*/React.createElement(FormSelect, {\n          className: \"form-control form-control-md \".concat(cityError ? \"is-invalid\" : \"\"),\n          value: dataSimulation.cityId || \"\",\n          onChange: function onChange(e) {\n            return setDataSimulation(_objectSpread({}, dataSimulation, {\n              cityId: e.target.value\n            }));\n          },\n          id: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 37\n          }\n        }, \"Select City\"), InputsData.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: city.id,\n            value: city.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 49\n            }\n          }, city.city);\n        })))));\n\n      case \"crop\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cropType\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 33\n          }\n        }, \"Crop Type\"), /*#__PURE__*/React.createElement(FormSelect, {\n          className: \"form-control form-control-md \".concat(cropError ? \"is-invalid\" : \"\"),\n          id: \"cropType\",\n          value: dataSimulation.cropTypeId || \"\",\n          onChange: function onChange(e) {\n            return handleCropPick(e.target.value);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 37\n          }\n        }, \"Select Crop\"), listCrop.map(function (cropType) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            key: cropType.id,\n            value: cropType.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 45\n            }\n          }, cropType.crop);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 33\n          }\n        }, \"Crop Variety\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.variety || \"\",\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 37\n          }\n        }, \"Select Crop Variety\"), InputsData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 45\n            }\n          }, variety.variety);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"z\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 33\n          }\n        }, \"Profondeur (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.Profondeur || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              Profondeur: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: \"Profondeur\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 33\n          }\n        }, \"Days\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.days || \"\",\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: \"Days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 33\n          }\n        }, \"Growing Season\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: InputsData.plantingDate || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 33\n          }\n        }))));\n\n      case \"soil\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"soil\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 33\n          }\n        }, \"Soil Type\"), /*#__PURE__*/React.createElement(FormSelect, {\n          className: \"form-control form-control-md \".concat(soilError ? \"is-invalid\" : \"\"),\n          value: dataSimulation.soilTypeId,\n          id: \"soil\",\n          onChange: function onChange(e) {\n            return handleSoilPick(e.target.value);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 37\n          }\n        }, \"Select Soil type\"), allSoils.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: soil.id,\n            value: soil.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 49\n            }\n          }, soil.soil);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"surfaceIrrig\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 33\n          }\n        }, \"Surface irrigu\\xE9e (ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.surfaceIrrig || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              surfaceIrrig: e.target.value\n            }));\n          },\n          id: \"surfaceIrrig\",\n          placeholder: \"Surface irrigu\\xE9e\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"effPluie\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 33\n          }\n        }, \"Efficacit\\xE9 de la pluie (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.effPluie || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: \"Efficacit\\xE9 de la pluie\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ruPratique\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 33\n          }\n        }, \"Fraction RU pratique (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.ruPratique || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: \"Fraction RU pratique\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"effIrrig\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 33\n          }\n        }, \"Efficience de l'irrigation (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.effIrrig || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: \"Efficience de l'irrigation\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ruMax\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 33\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.RUmax || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 33\n          }\n        }))));\n\n      default:\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"country\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 33\n          }\n        }, \"Country\"), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"country\",\n          value: InputsData.country || '',\n          onChange: handleCountryPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 37\n          }\n        }, \"Select Country\"), allCountry.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 45\n            }\n          }, country.name);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 33\n          }\n        }, \"City\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.city || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              city: e.target.value\n            }));\n          },\n          id: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 37\n          }\n        }, \"Select City\"), InputsData.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: city.city,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 49\n            }\n          }, city.city);\n        })))));\n    }\n  };\n\n  var imageByInputs = function imageByInputs() {\n    switch (elemValue) {\n      case \"pos\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: position,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 24\n          }\n        });\n\n      case \"crop\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: crop,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 24\n          }\n        });\n\n      case \"soil\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: soil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: position,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('My Simulations'),\n    subtitle: t('overview'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 21\n    }\n  })), isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 d-flex justify-content-center align-items-center text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center table-bordered table-hover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 53\n    }\n  }, t('Name')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 53\n    }\n  }, t('Date')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 53\n    }\n  }))), allSimulations.map(function (simulation) {\n    var dateCreated = moment(simulation.created_at).locale('En').format('MMM DD, h:mm a');\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 65\n      }\n    }, simulation.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 65\n      }\n    }, dateCreated), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Edit\",\n      onClick: function onClick() {\n        getSingleSimulation(simulation.id);\n      },\n      outline: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 151\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"Delete\",\n      onClick: function onClick() {\n        confirmDelete(simulation.id);\n      },\n      outline: true,\n      theme: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 163\n      }\n    }, \"\\uE872\"))))));\n  }))))))), singleSimulation.length != 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"text-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 33\n    }\n  }, t('Configuration')), /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Name\",\n    value: dataSimulation.name,\n    className: \"form-control form-control-md \".concat(nameError ? \"is-invalid\" : \"\"),\n    onChange: function onChange(e) {\n      return setDataSimulation(_objectSpread({}, dataSimulation, {\n        name: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mx-auto\",\n    style: {\n      height: \"140px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 37\n    }\n  }, imageByInputs())), /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"py-2 m-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"tomato\",\n      fontSize: 14,\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 44\n    }\n  }, error), /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"pos\",\n    className: \"\".concat(elemValue === \"pos\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 53\n    }\n  }, \"Position\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"crop\",\n    className: \"\".concat(elemValue === \"crop\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 53\n    }\n  }, \"Crop Info\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"soil\",\n    className: \"\".concat(elemValue === \"soil\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 53\n    }\n  }, \"Soil Info\")))), returnInputs()), elemValue === \"soil\" ? /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    theme: \"success\",\n    onClick: function onClick() {\n      handleEdit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 53\n    }\n  }, \"Valider\")) : null)))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 33\n    }\n  }, t('Water Report')), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    onClick: function onClick() {\n      return setSingleSimulation([]);\n    },\n    \"aria-label\": \"Close\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 37\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    id: \"page\",\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ruMax\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 37\n    }\n  }, \"RU max (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ruMax\",\n    value: RuMax,\n    placeholder: \"RU max\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ruInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 37\n    }\n  }, \"RU initiale (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ruInit\",\n    value: RuInitial,\n    placeholder: \"RU initiale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"epuis\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 37\n    }\n  }, \"Epuisement maximal (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"epuis\",\n    value: Epuisement_maximal,\n    placeholder: \"Epuisement maximal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nbrIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 37\n    }\n  }, \"Nombre d'irrigations\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"nbrIrrig\",\n    value: sumNbrIrrig,\n    placeholder: \"Nombre d'irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hautIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 37\n    }\n  }, \"Hauteur d'eau des irrigations (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"hautIrrig\",\n    value: parseFloat(sumIrrig).toFixed(0),\n    placeholder: \"Hauteur d'eau des irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 37\n    }\n  }, \"Volume des irrigations (m\\xB3 /ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(VolumeIrrigation).toFixed(0),\n    id: \"vIrrig\",\n    placeholder: \"Volume des irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"rumin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 37\n    }\n  }, \"Ru Min (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: RuMin,\n    id: \"rumin\",\n    placeholder: \"RU min\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"volTotalIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 37\n    }\n  }, \"Volume Total d'eau d'irrigation (m\\xB3)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(VolumeTotalEauIrrigation).toFixed(0),\n    id: \"volTotalIrrig\",\n    placeholder: \"Volume Total d'eau d'irrigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pluieTotal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 37\n    }\n  }, \"Pluie Total (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(sumPluie).toFixed(0),\n    id: \"pluieTotal\",\n    placeholder: \"Pluie total\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"evoTotal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 37\n    }\n  }, \"Evapotranspiration totale (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(sumETC).toFixed(0),\n    id: \"evoTotal\",\n    placeholder: \"Evapotranspiration totale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"deficit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 37\n    }\n  }, \"D\\xE9ficit (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(Deficit).toFixed(0),\n    id: \"deficit\",\n    placeholder: \"D\\xE9ficit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 d-flex justify-content-center align-items-center text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"py-2 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: 30,\n      margin: 8,\n      border: '1px solid #eee',\n      borderRadius: 10,\n      background: 'none'\n    },\n    onClick: function onClick() {\n      return setToggle(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 177\n    }\n  }, \"\\uE265\")), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: 30,\n      margin: 8,\n      border: '1px solid #eee',\n      borderRadius: 10,\n      background: 'none'\n    },\n    onClick: function onClick() {\n      return setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 178\n    }\n  }, \"\\uE6E1\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"\".concat(toggle ? '' : 'd-none'),\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 37\n    }\n  }, \"Water Balance\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center table-bordered table-hover table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 49\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 49\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 49\n    }\n  }, t('Kc')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 49\n    }\n  }, t('ET0')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 49\n    }\n  }, t('Pluie'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 49\n    }\n  }, t('ETc')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 49\n    }\n  }, t('Pe'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 49\n    }\n  }, t('Bilan hydrique'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 49\n    }\n  }, t('Irrigation')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 49\n    }\n  }, t('Nbr Irrigation')))), singleSimulation.map(function (result) {\n    var dates = moment(result.date.slice(0, 10)).locale('En').format('MMM DD');\n    var ET0 = 2;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 61\n      }\n    }, result.days), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 61\n      }\n    }, dates), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 61\n      }\n    }, parseFloat(result.kc).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 61\n      }\n    }, ET0), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 61\n      }\n    }, result.rain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 61\n      }\n    }, parseFloat(result.Etc).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 61\n      }\n    }, parseFloat(result.pe).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 61\n      }\n    }, parseFloat(result.bilan).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 61\n      }\n    }, parseFloat(result.irrigation).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 61\n      }\n    }, result.irrigationNbr)));\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"\".concat(toggle ? 'd-none' : ''),\n    lg: \"12\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 37\n    }\n  }, \"Water Balance Chart\"), /*#__PURE__*/React.createElement(WaterChart, {\n    data: chartData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1046,\n      columnNumber: 37\n    }\n  }))))))) : null));\n};\n\nexport default MySimulations;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Nav","NavItem","NavLink","FormInput","FormSelect","Button","ButtonGroup","PageTitle","useTranslation","api","moment","LoadingSpinner","position","soil","crop","swal","WaterChart","MySimulations","toggle","setToggle","t","i18n","isLoading","setIsLoading","allSimulations","setAllSimulations","singleSimulation","setSingleSimulation","simulationId","setSimulationId","chartData","setChartData","Pe","setPe","allVarieties","setAllVarieties","weather","setWeather","listCrop","setListCrop","elemValue","setElemValue","pluie","setPluie","irrigatedAlready","setIrrigatedAlready","Kc","ET0","surfaceIrrig","RUmax","Profondeur","effPluie","ruPratique","effIrrig","country","cities","city","cropType","cropVariety","variety","days","plantingDate","soilType","temperature","kcList","daysWeather","InputsData","setInputsData","nameError","setNameError","cropError","setCropError","soilError","setSoilError","cityError","setCityError","error","setError","lat","lon","coord","setCoord","allSoils","setAllSoils","allCountry","setAllCountry","allCity","setAllCity","name","cityId","cropTypeId","soilTypeId","cropVarietyId","dataSimulation","setDataSimulation","ETC","Number","RuMax","RuInitial","Epuisement_maximal","RuMin","VolumeIrrigation","sumIrrig","VolumeTotalEauIrrigation","Deficit","sumETC","sumPluie","getVarieties","get","then","response","data","type","listVarieties","Varieties","catch","console","log","getCitiesList","Cities","err","getWeather","getCropType","dataCrop","Croptype","getSoils","listSoils","Soils","Ru","map","item","ru","getCountries","listCountries","Countries","post","weatherData","listForecast","list","i","length","temp","date","Date","dt_txt","rain","main","feels_like","toFixed","temp_max","temp_min","humidity","pressure","wind","speed","description","icon","push","handleSoilPick","value","find","id","fc","practical_fraction","rain_eff","handleCropPick","varieties","crop_id","crop_variety","root_max","total","plant_date","slice","replace","all_kc","handleVarietyPick","e","preventDefault","target","handleCountryPick","iso","handleCityPick","weather_data_days","onChangeHandler","indx","state","formulePe","onChangeHandlerIrrigated","sumNbrIrrig","setSumNbrIrrig","setSumIrrig","setSumPluie","setSumETC","getAllSimulations","result","listSimulations","simulations","finally","getSingleSimulation","simulation_id","simulation","Simulation","inputs","croptype_id","soiltype_id","city_id","bilan","handleEdit","cropvariety_id","simulationResult","title","text","handleDelete","delete","confirmDelete","buttons","dangerMode","Delete","returnInputs","textTransform","imageByInputs","dateCreated","created_at","locale","format","height","color","fontSize","padding","paddingBottom","parseFloat","margin","border","borderRadius","background","dates","kc","Etc","pe","irrigation","irrigationNbr"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/MySimulations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Nav, NavItem, NavLink, FormInput, FormSelect, Button,ButtonGroup } from 'shards-react'\nimport PageTitle from \"../common/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport api from '../../api/api';\nimport moment from 'moment';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport position from '../../images/pin.png'\nimport soil from \"../../images/soil.png\"\nimport crop from \"../../images/crop.png\"\nimport swal from 'sweetalert';\nimport WaterChart from './WaterChart';\n\n\nconst MySimulations = () => {\n    const [toggle, setToggle] = useState(true)\n    const { t, i18n } = useTranslation();\n    const [isLoading, setIsLoading] = useState(true)\n    const [allSimulations, setAllSimulations] = useState([])\n    const [singleSimulation, setSingleSimulation] = useState([])\n    const [simulationId, setSimulationId] = useState('')\n    const [chartData, setChartData] = useState([])\n    const [Pe, setPe] = useState({})\n    const [allVarieties, setAllVarieties] = useState([])\n    const [weather, setWeather] = useState({})\n    const [listCrop, setListCrop] = useState([])\n    const [elemValue, setElemValue] = useState('pos')\n    const [pluie, setPluie] = useState({})\n    const [irrigatedAlready, setIrrigatedAlready] = useState({})\n    const [InputsData, setInputsData] = useState({\n        Kc: \"\",\n        ET0: \"\",\n        surfaceIrrig: \"\",\n        RUmax: \"\",\n        Profondeur: \"\",\n        effPluie: \"\",\n        ruPratique: \"\",\n        effIrrig: \"\",\n        country: \"\",\n        cities: [],\n        city: \"\",\n        cropType: \"\",\n        cropVariety: [],\n        variety: '',\n        days: \"\",\n        plantingDate: \"\",\n        soilType: \"\",\n        temperature: null,\n        kcList: [],\n        daysWeather: []\n\n    })\n\n    const [nameError, setNameError] = useState(null)\n    const [cropError, setCropError] = useState(null)\n    const [soilError, setSoilError] = useState(null)\n    const [cityError, setCityError] = useState(null)\n    const [error, setError] = useState(null)\n\n\n    const [coord, setCoord] = useState({ lat: '', lon: '' })\n    const [allSoils, setAllSoils] = useState([])\n    const [allCountry, setAllCountry] = useState([])\n    const [allCity, setAllCity] = useState([])\n\n\n    const [dataSimulation,setDataSimulation] = useState({\n        name : \"\",\n        cityId :\"\",\n        cropTypeId :\"\",\n        soilTypeId :\"\",\n        cropVarietyId :\"\"\n    })\n\n\n    let ETC = Number(InputsData.ET0) * Number(InputsData.Kc)\n    let RuMax = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n    let RuInitial = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n    let Epuisement_maximal = (Number(InputsData.RUmax) * Number(InputsData.Profondeur) * Number(InputsData.ruPratique)) / 100\n    let RuMin = Number(RuMax) - Number(Epuisement_maximal)\n    let VolumeIrrigation = sumIrrig * 10\n    let VolumeTotalEauIrrigation = Number(VolumeIrrigation) * Number(InputsData.surfaceIrrig)\n    let Deficit = sumETC - sumPluie\n\n\n    const getVarieties = async () => {\n        try {\n            await api.get('/varieties/get-varieties')\n                .then(response => {\n                    if (response.data.type === \"success\") {\n                        let listVarieties = response.data.Varieties\n                        setAllVarieties(listVarieties)\n\n                    }\n                }).catch(error => {\n                    console.log(error)\n                })\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    const getCitiesList = async () => {\n        await api.get('/cities/list-cities')\n            .then(response => {\n                let cities = response.data.Cities\n                if (response && response.data.type === \"success\") {\n                    setAllCity(cities)\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n        getWeather()\n    }, [coord.lat, coord.lon])\n\n    useEffect(() => {\n        getCitiesList()\n\n        const getCropType = async () => {\n            try {\n                await api.get('/croptype/list-crop')\n                    .then(response => {\n                        if (response) {\n                            let dataCrop = response.data.Croptype\n                            setListCrop(dataCrop)\n                        }\n                    })\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        const getSoils = async () => {\n            try {\n                await api.get('/soils/get-soils')\n                    .then(response => {\n                        let listSoils = response.data.Soils\n                        setAllSoils(listSoils)\n                        let Ru = \"\"\n                        if (listSoils) {\n                            listSoils.map(item => {\n                                Ru = item.ru\n                            })\n                            setInputsData({ ...InputsData, RUmax: Ru })\n                        }\n                    }).catch(error => {\n                        console.log(error)\n                    })\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        const getCountries = async () => {\n            try {\n                await api.get('/countries/get-countries')\n                    .then(response => {\n                        if (response.data.type === \"success\") {\n                            let listCountries = response.data.Countries\n                            setAllCountry(listCountries)\n\n                        }\n                    }).catch(error => {\n                        console.log(error)\n                    })\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getVarieties()\n        getCountries()\n        getSoils()\n        getCropType()\n    }, [])\n\n    // useEffect(() => {\n    //     let sum = Object.values(pluie).reduce((a, v) => a + Number(v), 0)\n    //     setSumPluie(sum)\n    // }, [pluie])\n\n    const getWeather = () => {\n        let data = {\n            lat: coord.lat,\n            lon: coord.lon,\n            type: 'forecast'\n        }\n        api.post('/weather/get-data', data)\n            .then(response => {\n                let weatherData = response.data.data\n                let listForecast = weatherData.list;\n                let days = [];\n                for (let i = 0; i < listForecast.length; i += 8) {\n                    var temp = {};\n                    temp.date = new Date(listForecast[i + 5].dt_txt);\n                    temp.rain = listForecast[i].rain;\n                    temp.temp = ((listForecast[i].main.feels_like)).toFixed(0);\n                    temp.temp_max = ((listForecast[i].main.temp_max)).toFixed(0);\n                    temp.temp_min = ((listForecast[i].main.temp_min)).toFixed(0);\n                    temp.humidity = listForecast[i].main.humidity;\n                    temp.pressure = listForecast[i].main.pressure;\n                    temp.wind = listForecast[i].wind.speed;\n                    temp.main = listForecast[i].weather[0].main;\n                    temp.description = listForecast[i + 3].weather[0].description;\n                    temp.icon = listForecast[i].weather[0].icon;\n                    days.push(temp);\n                }\n                setWeather(days)\n\n\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const handleSoilPick = (value) => {\n        if(value){\n            setDataSimulation({...dataSimulation , soilTypeId : value})\n        }\n        const soilType = allSoils.find(\n            (soil) => soil.id == value\n        );\n        if (typeof soilType !== \"undefined\") {\n            setInputsData({\n                ...InputsData,\n                soilType: soilType.soil,\n                RUmax: soilType.ru,\n                effIrrig: soilType.fc,\n                ruPratique: soilType.practical_fraction,\n                effPluie: soilType.rain_eff\n            });\n\n        }\n    };\n\n    const handleCropPick = (value) => {\n        if(value){\n            setDataSimulation({...dataSimulation , cropTypeId : value})\n        }\n        const crop = listCrop.find(\n            (crop) => crop.id == value\n        );\n        let varieties = []\n        if (crop) {\n            const variety = allVarieties.map((variety) => {\n                if (variety.crop_id === crop.id) {\n                    varieties.push({\n                        variety: variety.crop_variety\n                    })\n                }\n\n            });\n            setInputsData({\n                ...InputsData,\n                cropType: crop.crop,\n                variety: '',\n                cropVariety: varieties,\n                Profondeur: crop.root_max,\n                days: crop.total,\n                plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n                kcList: crop.all_kc\n            });\n\n        }\n    };\n\n    const handleVarietyPick = (e) => {\n        e.preventDefault();\n        const variety = allVarieties.find(\n            (variety) => variety.crop_variety === e.target.value\n\n        )\n        if (variety) {\n            setInputsData({\n                ...InputsData,\n                cropType: \"\",\n                variety: variety.crop_variety,\n                Profondeur: variety.root_max,\n                days: variety.total,\n                plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n                kcList: variety.all_kc\n            });\n        }\n    };\n\n\n    const handleCountryPick = (e) => {\n        e.preventDefault();\n        const country = allCountry.find(\n            (country) => country.iso === e.target.value\n        );\n        let cities = []\n        if (country) {\n            const city = allCity.map((city) => {\n                if (city.iso === country.iso) {\n                    cities.push({\n                        city: city.city,\n                        id : city.id\n                    })\n                }\n\n            });\n\n            setInputsData({\n                ...InputsData,\n                country: country.iso,\n                cities: cities\n            });\n\n        }\n\n    };\n\n    const handleCityPick = (e) => {\n        e.preventDefault();\n        const city = allCity.find(\n            (city) => city.name === e.city.value\n        );\n        if (city) {\n            setInputsData({\n                ...InputsData,\n                city: city.city,\n                daysWeather: city.weather_data_days\n            });\n\n        }\n    };\n\n\n    const onChangeHandler = (value,indx) => {\n        setPluie(state => ({ ...state, [indx]: value }))\n        let formulePe = Number(value) * Number(InputsData.effPluie) / 100\n        setPe(state => ({ ...state, [indx]: formulePe }))\n\n    }\n    \n    const onChangeHandlerIrrigated = (value, indx) => {\n        setIrrigatedAlready(state => ({...state,[indx] :value }) )\n        if(value){\n            let formulePe = Number(value) * Number(InputsData.effPluie) / 100\n            setPe(state => ({ ...state, [indx]: formulePe }))\n\n        }\n\n    }\n\n\n    const [sumNbrIrrig, setSumNbrIrrig] = useState(0)\n    const [sumIrrig, setSumIrrig] = useState(0)\n    const [sumPluie, setSumPluie] = useState(0)\n    const [sumETC, setSumETC] = useState(0)\n    const getAllSimulations = async () => {\n        try {\n            await api.get('/simulation/get-simulations')\n                .then(result => {\n                    let listSimulations = result.data.simulations\n                    if (result.data.type === \"success\") {\n                        setAllSimulations(listSimulations)\n                    }\n                }).catch(err => {\n                    console.log(err)\n                }).finally(() => setIsLoading(false))\n        } catch (error) {\n\n        }\n    }\n    useEffect(() => {\n        getAllSimulations()\n    }, [])\n\n    const getSingleSimulation = (simulationId) => {\n          let data = {\n            simulation_id : simulationId\n          }\n          try {\n            api.post('/simulation/single-simulation',data)\n            .then(result => {\n                let data = []\n              let simulation = result.data.Simulation\n              if(result.data.type === \"success\"){\n                setSingleSimulation(simulation.result)\n                setInputsData({ \n                    ...InputsData,\n                ET0: \"\",\n                surfaceIrrig: simulation.inputs.surfaceIrrig,\n                RUmax: simulation.inputs.RUmax,\n                Profondeur: simulation.inputs.Profondeur,\n                effPluie: simulation.inputs.effPluie,\n                ruPratique: simulation.inputs.surfaceIrrig,\n                effIrrig: simulation.inputs.effIrrig,\n                country: simulation.inputs.country,\n                city: simulation.inputs.city,\n                cropType: simulation.inputs.cropType,\n                cropVariety: [],\n                variety: '',\n                days: simulation.inputs.days,\n                plantingDate: simulation.inputs.plantingDate,\n                soilType: simulation.inputs.soilType,\n                temperature: null,})\n                setDataSimulation({\n                    name : simulation.name,\n                    cropTypeId: simulation.croptype_id,\n                    soilTypeId: simulation.soiltype_id,\n                    cityId : simulation.city_id\n                })\n                setSumETC(simulation.sumETC)\n                setSumIrrig(simulation.sumIrrig)\n                setSumNbrIrrig(simulation.sumNbrIrrig)\n                simulation.result.map(result=>{\n                    if(result){\n                        data.push(result.bilan)\n                    }\n                })\n                setChartData(data)\n            }\n            }).catch(err=>{\n    \n            })\n          } catch (error) {\n              console.log(error)\n          }\n      }\n\n      const handleEdit = () => {\n        let data = {\n            simulation_id : simulationId,\n            name : dataSimulation.name,\n            city_id : dataSimulation.cityId,\n            croptype_id : dataSimulation.cropTypeId,\n            soiltype_id :dataSimulation.soilTypeId,\n            cropvariety_id : dataSimulation.cropVarietyId,\n            inputs : InputsData\n        }\n            api.post('/simulation/edit-simulation',data)\n            .then(response=>{\n                    let simulationResult = response.data.simulation\n                    if(response.data.type === \"success\") {\n                        swal({\n                            icon: 'info',\n                            title: 'OK',\n                            text: 'Simulation edited'\n                          })\n                          getAllSimulations()\n                    }\n            }).catch(error=>{   \n                console.log(error)\n            }).finally(() => setIsLoading(true) )\n        \n\n    }\n\n\n    const handleDelete = async simulationId => {\n\n    \n        let data = {\n            simulation_id: simulationId,\n        }\n        await api.delete('/simulation/delete-simulation', { data: data })\n            .then(response => {\n                if (response.data.type && response.data.type == \"danger\") {\n                    swal({\n                        title: \"Cannot Delete Simulation\",\n                        icon: \"warning\",\n                    });\n                }\n                if (response.data.type == \"success\") {\n                    getAllSimulations();\n                   \n                }\n            }).catch(error => {\n                swal({\n                    title: \"Cannot Delete Simulation\",\n                    icon: \"error\",\n                    text: 'error_delete_simulation'\n                    \n                });\n            })\n        }\n    \n    const confirmDelete = simulationId => {\n    \n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this simulation!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((Delete) => {\n                if (Delete) {\n                    handleDelete(simulationId)\n                    swal(\" Simulation has been deleted!\", {\n                        icon: \"success\",\n                    });\n                }\n            }).catch(error => {\n                swal({\n                    title: \"Cannot Delete Simulation\",\n                    icon: \"error\",\n                    text: 'error_delete_simulation'\n    \n                });\n            })\n    \n    } \n\n    const returnInputs = () => {\n        switch (elemValue) {\n            case \"pos\":\n                return (\n                    <Row form >\n\n                        <Col className=\"py-4\" lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"country\">Country</label>\n                                <FormSelect id=\"country\" value={InputsData.country || ''} onChange={handleCountryPick}>\n\n                                    <option value=''>Select Country</option>\n\n                                    {\n                                        allCountry.map(country => (\n                                            <option key={country.id} value={country.iso}>{country.name}</option>\n                                        ))\n                                    }\n\n                                </FormSelect>\n\n                            </FormGroup>\n                        </Col>\n                        <Col className=\"py-4\" lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"city\">City</label>\n                                <FormSelect className={`form-control form-control-md ${cityError ? \"is-invalid\" : \"\"}`} value={dataSimulation.cityId || \"\"} onChange={e => setDataSimulation({ ...dataSimulation, cityId: e.target.value })} id=\"city\">\n                                    <option value=\"\">Select City</option>\n                                    {\n                                        InputsData.cities.map(city => {\n                                            return (\n                                                <option key={city.id} value={city.id}>{city.city}</option>\n                                            )\n                                        })\n                                    }\n\n                                </FormSelect>\n\n                            </FormGroup>\n\n                        </Col>\n\n\n                    </Row>\n\n                )\n            case \"crop\":\n                return (\n                    <Row form className=\"py-2 m-2\">\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"cropType\">Crop Type</label>\n                                <FormSelect className={`form-control form-control-md ${cropError ? \"is-invalid\" : \"\"}`} id=\"cropType\" value={dataSimulation.cropTypeId || \"\"} onChange={(e) => handleCropPick(e.target.value)}>\n                                    <option value=\"\">Select Crop</option>\n                                    {\n                                        listCrop.map(cropType => (\n                                            <option style={{ textTransform: \"capitalize\" }} key={cropType.id} value={cropType.id}>{cropType.crop}</option>\n\n                                        ))\n                                    }\n\n                                </FormSelect>\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"cropVariety\">Crop Variety</label>\n                                <FormSelect value={InputsData.variety || \"\"} onChange={handleVarietyPick} id=\"cropVariety\">\n                                    <option value=\"\">Select Crop Variety</option>\n                                    {\n                                        InputsData.cropVariety.map(variety => (\n                                            <option value={variety.id}>{variety.variety}</option>\n                                        ))\n                                    }\n                                </FormSelect>\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"z\">Profondeur (m)</label>\n                                <FormInput value={InputsData.Profondeur || ''} onChange={e => setInputsData({ ...InputsData, Profondeur: e.target.value })} id='z' placeholder=\"Profondeur\"\n                                />\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"days\">Days</label>\n\n                                <FormInput value={InputsData.days || \"\"} id='days' onChange={e => setInputsData({ ...InputsData, days: e.target.value })} placeholder=\"Days\" />\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"days\">Growing Season</label>\n\n                                <FormInput type=\"date\" value={InputsData.plantingDate || \"\"} onChange={e => setInputsData({ ...InputsData, plantingDate: e.target.value })} id='days' />\n\n                            </FormGroup>\n\n                        </Col>\n\n                    </Row>\n\n                )\n            case \"soil\":\n                return (\n                    <Row form className=\"py-2 m-2\">\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"soil\">Soil Type</label>\n                                <FormSelect className={`form-control form-control-md ${soilError ? \"is-invalid\" : \"\"}`} value={dataSimulation.soilTypeId} id=\"soil\" onChange={(e) => handleSoilPick(e.target.value)}>\n                                    <option value=''>Select Soil type</option>\n                                    {\n                                        allSoils.map(soil => {\n                                            \n                                            return (\n                                                <option key={soil.id} value={soil.id}>{soil.soil}</option>\n                                            )\n                                        })\n                                    }\n                                </FormSelect>\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"surfaceIrrig\">Surface irriguée (ha)</label>\n                                <FormInput value={InputsData.surfaceIrrig || ''} onChange={e => setInputsData({ ...InputsData, surfaceIrrig: e.target.value })} id=\"surfaceIrrig\" placeholder=\"Surface irriguée\"\n                                />\n\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"effPluie\">Efficacité de la pluie (%)</label>\n                                <FormInput value={InputsData.effPluie || ''} onChange={e => setInputsData({ ...InputsData, effPluie: e.target.value })} id='effPluie' placeholder=\"Efficacité de la pluie\" \n                                />\n\n                            </FormGroup>\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"ruPratique\">Fraction RU pratique (%) </label>\n                                <FormInput value={InputsData.ruPratique || ''} onChange={e => setInputsData({ ...InputsData, ruPratique: e.target.value })} id='ruPratique' placeholder=\"Fraction RU pratique\" \n                                />\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"effIrrig\">Efficience de l'irrigation (%) </label>\n                                <FormInput value={InputsData.effIrrig || ''} onChange={e => setInputsData({ ...InputsData, effIrrig: e.target.value })} id='effIrrig' placeholder=\"Efficience de l'irrigation\" \n                                />\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"ruMax\">RU max (mm/m)</label>\n                                <FormInput value={InputsData.RUmax || ''} onChange={e => setInputsData({ ...InputsData, RUmax: e.target.value })} id='ruMax' placeholder=\"RU max\"\n                                />\n\n                            </FormGroup>\n\n                        </Col>\n                    </Row>\n                )\n\n            default:\n                return (\n                    <Row form  >\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"country\">Country</label>\n                                <FormSelect id=\"country\" value={InputsData.country || ''} onChange={handleCountryPick}>\n\n                                    <option value=''>Select Country</option>\n\n                                    {\n                                        allCountry.map(country => (\n                                            <option key={country.id} value={country.iso}>{country.name}</option>\n                                        ))\n                                    }\n\n                                </FormSelect>\n\n                            </FormGroup>\n                        </Col>\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"city\">City</label>\n                                <FormSelect value={InputsData.city || \"\"} onChange={e => setInputsData({ ...InputsData, city: e.target.value })} id=\"city\">\n                                    <option value=\"\">Select City</option>\n                                    {\n                                        InputsData.cities.map(city => {\n                                            return (\n                                                <option value={city.city}>{city.city}</option>\n                                            )\n                                        })\n                                    }\n\n                                </FormSelect>\n                            </FormGroup>\n\n                        </Col>\n\n                    </Row>)\n        }\n\n    }\n    const imageByInputs = () => {\n        switch (elemValue) {\n            case \"pos\":\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={position}\n                />\n            case \"crop\":\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={crop}\n                />\n            case \"soil\":\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={soil}\n                />\n            default:\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={position}\n                />\n        }\n    }\n    return (\n        <>\n            <Container>\n                <Row noGutters className=\"page-header py-4\">\n                    <PageTitle\n                        sm=\"4\"\n                        title={t('My Simulations')}\n                        subtitle={t('overview')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                {\n                    isLoading\n                    ?\n                    <LoadingSpinner />\n                    :\n                    <Row className=\"py-2 d-flex justify-content-center align-items-center text-center\">\n\n                        <Col>\n                            <Card>\n\n                                <CardBody>\n                                    <Col lg=\"12\" md=\"12\" sm=\"12\">\n                                        <table className=\"table mb-0 text-center table-bordered table-hover\">\n                                            <thead className=\"bg-light\">\n                                                <tr>\n                                                    <th scope=\"col\" className=\"border-0\">{t('Name')}</th>\n                                                    <th scope=\"col\" className=\"border-0\">{t('Date')}</th>\n                                                    <th scope=\"col\" className=\"border-0\"></th>\n                                                </tr>\n                                            </thead>\n                                            {\n                                                allSimulations.map(simulation=>{\n                                                    let dateCreated = moment(simulation.created_at).locale('En').format('MMM DD, h:mm a')\n                                                    return(\n                                                        <tbody>\n                                                            <tr>\n                                                                <td>{simulation.name}</td>\n                                                                <td>{dateCreated}</td>\n                                                                <td>\n                                                                <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                                    <Button title=\"Edit\" onClick={() => {getSingleSimulation(simulation.id)}} outline><i className=\"material-icons\">&#xe3c9;</i></Button>\n                                                                    <Button title=\"Delete\" onClick={() => {confirmDelete(simulation.id) }} outline theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\n                                                                </ButtonGroup>\n                                                                </td>\n                                                            </tr>\n                                                        </tbody>\n\n                                                    )\n                                                })\n                                            }\n\n                                        </table>\n                                    </Col>\n\n                                </CardBody>\n\n                            </Card>\n                        </Col>\n\n\n\n                    </Row>\n\n                }\n                {\n                    singleSimulation.length != 0\n                    ?\n                    <>\n                     <Row className='text-center my-2'>\n                <Col lg='12' md=\"12\" sm=\"12\">\n                    <Card>\n                        <CardHeader className=\"border-bottom d-flex justify-content-between align-items-center\">\n                                <h6 className=\"m-0\">{t('Configuration')}</h6>\n                                <Form>\n                                    <FormInput placeholder='Name' value={dataSimulation.name} className={`form-control form-control-md ${nameError ? \"is-invalid\" : \"\"}`}  onChange={(e) => setDataSimulation({...dataSimulation , name : e.target.value})} />\n                                </Form>\n                        </CardHeader>\n                        <CardBody>\n                            <Row>\n                                <Col lg='4' md=\"12\" sm=\"12\" className=\"border-right d-flex justify-content-center align-items-center\">\n                                    <div className=\"mb-3 mx-auto\" style={{ height: \"140px\" }}>\n                                        {imageByInputs()}\n                                    </div>\n                                </Col>\n                                <Col lg='8' md=\"12\" sm=\"12\">\n                                    <Row form className=\"py-2 m-2\" >\n                                        <Col lg=\"12\" md=\"8\" sm=\"8\" className='py-4'>\n                                           <div style={{color :\"tomato\" , fontSize : 14 , padding : 5}}>{error}</div>\n                                            <Nav tabs style={{ paddingBottom: 10 }}>\n                                                <NavItem>\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"pos\" className={`${elemValue === \"pos\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">\n                                                        Position\n                                                    </NavLink>\n                                                </NavItem>\n                                                <NavItem>\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"crop\" className={`${elemValue === \"crop\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">Crop Info</NavLink>\n                                                </NavItem>\n                                                <NavItem>\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"soil\" className={`${elemValue === \"soil\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">Soil Info</NavLink>\n                                                </NavItem>\n                                            </Nav>\n                                        </Col>\n\n                                        {returnInputs()}\n                                    </Row>\n                                    {\n                                        elemValue === \"soil\"\n                                            ?\n                                            <Row className=\"d-flex justify-content-center align-items-center\">\n                                               \n                                                    <Button outline theme=\"success\" onClick={() => {handleEdit()}} >Valider</Button>\n\n                                            </Row>\n                                            :\n                                            null\n                                    }\n                                </Col>\n\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n                         <Row>\n                <Col lg='12' md=\"12\" sm=\"12\">\n                    <Card>\n                        <CardHeader className=\"border-bottom d-flex justify-content-between align-items-center\">\n                                <h6 className=\"m-0\">{t('Water Report')}</h6>{\" \"}\n                                <button type=\"button\" className=\"close\" onClick={() => setSingleSimulation([])} aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                        </CardHeader>\n                        <CardBody>\n                            <Row>\n                                <Col id=\"page\" lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"ruMax\">RU max (mm)</label>\n                                    <FormInput id=\"ruMax\" value={RuMax} placeholder=\"RU max\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"ruInit\">RU initiale (mm)</label>\n                                    <FormInput id='ruInit' value={RuInitial} placeholder=\"RU initiale\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"epuis\">Epuisement maximal (mm)</label>\n                                    <FormInput id=\"epuis\" value={Epuisement_maximal} placeholder=\"Epuisement maximal\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"nbrIrrig\">Nombre d'irrigations</label>\n\n                                    <FormInput id='nbrIrrig' value={sumNbrIrrig} placeholder=\"Nombre d'irrigations\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"hautIrrig\">Hauteur d'eau des irrigations (mm)</label>\n                                    <FormInput id='hautIrrig' value={parseFloat(sumIrrig).toFixed(0)} placeholder=\"Hauteur d'eau des irrigations\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"vIrrig\">Volume des irrigations (m³ /ha)</label>\n                                    <FormInput value={parseFloat(VolumeIrrigation).toFixed(0)} id=\"vIrrig\" placeholder=\"Volume des irrigations\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"rumin\">Ru Min (mm)</label>\n                                    <FormInput value={RuMin} id=\"rumin\" placeholder=\"RU min\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"volTotalIrrig\">Volume Total d'eau d'irrigation (m³)</label>\n                                    <FormInput value={parseFloat(VolumeTotalEauIrrigation).toFixed(0)} id=\"volTotalIrrig\" placeholder=\"Volume Total d'eau d'irrigation\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"pluieTotal\">Pluie Total (mm)</label>\n                                    <FormInput value={parseFloat(sumPluie).toFixed(0)} id=\"pluieTotal\" placeholder=\"Pluie total\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"evoTotal\">Evapotranspiration totale (mm)</label>\n                                    <FormInput value={parseFloat(sumETC).toFixed(0)} id='evoTotal' placeholder=\"Evapotranspiration totale\" />\n                                </Col>\n\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" >\n                                    <label htmlFor=\"deficit\">Déficit (mm)</label>\n                                    <FormInput value={parseFloat(Deficit).toFixed(0)} id=\"deficit\" placeholder=\"Déficit\" />\n                                </Col>\n                            </Row>\n\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"py-2 d-flex justify-content-center align-items-center text-center\">\n\n                    <Col>\n                    <Card>\n                            <CardBody>\n                                <p className=\"py-2 d-flex justify-content-center align-items-center\">\n                                    <button style={{ fontSize: 30, margin: 8, border: '1px solid #eee', borderRadius: 10, background: 'none' }} onClick={() => setToggle(true)}><i className='material-icons'>&#xe265;</i></button>\n                                    <button style={{ fontSize: 30, margin: 8, border: '1px solid #eee', borderRadius: 10, background: 'none' }} onClick={() => setToggle(false)}><i className='material-icons'>&#xe6e1;</i></button>\n                                </p>\n\n                                <Col className={`${toggle ? '' : 'd-none'}`} lg=\"12\" md=\"12\" sm=\"12\">\n                                    <h6>Water Balance</h6>\n                                    <table className=\"table mb-0 text-center table-bordered table-hover table-responsive-lg\">\n                                        <thead className=\"bg-light\">\n                                            <tr>\n                                                <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('ET0')}</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Pluie')} (mm)</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('ETc')}</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Pe')} (mm)</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Bilan hydrique')} (mm)</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Irrigation')}</th>\n                                                <th scope=\"col\" className=\"border-0\">{t('Nbr Irrigation')}</th>\n                                            </tr>\n                                        </thead>\n                                        {/* <tbody> */}\n                                        {/* {tableHydrique(InputsData.days)} */}\n                                        {/* </tbody> */}\n                                        {\n                                            singleSimulation.map(result=>{\n                                                \n                                                let dates = moment(result.date.slice(0,10)).locale('En').format('MMM DD')\n                                                let ET0 = 2\n                                                return(\n                                                    <tbody>\n                                                        <tr>\n                                                            <td>{result.days}</td>\n                                                            <td>{dates}</td>\n                                                            <td>{parseFloat(result.kc).toFixed(2)}</td>\n                                                            <td>{ET0}</td>\n                                                            <td>{result.rain}</td>\n                                                            <td>{parseFloat(result.Etc).toFixed(2)}</td>\n                                                            <td>{parseFloat(result.pe).toFixed(2)}</td>\n                                                            <td>{parseFloat(result.bilan).toFixed(2)}</td>\n                                                            <td>{parseFloat(result.irrigation).toFixed(2)}</td>\n                                                            <td>{result.irrigationNbr}</td>\n\n                                                        </tr>\n                                                        \n                                                        {/* <tr>\n                                                            <td>{i}</td>\n                                                            <td>{dates}</td>\n                                                            <td>{parseFloat(allKc[i - 1]).toFixed(2)}</td>\n                \n                                                            <td>{ET0}</td>\n                                                            <td> <input\n                                                                name={i}\n                                                                key={i}\n                                                                className='my-1'\n                                                                style={{outline: 'none', border: '1px solid #e4e4e4' }}\n                                                                value={pluie.i}\n                                                                onChange={(e) => onChangeHandler(e.target.value, i)}\n                                                            />\n                                                            </td>\n                                                            <td>\n                                                            <input\n                                                                name={i}\n                                                                key={i}\n                                                                className='my-1'\n                                                                style={{outline: 'none', border: '1px solid #e4e4e4' }}\n                                                                value={irrigatedAlready.i}\n                                                                onChange={(e) => onChangeHandlerIrrigated(e.target.value, i)}\n                                                            />  \n                                                            </td>\n                                                            <td>{parseFloat(ETC).toFixed(2)}</td>\n                                                            <td>{Pe[i]}</td>\n                                                            <td>{`${parseFloat(bilanHydrique).toFixed(1)}`}</td>\n                                                            <td>{parseFloat(Irrigation).toFixed(2)}</td>\n                                                            <td>{IrrigationNbr}</td>\n                                                        </tr>\n                */}\n                                                    </tbody>\n\n                                                )\n                                            })\n                                        }\n                                    </table>\n                                </Col>\n                                <Col className={`${toggle ? 'd-none' : ''}`} lg=\"12\" md=\"8\" sm=\"8\">\n                                    <h6>Water Balance Chart</h6>\n                                    <WaterChart data={chartData} />\n                                </Col>\n\n                            </CardBody>\n                    </Card>\n                    </Col>\n                        \n                    \n\n            </Row>\n                    </>\n                    :\n                    null\n                }\n            </Container>\n        </>\n    )\n}\n\nexport default MySimulations"],"mappings":"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"},"metadata":{},"sourceType":"module"}