{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport api from '../api/api';\n\nvar useSensorData = function useSensorData() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sensorData = _useState2[0],\n      setSensorData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allDataSensor = _useState4[0],\n      setAllDataSensor = _useState4[1];\n\n  var location = useLocation();\n  var userId = location.pathname.split('/')[2];\n  var userUid = JSON.parse(localStorage.getItem('user')).id;\n  var fieldUid = localStorage.getItem('Field');\n  var url = '/sensor/sensor-update-data';\n\n  if (JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\" && location.pathname === \"/Fields/\".concat(userId, \"/\").concat(fieldUid)) {\n    url = '/supplier/sensor-data';\n  }\n\n  if (JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\" && location.pathname === \"/Dashboard-supplier\") {\n    url = '/supplier/get-sensors-data';\n  }\n\n  var data = {\n    userUid: userUid,\n    fieldUid: fieldUid,\n    userId: userId\n  };\n\n  var getDataSensor = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, sensors, dataMappings, updatedSensorData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.post(url, data);\n\n            case 3:\n              response = _context.sent;\n              sensors = response.data.sensors;\n              dataMappings = response.data.dataMapping;\n              updatedSensorData = sensors.map(function (sensor) {\n                var valaueAfterMapping = [];\n                var mappedCharge = 0;\n                var date = sensor.time;\n                var vals = [sensor.mv1, sensor.mv2, sensor.mv3];\n\n                if (sensor) {\n                  var chargeMin = 73;\n                  var chargeMax = 100;\n                  mappedCharge = ((Number(sensor.charge) - chargeMin) / (chargeMax - chargeMin) * 100).toFixed(2);\n                  mappedCharge = Math.max(0, Math.min(100, mappedCharge));\n                }\n\n                dataMappings.forEach(function (dataMapping) {\n                  var dateMappings = dataMapping.date;\n                  vals.forEach(function (val, index) {\n                    var keyDataMax = \"Mv\".concat(index + 1, \"_max\"); // Correctly select Mv1_max, Mv2_max, or Mv3_max\n\n                    var keyDataMin = \"Mv\".concat(index + 1, \"_min\"); // Correctly select Mv1_min, Mv2_min, or Mv3_min\n\n                    var dateMappingSelected = dateMappings[\"Mv\".concat(index + 1, \"_date\")] || \"\";\n\n                    if (dateMappingSelected !== \"\") {\n                      // Ensure the value falls within the min-max range\n                      if (val >= parseFloat(dataMapping.min[keyDataMin]) && val <= parseFloat(dataMapping.max[keyDataMax])) {\n                        valaueAfterMapping[index] = ((parseFloat(val) - dataMapping.min[keyDataMin]) / (dataMapping.max[keyDataMax] - dataMapping.min[keyDataMin]) * 100).toFixed(2);\n                      } else if (val < parseFloat(dataMapping.max[keyDataMax])) {\n                        valaueAfterMapping[index] = 100;\n                      } else if (val > parseFloat(dataMapping.min[keyDataMin])) {\n                        valaueAfterMapping[index] = 0;\n                      }\n                    }\n                  });\n                });\n                return {\n                  code: sensor.code,\n                  sensor_id: sensor.sensor_id,\n                  time: sensor.time,\n                  temperature: sensor.temperature,\n                  humidity: sensor.humidity,\n                  pressure: sensor.pressure,\n                  charge: mappedCharge,\n                  signal: sensor.signal,\n                  adc: sensor.adc,\n                  ts: sensor.ts,\n                  mv1: valaueAfterMapping[0],\n                  mv2: valaueAfterMapping[1],\n                  mv3: valaueAfterMapping[2],\n                  originalmv1: sensor.mv1,\n                  originalmv2: sensor.mv2,\n                  originalmv3: sensor.mv3,\n                  altitude: sensor.altitude,\n                  mapping: response.data.dataMapping\n                };\n              });\n              setSensorData(sensors);\n              setAllDataSensor(updatedSensorData);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function getDataSensor() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getDataSensor();\n    var intervalId = setInterval(function () {\n      getDataSensor();\n    }, 30000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, []);\n  return allDataSensor;\n};\n\nexport default useSensorData;","map":{"version":3,"names":["React","useEffect","useState","useLocation","api","useSensorData","sensorData","setSensorData","allDataSensor","setAllDataSensor","location","userId","pathname","split","userUid","JSON","parse","localStorage","getItem","id","fieldUid","url","role","data","getDataSensor","post","response","sensors","dataMappings","dataMapping","updatedSensorData","map","sensor","valaueAfterMapping","mappedCharge","date","time","vals","mv1","mv2","mv3","chargeMin","chargeMax","Number","charge","toFixed","Math","max","min","forEach","dateMappings","val","index","keyDataMax","keyDataMin","dateMappingSelected","parseFloat","code","sensor_id","temperature","humidity","pressure","signal","adc","ts","originalmv1","originalmv2","originalmv3","altitude","mapping","console","log","intervalId","setInterval","clearInterval"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/utils/useSensorData.js"],"sourcesContent":["import React ,{useEffect,useState} from 'react'\nimport { useLocation } from 'react-router-dom';\nimport api from '../api/api'\n\nconst useSensorData = () => {\n    const [sensorData, setSensorData] = useState([]);\n    const [allDataSensor, setAllDataSensor] = useState([]);\n    let location = useLocation()\n    let userId = location.pathname.split('/')[2]\n    let userUid = JSON.parse(localStorage.getItem('user')).id\n    let fieldUid = localStorage.getItem('Field')\n    let url = '/sensor/sensor-update-data'\n    if((JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\") && location.pathname === `/Fields/${userId}/${fieldUid}`){\n      url = '/supplier/sensor-data'\n    }\n    if((JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\") && location.pathname === `/Dashboard-supplier`){\n        url = '/supplier/get-sensors-data'\n      }\n    let data = {\n        userUid : userUid,\n        fieldUid : fieldUid,\n        userId : userId\n      }\n      const getDataSensor = async () => {\n        try {\n            const response = await api.post(url, data);\n            const sensors = response.data.sensors;\n            const dataMappings = response.data.dataMapping;\n    \n            const updatedSensorData = sensors.map(sensor => {\n                const valaueAfterMapping = [];\n                let mappedCharge = 0\n                const date = sensor.time;\n                const vals = [sensor.mv1, sensor.mv2, sensor.mv3];\n                if (sensor) {\n                    const chargeMin = 73;\n                    const chargeMax = 100;\n\n                    mappedCharge = ((Number(sensor.charge) - chargeMin) / (chargeMax - chargeMin) * 100).toFixed(2);\n                    mappedCharge = Math.max(0, Math.min(100, mappedCharge));\n                }\n            dataMappings.forEach(dataMapping => {\n    const dateMappings = dataMapping.date;\n\n    vals.forEach((val, index) => {\n        const keyDataMax = `Mv${index + 1}_max`; // Correctly select Mv1_max, Mv2_max, or Mv3_max\n        const keyDataMin = `Mv${index + 1}_min`; // Correctly select Mv1_min, Mv2_min, or Mv3_min\n        const dateMappingSelected = dateMappings[`Mv${index + 1}_date`] || \"\";\n\n        if (dateMappingSelected !== \"\") {\n            // Ensure the value falls within the min-max range\n            if (val >= parseFloat(dataMapping.min[keyDataMin]) && val <= parseFloat(dataMapping.max[keyDataMax])) {\n                valaueAfterMapping[index] = (((parseFloat(val) - dataMapping.min[keyDataMin]) / (dataMapping.max[keyDataMax] - dataMapping.min[keyDataMin])) * 100).toFixed(2);\n            } else if (val < parseFloat(dataMapping.max[keyDataMax])) {\n                valaueAfterMapping[index] = 100;\n            } else if (val > parseFloat(dataMapping.min[keyDataMin])) {\n                valaueAfterMapping[index] = 0;\n            }\n        }\n    });\n});\n\n                return {\n                    code: sensor.code,\n                    sensor_id: sensor.sensor_id,\n                    time: sensor.time,\n                    temperature: sensor.temperature,\n                    humidity: sensor.humidity,\n                    pressure: sensor.pressure,\n                    charge: mappedCharge,\n                    signal : sensor.signal,\n                    adc: sensor.adc,\n                    ts: sensor.ts,\n                    mv1: valaueAfterMapping[0],\n                    mv2: valaueAfterMapping[1],\n                    mv3: valaueAfterMapping[2],\n                    originalmv1: sensor.mv1,\n                    originalmv2: sensor.mv2,\n                    originalmv3: sensor.mv3,\n                    altitude: sensor.altitude,\n                    mapping: response.data.dataMapping,\n                };\n            });\n    \n            setSensorData(sensors);\n            setAllDataSensor(updatedSensorData);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n    useEffect(() => {\n        getDataSensor();\n    \n        const intervalId = setInterval(() => {\n            getDataSensor();\n        }, 30000);\n    \n        return () => clearInterval(intervalId);\n    \n    }, []);\n    \n    return allDataSensor;\n}\n\nexport default useSensorData"],"mappings":"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"},"metadata":{},"sourceType":"module"}