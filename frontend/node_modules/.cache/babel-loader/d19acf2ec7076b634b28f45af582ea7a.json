{"ast":null,"code":"import axios from 'axios';\nvar api = axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL\n});\napi.interceptors.request.use(function (config) {\n  var userToken = JSON.parse(localStorage.getItem(\"token\"));\n\n  if (userToken) {\n    var token = userToken.token;\n    config.headers.Authorization = \"Bearer \".concat(token);\n  }\n\n  return config;\n}, function (error) {\n  Promise.reject(error);\n});\napi.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  var originalRequect = error.config;\n\n  if (error.response == undefined) {//@SAIF EDDINE\n    //add here HTML error server not available\n  }\n\n  if (error.response.status === 401 && originalRequect.url === \"/refresh\") {\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 401 && !originalRequect._retry) {\n    originalRequect._retry = true;\n    var refreshToken = localStorage.getItem(\"refreshToken\");\n    var user = JSON.parse(localStorage.getItem(\"user\"));\n    var option = {\n      email: user.email,\n      role: user.role,\n      uid: user.id,\n      refreshToken: refreshToken\n    };\n    return api.post(\"/refresh\", option).then(function (res) {\n      console.log(res.status);\n\n      if (res.status === 200) {\n        localStorage.setItem(\"token\", JSON.stringify({\n          token: res.data.token\n        }));\n        var userToken = JSON.parse(localStorage.getItem(\"token\"));\n        api.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(userToken.token);\n        return api(originalRequect);\n      }\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_BASE_URL","interceptors","request","use","config","userToken","JSON","parse","localStorage","getItem","token","headers","Authorization","error","Promise","reject","response","originalRequect","undefined","status","url","_retry","refreshToken","user","option","email","role","uid","id","post","then","res","console","log","setItem","stringify","data","defaults","common"],"sources":["C:/Restored Files/backoffice/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({ baseURL: process.env.REACT_APP_BASE_URL });\r\n\r\napi.interceptors.request.use((config) => {\r\n    \r\n    let userToken= JSON.parse(localStorage.getItem(\"token\"));\r\n      \r\n    if(userToken){\r\n    let token = userToken.token\r\n    config.headers.Authorization =  `Bearer ${token}`;\r\n    }\r\n\r\n    return config;\r\n},error => {\r\n    Promise.reject(error)\r\n});\r\n\r\napi.interceptors.response.use(function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    \r\n    return response;\r\n  }, function (error) {\r\n    const originalRequect = error.config\r\n    \r\n    if(error.response == undefined){\r\n        //@SAIF EDDINE\r\n        //add here HTML error server not available\r\n    }\r\n\r\n    if(error.response.status === 401 && originalRequect.url === \"/refresh\"){\r\n        return Promise.reject(error);\r\n    }\r\n    if(error.response.status === 401 && !originalRequect._retry){\r\n        originalRequect._retry = true;\r\n        const refreshToken = localStorage.getItem(\"refreshToken\")\r\n        const user = JSON.parse(localStorage.getItem(\"user\"))\r\n        let option = \r\n        {\r\n            email: user.email, role: user.role, uid: user.id, refreshToken: refreshToken\r\n        }\r\n        return api.post(`/refresh`,option)\r\n        .then((res) =>{\r\n            console.log(res.status)\r\n            if(res.status === 200 ){\r\n                localStorage.setItem(\"token\",JSON.stringify({ token: res.data.token }))\r\n                let userToken= JSON.parse(localStorage.getItem(\"token\"));\r\n                api.defaults.headers.common[\"Authorization\"] = `Bearer ${userToken.token}`;\r\n                return api(originalRequect)\r\n            }\r\n        })\r\n\r\n    }\r\n    return Promise.reject(error);\r\n    \r\n});\r\n\r\n\r\nexport default api"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAAEC,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAvB,CAAb,CAAZ;AAEAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAACC,MAAD,EAAY;EAErC,IAAIC,SAAS,GAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;;EAEA,IAAGJ,SAAH,EAAa;IACb,IAAIK,KAAK,GAAGL,SAAS,CAACK,KAAtB;IACAN,MAAM,CAACO,OAAP,CAAeC,aAAf,oBAA0CF,KAA1C;EACC;;EAED,OAAON,MAAP;AACH,CAVD,EAUE,UAAAS,KAAK,EAAI;EACPC,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,CAZD;AAcAlB,GAAG,CAACM,YAAJ,CAAiBe,QAAjB,CAA0Bb,GAA1B,CAA8B,UAAUa,QAAV,EAAoB;EAC9C;EACA;EAEA,OAAOA,QAAP;AACD,CALH,EAKK,UAAUH,KAAV,EAAiB;EAClB,IAAMI,eAAe,GAAGJ,KAAK,CAACT,MAA9B;;EAEA,IAAGS,KAAK,CAACG,QAAN,IAAkBE,SAArB,EAA+B,CAC3B;IACA;EACH;;EAED,IAAGL,KAAK,CAACG,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IAAiCF,eAAe,CAACG,GAAhB,KAAwB,UAA5D,EAAuE;IACnE,OAAON,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;EACH;;EACD,IAAGA,KAAK,CAACG,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IAAiC,CAACF,eAAe,CAACI,MAArD,EAA4D;IACxDJ,eAAe,CAACI,MAAhB,GAAyB,IAAzB;IACA,IAAMC,YAAY,GAAGd,YAAY,CAACC,OAAb,CAAqB,cAArB,CAArB;IACA,IAAMc,IAAI,GAAGjB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;IACA,IAAIe,MAAM,GACV;MACIC,KAAK,EAAEF,IAAI,CAACE,KADhB;MACuBC,IAAI,EAAEH,IAAI,CAACG,IADlC;MACwCC,GAAG,EAAEJ,IAAI,CAACK,EADlD;MACsDN,YAAY,EAAEA;IADpE,CADA;IAIA,OAAO3B,GAAG,CAACkC,IAAJ,aAAoBL,MAApB,EACNM,IADM,CACD,UAACC,GAAD,EAAQ;MACVC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACZ,MAAhB;;MACA,IAAGY,GAAG,CAACZ,MAAJ,KAAe,GAAlB,EAAuB;QACnBX,YAAY,CAAC0B,OAAb,CAAqB,OAArB,EAA6B5B,IAAI,CAAC6B,SAAL,CAAe;UAAEzB,KAAK,EAAEqB,GAAG,CAACK,IAAJ,CAAS1B;QAAlB,CAAf,CAA7B;QACA,IAAIL,SAAS,GAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAf;QACAd,GAAG,CAAC0C,QAAJ,CAAa1B,OAAb,CAAqB2B,MAArB,CAA4B,eAA5B,qBAAyDjC,SAAS,CAACK,KAAnE;QACA,OAAOf,GAAG,CAACsB,eAAD,CAAV;MACH;IACJ,CATM,CAAP;EAWH;;EACD,OAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AAEH,CAtCD;AAyCA,eAAelB,GAAf"},"metadata":{},"sourceType":"module"}