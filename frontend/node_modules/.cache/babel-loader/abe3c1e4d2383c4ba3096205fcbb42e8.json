{"ast":null,"code":"import _objectSpread from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\src\\\\admin\\\\ConfigurationCrops.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, ButtonGroup, Button, Progress, Modal, ModalHeader, ModalBody, BreadcrumbItem, Breadcrumb, Nav, NavItem, NavLink } from \"shards-react\";\nimport PageTitle from '../components/common/PageTitle';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Carousel } from 'react-responsive-carousel';\nimport countryState from '../data/gistfile.json';\nimport cartImg from '../images/pin.png';\nimport soil from '../images/soil.png';\nimport api from '../api/api';\nimport swal from 'sweetalert';\nimport Pagination from '../views/Pagination';\nimport moment from 'moment';\n\nvar ConfigurationCrops = function ConfigurationCrops() {\n  var _useState = useState(10),\n      _useState2 = _slicedToArray(_useState, 1),\n      cropsPerPage = _useState2[0];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      SearchName = _useState6[0],\n      setSearchName = _useState6[1];\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var history = useHistory();\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      kcByDays = _useState8[0],\n      setKcByDays = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      plantDateErr = _useState10[0],\n      setPlantDateErr = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      allCrops = _useState12[0],\n      setAllCrops = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      resultCalculKc = _useState14[0],\n      setResultCalculKc = _useState14[1];\n\n  var _useState15 = useState({\n    crop: '',\n    cropVariety: '',\n    init: \"\",\n    dev: \"\",\n    mid: \"\",\n    late: \"\",\n    plantDate: \"\",\n    rootMin: \"\",\n    rootMax: \"\",\n    kcInit: \"\",\n    kcDev: \"\",\n    kcMid: \"\",\n    kcLate: \"\",\n    allKcList: [],\n    fractionRuPratique: \"\",\n    cropAr: \"\",\n    cropEn: \"\",\n    cropPhoto: \"\",\n    totalHours: \"\",\n    minTemp: \"\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cropData = _useState16[0],\n      setCropData = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedFile = _useState18[0],\n      setSelectedFile = _useState18[1];\n\n  var _useState19 = useState({}),\n      _useState20 = _slicedToArray(_useState19, 2),\n      uploadedFile = _useState20[0],\n      setUploadedFile = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      toggle = _useState22[0],\n      setToggle = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      toggleEdit = _useState24[0],\n      setToggleEdit = _useState24[1];\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      singleCrop = _useState26[0],\n      setSingleCrop = _useState26[1];\n\n  var getCrops = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/crops/get-crops').then(function (response) {\n                if (response.data.type === \"success\") {\n                  var listCrops = response.data.Crops;\n                  setAllCrops(listCrops);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getCrops() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCrops();\n  }, []);\n\n  var getSingleCrop = function getSingleCrop(cropId, title) {\n    var data = {\n      crop_id: cropId\n    };\n    api.post('/crops/get-crop', data).then(function (res) {\n      var dataCrops = res.data.crop;\n      var date = dataCrops.plant_date;\n      setSingleCrop(dataCrops);\n      setCropData({\n        crop: dataCrops.crop\n      });\n      setCropData({\n        cropVariety: dataCrops.crop_variety\n      });\n      setCropData({\n        fractionRuPratique: dataCrops.practical_fraction\n      });\n      setCropData({\n        plantDate: date.slice(0, 10)\n      });\n      setCropData({\n        init: dataCrops.init\n      });\n      setCropData({\n        dev: dataCrops.dev\n      });\n      setCropData({\n        mid: dataCrops.mid\n      });\n      setCropData({\n        late: dataCrops.late\n      });\n      setCropData({\n        rootMin: dataCrops.root_min\n      });\n      setCropData({\n        rootMax: dataCrops.root_max\n      });\n      setCropData({\n        minTemp: dataCrops.temperature\n      });\n      setCropData({\n        totalHours: dataCrops.hours\n      });\n      setCropData({\n        kcInit: dataCrops.kc_init\n      });\n      setCropData({\n        kcDev: dataCrops.kc_dev\n      });\n      setCropData({\n        kcMid: dataCrops.kc_mid\n      });\n      setCropData({\n        kcLate: dataCrops.kc_late\n      });\n      setCropData({\n        allKcList: dataCrops.all_kc\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (title === 'Edit') {\n      setToggleEdit(!toggleEdit);\n    }\n  };\n\n  var onFileChange = function onFileChange(e) {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  var onFileUploadAdd = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var formData, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('photo', selectedFile);\n              formData.append('crop', cropData.crop);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return api.post('/crop/upload-photo', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n\n            case 6:\n              res = _context2.sent;\n              setUploadedFile(res.data);\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 10]]);\n    }));\n\n    return function onFileUploadAdd() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onFileUploadEdit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var formData, res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('photo', selectedFile);\n              formData.append('crop', singleCrop.crop);\n              _context3.prev = 3;\n              _context3.next = 6;\n              return api.post('/crop/upload-photo', formData, {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              });\n\n            case 6:\n              res = _context3.sent;\n              setUploadedFile(res.data);\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.error(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10]]);\n    }));\n\n    return function onFileUploadEdit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var isValidate = function isValidate() {\n    var plantDateErr = '';\n\n    if (!cropData.plantDate) {\n      plantDateErr = 'Please select a date !';\n      setPlantDateErr(plantDateErr);\n    }\n\n    if (plantDateErr) {\n      setPlantDateErr(plantDateErr);\n      return false;\n    }\n\n    return true;\n  };\n\n  var addCrops = function addCrops() {\n    var isValid = isValidate();\n    var data = {\n      crop: cropData.crop,\n      crop_variety: cropData.cropVariety,\n      plant_date: cropData.plantDate,\n      init: cropData.init,\n      dev: cropData.dev,\n      mid: cropData.mid,\n      late: cropData.late,\n      kc_init: cropData.kcInit,\n      kc_dev: cropData.kcDev,\n      kc_mid: cropData.kcMid,\n      kc_late: cropData.kcLate,\n      root_max: cropData.rootMax,\n      root_min: cropData.rootMin,\n      hours: cropData.totalHours,\n      temperature: cropData.minTemp,\n      all_kc: resultCalculKc,\n      practical_fraction: cropData.fractionRuPratique,\n      crop_ar: cropData.cropAr,\n      crop_en: cropData.cropEn\n    };\n    api.post('/crops/add-crops', data).then(function (response) {\n      if (response && response.data.type === \"success\") {\n        swal(\"\".concat(t('Crop Added')), {\n          icon: \"success\"\n        });\n        setToggle(false);\n        getCrops();\n      }\n\n      if (response && response.data.type === \"danger\") {\n        swal(\"\".concat(t('Crop Added')), {\n          icon: \"error\"\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleEdit = function handleEdit(cropId) {\n    var isValid = isValidate();\n    var data = {\n      crop_id: cropId,\n      crop: cropData.crop,\n      crop_variety: cropData.cropVariety,\n      plant_date: cropData.plantDate,\n      init: cropData.init,\n      dev: cropData.dev,\n      mid: cropData.mid,\n      late: cropData.late,\n      kc_init: cropData.kcInit,\n      kc_dev: cropData.kcDev,\n      kc_mid: cropData.kcMid,\n      kc_late: cropData.kcLate,\n      root_max: cropData.rootMax,\n      root_min: cropData.rootMin,\n      hours: cropData.totalHours,\n      temperature: cropData.minTemp,\n      all_kc: resultCalculKc,\n      practical_fraction: cropData.fractionRuPratique\n    };\n    api.post('/crops/edit-crop', data).then(function (response) {\n      if (response.data.type == \"success\") {\n        swal(\" Crop has been updated\", {\n          icon: \"success\"\n        });\n        setToggleEdit(false);\n        getCrops();\n      }\n\n      if (response.data.type && response.data.type == \"danger\") {\n        swal({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'error_edit_crop'\n        });\n        return false;\n      }\n    }).catch(function (error) {\n      swal({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'error_edit_crop'\n      });\n    });\n  };\n\n  console.log(cropData);\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(cropId) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              data = {\n                crop_id: cropId\n              };\n              _context4.next = 3;\n              return api.delete('/crops/delete-crop', {\n                data: data\n              }).then(function (response) {\n                if (response.data.type && response.data.type == \"danger\") {\n                  swal({\n                    title: \"Cannot Delete Crop\",\n                    icon: \"warning\"\n                  });\n                }\n\n                if (response.data.type == \"success\") {\n                  getCrops();\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Cannot Delete Crop\",\n                  icon: \"error\",\n                  text: 'error_delete_crop'\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var confirmDelete = function confirmDelete(cropId) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this crop!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (Delete) {\n      if (Delete) {\n        handleDelete(cropId);\n        swal(\" Crop has been deleted!\", {\n          icon: \"success\"\n        });\n      }\n    }).catch(function (error) {\n      swal({\n        title: \"Cannot Delete Crop\",\n        icon: \"error\",\n        text: 'error_delete_crop'\n      });\n    });\n  };\n\n  var filteredCrops = allCrops.filter(function (crops) {\n    if (SearchName !== '') {\n      return crops.crop.toLowerCase().includes(SearchName.toLowerCase());\n    }\n\n    return crops;\n  });\n  var indexOfLastPost = currentPage * cropsPerPage;\n  var indexOfFirstPost = indexOfLastPost - cropsPerPage;\n  var currentCrops = filteredCrops.slice(indexOfFirstPost, indexOfLastPost);\n\n  var handleKcByDays = function handleKcByDays() {\n    var DataCropKc = [];\n\n    if (cropData.init != \"\" && cropData.dev != \"\" && cropData.mid != \"\" && cropData.late != \"\" && cropData.kcInit != \"\" && cropData.kcDev != \"\" && cropData.kcMid != \"\" && cropData.kcLate != \"\") {\n      DataCropKc = [{\n        \"period\": cropData.init,\n        \"kc\": cropData.kcInit\n      }, {\n        \"period\": cropData.dev,\n        \"kc\": cropData.kcDev\n      }, {\n        \"period\": cropData.mid,\n        \"kc\": cropData.kcMid\n      }, {\n        \"period\": cropData.late,\n        \"kc\": cropData.kcLate\n      }];\n    }\n\n    setKcByDays(DataCropKc);\n  };\n\n  useEffect(function () {\n    handleKcByDays();\n  }, [cropData]);\n\n  var onChangeHandler = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(e, idx) {\n      var clone, obj;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log(e); //modifier le setResultCalculKc pour ensuite ajouter le resultCalculKc dans l'action save pour inserer un objet clé (1,2,3..) valeur (kc dans le tableau html) dans la base de données colonne kc par jour\n              // setResultCalculKc(state => ([...state ,{['day'] : day ,  ['kc'] : value }]), [])\n\n              clone = _toConsumableArray(cropData.allKcList);\n              obj = clone[idx];\n              obj.kc = e.target.value;\n              clone[idx] = obj;\n              setResultCalculKc(_toConsumableArray(clone));\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function onChangeHandler(_x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var KcResults = [];\n\n  var tableConfigKc = function tableConfigKc(async) {\n    var periods = [];\n    var KcValues = [];\n    useEffect(function () {\n      setResultCalculKc(KcResults);\n    }, [kcByDays]);\n\n    if (kcByDays.length > 0) {\n      var _ret = function () {\n        kcByDays.map(function (days) {\n          periods.push(days.period);\n          KcValues.push(days.kc);\n        });\n        var elements = [];\n        var result = 0;\n        var arrayPeriod = periods;\n        var nextKc = 0;\n        var nextPeriod = 0;\n        var currentPeriod = 0;\n        var j = 0;\n        var compteur = 1;\n        var ligne = 0;\n        var elment = {};\n        var resultFormule = [];\n\n        for (var i = 0; i < arrayPeriod.length; i++) {\n          if (i == 0) {\n            j = 1;\n          }\n\n          if (i > 0) {\n            j = arrayPeriod[i - 1];\n          }\n\n          if (i + 1 in arrayPeriod === true) {\n            nextKc = KcValues[i + 1];\n            nextPeriod = arrayPeriod[i + 1];\n          } else {\n            nextKc = 0;\n            nextPeriod = 0;\n          }\n\n          currentPeriod = arrayPeriod[i];\n\n          for (var n = 1; n <= currentPeriod; n++) {\n            ligne = compteur++;\n\n            if (nextKc > 0 && nextPeriod > 0) {\n              result = parseFloat((nextKc - KcValues[i]) / nextPeriod) + parseFloat(KcValues[i]);\n              console.log(\"\".concat(parseFloat(KcValues[i]), \", \").concat(nextKc, \",  \").concat(nextPeriod, \"  , \").concat(parseFloat(KcValues[i])));\n            } else {\n              result = parseFloat(KcValues[i]);\n            } //@TODO ajouter le tableau dans setResultCalculKc\n\n\n            elment = {\n              \"day\": ligne,\n              \"kc\": parseFloat(result).toFixed(1)\n            }; //object result to save in database\n\n            KcResults.push(elment);\n            var dates = moment(cropData.plantDate).add(ligne - 1, 'days').format(\"YYYY-MM-DD\");\n            elements.push( /*#__PURE__*/React.createElement(\"tbody\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"tr\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 25\n              }\n            }, ligne), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 25\n              }\n            }, dates), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"input\", {\n              name: ligne,\n              key: ligne,\n              className: \"my-1\",\n              value: result,\n              onChange: function onChange(e) {\n                return onChangeHandler(e.target.value, ligne);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 29\n              }\n            })))));\n          }\n        }\n\n        return {\n          v: elements\n        };\n      }();\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('Crops Configuration'),\n    subtitle: t('Crops Configuration'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('search'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    value: SearchName,\n    onChange: function onChange(e) {\n      return setSearchName(e.target.value);\n    },\n    id: \"search\",\n    placeholder: \"Search By Name \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('my actions'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"py-2 d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      setToggle(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 25\n    }\n  }, \"Add Crop\"))), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 29\n    }\n  }, \"Crops Info\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 33\n    }\n  }, t('Crop')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 33\n    }\n  }, t('Planting Date')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 25\n    }\n  }, currentCrops.map(function (crop) {\n    var plantDate = moment(crop.plant_date).locale('En').format('MMM Do YYYY ');\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 45\n      }\n    }, crop.crop), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 45\n      }\n    }, plantDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Edit\",\n      onClick: function onClick() {\n        getSingleCrop(crop.id, 'Edit');\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 138\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"Delete\",\n      onClick: function onClick() {\n        confirmDelete(crop.id);\n      },\n      squared: true,\n      theme: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 149\n      }\n    }, \"\\uE872\")))));\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-4 justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: cropsPerPage,\n    totalUsers: allCrops.length,\n    paginate: paginate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    centered: true,\n    open: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      addCrops();\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 37\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 37\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"7\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 45\n    }\n  }, \"Crop Type\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.crop,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        crop: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 45\n    }\n  }, \"Crop Type (Ar)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.cropAr,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        cropAr: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 45\n    }\n  }, \"Crop Type (En)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.cropEn,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        cropEn: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"plantDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 45\n    }\n  }, \"Planting Date\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"plantDate\",\n    placeholder: \"Planting Date\",\n    type: \"date\",\n    className: \"form-control form-control-md \".concat(plantDateErr ? 'is-invalid' : \"\"),\n    value: cropData.plantDate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        plantDate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 46\n    }\n  }, plantDateErr))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Practical Fraction Ru\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 41\n    }\n  }, \"Practical Fraction Ru\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Practical Fraction Ru\",\n    placeholder: \"Practical Fraction Ru\",\n    value: cropData.fractionRuPratique,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        fractionRuPratique: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"_hours\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 5\n    }\n  }, t('Temp.')), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"_hours\",\n    placeholder: t('Temp.'),\n    value: cropData.minTemp,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        minTemp: e.target.value\n      }));\n    },\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 5\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"_hours\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 5\n    }\n  }, \"Number of hours\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"_hours\",\n    placeholder: \"Number of hours of cold\",\n    value: cropData.totalHours,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        totalHours: e.target.value\n      }));\n    },\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 5\n    }\n  })))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"5\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"pt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 29\n    }\n  }, \"Kc\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcInit,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcInit: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcDev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcDev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcMid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcMid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcLate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcLate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 29\n    }\n  }, \"Stage (Days)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Init\",\n    className: \"m-1\",\n    value: cropData.init,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        init: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Dev\",\n    value: cropData.dev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        dev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Mid\",\n    className: \"m-1\",\n    value: cropData.mid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        mid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Late\",\n    value: cropData.late,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        late: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 29\n    }\n  }, \"Roots\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Min\",\n    className: \"m-1\",\n    value: cropData.rootMin,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMin: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Max\",\n    value: cropData.rootMax,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMax: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-top mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 37\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 37\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 37\n    }\n  }, t('Kc')))), tableConfigKc()))))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    centered: true,\n    open: toggleEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      handleEdit(singleCrop.id);\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 37\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      setToggleEdit(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 37\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"7\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 45\n    }\n  }, \"Crop Type\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.crop,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        crop: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 45\n    }\n  }, \"Crop Type (Ar)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.cropAr,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        cropAr: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 45\n    }\n  }, \"Crop Type (En)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.cropEn,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        cropEn: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 45\n    }\n  }, \"Crop Photo\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    type: \"file\",\n    placeholder: \"Crop Photo\" // value={cropData.cropPhoto}\n    ,\n    onChange: onFileChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 874,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      background: \"#E5E5E5\",\n      border: \"2px solid #d7d7d7\",\n      borderRadius: 5,\n      padding: 3,\n      margin: 3\n    },\n    onClick: onFileUploadEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 45\n    }\n  }, \"Upload\"), uploadedFile ? /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 61\n    }\n  }, uploadedFile.message) : null)), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"plantDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 45\n    }\n  }, \"Planting Date\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"plantDate\",\n    placeholder: \"Planting Date\",\n    type: \"date\",\n    className: \"form-control form-control-md \".concat(plantDateErr ? 'is-invalid' : \"\"),\n    value: cropData.plantDate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        plantDate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 46\n    }\n  }, plantDateErr))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Practical Fraction Ru\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 41\n    }\n  }, \"Practical Fraction Ru\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Practical Fraction Ru\",\n    placeholder: \"Practical Fraction Ru\",\n    value: cropData.fractionRuPratique,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        fractionRuPratique: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"_hours\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 41\n    }\n  }, t('Temp.')), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"_hours\",\n    placeholder: t('Temp.'),\n    value: cropData.minTemp,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        minTemp: e.target.value\n      }));\n    },\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"_hours\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 41\n    }\n  }, \"Number of hours of cold\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"_hours\",\n    placeholder: \"Number of hours of cold\",\n    value: cropData.totalHours,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        totalHours: e.target.value\n      }));\n    },\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"5\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"pt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 29\n    }\n  }, \"Kc\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcInit,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcInit: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcDev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcDev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcMid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcMid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcLate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcLate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 29\n    }\n  }, \"Stage (Days)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Init\",\n    className: \"m-1\",\n    value: cropData.init,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        init: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Dev\",\n    value: cropData.dev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        dev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Mid\",\n    className: \"m-1\",\n    value: cropData.mid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        mid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Late\",\n    value: cropData.late,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        late: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 996,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 29\n    }\n  }, \"Roots\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Min\",\n    className: \"m-1\",\n    value: cropData.rootMin,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMin: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Max\",\n    value: cropData.rootMax,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMax: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-top mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1021,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 37\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 37\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 37\n    }\n  }, t('Kc')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 29\n    }\n  }, cropData.allKcList && cropData.allKcList.map(function (result, indx) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 45\n      }\n    }, result.day), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: indx,\n      key: indx,\n      className: \"my-1\",\n      defaultValue: parseFloat(result.kc).toFixed(2),\n      onChange: function onChange(e) {\n        return onChangeHandler(e, indx);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1041,\n        columnNumber: 45\n      }\n    })));\n  }))))))));\n};\n\nexport default ConfigurationCrops;","map":{"version":3,"names":["React","useEffect","useState","Container","Card","CardHeader","CardBody","ListGroup","ListGroupItem","Row","Col","Form","FormGroup","FormInput","FormSelect","FormTextarea","ButtonGroup","Button","Progress","Modal","ModalHeader","ModalBody","BreadcrumbItem","Breadcrumb","Nav","NavItem","NavLink","PageTitle","useTranslation","Link","useHistory","useParams","Carousel","countryState","cartImg","soil","api","swal","Pagination","moment","ConfigurationCrops","cropsPerPage","currentPage","setCurrentPage","SearchName","setSearchName","paginate","pageNumber","t","i18n","history","kcByDays","setKcByDays","plantDateErr","setPlantDateErr","allCrops","setAllCrops","resultCalculKc","setResultCalculKc","crop","cropVariety","init","dev","mid","late","plantDate","rootMin","rootMax","kcInit","kcDev","kcMid","kcLate","allKcList","fractionRuPratique","cropAr","cropEn","cropPhoto","totalHours","minTemp","cropData","setCropData","selectedFile","setSelectedFile","uploadedFile","setUploadedFile","toggle","setToggle","toggleEdit","setToggleEdit","singleCrop","setSingleCrop","getCrops","get","then","response","data","type","listCrops","Crops","catch","error","console","log","getSingleCrop","cropId","title","crop_id","post","res","dataCrops","date","plant_date","crop_variety","practical_fraction","slice","root_min","root_max","temperature","hours","kc_init","kc_dev","kc_mid","kc_late","all_kc","onFileChange","e","target","files","onFileUploadAdd","formData","FormData","append","headers","onFileUploadEdit","isValidate","addCrops","isValid","crop_ar","crop_en","icon","handleEdit","text","handleDelete","delete","confirmDelete","buttons","dangerMode","Delete","filteredCrops","filter","crops","toLowerCase","includes","indexOfLastPost","indexOfFirstPost","currentCrops","handleKcByDays","DataCropKc","onChangeHandler","idx","clone","obj","kc","value","KcResults","tableConfigKc","async","periods","KcValues","length","map","days","push","period","elements","result","arrayPeriod","nextKc","nextPeriod","currentPeriod","j","compteur","ligne","elment","resultFormule","i","n","parseFloat","toFixed","dates","add","format","locale","id","display","justifyContent","background","border","borderRadius","padding","margin","fontWeight","message","indx","day"],"sources":["C:/Restored Files/backoffice/frontend/src/admin/ConfigurationCrops.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Container, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, ButtonGroup, Button, Progress, Modal, ModalHeader, ModalBody, BreadcrumbItem, Breadcrumb, Nav, NavItem, NavLink } from \"shards-react\";\r\nimport PageTitle from '../components/common/PageTitle';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link , useHistory , useParams } from 'react-router-dom';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport countryState from '../data/gistfile.json'\r\nimport cartImg from '../images/pin.png'\r\nimport soil from '../images/soil.png'\r\nimport api from '../api/api';\r\nimport swal from 'sweetalert';\r\nimport Pagination from '../views/Pagination';\r\nimport moment from 'moment';\r\n\r\nconst ConfigurationCrops = () => {\r\n\r\n    const [cropsPerPage] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    const [SearchName, setSearchName] = useState('')\r\n\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const history = useHistory()\r\n\r\n    const [kcByDays,setKcByDays] = useState([])\r\n\r\n    const  [plantDateErr,setPlantDateErr] = useState('')\r\n\r\n    const [allCrops,setAllCrops] = useState([])\r\n    const [resultCalculKc,setResultCalculKc] = useState([])\r\n\r\n    const [cropData,setCropData] = useState({\r\n        crop : '',\r\n        cropVariety : '',\r\n        init : \"\",\r\n        dev :\"\",\r\n        mid :\"\",\r\n        late :\"\",\r\n        plantDate :\"\",\r\n        rootMin : \"\",\r\n        rootMax : \"\",\r\n        kcInit :\"\",\r\n        kcDev : \"\",\r\n        kcMid :\"\",\r\n        kcLate :\"\",\r\n        allKcList : [],\r\n        fractionRuPratique: \"\",\r\n        cropAr : \"\",\r\n        cropEn : \"\",\r\n        cropPhoto :\"\",\r\n        totalHours : \"\",\r\n        minTemp: \"\"\r\n    })\r\n\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [uploadedFile, setUploadedFile] = useState({});\r\n  \r\n   \r\n\r\n    const [toggle ,setToggle] = useState(false)\r\n    const [toggleEdit ,setToggleEdit] = useState(false)\r\n    const [singleCrop ,setSingleCrop] = useState({})\r\n\r\n    const getCrops = async () => {\r\n            try {\r\n                    await api.get('/crops/get-crops')\r\n                    .then(response=>{\r\n                        if(response.data.type === \"success\"){\r\n                            let listCrops = response.data.Crops\r\n                            setAllCrops(listCrops)\r\n\r\n                        }\r\n                    }).catch(error =>{\r\n                        console.log(error)\r\n                    })\r\n                    \r\n            } catch (error) {   \r\n                console.log(error)\r\n            }\r\n    }\r\n \r\n    useEffect(() => {\r\n        getCrops()\r\n    }, [])\r\n\r\n    const getSingleCrop =  (cropId,title) => {\r\n\r\n        let data = {\r\n            crop_id: cropId,\r\n        }\r\n\r\n         api.post('/crops/get-crop', data)\r\n            .then(res => {\r\n                let dataCrops = res.data.crop\r\n                let date = dataCrops.plant_date\r\n                setSingleCrop(dataCrops)\r\n                setCropData({crop : dataCrops.crop})\r\n                setCropData({cropVariety: dataCrops.crop_variety})\r\n                setCropData({fractionRuPratique: dataCrops.practical_fraction})\r\n                setCropData({plantDate: date.slice(0,10)})\r\n                setCropData({init : dataCrops.init})\r\n                setCropData({dev: dataCrops.dev})\r\n                setCropData({mid : dataCrops.mid})\r\n                setCropData({late: dataCrops.late})\r\n                setCropData({rootMin : dataCrops.root_min})\r\n                setCropData({rootMax: dataCrops.root_max})\r\n                setCropData({minTemp: dataCrops.temperature})\r\n                setCropData({totalHours: dataCrops.hours})\r\n                setCropData({kcInit : dataCrops.kc_init})\r\n                setCropData({kcDev: dataCrops.kc_dev})\r\n                setCropData({kcMid : dataCrops.kc_mid})\r\n                setCropData({kcLate: dataCrops.kc_late})\r\n                setCropData({allKcList : dataCrops.all_kc})\r\n            }).catch(error => {\r\n                console.log(error)\r\n\r\n            })\r\n            if(title === 'Edit'){\r\n                setToggleEdit(!toggleEdit)\r\n\r\n            }\r\n\r\n    }\r\n    const onFileChange = e => {\r\n        setSelectedFile(e.target.files[0]);\r\n      };\r\n      const onFileUploadAdd = async () => {\r\n        const formData = new FormData();\r\n      formData.append('photo', selectedFile);\r\n      formData.append('crop', cropData.crop);\r\n\r\n      try {\r\n        const res = await api.post('/crop/upload-photo', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          });\r\n        setUploadedFile(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n      const onFileUploadEdit = async () => {\r\n          const formData = new FormData();\r\n        formData.append('photo', selectedFile);\r\n        formData.append('crop', singleCrop.crop);\r\n  \r\n        try {\r\n          const res = await api.post('/crop/upload-photo', formData, {\r\n              headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n              },\r\n            });\r\n          setUploadedFile(res.data);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n    const isValidate = () => {\r\n        let plantDateErr = ''\r\n        if(!cropData.plantDate){\r\n            plantDateErr = 'Please select a date !'\r\n            setPlantDateErr(plantDateErr)\r\n        }\r\n        if(plantDateErr){\r\n            setPlantDateErr(plantDateErr)\r\n            return false\r\n        }\r\n        return true\r\n    } \r\n\r\n    const addCrops = () => {\r\n        let isValid = isValidate()\r\n        let data = {\r\n            crop : cropData.crop ,\r\n            crop_variety :cropData.cropVariety,\r\n            plant_date : cropData.plantDate,\r\n            init : cropData.init,\r\n            dev : cropData.dev,\r\n            mid: cropData.mid,\r\n            late : cropData.late,\r\n            kc_init : cropData.kcInit,\r\n            kc_dev : cropData.kcDev,\r\n            kc_mid: cropData.kcMid,\r\n            kc_late : cropData.kcLate,\r\n            root_max : cropData.rootMax,\r\n            root_min : cropData.rootMin,\r\n            hours:cropData.totalHours,\r\n            temperature:cropData.minTemp,\r\n            all_kc : resultCalculKc,\r\n            practical_fraction : cropData.fractionRuPratique,\r\n            crop_ar :cropData.cropAr,\r\n            crop_en:cropData.cropEn,\r\n        }\r\n            api.post('/crops/add-crops',data)\r\n            .then(response=>{\r\n                if(response && response.data.type === \"success\"){\r\n                    swal(`${t('Crop Added')}`, { icon: \"success\" });\r\n                    setToggle(false)\r\n                    getCrops()\r\n                }\r\n                if(response && response.data.type === \"danger\"){\r\n                    swal(`${t('Crop Added')}`, { icon: \"error\" });\r\n                }\r\n            }).catch(error=>{\r\n                console.log(error)\r\n            })\r\n\r\n        \r\n    }\r\n\r\n    const handleEdit = (cropId) => {\r\n        let isValid = isValidate()\r\n\r\n        let data = {\r\n            crop_id : cropId,\r\n            crop : cropData.crop ,\r\n            crop_variety :cropData.cropVariety,\r\n            plant_date : cropData.plantDate,\r\n            init : cropData.init,\r\n            dev : cropData.dev,\r\n            mid: cropData.mid,\r\n            late : cropData.late,\r\n            kc_init : cropData.kcInit,\r\n            kc_dev : cropData.kcDev,\r\n            kc_mid: cropData.kcMid,\r\n            kc_late : cropData.kcLate,\r\n            root_max : cropData.rootMax,\r\n            root_min : cropData.rootMin,\r\n            hours:cropData.totalHours,\r\n            temperature:cropData.minTemp,\r\n            all_kc : resultCalculKc,\r\n            practical_fraction : cropData.fractionRuPratique\r\n\r\n        }\r\n    \r\n        api.post('/crops/edit-crop', data)\r\n          .then(response => {\r\n            if (response.data.type == \"success\") {\r\n              swal(\" Crop has been updated\", {\r\n                icon: \"success\",\r\n              });\r\n              setToggleEdit(false)\r\n              getCrops();\r\n            }\r\n            if (response.data.type && response.data.type == \"danger\") {\r\n              swal({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'error_edit_crop'\r\n              })\r\n              return false;\r\n            }\r\n          }).catch(error => {\r\n            swal({\r\n              icon: 'error',\r\n              title: 'Oops...',\r\n              text: 'error_edit_crop'\r\n            })\r\n          })\r\n          \r\n      }\r\n    console.log(cropData)\r\n\r\n      const handleDelete = async cropId => {\r\n\r\n    \r\n        let data = {\r\n            crop_id: cropId,\r\n        }\r\n        await api.delete('/crops/delete-crop', { data: data })\r\n            .then(response => {\r\n                if (response.data.type && response.data.type == \"danger\") {\r\n                    swal({\r\n                        title: \"Cannot Delete Crop\",\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n                if (response.data.type == \"success\") {\r\n                    getCrops();\r\n                   \r\n                }\r\n            }).catch(error => {\r\n                swal({\r\n                    title: \"Cannot Delete Crop\",\r\n                    icon: \"error\",\r\n                    text: 'error_delete_crop'\r\n                    \r\n                });\r\n            })\r\n        }\r\n    \r\n    const confirmDelete = cropId => {\r\n    \r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this crop!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((Delete) => {\r\n                if (Delete) {\r\n                    handleDelete(cropId)\r\n                    swal(\" Crop has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                swal({\r\n                    title: \"Cannot Delete Crop\",\r\n                    icon: \"error\",\r\n                    text: 'error_delete_crop'\r\n    \r\n                });\r\n            })\r\n    \r\n    }  \r\n\r\n\r\n    const filteredCrops = allCrops.filter(crops => {\r\n        if (SearchName !== '') {\r\n            return (\r\n                crops.crop.toLowerCase().includes(SearchName.toLowerCase())\r\n            )\r\n        }\r\n        \r\n        return crops\r\n    })\r\n\r\n    const indexOfLastPost = currentPage * cropsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - cropsPerPage;\r\n    const currentCrops = filteredCrops.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n            \r\n\r\n    const handleKcByDays = () => {\r\n        let DataCropKc = []\r\n        if(cropData.init != \"\" && cropData.dev != \"\" && cropData.mid != \"\" && cropData.late != \"\" &&\r\n         cropData.kcInit != \"\" && cropData.kcDev != \"\" && cropData.kcMid != \"\" && cropData.kcLate != \"\"\r\n        \r\n        ){\r\n            DataCropKc = [\r\n                { \r\n                    \"period\": cropData.init,\r\n                    \"kc\" : cropData.kcInit\r\n                },\r\n                { \r\n                    \"period\": cropData.dev,\r\n                    \"kc\" : cropData.kcDev\r\n                },\r\n                { \r\n                    \"period\": cropData.mid,\r\n                    \"kc\" : cropData.kcMid\r\n                },\r\n                { \r\n                    \"period\": cropData.late,\r\n                    \"kc\" : cropData.kcLate\r\n                }]\r\n        }\r\n           \r\n        \r\n                \r\n       setKcByDays(DataCropKc)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        handleKcByDays()\r\n    },[cropData])\r\n\r\n    const onChangeHandler = async (e,idx) => {\r\n        console.log(e)\r\n        //modifier le setResultCalculKc pour ensuite ajouter le resultCalculKc dans l'action save pour inserer un objet clé (1,2,3..) valeur (kc dans le tableau html) dans la base de données colonne kc par jour\r\n        // setResultCalculKc(state => ([...state ,{['day'] : day ,  ['kc'] : value }]), [])\r\n       let clone = [...cropData.allKcList];\r\n        let obj = clone[idx];\r\n        obj.kc = e.target.value;\r\n        clone[idx] = obj;\r\n        setResultCalculKc([...clone])\r\n    }\r\n    \r\n    let KcResults = [];\r\n    const tableConfigKc = (async) => {\r\n        let periods = [];\r\n        let KcValues = [];\r\n        useEffect(()=>{\r\n            setResultCalculKc(KcResults)\r\n        },[kcByDays])\r\n        if(kcByDays.length > 0){\r\n            kcByDays.map(days=>{\r\n                periods.push(days.period)\r\n                KcValues.push(days.kc)\r\n            })\r\n            \r\n            \r\n        let elements = []\r\n        let result = 0\r\n        let arrayPeriod = periods\r\n        let nextKc = 0\r\n        let nextPeriod = 0\r\n        let currentPeriod = 0 \r\n        let j = 0\r\n        let compteur = 1;\r\n        let ligne = 0;\r\n        let elment = {}\r\n        let resultFormule =[];\r\n        for (let i = 0; i < arrayPeriod.length; i++) {\r\n            \r\n            if(i==0){\r\n                j=1 \r\n            } \r\n            if(i>0){\r\n                j=arrayPeriod[i-1]\r\n                \r\n            }\r\n\r\n            if( i+1 in arrayPeriod === true){\r\n                nextKc = KcValues[i+1]\r\n                nextPeriod = arrayPeriod[i+1]\r\n            }\r\n            else {\r\n                nextKc = 0\r\n                nextPeriod = 0\r\n            }\r\n            currentPeriod=arrayPeriod[i]\r\n        for (let n = 1 ; n <= currentPeriod ; n++){\r\n            ligne = compteur++;\r\n\r\n            if(nextKc > 0 && nextPeriod > 0){\r\n                    result = (parseFloat((nextKc - KcValues[i]) / (nextPeriod) )  + parseFloat(KcValues[i]))\r\n                    console.log(`${parseFloat(KcValues[i])}, ${nextKc},  ${nextPeriod}  , ${parseFloat(KcValues[i])}`)\r\n\r\n            }else{\r\n                result = parseFloat(KcValues[i]);\r\n            }\r\n            \r\n            //@TODO ajouter le tableau dans setResultCalculKc\r\n            elment = {\r\n                \"day\": ligne,\r\n                \"kc\": parseFloat(result).toFixed(1)\r\n                 }\r\n            //object result to save in database\r\n            KcResults.push(elment)\r\n            let dates = moment(cropData.plantDate).add(ligne - 1 , 'days').format(\"YYYY-MM-DD\")\r\n            elements.push(\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{ligne}</td>  \r\n                        <td>{dates}</td> \r\n                        <td>\r\n                            <input\r\n                                     name={ligne}\r\n                                     key={ligne}\r\n                                    className='my-1'\r\n                                    value={result}\r\n                                    onChange={(e) => onChangeHandler(e.target.value , ligne)}\r\n                            />    \r\n                        </td> \r\n                    </tr>\r\n\r\n                </tbody>\r\n                );\r\n        }   \r\n        }\r\n        return elements\r\n    }\r\n    }\r\n    return (\r\n        <>\r\n        <Container className=\"p-4\">\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle\r\n                    sm=\"4\"\r\n                    title={t('Crops Configuration')}\r\n                    subtitle={t('Crops Configuration')}\r\n                    className=\"text-sm-left\"\r\n                />\r\n            </Row>\r\n            <Row>\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        subtitle={t('search')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Row form className=\"d-flex justify-content-center\">\r\n                    <Col md=\"3\" className=\"form-group\">\r\n                        <FormGroup>\r\n                            <div className=\"d-flex\">\r\n                                <FormInput\r\n                                    value={SearchName}\r\n                                    onChange={(e) => setSearchName(e.target.value)}\r\n                                    id=\"search\"\r\n                                    placeholder=\"Search By Name \" />\r\n\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        subtitle={t('my actions')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Row form className=\"py-2 d-flex justify-content-center\">\r\n                    <ButtonGroup>\r\n                        <Button outline onClick={() => {setToggle(true)}}>Add Crop</Button>\r\n                    </ButtonGroup>\r\n\r\n                </Row>\r\n                <Card>\r\n                    <CardHeader className=\"border-bottom\">\r\n                        <div>\r\n                            <h5>\r\n                                Crops Info\r\n\r\n                            </h5>\r\n\r\n                        </div>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                    <table className=\"table mb-0 text-center\">\r\n                        <thead className=\"bg-light\">\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Crop')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Planting Date')}</th>\r\n                                <th scope=\"col\" className=\"border-0\"></th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                currentCrops.map(crop=>{\r\n                                    let plantDate = moment(crop.plant_date).locale('En').format('MMM Do YYYY ')\r\n                                    return(\r\n                                        <tr>\r\n                                            <td>{crop.crop}</td>\r\n                                            <td>{plantDate}</td>\r\n\r\n\r\n                                            <td>\r\n                                               \r\n                                                        <ButtonGroup size=\"sm\" className=\"mr-2\">\r\n                                                            <Button title=\"Edit\" onClick={() => {getSingleCrop(crop.id,'Edit')}} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\r\n                                                            <Button title=\"Delete\" onClick={() => {confirmDelete(crop.id) }} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\r\n                                                        </ButtonGroup>\r\n                                                \r\n\r\n                                            </td>\r\n                                            \r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n\r\n\r\n                        </tbody>\r\n                    </table>\r\n                    </CardBody>\r\n                </Card>\r\n                <Row className=\"py-4 justify-content-center\">\r\n                    <Pagination usersPerPage={cropsPerPage} totalUsers={allCrops.length} paginate={paginate} />\r\n\r\n                </Row>\r\n        </Container>\r\n        <Modal size='lg' centered={true} open={toggle}>\r\n                        <ModalHeader className=\"d-flex justify-content-between align-items-center\">\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-end\",\r\n        \r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    // theme=\"success\"\r\n                                    onClick={()  => {addCrops()}}\r\n                                    className=\"mb-2 mr-1 btn btn-success\"\r\n                                >\r\n                                    <i class={`fa fa-check mx-2`}></i>\r\n                                    {t('save')}\r\n                                </Button>\r\n                                <Button\r\n                                    // theme=\"success\"\r\n                                    className=\"mb-2 mr-1 btn btn-danger\"\r\n                                    onClick={() => {setToggle(false)} }\r\n                                >\r\n                                    <i class={`fa fa-times mx-2`}></i>\r\n                                    {t('cancel')}\r\n                                </Button>\r\n                            </div>\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        <Row>\r\n                        <Col lg=\"7\" md=\"12\" sm=\"12\" className=\"border-right\" >\r\n\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Type</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                placeholder=\"Crop Type\"\r\n                                                value={cropData.crop}\r\n                                                onChange={e => setCropData({...cropData , crop : e.target.value})}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>          \r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Type (Ar)</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                placeholder=\"Crop Type\"\r\n                                                value={cropData.cropAr}\r\n                                                onChange={e => setCropData({...cropData , cropAr : e.target.value})}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>      \r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Type (En)</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                placeholder=\"Crop Type\"\r\n                                                value={cropData.cropEn}\r\n                                                onChange={e => setCropData({...cropData , cropEn : e.target.value})}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>      \r\n                                    {/* <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Photo</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                type=\"file\"\r\n                                                placeholder=\"Crop Photo\"\r\n                                                // value={cropData.cropPhoto}\r\n                                                onChange={onFileChange}\r\n                                            />\r\n                                            <button style={{background :\"#E5E5E5\" , border:\"2px solid #d7d7d7\",borderRadius:5,padding:3,margin:3}} onClick={onFileUpload}>Upload</button>\r\n                                        </FormGroup>\r\n                                    </Col>            */}\r\n                                <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"plantDate\">Planting Date</label>\r\n                                            <FormInput\r\n                                                id='plantDate'\r\n                                                placeholder=\"Planting Date\"\r\n                                                type='date'\r\n                                                className={`form-control form-control-md ${plantDateErr ? 'is-invalid' : \"\"}`}\r\n                                                value={cropData.plantDate}\r\n                                                onChange={e => setCropData({...cropData , plantDate : e.target.value})}\r\n                                            />\r\n                                             <div className=\"invalid-feedback\">{plantDateErr}</div>\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n\r\n                                    <FormGroup className='d-flex justify-content-center align-items-center flex-column'>\r\n                                        <label htmlFor=\"Practical Fraction Ru\">Practical Fraction Ru</label>\r\n                                        <FormInput\r\n                                            id='Practical Fraction Ru'\r\n                                            placeholder='Practical Fraction Ru'\r\n                                            value={cropData.fractionRuPratique}\r\n                                            onChange={e => { setCropData({...cropData , fractionRuPratique : e.target.value}) }}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n\r\n<FormGroup className='d-flex justify-content-center align-items-center flex-column'>\r\n    <label htmlFor=\"_hours\">{t('Temp.')}</label>\r\n    <FormInput\r\n        id='_hours'\r\n        placeholder={t('Temp.')}\r\n        value={cropData.minTemp}\r\n        onChange={e => { setCropData({...cropData , minTemp : e.target.value}) }}\r\n        type=\"number\"                            \r\n    />\r\n</FormGroup>\r\n</Col>\r\n<Col lg='6' md=\"12\" sm=\"12\">\r\n\r\n<FormGroup className='d-flex justify-content-center align-items-center flex-column'>\r\n    <label htmlFor=\"_hours\">Number of hours</label>\r\n    <FormInput\r\n        id='_hours'\r\n        placeholder='Number of hours of cold'\r\n        value={cropData.totalHours}\r\n        onChange={e => { setCropData({...cropData , totalHours : e.target.value}) }}\r\n        type=\"number\"                            \r\n\r\n    />\r\n</FormGroup>\r\n</Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Col>\r\n\r\n                        <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"pt-3\">\r\n                            <h6>Kc</h6>\r\n                            <div  className='d-flex justify-content-center align-items-center'>\r\n                                \r\n                                    <FormInput\r\n                                       placeholder=\"\"\r\n                                        className=\"m-1\"\r\n                                        value={cropData.kcInit}\r\n                                        onChange={e => setCropData({...cropData , kcInit : e.target.value})}\r\n                                     />\r\n                                        <FormInput\r\n                                       placeholder=\"\"\r\n                                       value={cropData.kcDev}\r\n                                       onChange={e => setCropData({...cropData , kcDev: e.target.value})}\r\n\r\n                                     />\r\n                                     <FormInput\r\n                                       placeholder=\"\"\r\n                                       className=\"m-1\"\r\n                                       value={cropData.kcMid}\r\n                                       onChange={e => setCropData({...cropData , kcMid : e.target.value})}\r\n\r\n                                     />      \r\n                                     <FormInput\r\n                                       placeholder=\"\"\r\n                                       value={cropData.kcLate}\r\n                                       onChange={e => setCropData({...cropData , kcLate : e.target.value})}\r\n\r\n                                     />   \r\n                            </div>  \r\n                            <h6>Stage (Days)</h6>   \r\n                            <div  className='d-flex justify-content-around align-items-center'>\r\n                                \r\n                                    <FormInput\r\n                                       placeholder=\"Init\"\r\n                                        className=\"m-1\"\r\n                                        value={cropData.init}\r\n                                        onChange={e => setCropData({...cropData , init : e.target.value})}\r\n                                     />\r\n                                        <FormInput\r\n                                       placeholder=\"Dev\"\r\n                                       value={cropData.dev}\r\n                                       onChange={e => setCropData({...cropData , dev : e.target.value})}\r\n                                     />\r\n                                     <FormInput\r\n                                       placeholder=\"Mid\"\r\n                                       className=\"m-1\"\r\n                                       value={cropData.mid}\r\n                                       onChange={e => setCropData({...cropData , mid : e.target.value})}\r\n                                     />      \r\n                                     <FormInput\r\n                                       placeholder=\"Late\"\r\n                                       value={cropData.late}\r\n                                       onChange={e => setCropData({...cropData , late : e.target.value})}\r\n                                     />      \r\n                            </div>  \r\n                            <h6>Roots</h6>   \r\n                            <div  className='d-flex justify-content-around align-items-center'>\r\n                                \r\n                                    <FormInput\r\n                                       placeholder=\"Min\"\r\n                                        className=\"m-1\"\r\n                                        value={cropData.rootMin}\r\n                                        onChange={e => setCropData({...cropData , rootMin : e.target.value})}\r\n\r\n                                     />\r\n                                        <FormInput\r\n                                       placeholder=\"Max\"\r\n                                       value={cropData.rootMax}\r\n                                       onChange={e => setCropData({...cropData , rootMax : e.target.value})}\r\n                                     />                               \r\n                            </div>          \r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"border-top mt-2\">\r\n                        <Col lg='12' md='12' sm='12' className=\"mt-1\" >\r\n                            {/* <button onClick={() => tableConfigKc()}>Calculer</button> */}\r\n                        <table className=\"table mb-0 border text-center\">\r\n                            <thead className=\"bg-light\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\r\n                                    <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\r\n                                    <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\r\n                              \r\n                                </tr>\r\n                            </thead>\r\n                            {tableConfigKc()}\r\n                        </table>\r\n                        </Col>\r\n                    </Row>\r\n                        </ModalBody>\r\n        </Modal>\r\n        <Modal size='lg' centered={true} open={toggleEdit}>\r\n                        <ModalHeader className=\"d-flex justify-content-between align-items-center\">\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-end\",\r\n        \r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    // theme=\"success\"\r\n                                    onClick={()  => {handleEdit(singleCrop.id)}}\r\n                                    className=\"mb-2 mr-1 btn btn-success\"\r\n                                >\r\n                                    <i class={`fa fa-check mx-2`}></i>\r\n                                    {t('save')}\r\n                                </Button>\r\n                                <Button\r\n                                    // theme=\"success\"\r\n                                    className=\"mb-2 mr-1 btn btn-danger\"\r\n                                    onClick={() => {setToggleEdit(false)} }\r\n                                >\r\n                                    <i class={`fa fa-times mx-2`}></i>\r\n                                    {t('cancel')}\r\n                                </Button>\r\n                            </div>\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                        <Row>\r\n                        <Col lg=\"7\" md=\"12\" sm=\"12\" className=\"border-right\" >\r\n\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Type</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                placeholder=\"Crop Type\"\r\n                                                value={cropData.crop}\r\n                                                onChange={e => setCropData({...cropData , crop : e.target.value})}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Type (Ar)</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                placeholder=\"Crop Type\"\r\n                                                value={cropData.cropAr}\r\n                                                onChange={e => setCropData({...cropData , cropAr : e.target.value})}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>      \r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Type (En)</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                placeholder=\"Crop Type\"\r\n                                                value={cropData.cropEn}\r\n                                                onChange={e => setCropData({...cropData , cropEn : e.target.value})}\r\n                                            />\r\n                                        </FormGroup>\r\n                                    </Col>      \r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"crop\">Crop Photo</label>\r\n                                            <FormInput\r\n                                                id='crop'\r\n                                                type=\"file\"\r\n                                                placeholder=\"Crop Photo\"\r\n                                                // value={cropData.cropPhoto}\r\n                                                onChange={onFileChange}\r\n                                            />\r\n                                            <button style={{background :\"#E5E5E5\" , border:\"2px solid #d7d7d7\",borderRadius:5,padding:3,margin:3}} onClick={onFileUploadEdit}>Upload</button>\r\n                                            {uploadedFile ? <h6 style={{fontWeight :\"bold\"}}>{uploadedFile.message}</h6> : null}\r\n\r\n                                        </FormGroup>\r\n                                    </Col> \r\n                                <Col lg='6' md=\"12\" sm=\"12\">\r\n                                        <FormGroup>\r\n                                            <label htmlFor=\"plantDate\">Planting Date</label>\r\n                                            <FormInput\r\n                                                id='plantDate'\r\n                                                placeholder=\"Planting Date\"\r\n                                                type='date'\r\n                                                className={`form-control form-control-md ${plantDateErr ? 'is-invalid' : \"\"}`}\r\n                                                value={cropData.plantDate}\r\n                                                onChange={e => setCropData({...cropData , plantDate : e.target.value})}\r\n                                            />\r\n                                             <div className=\"invalid-feedback\">{plantDateErr}</div>\r\n\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n\r\n                                    <FormGroup className='d-flex justify-content-center align-items-center flex-column'>\r\n                                        <label htmlFor=\"Practical Fraction Ru\">Practical Fraction Ru</label>\r\n                                        <FormInput\r\n                                            id='Practical Fraction Ru'\r\n                                            placeholder='Practical Fraction Ru'\r\n                                            value={cropData.fractionRuPratique}\r\n                                            onChange={e => { setCropData({...cropData , fractionRuPratique : e.target.value}) }}\r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n\r\n                                    <FormGroup className='d-flex justify-content-center align-items-center flex-column'>\r\n                                        <label htmlFor=\"_hours\">{t('Temp.')}</label>\r\n                                        <FormInput\r\n                                            id='_hours'\r\n                                            placeholder={t('Temp.')}\r\n                                            value={cropData.minTemp}\r\n                                            onChange={e => { setCropData({...cropData , minTemp : e.target.value}) }}\r\n                                            type=\"number\"                            \r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                    <Col lg='6' md=\"12\" sm=\"12\">\r\n\r\n                                    <FormGroup className='d-flex justify-content-center align-items-center flex-column'>\r\n                                        <label htmlFor=\"_hours\">Number of hours of cold</label>\r\n                                        <FormInput\r\n                                            id='_hours'\r\n                                            placeholder='Number of hours of cold'\r\n                                            value={cropData.totalHours}\r\n                                            onChange={e => { setCropData({...cropData , totalHours : e.target.value}) }}\r\n                                            type=\"number\"                            \r\n\r\n                                        />\r\n                                    </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                        </Col>\r\n\r\n                        <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"pt-3\">\r\n                            <h6>Kc</h6>\r\n                            <div  className='d-flex justify-content-center align-items-center'>\r\n                                \r\n                            <FormInput\r\n                                       placeholder=\"\"\r\n                                        className=\"m-1\"\r\n                                        value={cropData.kcInit}\r\n                                        onChange={e => setCropData({...cropData , kcInit : e.target.value})}\r\n                                     />\r\n                                        <FormInput\r\n                                       placeholder=\"\"\r\n                                       value={cropData.kcDev}\r\n                                       onChange={e => setCropData({...cropData , kcDev: e.target.value})}\r\n\r\n                                     />\r\n                                     <FormInput\r\n                                       placeholder=\"\"\r\n                                       className=\"m-1\"\r\n                                       value={cropData.kcMid}\r\n                                       onChange={e => setCropData({...cropData , kcMid : e.target.value})}\r\n\r\n                                     />      \r\n                                     <FormInput\r\n                                       placeholder=\"\"\r\n                                       value={cropData.kcLate}\r\n                                       onChange={e => setCropData({...cropData , kcLate : e.target.value})}\r\n\r\n                                     />   \r\n                            </div>  \r\n                            <h6>Stage (Days)</h6>   \r\n                            <div  className='d-flex justify-content-around align-items-center'>\r\n                                \r\n                                    <FormInput\r\n                                       placeholder=\"Init\"\r\n                                        className=\"m-1\"\r\n                                        value={cropData.init}\r\n                                        onChange={e => setCropData({...cropData , init : e.target.value})}\r\n                                     />\r\n                                        <FormInput\r\n                                       placeholder=\"Dev\"\r\n                                       value={cropData.dev}\r\n                                       onChange={e => setCropData({...cropData , dev : e.target.value})}\r\n                                     />\r\n                                     <FormInput\r\n                                       placeholder=\"Mid\"\r\n                                       className=\"m-1\"\r\n                                       value={cropData.mid}\r\n                                       onChange={e => setCropData({...cropData , mid : e.target.value})}\r\n                                     />      \r\n                                     <FormInput\r\n                                       placeholder=\"Late\"\r\n                                       value={cropData.late}\r\n                                       onChange={e => setCropData({...cropData , late : e.target.value})}\r\n                                     />      \r\n                            </div>  \r\n                            <h6>Roots</h6>   \r\n                            <div  className='d-flex justify-content-around align-items-center'>\r\n                                \r\n                            <FormInput\r\n                                       placeholder=\"Min\"\r\n                                        className=\"m-1\"\r\n                                        value={cropData.rootMin}\r\n                                        onChange={e => setCropData({...cropData , rootMin : e.target.value})}\r\n\r\n                                     />\r\n                                        <FormInput\r\n                                       placeholder=\"Max\"\r\n                                       value={cropData.rootMax}\r\n                                       onChange={e => setCropData({...cropData , rootMax : e.target.value})}\r\n                                     />   \r\n                            </div>          \r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"border-top mt-2\">\r\n                        <Col lg='12' md='12' sm='12' className=\"mt-1\" >\r\n                            {/* <button onClick={() => tableConfigKc()}>Calculer</button> */}\r\n                        <table className=\"table mb-0 border text-center\">\r\n                            <thead className=\"bg-light\">\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\r\n                                    <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\r\n                                    <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\r\n                              \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                cropData.allKcList && cropData.allKcList.map((result,indx)=>{\r\n                                   \r\n                                    return(\r\n\r\n                                        <tr>\r\n                                            <td>{result.day}</td>\r\n                                            <td>\r\n                                            <input\r\n                                                name={indx}\r\n                                                key={indx}\r\n                                                className='my-1'\r\n                                                defaultValue={parseFloat(result.kc).toFixed(2)}\r\n                                                onChange={(e) => onChangeHandler(e, indx)}\r\n                                            />    \r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                         </tbody>\r\n                        </table>\r\n                        </Col>\r\n                    </Row>\r\n                        </ModalBody>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ConfigurationCrops"],"mappings":"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"},"metadata":{},"sourceType":"module"}