{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\smartFarm\\\\backoffice\\\\frontend\\\\src\\\\views\\\\SolarRadiationChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nvar SensorHistoryChart = function SensorHistoryChart(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var solarRad = [];\n    data && data.map(function (solarData) {\n      var date = solarData.date;\n      solarRad.push(parseFloat(solarData.value).toFixed(2));\n      labels.push(moment(date.slice(0, 10)).locale('en-En').format('ddd, h a')); // labels = ([...new Set(labels)])\n    });\n    var state = {\n      labels: labels,\n      datasets: [{\n        label: 'Solar Radiation',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: solarRad,\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"#d66915\"\n      }]\n    };\n    setState(state);\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('Week Solar Radiation')),\n        fontSize: 20\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SensorHistoryChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useTranslation","SensorHistoryChart","data","state","setState","t","i18n","getChartData","labels","solarRad","map","solarData","date","push","parseFloat","value","toFixed","slice","locale","format","datasets","label","lineTension","borderWidth","fill","backgroundColor","borderColor","title","display","text","fontSize","legend","position"],"sources":["C:/Users/lenovo/Desktop/smartFarm/backoffice/frontend/src/views/SolarRadiationChart.js"],"sourcesContent":["import moment from 'moment';\r\nimport React , {useState,useEffect}from 'react'\r\nimport { Line } from  'react-chartjs-2';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst SensorHistoryChart = ({data}) => {\r\n\r\n    const [state,setState] = useState(null)\r\n    const { t, i18n } = useTranslation();\r\n\r\n\r\n    const getChartData = () => {\r\n        let labels = []   \r\n        let solarRad = []\r\n       data && data.map(solarData=>{\r\n            let date = solarData.date\r\n            solarRad.push(parseFloat(solarData.value).toFixed(2))\r\n            labels.push(moment(date.slice(0,10)).locale('en-En').format('ddd, h a'))\r\n            // labels = ([...new Set(labels)])\r\n        })\r\n       ;  \r\n        const state = {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: 'Solar Radiation',\r\n                    lineTension: 0.5,\r\n                    borderWidth: 2,\r\n                    data: solarRad,\r\n                    fill: false,\r\n                    backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                    borderColor: \"#d66915\"\r\n                  },\r\n\r\n\r\n                 \r\n            ]\r\n          }\r\n          setState(state)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getChartData()\r\n    },[data])\r\n\r\n  return (\r\n    <Line\r\n      data={state}\r\n          options={{\r\n            title:{\r\n              display:true,\r\n              text:`${t('Week Solar Radiation')}`,\r\n              fontSize:20\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'bottom'\r\n            }\r\n          }}\r\n      />\r\n  )\r\n}\r\n\r\nexport default SensorHistoryChart"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAsB,iBAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAY;EAAA,IAAVC,IAAU,QAAVA,IAAU;;EAAA,gBAEVL,QAAQ,CAAC,IAAD,CAFE;EAAA;EAAA,IAE5BM,KAF4B;EAAA,IAEtBC,QAFsB;;EAAA,sBAGfJ,cAAc,EAHC;EAAA,IAG3BK,CAH2B,mBAG3BA,CAH2B;EAAA,IAGxBC,IAHwB,mBAGxBA,IAHwB;;EAMnC,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACvB,IAAIC,MAAM,GAAG,EAAb;IACA,IAAIC,QAAQ,GAAG,EAAf;IACDP,IAAI,IAAIA,IAAI,CAACQ,GAAL,CAAS,UAAAC,SAAS,EAAE;MACvB,IAAIC,IAAI,GAAGD,SAAS,CAACC,IAArB;MACAH,QAAQ,CAACI,IAAT,CAAcC,UAAU,CAACH,SAAS,CAACI,KAAX,CAAV,CAA4BC,OAA5B,CAAoC,CAApC,CAAd;MACAR,MAAM,CAACK,IAAP,CAAYlB,MAAM,CAACiB,IAAI,CAACK,KAAL,CAAW,CAAX,EAAa,EAAb,CAAD,CAAN,CAAyBC,MAAzB,CAAgC,OAAhC,EAAyCC,MAAzC,CAAgD,UAAhD,CAAZ,EAHuB,CAIvB;IACH,CALM,CAAR;IAOC,IAAMhB,KAAK,GAAG;MACVK,MAAM,EAAEA,MADE;MAEVY,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,iBADX;QAEIC,WAAW,EAAE,GAFjB;QAGIC,WAAW,EAAE,CAHjB;QAIIrB,IAAI,EAAEO,QAJV;QAKIe,IAAI,EAAE,KALV;QAMIC,eAAe,EAAE,sBANrB;QAOIC,WAAW,EAAE;MAPjB,CADM;IAFA,CAAd;IAiBEtB,QAAQ,CAACD,KAAD,CAAR;EACL,CA5BD;;EA8BAL,SAAS,CAAC,YAAI;IACVS,YAAY;EACf,CAFQ,EAEP,CAACL,IAAD,CAFO,CAAT;EAIF,oBACE,oBAAC,IAAD;IACE,IAAI,EAAEC,KADR;IAEM,OAAO,EAAE;MACPwB,KAAK,EAAC;QACJC,OAAO,EAAC,IADJ;QAEJC,IAAI,YAAIxB,CAAC,CAAC,sBAAD,CAAL,CAFA;QAGJyB,QAAQ,EAAC;MAHL,CADC;MAMPC,MAAM,EAAC;QACLH,OAAO,EAAC,IADH;QAELI,QAAQ,EAAC;MAFJ;IANA,CAFf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF;AAgBD,CAxDD;;AA0DA,eAAe/B,kBAAf"},"metadata":{},"sourceType":"module"}