{"ast":null,"code":"import _defineProperty from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/BilanHydrique.js\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, FormCheckbox, Nav, NavItem, NavLink, FormInput, FormSelect, Button } from 'shards-react';\nimport PageTitle from \"../common/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport Chart from '../blog/Chart';\nimport api from '../../api/api';\nimport useGeoLocation from '../../utils/useGeoLocation';\nimport { Carousel } from 'react-responsive-carousel';\nimport moment from 'moment';\nimport WaterChart from './WaterChart';\nimport position from '../../images/pin.png';\nimport soil from \"../../images/soil.png\";\nimport crop from \"../../images/crop.png\";\n\nvar BilanHydrique = function BilanHydrique() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pluie = _useState4[0],\n      setPluie = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      irrigatedAlready = _useState6[0],\n      setIrrigatedAlready = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Pe = _useState8[0],\n      setPe = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sumNbrIrrig = _useState10[0],\n      setSumNbrIrrig = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sumIrrig = _useState12[0],\n      setSumIrrig = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sumPluie = _useState14[0],\n      setSumPluie = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sumETC = _useState16[0],\n      setSumETC = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      chartData = _useState18[0],\n      setChartData = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      allKc = _useState20[0],\n      setAllKc = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      allDaysWeather = _useState22[0],\n      setAllDaysWeather = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      allVarieties = _useState24[0],\n      setAllVarieties = _useState24[1];\n\n  var _useState25 = useState('pos'),\n      _useState26 = _slicedToArray(_useState25, 2),\n      elemValue = _useState26[0],\n      setElemValue = _useState26[1];\n\n  var _useState27 = useState({}),\n      _useState28 = _slicedToArray(_useState27, 2),\n      weather = _useState28[0],\n      setWeather = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      listCrop = _useState30[0],\n      setListCrop = _useState30[1];\n\n  var _useState31 = useState({\n    Kc: \"\",\n    ET0: \"\",\n    surfaceIrrig: \"\",\n    RUmax: \"\",\n    Profondeur: \"\",\n    effPluie: \"\",\n    ruPratique: \"\",\n    effIrrig: \"\",\n    country: \"\",\n    cities: [],\n    city: \"\",\n    cropType: \"\",\n    cropVariety: [],\n    variety: '',\n    days: \"\",\n    plantingDate: \"\",\n    soilType: \"\",\n    temperature: null,\n    kcList: [],\n    daysWeather: []\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      InputsData = _useState32[0],\n      setInputsData = _useState32[1];\n\n  var _useState33 = useState({\n    surfaceIrrig: \"\",\n    RUmax: \"\",\n    Profondeur: \"\",\n    effPluie: \"\",\n    ruPratique: \"\",\n    effIrrig: \"\",\n    country: \"\",\n    city: \"\",\n    cropType: \"\",\n    soilType: \"\"\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      InputsDataErr = _useState34[0],\n      setInputsDataErr = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      inputError = _useState36[0],\n      setInputError = _useState36[1];\n\n  var _useState37 = useState({\n    lat: '',\n    lon: ''\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      coord = _useState38[0],\n      setCoord = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      allSoils = _useState40[0],\n      setAllSoils = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      allCountry = _useState42[0],\n      setAllCountry = _useState42[1];\n\n  var _useState43 = useState([]),\n      _useState44 = _slicedToArray(_useState43, 2),\n      allCity = _useState44[0],\n      setAllCity = _useState44[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var ETC = Number(InputsData.ET0) * Number(InputsData.Kc);\n  var RuMax = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n  var RuInitial = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n  var Epuisement_maximal = Number(InputsData.RUmax) * Number(InputsData.Profondeur) * Number(InputsData.ruPratique) / 100;\n  var RuMin = Number(RuMax) - Number(Epuisement_maximal);\n  var VolumeIrrigation = sumIrrig * 10;\n  var VolumeTotalEauIrrigation = Number(VolumeIrrigation) * Number(InputsData.surfaceIrrig);\n  var Deficit = sumETC - sumPluie;\n\n  var getVarieties = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/varieties/get-varieties').then(function (response) {\n                if (response.data.type === \"success\") {\n                  var listVarieties = response.data.Varieties;\n                  setAllVarieties(listVarieties);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getVarieties() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getCitiesList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/cities/list-cities').then(function (response) {\n                var cities = response.data.Cities;\n\n                if (response && response.data.type === \"success\") {\n                  setAllCity(cities);\n                }\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getCitiesList() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getWeather();\n  }, [coord.lat, coord.lon]);\n  useEffect(function () {\n    getCitiesList();\n\n    var getCropType = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setAllSoils(listSoils);\n                  var Ru = \"\";\n\n                  if (listSoils) {\n                    listSoils.map(function (item) {\n                      Ru = item.ru;\n                    });\n                    setInputsData(_objectSpread({}, InputsData, {\n                      RUmax: Ru\n                    }));\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var getCountries = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.get('/countries/get-countries').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listCountries = response.data.Countries;\n                    setAllCountry(listCountries);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      return function getCountries() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getCountries();\n    getSoils();\n    getCropType();\n  }, []);\n  useEffect(function () {\n    var sum = Object.values(pluie).reduce(function (a, v) {\n      return a + Number(v);\n    }, 0);\n    setSumPluie(sum);\n  }, [pluie]);\n\n  var getWeather = function getWeather() {\n    var data = {\n      lat: coord.lat,\n      lon: coord.lon,\n      type: 'forecast'\n    };\n    api.post('/weather/get-data', data).then(function (response) {\n      var weatherData = response.data.data;\n      var listForecast = weatherData.list;\n      var days = [];\n\n      for (var i = 0; i < listForecast.length; i += 8) {\n        var temp = {};\n        temp.date = new Date(listForecast[i + 5].dt_txt);\n        temp.rain = listForecast[i].rain;\n        temp.temp = listForecast[i].main.feels_like.toFixed(0);\n        temp.temp_max = listForecast[i].main.temp_max.toFixed(0);\n        temp.temp_min = listForecast[i].main.temp_min.toFixed(0);\n        temp.humidity = listForecast[i].main.humidity;\n        temp.pressure = listForecast[i].main.pressure;\n        temp.wind = listForecast[i].wind.speed;\n        temp.main = listForecast[i].weather[0].main;\n        temp.description = listForecast[i + 3].weather[0].description;\n        temp.icon = listForecast[i].weather[0].icon;\n        days.push(temp);\n      }\n\n      setWeather(days);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = allSoils.find(function (soil) {\n      return soil.soil === e.target.value;\n    });\n\n    if (typeof soilType !== \"undefined\") {\n      setInputsData(_objectSpread({}, InputsData, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effIrrig: soilType.fc,\n        ruPratique: soilType.practical_fraction,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  };\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault();\n    var crop = listCrop.find(function (crop) {\n      return crop.crop === e.target.value;\n    });\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setInputsData(_objectSpread({}, InputsData, {\n        cropType: crop.crop,\n        variety: '',\n        cropVariety: varieties,\n        Profondeur: crop.root_max,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.crop_variety === e.target.value;\n    });\n\n    if (variety) {\n      setInputsData(_objectSpread({}, InputsData, {\n        cropType: \"\",\n        variety: variety.crop_variety,\n        Profondeur: variety.root_max,\n        days: variety.total,\n        plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n        kcList: variety.all_kc\n      }));\n    }\n  };\n\n  var handleCountryPick = function handleCountryPick(e) {\n    e.preventDefault();\n    var country = allCountry.find(function (country) {\n      return country.iso === e.target.value;\n    });\n    var cities = [];\n\n    if (country) {\n      var city = allCity.map(function (city) {\n        if (city.iso === country.iso) {\n          cities.push({\n            city: city.city\n          });\n        }\n      });\n      setInputsData(_objectSpread({}, InputsData, {\n        country: country.iso,\n        cities: cities\n      }));\n    }\n  };\n\n  var handleCityPick = function handleCityPick(e) {\n    e.preventDefault();\n    var city = allCity.find(function (city) {\n      return city.name === e.city.value;\n    });\n\n    if (city) {\n      setInputsData(_objectSpread({}, InputsData, {\n        city: city.city,\n        daysWeather: city.weather_data_days\n      }));\n    }\n  };\n\n  var onChangeHandler = function onChangeHandler(value, indx) {\n    setPluie(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, value));\n    });\n    var formulePe = Number(value) * Number(InputsData.effPluie) / 100;\n    setPe(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, formulePe));\n    });\n  };\n\n  var onChangeHandlerIrrigated = function onChangeHandlerIrrigated(value, indx) {\n    setIrrigatedAlready(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, value));\n    });\n\n    if (value) {\n      var formulePe = Number(value) * Number(InputsData.effPluie) / 100;\n      setPe(function (state) {\n        return _objectSpread({}, state, _defineProperty({}, indx, formulePe));\n      });\n    }\n  }; // useEffect(()=>{\n  //     let daysWeatherArray = []\n  //         InputsData.daysWeather.map(weather=>{\n  //             daysWeatherArray .push(allKc)\n  //         })\n  //         setAllDaysWeather(daysWeatherArray)\n  // },[InputsData.daysWeather])\n\n\n  useEffect(function () {\n    var kcArray = [];\n    InputsData.kcList.map(function (kc) {\n      var allKc = kc.kc;\n      kcArray.push(allKc);\n    });\n    setAllKc(kcArray);\n  }, [InputsData.kcList]);\n\n  var tableHydrique = function tableHydrique(n) {\n    var elements = [];\n    var resultFormule = [];\n    var kc = 0.7;\n    var ET0 = 2;\n    var ETC = 0;\n    var bilanHydrique = 0;\n    var Irrigation = 0;\n    var firstFormule = 0;\n    var formule = 0;\n    var firstFormuleIrrig = 0;\n    var formuleIrrig = 0;\n    var IrrigationNbr = 0;\n    var sumIrrig = 0;\n    var sumNbrIrrig = 0;\n    var sumETC = 0;\n\n    var _loop = function _loop(i, j) {\n      ETC = Number(allKc[i - 1]) * Number(ET0);\n      var prevResultBilan = 0;\n      firstFormule = Number(RuInitial) + Number(Pe[i]) - Number(ETC);\n\n      if (i > 1) {\n        prevResultBilan = resultFormule[i - 1 - 1];\n        formule = Number(prevResultBilan) + Number(Pe[i]) - (Number(ETC) + 0);\n        formuleIrrig = (Number(RuMax) - Number(prevResultBilan) + Number(ETC)) / InputsData.effIrrig;\n      }\n\n      firstFormuleIrrig = (Number(RuMax) - Number(firstFormule)) / InputsData.effIrrig;\n\n      if (i === 1) {\n        if (firstFormule <= RuMax) {\n          bilanHydrique = firstFormule;\n        } else {\n          bilanHydrique = RuMax;\n        }\n\n        if (RuInitial <= RuMin) {\n          Irrigation = firstFormuleIrrig;\n        } else {\n          Irrigation = 0;\n        }\n      } else {\n        if (formule <= RuMax) {\n          bilanHydrique = formule;\n        } else {\n          bilanHydrique = RuMax;\n        }\n\n        if (prevResultBilan <= RuMin) {\n          Irrigation = formuleIrrig;\n        } else {\n          Irrigation = 0;\n        }\n      }\n\n      if (Irrigation === 0) {\n        IrrigationNbr = 0;\n      } else {\n        IrrigationNbr = 1;\n      }\n\n      var dates = moment(InputsData.plantingDate).add(i - 1, 'days').format(\"YYYY-MM-DD\");\n      elements.push( /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 25\n        }\n      }, i), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 25\n        }\n      }, dates), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }\n      }, parseFloat(allKc[i - 1]).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }\n      }, ET0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        name: i,\n        key: i,\n        className: \"my-1\",\n        style: {\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        value: pluie.i,\n        onChange: function onChange(e) {\n          return onChangeHandler(e.target.value, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: i,\n        key: i,\n        className: \"my-1\",\n        style: {\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        value: irrigatedAlready.i,\n        onChange: function onChange(e) {\n          return onChangeHandlerIrrigated(e.target.value, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 25\n        }\n      }, parseFloat(ETC).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 25\n        }\n      }, Pe[i]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 25\n        }\n      }, \"\".concat(parseFloat(bilanHydrique).toFixed(1))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, parseFloat(Irrigation).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 25\n        }\n      }, IrrigationNbr))));\n      resultFormule.push(bilanHydrique);\n\n      if (ETC) {\n        sumETC = sumETC + ETC;\n      }\n\n      if (Irrigation > 0) {\n        sumNbrIrrig = sumNbrIrrig + IrrigationNbr;\n        sumIrrig = sumIrrig + Irrigation;\n      }\n    };\n\n    for (var i = 1, j = n; i <= n; i++, j--) {\n      _loop(i, j);\n    }\n\n    useEffect(function () {\n      setChartData(resultFormule);\n      setSumNbrIrrig(sumNbrIrrig);\n      setSumIrrig(sumIrrig);\n      setSumETC(sumETC);\n    }, [sumNbrIrrig]);\n    return elements;\n  };\n\n  var retrunInputs = function retrunInputs() {\n    switch (elemValue) {\n      case \"pos\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          className: \"py-4\",\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"country\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 33\n          }\n        }, \"Country\"), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"country\",\n          value: InputsData.country || '',\n          onChange: handleCountryPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 37\n          }\n        }, \"Select Country\"), allCountry.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 45\n            }\n          }, country.name);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          className: \"py-4\",\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 33\n          }\n        }, \"City\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.city || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              city: e.target.value\n            }));\n          },\n          id: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 37\n          }\n        }, \"Select City\"), InputsData.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: city.city,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 49\n            }\n          }, city.city);\n        })))));\n\n      case \"crop\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cropType\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 33\n          }\n        }, \"Crop Type\"), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"cropType\",\n          value: InputsData.cropType || \"\",\n          onChange: handleCropPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 37\n          }\n        }, \"Select Crop\"), listCrop.map(function (cropType) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            value: cropType.crop,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 45\n            }\n          }, cropType.crop);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 33\n          }\n        }, \"Crop Variety\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.variety || \"\",\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 37\n          }\n        }, \"Select Crop Variety\"), InputsData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.variety,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 45\n            }\n          }, variety.variety);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"z\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 33\n          }\n        }, \"Profondeur (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.Profondeur || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              Profondeur: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: \"Profondeur\",\n          className: \"form-control form-control-md \".concat(InputsDataErr.Profondeur ? 'is-invalid' : \"\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 33\n          }\n        }, \"Days\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.days || \"\",\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: \"Days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 33\n          }\n        }, \"Growing Season\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: InputsData.plantingDate || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 33\n          }\n        }))));\n\n      case \"soil\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"soil\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 33\n          }\n        }, \"Soil Type\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.soilType || '',\n          id: \"soil\",\n          onChange: handleSoilPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 37\n          }\n        }, \"Select Soil type\"), allSoils.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: soil.id,\n            value: soil.soil,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 49\n            }\n          }, soil.soil);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"surfaceIrrig\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 33\n          }\n        }, \"Surface irrigu\\xE9e (ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.surfaceIrrig || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              surfaceIrrig: e.target.value\n            }));\n          },\n          id: \"surfaceIrrig\",\n          placeholder: \"Surface irrigu\\xE9e\",\n          className: \"form-control form-control-md \".concat(InputsDataErr.surfaceIrrig ? 'is-invalid' : \"\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"effPluie\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 33\n          }\n        }, \"Efficacit\\xE9 de la pluie (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.effPluie || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: \"Efficacit\\xE9 de la pluie\",\n          className: \"form-control form-control-md \".concat(InputsDataErr.effPluie ? 'is-invalid' : \"\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ruPratique\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 33\n          }\n        }, \"Fraction RU pratique (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.ruPratique || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: \"Fraction RU pratique\",\n          className: \"form-control form-control-md \".concat(InputsDataErr.ruPratique ? 'is-invalid' : \"\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"effIrrig\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 33\n          }\n        }, \"Efficience de l'irrigation (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.effIrrig || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: \"Efficience de l'irrigation\",\n          className: \"form-control form-control-md \".concat(InputsDataErr.effIrrig ? 'is-invalid' : \"\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ruMax\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 33\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.RUmax || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          className: \"form-control form-control-md \".concat(InputsDataErr.RUmax ? 'is-invalid' : \"\"),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 33\n          }\n        }))));\n\n      default:\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"country\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 33\n          }\n        }, \"Country\"), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"country\",\n          value: InputsData.country || '',\n          onChange: handleCountryPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 37\n          }\n        }, \"Select Country\"), allCountry.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 45\n            }\n          }, country.name);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 33\n          }\n        }, \"City\"), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.city || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              city: e.target.value\n            }));\n          },\n          id: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 37\n          }\n        }, \"Select City\"), InputsData.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: city.city,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 49\n            }\n          }, city.city);\n        })))));\n    }\n  };\n\n  var imageByInputs = function imageByInputs() {\n    switch (elemValue) {\n      case \"pos\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: position,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 24\n          }\n        });\n\n      case \"crop\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: crop,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 24\n          }\n        });\n\n      case \"soil\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: soil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: position,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  var isValidInputs = function isValidInputs() {\n    var countryError = \"\";\n    var cityError = \"\";\n    var cropError = \"\";\n    var soilError = \"\";\n    var effIrrigError = \"\";\n    var effPluieError = \"\";\n    var ruPratiqueError = \"\";\n    var RuMaxError = \"\";\n    var surfaceIrrigError = \"\";\n    var profondeurError = \"\";\n\n    if (!InputsData.country) {\n      countryError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        country: countryError\n      }));\n    }\n\n    if (!InputsData.city) {\n      cityError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        city: cityError\n      }));\n    }\n\n    if (!InputsData.cropType) {\n      cropError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        cropType: cropError\n      }));\n    }\n\n    if (!InputsData.effIrrig) {\n      effIrrigError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        effIrrig: effIrrigError\n      }));\n    }\n\n    if (!InputsData.effPluie) {\n      effPluieError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        effPluie: effPluieError\n      }));\n    }\n\n    if (!InputsData.ruPratique) {\n      ruPratiqueError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        ruPratique: ruPratiqueError\n      }));\n    }\n\n    if (!InputsData.RUmax) {\n      RuMaxError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        RUmax: RuMaxError\n      }));\n    }\n\n    if (!InputsData.soilType) {\n      soilError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        soilType: soilError\n      }));\n    }\n\n    if (!InputsData.Profondeur) {\n      profondeurError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        Profondeur: profondeurError\n      }));\n    }\n\n    if (!InputsData.surfaceIrrig) {\n      surfaceIrrigError = 'Cannot be blank!';\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        surfaceIrrig: surfaceIrrigError\n      }));\n    }\n\n    if (effIrrigError || effPluieError || ruPratiqueError || RuMaxError || surfaceIrrigError || profondeurError) {\n      setInputsDataErr({\n        effIrrig: effIrrigError\n      });\n      setInputsDataErr({\n        effPluie: effPluieError\n      });\n      setInputsDataErr({\n        ruPratique: ruPratiqueError\n      });\n      setInputsDataErr({\n        RUmax: RuMaxError\n      });\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        Profondeur: profondeurError\n      }));\n      setInputsDataErr(_objectSpread({}, InputsDataErr, {\n        surfaceIrrig: surfaceIrrigError\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  var checkAndSave = function checkAndSave() {\n    var isValid = isValidInputs();\n\n    if (isValid) {// Save In DataBase\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('My Water Balance'),\n    subtitle: t('overview'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"text-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      width: \"auto\",\n      float: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 33\n    }\n  }, t('Configuration')), \" \")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mx-auto\",\n    style: {\n      height: \"140px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 37\n    }\n  }, imageByInputs())), /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"py-2 m-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"pos\",\n    className: \"\".concat(elemValue === \"pos\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 53\n    }\n  }, \"Position\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"crop\",\n    className: \"\".concat(elemValue === \"crop\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 53\n    }\n  }, \"Crop Info\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"soil\",\n    className: \"\".concat(elemValue === \"soil\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 53\n    }\n  }, \"Soil Info\")))), retrunInputs()), elemValue === \"soil\" ? /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    theme: \"success\",\n    onClick: function onClick() {\n      return isValidInputs();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 49\n    }\n  }, \"Valider\")) : null)))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      width: \"auto\",\n      float: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 33\n    }\n  }, t('Water Report')), \" \")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ruMax\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 37\n    }\n  }, \"RU max (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ruMax\",\n    value: RuMax,\n    placeholder: \"RU max\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ruInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 37\n    }\n  }, \"RU initiale (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ruInit\",\n    value: RuInitial,\n    placeholder: \"RU initiale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"epuis\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 37\n    }\n  }, \"Epuisement maximal (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"epuis\",\n    value: Epuisement_maximal,\n    placeholder: \"Epuisement maximal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nbrIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 37\n    }\n  }, \"Nombre d'irrigations\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"nbrIrrig\",\n    value: sumNbrIrrig,\n    placeholder: \"Nombre d'irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hautIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 37\n    }\n  }, \"Hauteur d'eau des irrigations (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"hautIrrig\",\n    value: parseFloat(sumIrrig).toFixed(0),\n    placeholder: \"Hauteur d'eau des irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 37\n    }\n  }, \"Volume des irrigations (m\\xB3 /ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(VolumeIrrigation).toFixed(0),\n    id: \"vIrrig\",\n    placeholder: \"Volume des irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"rumin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 37\n    }\n  }, \"Ru Min (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: RuMin,\n    id: \"rumin\",\n    placeholder: \"RU min\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"volTotalIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 37\n    }\n  }, \"Volume Total d'eau d'irrigation (m\\xB3)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(VolumeTotalEauIrrigation).toFixed(0),\n    id: \"volTotalIrrig\",\n    placeholder: \"Volume Total d'eau d'irrigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pluieTotal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 37\n    }\n  }, \"Pluie Total (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(sumPluie).toFixed(0),\n    id: \"pluieTotal\",\n    placeholder: \"Pluie total\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"evoTotal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 37\n    }\n  }, \"Evapotranspiration totale (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(sumETC).toFixed(0),\n    id: \"evoTotal\",\n    placeholder: \"Evapotranspiration totale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"deficit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 37\n    }\n  }, \"D\\xE9ficit (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(Deficit).toFixed(0),\n    id: \"deficit\",\n    placeholder: \"D\\xE9ficit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 d-flex justify-content-center align-items-center text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 961,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 963,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"py-2 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: 30,\n      margin: 8,\n      border: '1px solid #eee',\n      borderRadius: 10,\n      background: 'none'\n    },\n    onClick: function onClick() {\n      return setToggle(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 173\n    }\n  }, \"\\uE265\")), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: 30,\n      margin: 8,\n      border: '1px solid #eee',\n      borderRadius: 10,\n      background: 'none'\n    },\n    onClick: function onClick() {\n      return setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 174\n    }\n  }, \"\\uE6E1\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"\".concat(toggle ? '' : 'd-none'),\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 970,\n      columnNumber: 33\n    }\n  }, \"Water Balance\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center table-bordered table-hover table-responsive\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 45\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 45\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 45\n    }\n  }, t('Kc')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 45\n    }\n  }, t('ET0')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 45\n    }\n  }, t('Pluie'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 45\n    }\n  }, t('Irrigated already')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 45\n    }\n  }, t('ETc')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 45\n    }\n  }, t('Pe'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 45\n    }\n  }, t('Bilan hydrique'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 45\n    }\n  }, t('Irrigation')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 45\n    }\n  }, t('Nbr Irrigation')))), tableHydrique(InputsData.days))), /*#__PURE__*/React.createElement(Col, {\n    className: \"\".concat(toggle ? 'd-none' : ''),\n    lg: \"12\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 992,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 33\n    }\n  }, \"Water Balance Chart\"), /*#__PURE__*/React.createElement(WaterChart, {\n    data: chartData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default BilanHydrique;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","FormCheckbox","Nav","NavItem","NavLink","FormInput","FormSelect","Button","PageTitle","useTranslation","Chart","api","useGeoLocation","Carousel","moment","WaterChart","position","soil","crop","BilanHydrique","toggle","setToggle","pluie","setPluie","irrigatedAlready","setIrrigatedAlready","Pe","setPe","sumNbrIrrig","setSumNbrIrrig","sumIrrig","setSumIrrig","sumPluie","setSumPluie","sumETC","setSumETC","chartData","setChartData","allKc","setAllKc","allDaysWeather","setAllDaysWeather","allVarieties","setAllVarieties","elemValue","setElemValue","weather","setWeather","listCrop","setListCrop","Kc","ET0","surfaceIrrig","RUmax","Profondeur","effPluie","ruPratique","effIrrig","country","cities","city","cropType","cropVariety","variety","days","plantingDate","soilType","temperature","kcList","daysWeather","InputsData","setInputsData","InputsDataErr","setInputsDataErr","inputError","setInputError","lat","lon","coord","setCoord","allSoils","setAllSoils","allCountry","setAllCountry","allCity","setAllCity","t","i18n","ETC","Number","RuMax","RuInitial","Epuisement_maximal","RuMin","VolumeIrrigation","VolumeTotalEauIrrigation","Deficit","getVarieties","get","then","response","data","type","listVarieties","Varieties","catch","error","console","log","getCitiesList","Cities","err","getWeather","getCropType","dataCrop","Croptype","getSoils","listSoils","Soils","Ru","map","item","ru","getCountries","listCountries","Countries","sum","Object","values","reduce","a","v","post","weatherData","listForecast","list","i","length","temp","date","Date","dt_txt","rain","main","feels_like","toFixed","temp_max","temp_min","humidity","pressure","wind","speed","description","icon","push","handleSoilPick","e","preventDefault","find","target","value","fc","practical_fraction","rain_eff","handleCropPick","varieties","crop_id","id","crop_variety","root_max","total","plant_date","slice","replace","all_kc","handleVarietyPick","handleCountryPick","iso","handleCityPick","name","weather_data_days","onChangeHandler","indx","state","formulePe","onChangeHandlerIrrigated","kcArray","kc","tableHydrique","n","elements","resultFormule","bilanHydrique","Irrigation","firstFormule","formule","firstFormuleIrrig","formuleIrrig","IrrigationNbr","j","prevResultBilan","dates","add","format","parseFloat","outline","border","retrunInputs","textTransform","imageByInputs","isValidInputs","countryError","cityError","cropError","soilError","effIrrigError","effPluieError","ruPratiqueError","RuMaxError","surfaceIrrigError","profondeurError","checkAndSave","isValid","display","justifyContent","width","float","height","paddingBottom","fontSize","margin","borderRadius","background"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/BilanHydrique.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, FormCheckbox, Nav, NavItem, NavLink, FormInput, FormSelect, Button } from 'shards-react'\nimport PageTitle from \"../common/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport Chart from '../blog/Chart'\nimport api from '../../api/api';\nimport useGeoLocation from '../../utils/useGeoLocation'\nimport { Carousel } from 'react-responsive-carousel';\nimport moment from 'moment';\nimport WaterChart from './WaterChart';\nimport position from '../../images/pin.png'\nimport soil from \"../../images/soil.png\"\nimport crop from \"../../images/crop.png\"\n\nconst BilanHydrique = () => {\n\n    const [toggle, setToggle] = useState(true)\n    const [pluie, setPluie] = useState({})\n    const [irrigatedAlready, setIrrigatedAlready] = useState({})\n    const [Pe, setPe] = useState({})\n    const [sumNbrIrrig, setSumNbrIrrig] = useState(0)\n    const [sumIrrig, setSumIrrig] = useState(0)\n    const [sumPluie, setSumPluie] = useState(0)\n    const [sumETC, setSumETC] = useState(0)\n\n    const [chartData, setChartData] = useState([])\n    const [allKc, setAllKc] = useState([])\n    const [allDaysWeather, setAllDaysWeather] = useState([])\n\n    const [allVarieties, setAllVarieties] = useState([])\n\n    const [elemValue, setElemValue] = useState('pos')\n\n    const [weather, setWeather] = useState({})\n    const [listCrop, setListCrop] = useState([])\n    const [InputsData, setInputsData] = useState({\n        Kc: \"\",\n        ET0: \"\",\n        surfaceIrrig: \"\",\n        RUmax: \"\",\n        Profondeur: \"\",\n        effPluie: \"\",\n        ruPratique: \"\",\n        effIrrig: \"\",\n        country: \"\",\n        cities: [],\n        city: \"\",\n        cropType: \"\",\n        cropVariety: [],\n        variety: '',\n        days: \"\",\n        plantingDate: \"\",\n        soilType: \"\",\n        temperature: null,\n        kcList: [],\n        daysWeather: []\n\n    })\n    const [InputsDataErr, setInputsDataErr] = useState({\n        surfaceIrrig: \"\",\n        RUmax: \"\",\n        Profondeur: \"\",\n        effPluie: \"\",\n        ruPratique: \"\",\n        effIrrig: \"\",\n        country: \"\",\n        city: \"\",\n        cropType: \"\",\n        soilType: \"\",\n    })\n    const [inputError, setInputError] = useState('')\n\n\n    const [coord, setCoord] = useState({ lat: '', lon: '' })\n    const [allSoils, setAllSoils] = useState([])\n    const [allCountry, setAllCountry] = useState([])\n    const [allCity, setAllCity] = useState([])\n\n\n    const { t, i18n } = useTranslation();\n\n    let ETC = Number(InputsData.ET0) * Number(InputsData.Kc)\n    let RuMax = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n    let RuInitial = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n    let Epuisement_maximal = (Number(InputsData.RUmax) * Number(InputsData.Profondeur) * Number(InputsData.ruPratique)) / 100\n    let RuMin = Number(RuMax) - Number(Epuisement_maximal)\n    let VolumeIrrigation = sumIrrig * 10\n    let VolumeTotalEauIrrigation = Number(VolumeIrrigation) * Number(InputsData.surfaceIrrig)\n    let Deficit = sumETC - sumPluie\n\n\n    const getVarieties = async () => {\n        try {\n            await api.get('/varieties/get-varieties')\n                .then(response => {\n                    if (response.data.type === \"success\") {\n                        let listVarieties = response.data.Varieties\n                        setAllVarieties(listVarieties)\n\n                    }\n                }).catch(error => {\n                    console.log(error)\n                })\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    const getCitiesList = async () => {\n        await api.get('/cities/list-cities')\n            .then(response => {\n                let cities = response.data.Cities\n                if (response && response.data.type === \"success\") {\n                    setAllCity(cities)\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n        getWeather()\n    }, [coord.lat, coord.lon])\n\n    useEffect(() => {\n        getCitiesList()\n\n        const getCropType = async () => {\n            try {\n                await api.get('/croptype/list-crop')\n                    .then(response => {\n                        if (response) {\n                            let dataCrop = response.data.Croptype\n                            setListCrop(dataCrop)\n                        }\n                    })\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        const getSoils = async () => {\n            try {\n                await api.get('/soils/get-soils')\n                    .then(response => {\n                        let listSoils = response.data.Soils\n                        setAllSoils(listSoils)\n                        let Ru = \"\"\n                        if (listSoils) {\n                            listSoils.map(item => {\n                                Ru = item.ru\n                            })\n                            setInputsData({ ...InputsData, RUmax: Ru })\n                        }\n                    }).catch(error => {\n                        console.log(error)\n                    })\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        const getCountries = async () => {\n            try {\n                await api.get('/countries/get-countries')\n                    .then(response => {\n                        if (response.data.type === \"success\") {\n                            let listCountries = response.data.Countries\n                            setAllCountry(listCountries)\n\n                        }\n                    }).catch(error => {\n                        console.log(error)\n                    })\n\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getVarieties()\n        getCountries()\n        getSoils()\n        getCropType()\n    }, [])\n\n    useEffect(() => {\n        let sum = Object.values(pluie).reduce((a, v) => a + Number(v), 0)\n        setSumPluie(sum)\n    }, [pluie])\n\n    const getWeather = () => {\n        let data = {\n            lat: coord.lat,\n            lon: coord.lon,\n            type: 'forecast'\n        }\n        api.post('/weather/get-data', data)\n            .then(response => {\n                let weatherData = response.data.data\n                let listForecast = weatherData.list;\n                let days = [];\n                for (let i = 0; i < listForecast.length; i += 8) {\n                    var temp = {};\n                    temp.date = new Date(listForecast[i + 5].dt_txt);\n                    temp.rain = listForecast[i].rain;\n                    temp.temp = ((listForecast[i].main.feels_like)).toFixed(0);\n                    temp.temp_max = ((listForecast[i].main.temp_max)).toFixed(0);\n                    temp.temp_min = ((listForecast[i].main.temp_min)).toFixed(0);\n                    temp.humidity = listForecast[i].main.humidity;\n                    temp.pressure = listForecast[i].main.pressure;\n                    temp.wind = listForecast[i].wind.speed;\n                    temp.main = listForecast[i].weather[0].main;\n                    temp.description = listForecast[i + 3].weather[0].description;\n                    temp.icon = listForecast[i].weather[0].icon;\n                    days.push(temp);\n                }\n                setWeather(days)\n\n\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n\n\n\n\n\n    const handleSoilPick = (e) => {\n        e.preventDefault();\n        const soilType = allSoils.find(\n            (soil) => soil.soil === e.target.value\n        );\n        if (typeof soilType !== \"undefined\") {\n            setInputsData({\n                ...InputsData,\n                soilType: soilType.soil,\n                RUmax: soilType.ru,\n                effIrrig: soilType.fc,\n                ruPratique: soilType.practical_fraction,\n                effPluie: soilType.rain_eff\n            });\n\n        }\n    };\n\n\n    const handleCropPick = (e) => {\n        e.preventDefault();\n        const crop = listCrop.find(\n            (crop) => crop.crop === e.target.value\n        );\n        let varieties = []\n        if (crop) {\n            const variety = allVarieties.map((variety) => {\n                if (variety.crop_id === crop.id) {\n                    varieties.push({\n                        variety: variety.crop_variety\n                    })\n                }\n\n            });\n            setInputsData({\n                ...InputsData,\n                cropType: crop.crop,\n                variety: '',\n                cropVariety: varieties,\n                Profondeur: crop.root_max,\n                days: crop.total,\n                plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n                kcList: crop.all_kc\n            });\n\n        }\n    };\n\n    const handleVarietyPick = (e) => {\n        e.preventDefault();\n        const variety = allVarieties.find(\n            (variety) => variety.crop_variety === e.target.value\n\n        )\n        if (variety) {\n            setInputsData({\n                ...InputsData,\n                cropType: \"\",\n                variety: variety.crop_variety,\n                Profondeur: variety.root_max,\n                days: variety.total,\n                plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n                kcList: variety.all_kc\n            });\n        }\n    };\n\n\n    const handleCountryPick = (e) => {\n        e.preventDefault();\n        const country = allCountry.find(\n            (country) => country.iso === e.target.value\n        );\n        let cities = []\n        if (country) {\n            const city = allCity.map((city) => {\n                if (city.iso === country.iso) {\n                    cities.push({\n                        city: city.city\n                    })\n                }\n\n            });\n\n            setInputsData({\n                ...InputsData,\n                country: country.iso,\n                cities: cities\n            });\n\n        }\n\n    };\n\n    const handleCityPick = (e) => {\n        e.preventDefault();\n        const city = allCity.find(\n            (city) => city.name === e.city.value\n        );\n        if (city) {\n            setInputsData({\n                ...InputsData,\n                city: city.city,\n                daysWeather: city.weather_data_days\n            });\n\n        }\n    };\n\n\n    const onChangeHandler = (value,indx) => {\n        setPluie(state => ({ ...state, [indx]: value }))\n        let formulePe = Number(value) * Number(InputsData.effPluie) / 100\n        setPe(state => ({ ...state, [indx]: formulePe }))\n\n    }\n    \n    const onChangeHandlerIrrigated = (value, indx) => {\n        setIrrigatedAlready(state => ({...state,[indx] :value }) )\n        if(value){\n            let formulePe = Number(value) * Number(InputsData.effPluie) / 100\n            setPe(state => ({ ...state, [indx]: formulePe }))\n\n        }\n\n    }\n\n\n    // useEffect(()=>{\n    //     let daysWeatherArray = []\n    //         InputsData.daysWeather.map(weather=>{\n    //             daysWeatherArray .push(allKc)\n    //         })\n    //         setAllDaysWeather(daysWeatherArray)\n    // },[InputsData.daysWeather])\n\n    useEffect(() => {\n        let kcArray = []\n        InputsData.kcList.map(kc => {\n            let allKc = kc.kc\n            kcArray.push(allKc)\n        })\n        setAllKc(kcArray)\n    }, [InputsData.kcList])\n\n    const tableHydrique = (n) => {\n        var elements = [];\n        let resultFormule = []\n        let kc = 0.7\n        let ET0 = 2\n        let ETC = 0\n        let bilanHydrique = 0\n        let Irrigation = 0\n        let firstFormule = 0\n        let formule = 0\n        let firstFormuleIrrig = 0\n        let formuleIrrig = 0\n        let IrrigationNbr = 0\n        let sumIrrig = 0\n        let sumNbrIrrig = 0\n        let sumETC = 0\n\n\n        for (let i = 1, j = n; i <= n; i++, j--) {\n            ETC = Number(allKc[i - 1]) * Number(ET0)\n            let prevResultBilan = 0\n            firstFormule = (Number(RuInitial) + Number(Pe[i])) - Number(ETC)\n\n            if (i > 1) {\n                prevResultBilan = resultFormule[(i - 1) - 1]\n                formule = (Number(prevResultBilan) + Number(Pe[i])) - (Number(ETC) + 0)\n                formuleIrrig = ((Number(RuMax) - Number(prevResultBilan)) + Number(ETC)) / InputsData.effIrrig\n            }\n            firstFormuleIrrig = (Number(RuMax) - Number(firstFormule)) / InputsData.effIrrig\n            if (i === 1) {\n                if (firstFormule <= RuMax) {\n                    bilanHydrique = firstFormule\n                } else {\n                    bilanHydrique = RuMax\n                }\n                if (RuInitial <= RuMin) {\n                    Irrigation = firstFormuleIrrig\n                } else {\n                    Irrigation = 0\n                }\n            } else {\n                if (formule <= RuMax) {\n                    bilanHydrique = formule\n                } else {\n                    bilanHydrique = RuMax\n                }\n                if (prevResultBilan <= RuMin) {\n                    Irrigation = formuleIrrig\n                } else {\n                    Irrigation = 0\n                }\n            }\n\n            if (Irrigation === 0) {\n                IrrigationNbr = 0\n            } else {\n                IrrigationNbr = 1\n            }\n            let dates = moment(InputsData.plantingDate).add(i - 1, 'days').format(\"YYYY-MM-DD\")\n            elements.push(\n                <tbody>\n                    <tr>\n                        <td>{i}</td>\n                        <td>{dates}</td>\n                        <td>{parseFloat(allKc[i - 1]).toFixed(2)}</td>\n\n                        <td>{ET0}</td>\n                        <td> <input\n                            name={i}\n                            key={i}\n                            className='my-1'\n                            style={{outline: 'none', border: '1px solid #e4e4e4' }}\n                            value={pluie.i}\n                            onChange={(e) => onChangeHandler(e.target.value, i)}\n                        />\n                        </td>\n                        <td>\n                        <input\n                            name={i}\n                            key={i}\n                            className='my-1'\n                            style={{outline: 'none', border: '1px solid #e4e4e4' }}\n                            value={irrigatedAlready.i}\n                            onChange={(e) => onChangeHandlerIrrigated(e.target.value, i)}\n                        />  \n                        </td>\n                        <td>{parseFloat(ETC).toFixed(2)}</td>\n                        <td>{Pe[i]}</td>\n                        <td>{`${parseFloat(bilanHydrique).toFixed(1)}`}</td>\n                        <td>{parseFloat(Irrigation).toFixed(2)}</td>\n                        <td>{IrrigationNbr}</td>\n                    </tr>\n\n                </tbody>\n            );\n\n\n\n            resultFormule.push(bilanHydrique)\n            if (ETC) {\n                sumETC = sumETC + ETC\n\n            }\n            if (Irrigation > 0) {\n                sumNbrIrrig = sumNbrIrrig + IrrigationNbr\n                sumIrrig = sumIrrig + Irrigation\n            }\n\n\n        }\n        useEffect(() => {\n            setChartData(resultFormule)\n            setSumNbrIrrig(sumNbrIrrig)\n            setSumIrrig(sumIrrig)\n            setSumETC(sumETC)\n        }, [sumNbrIrrig])\n\n        return elements;\n    }\n\n    const retrunInputs = () => {\n        switch (elemValue) {\n            case \"pos\":\n                return (\n                    <Row form >\n\n                        <Col className=\"py-4\" lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"country\">Country</label>\n                                <FormSelect id=\"country\" value={InputsData.country || ''} onChange={handleCountryPick}>\n\n                                    <option value=''>Select Country</option>\n\n                                    {\n                                        allCountry.map(country => (\n                                            <option key={country.id} value={country.iso}>{country.name}</option>\n                                        ))\n                                    }\n\n                                </FormSelect>\n\n                            </FormGroup>\n                        </Col>\n                        <Col className=\"py-4\" lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"city\">City</label>\n                                <FormSelect value={InputsData.city || \"\"} onChange={e => setInputsData({ ...InputsData, city: e.target.value })} id=\"city\">\n                                    <option value=\"\">Select City</option>\n                                    {\n                                        InputsData.cities.map(city => {\n                                            return (\n                                                <option value={city.city}>{city.city}</option>\n                                            )\n                                        })\n                                    }\n\n                                </FormSelect>\n                            </FormGroup>\n\n                        </Col>\n\n\n                    </Row>\n\n                )\n            case \"crop\":\n                return (\n                    <Row form className=\"py-2 m-2\">\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"cropType\">Crop Type</label>\n                                <FormSelect id=\"cropType\" value={InputsData.cropType || \"\"} onChange={handleCropPick}>\n                                    <option value=\"\">Select Crop</option>\n                                    {\n                                        listCrop.map(cropType => (\n                                            <option style={{ textTransform: \"capitalize\" }} value={cropType.crop}>{cropType.crop}</option>\n\n                                        ))\n                                    }\n\n                                </FormSelect>\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"cropVariety\">Crop Variety</label>\n                                <FormSelect value={InputsData.variety || \"\"} onChange={handleVarietyPick} id=\"cropVariety\">\n                                    <option value=\"\">Select Crop Variety</option>\n                                    {\n                                        InputsData.cropVariety.map(variety => (\n                                            <option value={variety.variety}>{variety.variety}</option>\n                                        ))\n                                    }\n                                </FormSelect>\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"z\">Profondeur (m)</label>\n                                <FormInput value={InputsData.Profondeur || ''} onChange={e => setInputsData({ ...InputsData, Profondeur: e.target.value })} id='z' placeholder=\"Profondeur\" className={`form-control form-control-md ${InputsDataErr.Profondeur ? 'is-invalid' : \"\"}`}\n                                />\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"days\">Days</label>\n\n                                <FormInput value={InputsData.days || \"\"} id='days' onChange={e => setInputsData({ ...InputsData, days: e.target.value })} placeholder=\"Days\" />\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"days\">Growing Season</label>\n\n                                <FormInput type=\"date\" value={InputsData.plantingDate || \"\"} onChange={e => setInputsData({ ...InputsData, plantingDate: e.target.value })} id='days' />\n\n                            </FormGroup>\n\n                        </Col>\n\n                    </Row>\n\n                )\n            case \"soil\":\n                return (\n                    <Row form className=\"py-2 m-2\">\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"soil\">Soil Type</label>\n                                <FormSelect value={InputsData.soilType || ''} id=\"soil\" onChange={handleSoilPick}>\n                                    <option value=''>Select Soil type</option>\n                                    {\n                                        allSoils.map(soil => {\n                                            return (\n                                                <option key={soil.id} value={soil.soil}>{soil.soil}</option>\n                                            )\n                                        })\n                                    }\n                                </FormSelect>\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"surfaceIrrig\">Surface irriguée (ha)</label>\n                                <FormInput value={InputsData.surfaceIrrig || ''} onChange={e => setInputsData({ ...InputsData, surfaceIrrig: e.target.value })} id=\"surfaceIrrig\" placeholder=\"Surface irriguée\" className={`form-control form-control-md ${InputsDataErr.surfaceIrrig ? 'is-invalid' : \"\"}`}\n                                />\n\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"effPluie\">Efficacité de la pluie (%)</label>\n                                <FormInput value={InputsData.effPluie || ''} onChange={e => setInputsData({ ...InputsData, effPluie: e.target.value })} id='effPluie' placeholder=\"Efficacité de la pluie\" className={`form-control form-control-md ${InputsDataErr.effPluie ? 'is-invalid' : \"\"}`}\n                                />\n\n                            </FormGroup>\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"ruPratique\">Fraction RU pratique (%) </label>\n                                <FormInput value={InputsData.ruPratique || ''} onChange={e => setInputsData({ ...InputsData, ruPratique: e.target.value })} id='ruPratique' placeholder=\"Fraction RU pratique\" className={`form-control form-control-md ${InputsDataErr.ruPratique ? 'is-invalid' : \"\"}`}\n                                />\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"effIrrig\">Efficience de l'irrigation (%) </label>\n                                <FormInput value={InputsData.effIrrig || ''} onChange={e => setInputsData({ ...InputsData, effIrrig: e.target.value })} id='effIrrig' placeholder=\"Efficience de l'irrigation\" className={`form-control form-control-md ${InputsDataErr.effIrrig ? 'is-invalid' : \"\"}`}\n                                />\n\n                            </FormGroup>\n\n                        </Col>\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n                                <label htmlFor=\"ruMax\">RU max (mm/m)</label>\n                                <FormInput value={InputsData.RUmax || ''} onChange={e => setInputsData({ ...InputsData, RUmax: e.target.value })} id='ruMax' placeholder=\"RU max\" className={`form-control form-control-md ${InputsDataErr.RUmax ? 'is-invalid' : \"\"}`}\n                                />\n\n                            </FormGroup>\n\n                        </Col>\n                    </Row>\n                )\n\n            default:\n                return (\n                    <Row form  >\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"country\">Country</label>\n                                <FormSelect id=\"country\" value={InputsData.country || ''} onChange={handleCountryPick}>\n\n                                    <option value=''>Select Country</option>\n\n                                    {\n                                        allCountry.map(country => (\n                                            <option key={country.id} value={country.iso}>{country.name}</option>\n                                        ))\n                                    }\n\n                                </FormSelect>\n\n                            </FormGroup>\n                        </Col>\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\n                            <FormGroup>\n\n                                <label htmlFor=\"city\">City</label>\n                                <FormSelect value={InputsData.city || \"\"} onChange={e => setInputsData({ ...InputsData, city: e.target.value })} id=\"city\">\n                                    <option value=\"\">Select City</option>\n                                    {\n                                        InputsData.cities.map(city => {\n                                            return (\n                                                <option value={city.city}>{city.city}</option>\n                                            )\n                                        })\n                                    }\n\n                                </FormSelect>\n                            </FormGroup>\n\n                        </Col>\n\n                    </Row>)\n        }\n\n    }\n\n    const imageByInputs = () => {\n        switch (elemValue) {\n            case \"pos\":\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={position}\n                />\n            case \"crop\":\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={crop}\n                />\n            case \"soil\":\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={soil}\n                />\n            default:\n                return <img\n                    className=\"rounded-circle h-100\"\n                    width=\"140\"\n                    src={position}\n                />\n        }\n    }\n\n    const isValidInputs = () => {\n        let countryError = \"\"\n        let cityError = \"\"\n        let cropError = \"\"\n        let soilError = \"\"\n        let effIrrigError = \"\"\n        let effPluieError = \"\"\n        let ruPratiqueError = \"\"\n        let RuMaxError = \"\"\n        let surfaceIrrigError = \"\"\n        let profondeurError = \"\"\n        if (!InputsData.country) {\n            countryError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, country: countryError })\n        }\n        if (!InputsData.city) {\n            cityError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, city: cityError })\n        }\n        if (!InputsData.cropType) {\n            cropError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, cropType: cropError })\n        }\n        if (!InputsData.effIrrig) {\n            effIrrigError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, effIrrig: effIrrigError })\n        }\n        if (!InputsData.effPluie) {\n            effPluieError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, effPluie: effPluieError })\n        }\n        if (!InputsData.ruPratique) {\n            ruPratiqueError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, ruPratique: ruPratiqueError })\n        }\n        if (!InputsData.RUmax) {\n            RuMaxError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, RUmax: RuMaxError })\n        }\n        if (!InputsData.soilType) {\n            soilError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, soilType: soilError })\n        }\n        if (!InputsData.Profondeur) {\n            profondeurError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, Profondeur: profondeurError })\n        }\n        if (!InputsData.surfaceIrrig) {\n            surfaceIrrigError = 'Cannot be blank!';\n            setInputsDataErr({ ...InputsDataErr, surfaceIrrig: surfaceIrrigError })\n        }\n        if (effIrrigError || effPluieError || ruPratiqueError || RuMaxError || surfaceIrrigError || profondeurError) {\n            setInputsDataErr({ effIrrig: effIrrigError })\n            setInputsDataErr({ effPluie: effPluieError })\n            setInputsDataErr({ ruPratique: ruPratiqueError })\n            setInputsDataErr({ RUmax: RuMaxError })\n            setInputsDataErr({ ...InputsDataErr, Profondeur: profondeurError })\n            setInputsDataErr({ ...InputsDataErr, surfaceIrrig: surfaceIrrigError })\n\n            return false;\n        }\n\n        return true;\n    }\n    const checkAndSave = () => {\n        const isValid = isValidInputs()\n        if (isValid) {\n            // Save In DataBase\n        }\n\n    }\n\n\n\n    return (\n        <Container fluid className=\"main-content-container p-4\">\n            <Row noGutters className=\"page-header py-4\">\n                <PageTitle\n                    sm=\"4\"\n                    title={t('My Water Balance')}\n                    subtitle={t('overview')}\n                    className=\"text-sm-left\"\n                />\n            </Row>\n            <Row className='text-center my-2'>\n                <Col lg='12' md=\"12\" sm=\"12\">\n                    <Card>\n                        <CardHeader className=\"border-bottom\">\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    width: \"auto\",\n                                    float: \"left\"\n                                }}\n                            >\n                                <h6 className=\"m-0\">{t('Configuration')}</h6>{\" \"}\n                            </div>\n                        </CardHeader>\n                        <CardBody>\n                            <Row>\n                                <Col lg='4' md=\"12\" sm=\"12\" className=\"border-right d-flex justify-content-center align-items-center\">\n                                    <div className=\"mb-3 mx-auto\" style={{ height: \"140px\" }}>\n                                        {imageByInputs()}\n                                    </div>\n                                </Col>\n                                <Col lg='8' md=\"12\" sm=\"12\">\n                                    <Row form className=\"py-2 m-2\" >\n                                        <Col lg=\"12\" md=\"8\" sm=\"8\" className='py-4'>\n                                            <Nav tabs style={{ paddingBottom: 10 }}>\n                                                <NavItem>\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"pos\" className={`${elemValue === \"pos\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">\n                                                        Position\n                                                    </NavLink>\n                                                </NavItem>\n                                                <NavItem>\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"crop\" className={`${elemValue === \"crop\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">Crop Info</NavLink>\n                                                </NavItem>\n                                                <NavItem>\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"soil\" className={`${elemValue === \"soil\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">Soil Info</NavLink>\n                                                </NavItem>\n                                            </Nav>\n                                        </Col>\n\n                                        {retrunInputs()}\n                                    </Row>\n                                    {\n                                        elemValue === \"soil\"\n                                            ?\n                                            <Row className=\"d-flex justify-content-center align-items-center\">\n                                                <Button outline theme=\"success\" onClick={() => isValidInputs()} >Valider</Button>\n                                            </Row>\n                                            :\n                                            null\n                                    }\n                                </Col>\n\n                            </Row>\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <Col lg='12' md=\"12\" sm=\"12\">\n                    <Card>\n                        <CardHeader className=\"border-bottom\">\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-start\",\n                                    width: \"auto\",\n                                    float: \"left\"\n                                }}\n                            >\n                                <h6 className=\"m-0\">{t('Water Report')}</h6>{\" \"}\n                            </div>\n                        </CardHeader>\n                        <CardBody>\n                            <Row>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"ruMax\">RU max (mm)</label>\n                                    <FormInput id=\"ruMax\" value={RuMax} placeholder=\"RU max\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"ruInit\">RU initiale (mm)</label>\n                                    <FormInput id='ruInit' value={RuInitial} placeholder=\"RU initiale\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"epuis\">Epuisement maximal (mm)</label>\n                                    <FormInput id=\"epuis\" value={Epuisement_maximal} placeholder=\"Epuisement maximal\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"nbrIrrig\">Nombre d'irrigations</label>\n\n                                    <FormInput id='nbrIrrig' value={sumNbrIrrig} placeholder=\"Nombre d'irrigations\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"hautIrrig\">Hauteur d'eau des irrigations (mm)</label>\n                                    <FormInput id='hautIrrig' value={parseFloat(sumIrrig).toFixed(0)} placeholder=\"Hauteur d'eau des irrigations\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"vIrrig\">Volume des irrigations (m³ /ha)</label>\n                                    <FormInput value={parseFloat(VolumeIrrigation).toFixed(0)} id=\"vIrrig\" placeholder=\"Volume des irrigations\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"rumin\">Ru Min (mm)</label>\n                                    <FormInput value={RuMin} id=\"rumin\" placeholder=\"RU min\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"volTotalIrrig\">Volume Total d'eau d'irrigation (m³)</label>\n                                    <FormInput value={parseFloat(VolumeTotalEauIrrigation).toFixed(0)} id=\"volTotalIrrig\" placeholder=\"Volume Total d'eau d'irrigation\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"pluieTotal\">Pluie Total (mm)</label>\n                                    <FormInput value={parseFloat(sumPluie).toFixed(0)} id=\"pluieTotal\" placeholder=\"Pluie total\" />\n                                </Col>\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\n                                    <label htmlFor=\"evoTotal\">Evapotranspiration totale (mm)</label>\n                                    <FormInput value={parseFloat(sumETC).toFixed(0)} id='evoTotal' placeholder=\"Evapotranspiration totale\" />\n                                </Col>\n\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" >\n                                    <label htmlFor=\"deficit\">Déficit (mm)</label>\n                                    <FormInput value={parseFloat(Deficit).toFixed(0)} id=\"deficit\" placeholder=\"Déficit\" />\n                                </Col>\n                            </Row>\n\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n            <Row className=\"py-2 d-flex justify-content-center align-items-center text-center\">\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <p className=\"py-2 d-flex justify-content-center align-items-center\">\n                                <button style={{ fontSize: 30, margin: 8, border: '1px solid #eee', borderRadius: 10, background: 'none' }} onClick={() => setToggle(true)}><i className='material-icons'>&#xe265;</i></button>\n                                <button style={{ fontSize: 30, margin: 8, border: '1px solid #eee', borderRadius: 10, background: 'none' }} onClick={() => setToggle(false)}><i className='material-icons'>&#xe6e1;</i></button>\n                            </p>\n\n                            <Col className={`${toggle ? '' : 'd-none'}`} lg=\"12\" md=\"12\" sm=\"12\">\n                                <h6>Water Balance</h6>\n                                <table className=\"table mb-0 text-center table-bordered table-hover table-responsive\">\n                                    <thead className=\"bg-light\">\n                                        <tr>\n                                            <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('ET0')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Pluie')} (mm)</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Irrigated already')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('ETc')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Pe')} (mm)</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Bilan hydrique')} (mm)</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Irrigation')}</th>\n                                            <th scope=\"col\" className=\"border-0\">{t('Nbr Irrigation')}</th>\n                                        </tr>\n                                    </thead>\n                                    {/* <tbody> */}\n                                    {tableHydrique(InputsData.days)}\n                                    {/* </tbody> */}\n                                </table>\n                            </Col>\n                            <Col className={`${toggle ? 'd-none' : ''}`} lg=\"12\" md=\"8\" sm=\"8\">\n                                <h6>Water Balance Chart</h6>\n                                <WaterChart data={chartData} />\n                            </Col>\n\n                        </CardBody>\n                    </Card>\n\n\n\n\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BilanHydrique"],"mappings":"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"},"metadata":{},"sourceType":"module"}