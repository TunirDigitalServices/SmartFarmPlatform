{"ast":null,"code":"import _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/FieldSettingForms/FieldCropForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Form, FormInput, FormSelect, FormGroup } from \"shards-react\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport axios from \"axios\";\nimport api from '../../api/api';\nimport { useTranslation } from \"react-i18next\";\n\nfunction FieldCropForm(props) {\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      listCrop = _useState2[0],\n      setListCrop = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allVarieties = _useState4[0],\n      setAllVarieties = _useState4[1];\n\n  var _useState5 = useState({\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    kcList: []\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cropData = _useState6[0],\n      setCropData = _useState6[1];\n\n  var _useState7 = useState({\n    type: props.cropType,\n    plantDate: props.plantingDate,\n    rootDepth: props.rootDepth,\n    days: props.days,\n    cropVariety: props.cropVariety,\n    //  previous_type: props.previous_type,\n    startDate: props.startDate,\n    endDate: props.endDate,\n    field_uid: props.field_uid // GDD: props.gdd\n\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      otherInfo = _useState8[0],\n      setOI = _useState8[1]; // useEffect(()=>{\n  //   const getZones= async () => {\n  //     const response = await api.get('/zones')\n  //     const newData = await response.data;\n  //     setData(newData.farms.fields);\n  //     console.log(newData.farms.fields)\n  //   };\n  //   getZones();\n  // },[])\n\n\n  useEffect(function () {\n    var CardValues = JSON.stringify(otherInfo);\n    props.onChange(CardValues);\n  }, [props.saved]);\n  useEffect(function () {\n    var getCropType = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var getVarieties = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.get('/varieties/get-varieties').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listVarieties = response.data.Varieties;\n                    setAllVarieties(listVarieties);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 5]]);\n      }));\n\n      return function getVarieties() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getCropType();\n  }, []);\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault();\n    props.handleCropType(e);\n    var crop = listCrop.find(function (crop) {\n      return crop.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      setOI(_objectSpread({}, otherInfo, {\n        type: crop.id\n      }));\n      props.handleRuPractical(crop.practical_fraction);\n      props.handleDays(crop.total);\n      props.handleRootDepth(crop.root_max);\n      props.handlePlantingDate(crop.plant_date.slice(0, 11).replace('T', ''));\n    }\n\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        Profondeur: crop.root_max,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      props.handleCropVariety(e);\n      props.handleDays(variety.total);\n      props.handleRootDepth(variety.root_max);\n      props.handlePlantingDate(variety.plant_date.slice(0, 11).replace('T', ''));\n    }\n\n    if (variety) {\n      setCropData(_objectSpread({}, cropData, {\n        cropType: \"\",\n        variety: variety.id,\n        Profondeur: variety.root_max,\n        days: variety.total,\n        plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n        kcList: variety.all_kc\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    sm: \"12\",\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, t('crop_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: props.handleZone,\n    placeholder: t('crop_zone'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, t('select_zone')), props.zones.map(function (item, indx) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.Uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 26\n      }\n    }, item.name);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, t('crop_field')), /*#__PURE__*/React.createElement(FormSelect, {\n    value: otherInfo.field_uid,\n    onChange: props.handleUidField,\n    placeholder: t('crop_zone'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, t('select_field')), props.fields.map(function (item, indx) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: item.Uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 26\n      }\n    }, item.title);\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, t('crop_type')), /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: handleCropPick,\n    placeholder: t('crop_type'),\n    value: otherInfo.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, \"Select Crop\"), listCrop.map(function (crop) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: crop.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, crop.crop);\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, t('prev_type')), /*#__PURE__*/React.createElement(FormInput, {\n    onChange: props.handlePrevType,\n    placeholder: t('prev_type'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n    value: cropData.variety || \"\",\n    onChange: handleVarietyPick,\n    id: \"cropVariety\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, t('crop_type')), cropData.cropVariety.map(function (variety) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: variety.varietyId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 27\n      }\n    }, variety.variety);\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, t('depth'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.rootDepth,\n    onChange: function onChange(e) {\n      return props.handleRootDepth(e.target.value);\n    },\n    id: \"z\",\n    placeholder: t('depth'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.days,\n    id: \"days\",\n    onChange: function onChange(e) {\n      return props.handleDays(e.target.value);\n    },\n    placeholder: t('Days'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"date\",\n    value: props.plantingDate,\n    onChange: function onChange(e) {\n      return props.handlePlantingDate(e.target.value);\n    },\n    id: \"days\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, t('fraction_pratique'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.ruPratique,\n    onChange: function onChange(e) {\n      return props.handleRuPractical(e.target.value);\n    },\n    id: \"ruPratique\",\n    placeholder: t('fraction_pratique'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.ecartInter,\n    onChange: props.handleEcartInter,\n    id: \"ecartInter\",\n    placeholder: t('ecart_inter'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.ecartIntra,\n    onChange: props.handleEcartIntra,\n    id: \"ecartIntra\",\n    placeholder: t('ecart_intra'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }\n  }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: props.density,\n    onChange: props.handleCropDensity,\n    id: \"densit\\xE9\",\n    placeholder: t('densité'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nFieldCropForm.defaultProps = {\n  crop: \"Crop A\",\n  prevCrop: \"Crop B\"\n};\nexport default FieldCropForm;","map":{"version":3,"names":["React","useEffect","useState","Row","Col","Form","FormInput","FormSelect","FormGroup","RangeDatePicker","axios","api","useTranslation","FieldCropForm","props","t","i18n","listCrop","setListCrop","allVarieties","setAllVarieties","cropType","variety","cropVariety","Profondeur","days","plantingDate","kcList","cropData","setCropData","type","plantDate","rootDepth","startDate","endDate","field_uid","otherInfo","setOI","CardValues","JSON","stringify","onChange","saved","getCropType","get","then","response","dataCrop","data","Croptype","console","log","getVarieties","listVarieties","Varieties","catch","error","handleCropPick","e","preventDefault","handleCropType","crop","find","id","target","value","handleRuPractical","practical_fraction","handleDays","total","handleRootDepth","root_max","handlePlantingDate","plant_date","slice","replace","varieties","map","crop_id","push","varietyId","crop_variety","all_kc","handleVarietyPick","handleCropVariety","margin","handleZone","zones","item","indx","Uid","name","handleUidField","fields","title","handlePrevType","ruPratique","ecartInter","handleEcartInter","ecartIntra","handleEcartIntra","density","handleCropDensity","defaultProps","prevCrop"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/FieldSettingForms/FieldCropForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Form,\n  FormInput,\n  FormSelect,\n  FormGroup\n} from \"shards-react\";\nimport RangeDatePicker from \"../common/RangeDatePicker\";\nimport axios from \"axios\";\nimport api from '../../api/api';\n\nimport { useTranslation } from \"react-i18next\";\n\nfunction FieldCropForm(props) {\n  const { t, i18n } = useTranslation();\n\n\n  const [listCrop, setListCrop] = useState([])\n  const [allVarieties,setAllVarieties] = useState([])\n  const [cropData,setCropData] = useState({\n    cropType:\"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    kcList: []\n  })\n  const [otherInfo, setOI] = useState({\n    type: props.cropType,\n    plantDate:props.plantingDate,\n    rootDepth:props.rootDepth,\n    days:props.days,\n    cropVariety:props.cropVariety,\n    //  previous_type: props.previous_type,\n    startDate: props.startDate,\n    endDate: props.endDate,\n    field_uid: props.field_uid\n    // GDD: props.gdd\n  });\n  // useEffect(()=>{\n  //   const getZones= async () => {\n  //     const response = await api.get('/zones')\n  //     const newData = await response.data;\n  //     setData(newData.farms.fields);\n  //     console.log(newData.farms.fields)\n  //   };\n  //   getZones();\n\n  // },[])\n\n  useEffect(() => {\n\n\n    let CardValues = JSON.stringify(otherInfo);\n    props.onChange(CardValues);\n  }, [props.saved]);\n\n\n  useEffect(() => {\n    const getCropType = async () => {\n      try {\n        await api.get('/croptype/list-crop')\n          .then(response => {\n            if (response) {\n              let dataCrop = response.data.Croptype\n              setListCrop(dataCrop)\n            }\n          })\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n    const getVarieties = async () => {\n      try {\n          await api.get('/varieties/get-varieties')\n              .then(response => {\n                  if (response.data.type === \"success\") {\n                      let listVarieties = response.data.Varieties\n                      setAllVarieties(listVarieties)\n\n                  }\n              }).catch(error => {\n                  console.log(error)\n              })\n\n      } catch (error) {\n          console.log(error)\n      }\n  }\n    getVarieties()\n    getCropType()\n  }, [])\n\n  const handleCropPick = (e) => {\n    e.preventDefault()\n    props.handleCropType(e)\n    const crop = listCrop.find(\n      (crop) => crop.id == e.target.value\n      );\n      if(e.target.value !== ''){\n        setOI({...otherInfo, type : crop.id})\n        props.handleRuPractical(crop.practical_fraction)\n        props.handleDays(crop.total)\n        props.handleRootDepth(crop.root_max)\n        props.handlePlantingDate(crop.plant_date.slice(0, 11).replace('T', ''))\n\n      }\n      let varieties = []\n      if (crop) {\n        const variety = allVarieties.map((variety) => {\n          if (variety.crop_id === crop.id) {\n            varieties.push({\n              varietyId :variety.id,\n              variety: variety.crop_variety\n            })\n          }\n        });\n        \n        setCropData({\n          ...cropData,\n            cropType: crop.id,\n            variety: crop.crop_variety,\n            cropVariety: varieties,\n            Profondeur: crop.root_max,\n            days: crop.total,\n            plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n            kcList: crop.all_kc\n          });\n          \n\n    }\n};\nconst handleVarietyPick = (e) => {\n  e.preventDefault();\n  const variety = allVarieties.find(\n   \n      (variety) => variety.id == e.target.value\n\n  )\n  if(e.target.value !== ''){\n    props.handleCropVariety(e)\n    props.handleDays(variety.total)\n    props.handleRootDepth(variety.root_max)\n    props.handlePlantingDate(variety.plant_date.slice(0, 11).replace('T', ''))\n\n  }\n  if (variety) {\n      setCropData({\n          ...cropData,\n          cropType: \"\",\n          variety: variety.id,\n          Profondeur: variety.root_max,\n          days: variety.total,\n          plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n          kcList: variety.all_kc\n      });\n  }\n};\n\n  return (\n    <Col lg=\"12\" sm=\"12\" md=\"6\">\n      <Form>\n        <Row form>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('crop_zone')}</p>\n            <FormSelect\n              onChange={props.handleZone}\n              placeholder={t('crop_zone')}\n            >\n              <option>{t('select_zone')}</option>\n\n              {\n                props.zones.map((item, indx) => {\n                  return <option value={item.Uid}>{item.name}</option>\n                })\n              }\n            </FormSelect>\n          </Col>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('crop_field')}</p>\n            <FormSelect\n              value={otherInfo.field_uid}\n              onChange={props.handleUidField}\n              placeholder={t('crop_zone')}\n            >\n              <option>{t('select_field')}</option>\n              {\n                props.fields.map((item, indx) => {\n                  return <option value={item.Uid}>{item.title}</option>\n                })\n              }\n            </FormSelect>\n          </Col>\n        </Row>\n        <Row form>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('crop_type')}</p>\n            <FormSelect\n              onChange={handleCropPick}\n              placeholder={t('crop_type')}\n              value={otherInfo.type}\n            >\n              <option value=\"\">Select Crop</option>\n              {\n                listCrop.map(crop => {\n                  return (\n                    <option value={crop.id}>{crop.crop}</option>\n\n                  )\n                })\n              }\n            </FormSelect>\n          </Col>\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('prev_type')}</p>\n            <FormInput\n              onChange={props.handlePrevType}\n              placeholder={t('prev_type')}\n            />\n          </Col>\n        </Row>\n        <Row form>\n          {/* <Col lg='4' sm=\"12\" md=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('gdd')}</p>\n            <FormInput\n              value={otherInfo.GDD}\n              placeholder={t('gdd')}\n              required\n              onChange={props.handleGGD}\n            />\n          </Col> */}\n          {/* <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n            <p style={{ margin: \"0px\" }}>{t('growth_date')}</p>\n            <RangeDatePicker\n            \n              onChange={value =>\n              props.handleDate(value)\n              }\n              EndingDatePlaceHolder=\"Harvest Date\"\n              StartingDatePlaceHolder=\"Planting Date\"\n            />\n          </Col> */}\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('crop_variety')}</p>\n              <FormSelect value={cropData.variety || \"\"} onChange={handleVarietyPick} id=\"cropVariety\">\n                <option value=\"\">{t('crop_type')}</option>\n                  {\n                      cropData.cropVariety.map(variety => (\n                          <option value={variety.varietyId}>{variety.variety}</option>\n                      ))\n                  }\n              </FormSelect>\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('depth')} (m)</p>\n              <FormInput value={props.rootDepth} onChange={e => props.handleRootDepth(e.target.value)} id='z' placeholder={t('depth')}\n              />\n\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('Days')}</p>\n\n              <FormInput value={props.days} id='days' onChange={e => props.handleDays(e.target.value)} placeholder={t('Days')} />\n\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n            <FormGroup>\n              <p style={{ margin: \"0px\" }}>{t('growing_season')}</p>\n              <FormInput type=\"date\" value={props.plantingDate} onChange={e => props.handlePlantingDate(e.target.value)} id='days' />\n\n            </FormGroup>\n\n          </Col>\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('fraction_pratique')} (%) </p>\n                <FormInput value={props.ruPratique} onChange={e => props.handleRuPractical(e.target.value)} id='ruPratique' placeholder={t('fraction_pratique')}\n                />\n              </FormGroup>\n\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('ecart_inter')} (m)</p>\n                <FormInput value={props.ecartInter} onChange={props.handleEcartInter} id='ecartInter' placeholder={t('ecart_inter')}\n                />\n              </FormGroup>\n\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('ecart_intra')} (m) </p>\n                <FormInput value={props.ecartIntra} onChange={props.handleEcartIntra} id='ecartIntra' placeholder={t('ecart_intra')}\n                />\n              </FormGroup>\n\n            </Col>\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('densité')} (plants/ha)</p>\n                <FormInput value={props.density} onChange={props.handleCropDensity} id='densité' placeholder={t('densité')}\n                />\n              </FormGroup>\n\n            </Col>\n        </Row>\n      </Form>\n    </Col>\n  );\n}\n\nFieldCropForm.defaultProps = {\n  crop: \"Crop A\",\n  prevCrop: \"Crop B\"\n};\n\nexport default FieldCropForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}