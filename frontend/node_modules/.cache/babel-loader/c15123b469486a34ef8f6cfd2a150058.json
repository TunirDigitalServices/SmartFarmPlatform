{"ast":null,"code":"import _defineProperty from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\backoffice v2\\\\frontend\\\\src\\\\components\\\\Simulation\\\\BilanHydrique.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Nav, NavItem, NavLink, FormInput, FormSelect, Button } from 'shards-react';\nimport PageTitle from \"../common/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport api from '../../api/api';\nimport moment from 'moment';\nimport WaterChart from './WaterChart';\nimport position from '../../images/pin.png';\nimport soil from \"../../images/soil.png\";\nimport crop from \"../../images/crop.png\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport swal from 'sweetalert';\nimport { useHistory } from 'react-router-dom';\n\nvar BilanHydrique = function BilanHydrique() {\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      toggle = _useState4[0],\n      setToggle = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pluie = _useState6[0],\n      setPluie = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      irrigatedAlready = _useState8[0],\n      setIrrigatedAlready = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Pe = _useState10[0],\n      setPe = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sumNbrIrrig = _useState12[0],\n      setSumNbrIrrig = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sumIrrig = _useState14[0],\n      setSumIrrig = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sumPluie = _useState16[0],\n      setSumPluie = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sumETC = _useState18[0],\n      setSumETC = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      chartData = _useState20[0],\n      setChartData = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      allKc = _useState22[0],\n      setAllKc = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      allDaysWeather = _useState24[0],\n      setAllDaysWeather = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      allVarieties = _useState26[0],\n      setAllVarieties = _useState26[1];\n\n  var _useState27 = useState('name'),\n      _useState28 = _slicedToArray(_useState27, 2),\n      elemValue = _useState28[0],\n      setElemValue = _useState28[1];\n\n  var _useState29 = useState({}),\n      _useState30 = _slicedToArray(_useState29, 2),\n      weather = _useState30[0],\n      setWeather = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      listCrop = _useState32[0],\n      setListCrop = _useState32[1];\n\n  var _useState33 = useState({\n    Kc: \"\",\n    ET0: \"\",\n    surfaceIrrig: \"\",\n    RUmax: \"\",\n    Profondeur: \"\",\n    effPluie: \"\",\n    ruPratique: \"\",\n    effIrrig: \"\",\n    country: \"\",\n    cities: [],\n    city: \"\",\n    cropType: \"\",\n    cropVariety: [],\n    variety: '',\n    days: \"\",\n    plantingDate: \"\",\n    soilType: \"\",\n    temperature: null,\n    kcList: [],\n    daysWeather: []\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      InputsData = _useState34[0],\n      setInputsData = _useState34[1];\n\n  var _useState35 = useState(null),\n      _useState36 = _slicedToArray(_useState35, 2),\n      nameError = _useState36[0],\n      setNameError = _useState36[1];\n\n  var _useState37 = useState(null),\n      _useState38 = _slicedToArray(_useState37, 2),\n      cropError = _useState38[0],\n      setCropError = _useState38[1];\n\n  var _useState39 = useState(null),\n      _useState40 = _slicedToArray(_useState39, 2),\n      soilError = _useState40[0],\n      setSoilError = _useState40[1];\n\n  var _useState41 = useState(null),\n      _useState42 = _slicedToArray(_useState41, 2),\n      cityError = _useState42[0],\n      setCityError = _useState42[1];\n\n  var _useState43 = useState(null),\n      _useState44 = _slicedToArray(_useState43, 2),\n      error = _useState44[0],\n      setError = _useState44[1];\n\n  var _useState45 = useState({\n    lat: '',\n    lon: ''\n  }),\n      _useState46 = _slicedToArray(_useState45, 2),\n      coord = _useState46[0],\n      setCoord = _useState46[1];\n\n  var _useState47 = useState([]),\n      _useState48 = _slicedToArray(_useState47, 2),\n      allSoils = _useState48[0],\n      setAllSoils = _useState48[1];\n\n  var _useState49 = useState([]),\n      _useState50 = _slicedToArray(_useState49, 2),\n      allCountry = _useState50[0],\n      setAllCountry = _useState50[1];\n\n  var _useState51 = useState([]),\n      _useState52 = _slicedToArray(_useState51, 2),\n      allCity = _useState52[0],\n      setAllCity = _useState52[1];\n\n  var _useState53 = useState({\n    name: \"\",\n    cityId: \"\",\n    cropTypeId: \"\",\n    soilTypeId: \"\",\n    cropVarietyId: \"\"\n  }),\n      _useState54 = _slicedToArray(_useState53, 2),\n      dataSimulation = _useState54[0],\n      setDataSimulation = _useState54[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var ETC = Number(InputsData.ET0) * Number(InputsData.Kc);\n  var RuMax = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n  var RuInitial = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\n  var Epuisement_maximal = Number(InputsData.RUmax) * Number(InputsData.Profondeur) * Number(InputsData.ruPratique) / 100;\n  var RuMin = Number(RuMax) - Number(Epuisement_maximal);\n  var VolumeIrrigation = sumIrrig * 10;\n  var VolumeTotalEauIrrigation = Number(VolumeIrrigation) * Number(InputsData.surfaceIrrig);\n  var Deficit = sumETC - sumPluie;\n\n  var getVarieties = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/varieties/get-varieties').then(function (response) {\n                if (response.data.type === \"success\") {\n                  var listVarieties = response.data.Varieties;\n                  setAllVarieties(listVarieties);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getVarieties() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getCitiesList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/cities/list-cities').then(function (response) {\n                var cities = response.data.Cities;\n\n                if (response && response.data.type === \"success\") {\n                  setAllCity(cities);\n                }\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getCitiesList() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // useEffect(() => {\n  //     getWeather()\n  // }, [coord.lat, coord.lon])\n\n\n  useEffect(function () {\n    getCitiesList();\n\n    var getCropType = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setAllSoils(listSoils);\n                  var Ru = \"\";\n\n                  if (listSoils) {\n                    listSoils.map(function (item) {\n                      Ru = item.ru;\n                    });\n                    setInputsData(_objectSpread({}, InputsData, {\n                      RUmax: Ru\n                    }));\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var getCountries = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.get('/countries/get-countries').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listCountries = response.data.Countries;\n                    setAllCountry(listCountries);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      return function getCountries() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getCountries();\n    getSoils();\n    getCropType();\n  }, []); // useEffect(() => {\n  //     let sum = Object.values(pluie).reduce((a, v) => a + Number(v), 0)\n  //     setSumPluie(sum)\n  // }, [pluie])\n\n  var getWeather = function getWeather() {\n    var data = {\n      lat: coord.lat,\n      lon: coord.lon,\n      type: 'forecast'\n    };\n    api.post('/weather/get-data', data).then(function (response) {\n      var weatherData = response.data.data;\n      var listForecast = weatherData.list;\n      var days = [];\n\n      for (var i = 0; i < listForecast.length; i += 8) {\n        var temp = {};\n        temp.date = new Date(listForecast[i + 5].dt_txt);\n        temp.rain = listForecast[i].rain;\n        temp.temp = listForecast[i].main.feels_like.toFixed(0);\n        temp.temp_max = listForecast[i].main.temp_max.toFixed(0);\n        temp.temp_min = listForecast[i].main.temp_min.toFixed(0);\n        temp.humidity = listForecast[i].main.humidity;\n        temp.pressure = listForecast[i].main.pressure;\n        temp.wind = listForecast[i].wind.speed;\n        temp.main = listForecast[i].weather[0].main;\n        temp.description = listForecast[i + 3].weather[0].description;\n        temp.icon = listForecast[i].weather[0].icon;\n        days.push(temp);\n      }\n\n      setWeather(days);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleSoilPick = function handleSoilPick(value) {\n    if (value) {\n      setDataSimulation(_objectSpread({}, dataSimulation, {\n        soilTypeId: value\n      }));\n    }\n\n    var soilType = allSoils.find(function (soil) {\n      return soil.id == value;\n    });\n\n    if (typeof soilType !== \"undefined\") {\n      setInputsData(_objectSpread({}, InputsData, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effIrrig: soilType.fc,\n        ruPratique: soilType.practical_fraction,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  };\n\n  var handleCropPick = function handleCropPick(value) {\n    if (value) {\n      setDataSimulation(_objectSpread({}, dataSimulation, {\n        cropTypeId: value\n      }));\n    }\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == value;\n    });\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setInputsData(_objectSpread({}, InputsData, {\n        cropType: crop.crop,\n        variety: '',\n        cropVariety: varieties,\n        Profondeur: crop.root_max,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.crop_variety === e.target.value;\n    });\n\n    if (variety) {\n      setInputsData(_objectSpread({}, InputsData, {\n        cropType: \"\",\n        variety: variety.crop_variety,\n        Profondeur: variety.root_max,\n        days: variety.total,\n        plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\n        kcList: variety.all_kc\n      }));\n    }\n  };\n\n  var handleCountryPick = function handleCountryPick(e) {\n    e.preventDefault();\n    var country = allCountry.find(function (country) {\n      return country.iso === e.target.value;\n    });\n    var cities = [];\n\n    if (country) {\n      var city = allCity.map(function (city) {\n        if (city.iso === country.iso) {\n          cities.push({\n            city: city.city,\n            id: city.id\n          });\n        }\n      });\n      setInputsData(_objectSpread({}, InputsData, {\n        country: country.iso,\n        cities: cities\n      }));\n    }\n  };\n\n  var handleCityPick = function handleCityPick(e) {\n    e.preventDefault();\n    var city = allCity.find(function (city) {\n      return city.name === e.city.value;\n    });\n\n    if (city) {\n      setInputsData(_objectSpread({}, InputsData, {\n        city: city.city,\n        daysWeather: city.weather_data_days\n      }));\n    }\n  };\n\n  var onChangeHandler = function onChangeHandler(value, indx) {\n    setPluie(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, value));\n    });\n    var formulePe = Number(value) * Number(InputsData.effPluie) / 100;\n    setPe(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, formulePe));\n    });\n  };\n\n  var onChangeHandlerIrrigated = function onChangeHandlerIrrigated(value, indx) {\n    setIrrigatedAlready(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, indx, value));\n    });\n\n    if (value) {\n      var formulePe = Number(value) * Number(InputsData.effPluie) / 100;\n      setPe(function (state) {\n        return _objectSpread({}, state, _defineProperty({}, indx, formulePe));\n      });\n    }\n  }; // useEffect(()=>{\n  //     let daysWeatherArray = []\n  //         InputsData.daysWeather.map(weather=>{\n  //             daysWeatherArray .push(allKc)\n  //         })\n  //         setAllDaysWeather(daysWeatherArray)\n  // },[InputsData.daysWeather])\n  // useEffect(() => {\n  //     let kcArray = []\n  //     InputsData.kcList.map(kc => {\n  //         let allKc = kc.kc\n  //         kcArray.push(allKc)\n  //     })\n  //     setAllKc(kcArray)\n  // }, [InputsData.kcList])\n\n\n  var tableHydrique = function tableHydrique(n) {\n    var elements = [];\n    var resultFormule = [];\n    var kc = 0.7;\n    var ET0 = 2;\n    var ETC = 0;\n    var bilanHydrique = 0;\n    var Irrigation = 0;\n    var firstFormule = 0;\n    var formule = 0;\n    var firstFormuleIrrig = 0;\n    var formuleIrrig = 0;\n    var IrrigationNbr = 0;\n    var sumIrrig = 0;\n    var sumNbrIrrig = 0;\n    var sumETC = 0;\n\n    var _loop = function _loop(i, j) {\n      ETC = Number(allKc[i - 1]) * Number(ET0);\n      var prevResultBilan = 0;\n      firstFormule = Number(RuInitial) + Number(Pe[i]) - Number(ETC);\n\n      if (i > 1) {\n        prevResultBilan = resultFormule[i - 1 - 1];\n        formule = Number(prevResultBilan) + Number(Pe[i]) - (Number(ETC) + 0);\n        formuleIrrig = (Number(RuMax) - Number(prevResultBilan) + Number(ETC)) / InputsData.effIrrig;\n      }\n\n      firstFormuleIrrig = (Number(RuMax) - Number(firstFormule)) / InputsData.effIrrig;\n\n      if (i === 1) {\n        if (firstFormule <= RuMax) {\n          bilanHydrique = firstFormule;\n        } else {\n          bilanHydrique = RuMax;\n        }\n\n        if (RuInitial <= RuMin) {\n          Irrigation = firstFormuleIrrig;\n        } else {\n          Irrigation = 0;\n        }\n      } else {\n        if (formule <= RuMax) {\n          bilanHydrique = formule;\n        } else {\n          bilanHydrique = RuMax;\n        }\n\n        if (prevResultBilan <= RuMin) {\n          Irrigation = formuleIrrig;\n        } else {\n          Irrigation = 0;\n        }\n      }\n\n      if (Irrigation === 0) {\n        IrrigationNbr = 0;\n      } else {\n        IrrigationNbr = 1;\n      }\n\n      var dates = moment(InputsData.plantingDate).add(i - 1, 'days').format(\"YYYY-MM-DD\");\n      elements.push( /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }\n      }, i), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 25\n        }\n      }, dates), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 25\n        }\n      }, parseFloat(allKc[i - 1]).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }\n      }, ET0), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n        name: i,\n        key: i,\n        className: \"my-1\",\n        style: {\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        value: pluie.i,\n        onChange: function onChange(e) {\n          return onChangeHandler(e.target.value, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: i,\n        key: i,\n        className: \"my-1\",\n        style: {\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        value: irrigatedAlready.i,\n        onChange: function onChange(e) {\n          return onChangeHandlerIrrigated(e.target.value, i);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 25\n        }\n      }, parseFloat(ETC).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 25\n        }\n      }, Pe[i]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 25\n        }\n      }, \"\".concat(parseFloat(bilanHydrique).toFixed(1))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }\n      }, parseFloat(Irrigation).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 25\n        }\n      }, IrrigationNbr))));\n      resultFormule.push(bilanHydrique);\n\n      if (ETC) {\n        sumETC = sumETC + ETC;\n      }\n\n      if (Irrigation > 0) {\n        sumNbrIrrig = sumNbrIrrig + IrrigationNbr;\n        sumIrrig = sumIrrig + Irrigation;\n      }\n    };\n\n    for (var i = 1, j = n; i <= n; i++, j--) {\n      _loop(i, j);\n    }\n\n    return elements;\n  };\n\n  var isValidInputs = function isValidInputs() {\n    var cityError = \"\";\n    var nameError = \"\";\n    var cropError = \"\";\n    var soilError = \"\";\n    var error = '';\n\n    if (dataSimulation.cityId === \"\") {\n      cityError = \"\".concat(t('city_error'));\n      error = \"\".concat(t('city_error'));\n      setCityError(cityError);\n      setError(error);\n    }\n\n    if (dataSimulation.name === \"\") {\n      nameError = \"\".concat(t('name_error'));\n      error = \"\".concat(t('name_error'));\n      setNameError(nameError);\n      setError(error);\n    }\n\n    if (InputsData.cropType === \"\") {\n      cropError = \"\".concat(t('croptype_error'));\n      error = \"\".concat(t('croptype_error'));\n      setCropError(cropError);\n      setError(error);\n    }\n\n    if (InputsData.soilType === \"\") {\n      soilError = \"\".concat(t('soiltype_error'));\n      error = \"\".concat(t('soiltype_error'));\n      setSoilError(soilError);\n      setError(error);\n    }\n\n    if (soilError || cropError || cityError || nameError) {\n      setSoilError(soilError);\n      setCropError(cropError);\n      setNameError(nameError);\n      setCityError(cityError);\n      setError(error);\n      return false;\n    } else {\n      setSoilError('');\n      setCropError('');\n      setNameError('');\n      setCityError('');\n      setError('');\n    }\n\n    return true;\n  };\n\n  var returnInputs = function returnInputs() {\n    switch (elemValue) {\n      case \"name\":\n        return /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"name\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 25\n          }\n        }, t('name')), /*#__PURE__*/React.createElement(FormInput, {\n          id: \"name\",\n          placeholder: t('name'),\n          value: dataSimulation.name,\n          className: \"form-control form-control-md \".concat(nameError ? \"is-invalid\" : \"\"),\n          onChange: function onChange(e) {\n            return setDataSimulation(_objectSpread({}, dataSimulation, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 25\n          }\n        }));\n\n      case \"pos\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          className: \"py-4\",\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"country\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 33\n          }\n        }, t('state')), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"country\",\n          value: InputsData.country || '',\n          onChange: handleCountryPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 37\n          }\n        }, t('select_country')), allCountry.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 45\n            }\n          }, country.name);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          className: \"py-4\",\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 33\n          }\n        }, t('city')), /*#__PURE__*/React.createElement(FormSelect, {\n          className: \"form-control form-control-md \".concat(cityError ? \"is-invalid\" : \"\"),\n          value: dataSimulation.cityId || \"\",\n          onChange: function onChange(e) {\n            return setDataSimulation(_objectSpread({}, dataSimulation, {\n              cityId: e.target.value\n            }));\n          },\n          id: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 37\n          }\n        }, t('select_city')), InputsData.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: city.id,\n            value: city.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 49\n            }\n          }, city.city);\n        })))));\n\n      case \"crop\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cropType\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 33\n          }\n        }, t('crop_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          className: \"form-control form-control-md \".concat(cropError ? \"is-invalid\" : \"\"),\n          id: \"cropType\",\n          value: dataSimulation.cropTypeId || \"\",\n          onChange: function onChange(e) {\n            return handleCropPick(e.target.value);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 37\n          }\n        }, t('select_crop')), listCrop.map(function (cropType) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            key: cropType.id,\n            value: cropType.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 45\n            }\n          }, cropType.crop);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 33\n          }\n        }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.variety || \"\",\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 37\n          }\n        }, t('crop_type')), InputsData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 45\n            }\n          }, variety.variety);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ruPratique\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 33\n          }\n        }, t('fraction_pratique'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.ruPratique || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: t('fraction_pratique'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"z\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 33\n          }\n        }, t('depth'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.Profondeur || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              Profondeur: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('profondeur'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 33\n          }\n        }, t('Days')), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.days || \"\",\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: t('Days'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 33\n          }\n        }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: InputsData.plantingDate || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ecartInter\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 33\n          }\n        }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: \"\",\n          onChange: \"\",\n          id: \"ecartInter\",\n          placeholder: t('ecart_inter'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ecartIntra\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 29\n          }\n        }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: \"\",\n          onChange: \"\",\n          id: \"ecartIntra\",\n          placeholder: t('ecart_intra'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 29\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"densit\\xE9\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 33\n          }\n        }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: \"\",\n          onChange: \"\",\n          id: \"densit\\xE9\",\n          placeholder: t('densité'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 33\n          }\n        }))));\n\n      case \"soil\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"soil\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 33\n          }\n        }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          className: \"form-control form-control-md \".concat(soilError ? \"is-invalid\" : \"\"),\n          value: dataSimulation.soilTypeId,\n          id: \"soil\",\n          onChange: function onChange(e) {\n            return handleSoilPick(e.target.value);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 37\n          }\n        }, t('select_soil')), allSoils.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: soil.id,\n            value: soil.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 49\n            }\n          }, soil.soil);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"effPluie\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 33\n          }\n        }, t('efficacité_pluie'), \" (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.effPluie || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: t('efficacité_pluie'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"ruMax\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 33\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.RUmax || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 33\n          }\n        }))));\n\n      case \"irrig\":\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2 m-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"surfaceIrrig\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 33\n          }\n        }, t('surface_irriguée'), \" (ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.surfaceIrrig || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              surfaceIrrig: e.target.value\n            }));\n          },\n          id: \"surfaceIrrig\",\n          placeholder: t('surface_irriguée'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"effIrrig\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 33\n          }\n        }, t('efficience_irrigation'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          value: InputsData.effIrrig || '',\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: t('efficience_irrigation'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 33\n          }\n        }))));\n\n      default:\n        return /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"country\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 33\n          }\n        }, t('state')), /*#__PURE__*/React.createElement(FormSelect, {\n          id: \"country\",\n          value: InputsData.country || '',\n          onChange: handleCountryPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 37\n          }\n        }, t('select_country')), allCountry.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 45\n            }\n          }, country.name);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 33\n          }\n        }, t('city')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: InputsData.city || \"\",\n          onChange: function onChange(e) {\n            return setInputsData(_objectSpread({}, InputsData, {\n              city: e.target.value\n            }));\n          },\n          id: \"city\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 37\n          }\n        }, t('select_city')), InputsData.cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: city.city,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 49\n            }\n          }, city.city);\n        })))));\n    }\n  };\n\n  var imageByInputs = function imageByInputs() {\n    switch (elemValue) {\n      case \"pos\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: position,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 24\n          }\n        });\n\n      case \"crop\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: crop,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 24\n          }\n        });\n\n      case \"soil\":\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: soil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(\"img\", {\n          className: \"rounded-circle h-100\",\n          width: \"140\",\n          src: position,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 24\n          }\n        });\n    }\n  };\n\n  var _useState55 = useState([]),\n      _useState56 = _slicedToArray(_useState55, 2),\n      simulation = _useState56[0],\n      setSimulation = _useState56[1];\n\n  var checkAndSave = function checkAndSave() {\n    var isValid = isValidInputs();\n    var data = {\n      name: dataSimulation.name,\n      city_id: dataSimulation.cityId,\n      croptype_id: dataSimulation.cropTypeId,\n      soiltype_id: dataSimulation.soilTypeId,\n      cropvariety_id: dataSimulation.cropVarietyId,\n      inputs: InputsData\n    };\n    api.post('/simulation/calcul-simulation', data).then(function (response) {\n      var simulationResult = response.data.simulation;\n\n      if (response.data.type === \"success\") {\n        setSimulation(simulationResult.result);\n        setSumETC(response.data.sumETC);\n        setSumIrrig(response.data.sumIrrig);\n        setSumNbrIrrig(response.data.sumNbrIrrig);\n        swal({\n          icon: 'info',\n          title: 'OK',\n          text: \"\".concat(t('saved_simulation'))\n        });\n      }\n\n      if (response.data.type === \"danger\") {\n        swal({\n          icon: 'error',\n          text: response.data.message\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    }).finally(function () {\n      return setIsLoading(true);\n    });\n  };\n\n  useEffect(function () {\n    var data = [];\n    var sumRain = 0;\n    simulation.map(function (result) {\n      if (result) {\n        sumRain = sumRain + Number(result.rain);\n        data.push({\n          bilan: result.bilan,\n          dates: result.date\n        });\n      }\n    });\n    setChartData(data);\n    setSumPluie(sumRain);\n  }, [simulation]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('water_balance'),\n    subtitle: t('overview'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"text-center my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 33\n    }\n  }, t('config')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 37\n    }\n  }, \"\\uE88E\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 13,\n      textDecoration: \"underline\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 80\n    }\n  }, t('msg_simulation_name')))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 mx-auto\",\n    style: {\n      height: \"140px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 37\n    }\n  }, imageByInputs())), /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"py-2 m-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"tomato\",\n      fontSize: 14,\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 44\n    }\n  }, error), /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"name\",\n    className: \"\".concat(elemValue === \"name\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 53\n    }\n  }, t('name'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"pos\",\n    className: \"\".concat(elemValue === \"pos\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 53\n    }\n  }, t('position'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"crop\",\n    className: \"\".concat(elemValue === \"crop\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 53\n    }\n  }, t('crop_info'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"soil\",\n    className: \"\".concat(elemValue === \"soil\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 53\n    }\n  }, t('soil_info'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    onClick: function onClick(e) {\n      return setElemValue(e.target.id);\n    },\n    id: \"irrig\",\n    className: \"\".concat(elemValue === \"irrig\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 53\n    }\n  }, t('Irrigation'))))), returnInputs()), elemValue === \"soil\" ? /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    theme: \"success\",\n    onClick: function onClick() {\n      return checkAndSave();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 959,\n      columnNumber: 53\n    }\n  }, t('save'))) : null)))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 974,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      width: \"auto\",\n      float: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 33\n    }\n  }, t('outputs')), \" \")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    id: \"page\",\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ruMax\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 37\n    }\n  }, \"RU max (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ruMax\",\n    value: RuMax,\n    placeholder: \"RU max\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ruInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 994,\n      columnNumber: 37\n    }\n  }, t('ru_initiale'), \" (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ruInit\",\n    value: RuInitial,\n    placeholder: \"RU initiale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 995,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 997,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"epuis\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 998,\n      columnNumber: 37\n    }\n  }, t('epuisement_max'), \" (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"epuis\",\n    value: Epuisement_maximal,\n    placeholder: \"Epuisement maximal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nbrIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 37\n    }\n  }, t('nbr_irrigations')), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"nbrIrrig\",\n    value: sumNbrIrrig,\n    placeholder: \"Nombre d'irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hautIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 37\n    }\n  }, t('hauteur_irrigations'), \" (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"hautIrrig\",\n    value: parseFloat(sumIrrig).toFixed(0),\n    placeholder: \"Hauteur d'eau des irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 37\n    }\n  }, t('volume_irrigations'), \" (m\\xB3 /ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(VolumeIrrigation).toFixed(0),\n    id: \"vIrrig\",\n    placeholder: \"Volume des irrigations\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"rumin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 37\n    }\n  }, \"Ru Min (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: RuMin,\n    id: \"rumin\",\n    placeholder: \"RU min\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"volTotalIrrig\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1019,\n      columnNumber: 37\n    }\n  }, t('Volume_total_irrigation'), \" (m\\xB3)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(VolumeTotalEauIrrigation).toFixed(0),\n    id: \"volTotalIrrig\",\n    placeholder: \"Volume Total d'eau d'irrigation\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1020,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pluieTotal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 37\n    }\n  }, t('pluie_total'), \" (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(sumPluie).toFixed(0),\n    id: \"pluieTotal\",\n    placeholder: \"Pluie total\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"evoTotal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1027,\n      columnNumber: 37\n    }\n  }, t('evapotranspiration_totale'), \" (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(sumETC).toFixed(0),\n    id: \"evoTotal\",\n    placeholder: \"Evapotranspiration totale\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"deficit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 37\n    }\n  }, t('déficit'), \" (mm)\"), /*#__PURE__*/React.createElement(FormInput, {\n    value: parseFloat(Deficit).toFixed(0),\n    id: \"deficit\",\n    placeholder: \"D\\xE9ficit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1033,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 d-flex justify-content-center align-items-center text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1041,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 21\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1049,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"py-2 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: 30,\n      margin: 8,\n      border: '1px solid #eee',\n      borderRadius: 10,\n      background: 'none'\n    },\n    onClick: function onClick() {\n      return setToggle(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 177\n    }\n  }, \"\\uE265\")), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      fontSize: 30,\n      margin: 8,\n      border: '1px solid #eee',\n      borderRadius: 10,\n      background: 'none'\n    },\n    onClick: function onClick() {\n      return setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 178\n    }\n  }, \"\\uE6E1\"))), /*#__PURE__*/React.createElement(Col, {\n    className: \"\".concat(toggle ? '' : 'd-none'),\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1056,\n      columnNumber: 37\n    }\n  }, t('water_balance')), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center table-bordered table-hover table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1058,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 49\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 49\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1062,\n      columnNumber: 49\n    }\n  }, t('Kc')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1063,\n      columnNumber: 49\n    }\n  }, t('ET0')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 49\n    }\n  }, t('Pluie'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1065,\n      columnNumber: 49\n    }\n  }, t('ETc')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 49\n    }\n  }, t('Pe'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1067,\n      columnNumber: 49\n    }\n  }, t('Bilan hydrique'), \" (mm)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1068,\n      columnNumber: 49\n    }\n  }, t('Irrigation')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1069,\n      columnNumber: 49\n    }\n  }, t('Nbr Irrigation')))), simulation.map(function (result) {\n    var dates = moment(result.date.slice(0, 10)).locale('En').format('MMM DD');\n    var ET0 = 2;\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 61\n      }\n    }, result.days), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 61\n      }\n    }, dates), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 61\n      }\n    }, parseFloat(result.kc).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 61\n      }\n    }, ET0), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 61\n      }\n    }, result.rain), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1088,\n        columnNumber: 61\n      }\n    }, parseFloat(result.Etc).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 61\n      }\n    }, parseFloat(result.pe).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 61\n      }\n    }, parseFloat(result.bilan).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 61\n      }\n    }, parseFloat(result.irrigation).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 61\n      }\n    }, result.irrigationNbr)));\n  }))), /*#__PURE__*/React.createElement(Col, {\n    className: \"\".concat(toggle ? 'd-none' : ''),\n    lg: \"12\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 37\n    }\n  }, t('water_balance_chart')), /*#__PURE__*/React.createElement(WaterChart, {\n    data: chartData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 37\n    }\n  }))) : null))));\n};\n\nexport default BilanHydrique;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","Nav","NavItem","NavLink","FormInput","FormSelect","Button","PageTitle","useTranslation","api","moment","WaterChart","position","soil","crop","LoadingSpinner","swal","useHistory","BilanHydrique","history","isLoading","setIsLoading","toggle","setToggle","pluie","setPluie","irrigatedAlready","setIrrigatedAlready","Pe","setPe","sumNbrIrrig","setSumNbrIrrig","sumIrrig","setSumIrrig","sumPluie","setSumPluie","sumETC","setSumETC","chartData","setChartData","allKc","setAllKc","allDaysWeather","setAllDaysWeather","allVarieties","setAllVarieties","elemValue","setElemValue","weather","setWeather","listCrop","setListCrop","Kc","ET0","surfaceIrrig","RUmax","Profondeur","effPluie","ruPratique","effIrrig","country","cities","city","cropType","cropVariety","variety","days","plantingDate","soilType","temperature","kcList","daysWeather","InputsData","setInputsData","nameError","setNameError","cropError","setCropError","soilError","setSoilError","cityError","setCityError","error","setError","lat","lon","coord","setCoord","allSoils","setAllSoils","allCountry","setAllCountry","allCity","setAllCity","name","cityId","cropTypeId","soilTypeId","cropVarietyId","dataSimulation","setDataSimulation","t","i18n","ETC","Number","RuMax","RuInitial","Epuisement_maximal","RuMin","VolumeIrrigation","VolumeTotalEauIrrigation","Deficit","getVarieties","get","then","response","data","type","listVarieties","Varieties","catch","console","log","getCitiesList","Cities","err","getCropType","dataCrop","Croptype","getSoils","listSoils","Soils","Ru","map","item","ru","getCountries","listCountries","Countries","getWeather","post","weatherData","listForecast","list","i","length","temp","date","Date","dt_txt","rain","main","feels_like","toFixed","temp_max","temp_min","humidity","pressure","wind","speed","description","icon","push","handleSoilPick","value","find","id","fc","practical_fraction","rain_eff","handleCropPick","varieties","crop_id","crop_variety","root_max","total","plant_date","slice","replace","all_kc","handleVarietyPick","e","preventDefault","target","handleCountryPick","iso","handleCityPick","weather_data_days","onChangeHandler","indx","state","formulePe","onChangeHandlerIrrigated","tableHydrique","n","elements","resultFormule","kc","bilanHydrique","Irrigation","firstFormule","formule","firstFormuleIrrig","formuleIrrig","IrrigationNbr","j","prevResultBilan","dates","add","format","parseFloat","outline","border","isValidInputs","returnInputs","textTransform","imageByInputs","simulation","setSimulation","checkAndSave","isValid","city_id","croptype_id","soiltype_id","cropvariety_id","inputs","simulationResult","result","title","text","message","finally","sumRain","bilan","fontSize","textDecoration","height","color","padding","paddingBottom","display","justifyContent","width","float","margin","borderRadius","background","locale","Etc","pe","irrigation","irrigationNbr"],"sources":["C:/professional/2K Media/II.develepment/smart farm/backoffice v2/frontend/src/components/Simulation/BilanHydrique.js"],"sourcesContent":["import React, { useState, useEffect} from 'react'\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Nav, NavItem, NavLink, FormInput, FormSelect, Button } from 'shards-react'\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport api from '../../api/api';\r\nimport moment from 'moment';\r\nimport WaterChart from './WaterChart';\r\nimport position from '../../images/pin.png'\r\nimport soil from \"../../images/soil.png\"\r\nimport crop from \"../../images/crop.png\"\r\nimport LoadingSpinner from \"../common/LoadingSpinner\"\r\nimport swal from 'sweetalert';\r\nimport { useHistory } from 'react-router-dom';\r\nconst BilanHydrique = () => {\r\n    const history = useHistory()\r\n    const [isLoading,setIsLoading] = useState(false)\r\n    const [toggle, setToggle] = useState(true)\r\n    const [pluie, setPluie] = useState({})\r\n    const [irrigatedAlready, setIrrigatedAlready] = useState({})\r\n    const [Pe, setPe] = useState({})\r\n    const [sumNbrIrrig, setSumNbrIrrig] = useState(0)\r\n    const [sumIrrig, setSumIrrig] = useState(0)\r\n    const [sumPluie, setSumPluie] = useState(0)\r\n    const [sumETC, setSumETC] = useState(0)\r\n\r\n    const [chartData, setChartData] = useState([])\r\n    const [allKc, setAllKc] = useState([])\r\n    const [allDaysWeather, setAllDaysWeather] = useState([])\r\n\r\n    const [allVarieties, setAllVarieties] = useState([])\r\n\r\n    const [elemValue, setElemValue] = useState('name')\r\n\r\n    const [weather, setWeather] = useState({})\r\n    const [listCrop, setListCrop] = useState([])\r\n    const [InputsData, setInputsData] = useState({\r\n        Kc: \"\",\r\n        ET0: \"\",\r\n        surfaceIrrig: \"\",\r\n        RUmax: \"\",\r\n        Profondeur: \"\",\r\n        effPluie: \"\",\r\n        ruPratique: \"\",\r\n        effIrrig: \"\",\r\n        country: \"\",\r\n        cities: [],\r\n        city: \"\",\r\n        cropType: \"\",\r\n        cropVariety: [],\r\n        variety: '',\r\n        days: \"\",\r\n        plantingDate: \"\",\r\n        soilType: \"\",\r\n        temperature: null,\r\n        kcList: [],\r\n        daysWeather: []\r\n\r\n    })\r\n\r\n    const [nameError, setNameError] = useState(null)\r\n    const [cropError, setCropError] = useState(null)\r\n    const [soilError, setSoilError] = useState(null)\r\n    const [cityError, setCityError] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n    const [coord, setCoord] = useState({ lat: '', lon: '' })\r\n    const [allSoils, setAllSoils] = useState([])\r\n    const [allCountry, setAllCountry] = useState([])\r\n    const [allCity, setAllCity] = useState([])\r\n\r\n\r\n    const [dataSimulation,setDataSimulation] = useState({\r\n        name : \"\",\r\n        cityId :\"\",\r\n        cropTypeId :\"\",\r\n        soilTypeId :\"\",\r\n        cropVarietyId :\"\"\r\n    })\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    let ETC = Number(InputsData.ET0) * Number(InputsData.Kc)\r\n    let RuMax = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\r\n    let RuInitial = Number(InputsData.RUmax) * Number(InputsData.Profondeur);\r\n    let Epuisement_maximal = (Number(InputsData.RUmax) * Number(InputsData.Profondeur) * Number(InputsData.ruPratique)) / 100\r\n    let RuMin = Number(RuMax) - Number(Epuisement_maximal)\r\n    let VolumeIrrigation = sumIrrig * 10\r\n    let VolumeTotalEauIrrigation = Number(VolumeIrrigation) * Number(InputsData.surfaceIrrig)\r\n    let Deficit = sumETC - sumPluie\r\n\r\n\r\n    const getVarieties = async () => {\r\n        try {\r\n            await api.get('/varieties/get-varieties')\r\n                .then(response => {\r\n                    if (response.data.type === \"success\") {\r\n                        let listVarieties = response.data.Varieties\r\n                        setAllVarieties(listVarieties)\r\n\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const getCitiesList = async () => {\r\n        await api.get('/cities/list-cities')\r\n            .then(response => {\r\n                let cities = response.data.Cities\r\n                if (response && response.data.type === \"success\") {\r\n                    setAllCity(cities)\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     getWeather()\r\n    // }, [coord.lat, coord.lon])\r\n\r\n    useEffect(() => {\r\n        getCitiesList()\r\n\r\n        const getCropType = async () => {\r\n            try {\r\n                await api.get('/croptype/list-crop')\r\n                    .then(response => {\r\n                        if (response) {\r\n                            let dataCrop = response.data.Croptype\r\n                            setListCrop(dataCrop)\r\n                        }\r\n                    })\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        const getSoils = async () => {\r\n            try {\r\n                await api.get('/soils/get-soils')\r\n                    .then(response => {\r\n                        let listSoils = response.data.Soils\r\n                        setAllSoils(listSoils)\r\n                        let Ru = \"\"\r\n                        if (listSoils) {\r\n                            listSoils.map(item => {\r\n                                Ru = item.ru\r\n                            })\r\n                            setInputsData({ ...InputsData, RUmax: Ru })\r\n                        }\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        const getCountries = async () => {\r\n            try {\r\n                await api.get('/countries/get-countries')\r\n                    .then(response => {\r\n                        if (response.data.type === \"success\") {\r\n                            let listCountries = response.data.Countries\r\n                            setAllCountry(listCountries)\r\n\r\n                        }\r\n                    }).catch(error => {\r\n                        console.log(error)\r\n                    })\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        getVarieties()\r\n        getCountries()\r\n        getSoils()\r\n        getCropType()\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     let sum = Object.values(pluie).reduce((a, v) => a + Number(v), 0)\r\n    //     setSumPluie(sum)\r\n    // }, [pluie])\r\n\r\n    const getWeather = () => {\r\n        let data = {\r\n            lat: coord.lat,\r\n            lon: coord.lon,\r\n            type: 'forecast'\r\n        }\r\n        api.post('/weather/get-data', data)\r\n            .then(response => {\r\n                let weatherData = response.data.data\r\n                let listForecast = weatherData.list;\r\n                let days = [];\r\n                for (let i = 0; i < listForecast.length; i += 8) {\r\n                    var temp = {};\r\n                    temp.date = new Date(listForecast[i + 5].dt_txt);\r\n                    temp.rain = listForecast[i].rain;\r\n                    temp.temp = ((listForecast[i].main.feels_like)).toFixed(0);\r\n                    temp.temp_max = ((listForecast[i].main.temp_max)).toFixed(0);\r\n                    temp.temp_min = ((listForecast[i].main.temp_min)).toFixed(0);\r\n                    temp.humidity = listForecast[i].main.humidity;\r\n                    temp.pressure = listForecast[i].main.pressure;\r\n                    temp.wind = listForecast[i].wind.speed;\r\n                    temp.main = listForecast[i].weather[0].main;\r\n                    temp.description = listForecast[i + 3].weather[0].description;\r\n                    temp.icon = listForecast[i].weather[0].icon;\r\n                    days.push(temp);\r\n                }\r\n                setWeather(days)\r\n\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleSoilPick = (value) => {\r\n        if(value){\r\n            setDataSimulation({...dataSimulation , soilTypeId : value})\r\n        }\r\n        const soilType = allSoils.find(\r\n            (soil) => soil.id == value\r\n        );\r\n        if (typeof soilType !== \"undefined\") {\r\n            setInputsData({\r\n                ...InputsData,\r\n                soilType: soilType.soil,\r\n                RUmax: soilType.ru,\r\n                effIrrig: soilType.fc,\r\n                ruPratique: soilType.practical_fraction,\r\n                effPluie: soilType.rain_eff\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    const handleCropPick = (value) => {\r\n        if(value){\r\n            setDataSimulation({...dataSimulation , cropTypeId : value})\r\n        }\r\n        const crop = listCrop.find(\r\n            (crop) => crop.id == value\r\n        );\r\n        let varieties = []\r\n        if (crop) {\r\n            const variety = allVarieties.map((variety) => {\r\n                if (variety.crop_id === crop.id) {\r\n                    varieties.push({\r\n                        variety: variety.crop_variety\r\n                    })\r\n                }\r\n\r\n            });\r\n            setInputsData({\r\n                ...InputsData,\r\n                cropType: crop.crop,\r\n                variety: '',\r\n                cropVariety: varieties,\r\n                Profondeur: crop.root_max,\r\n                days: crop.total,\r\n                plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\r\n                kcList: crop.all_kc\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    const handleVarietyPick = (e) => {\r\n        e.preventDefault();\r\n        const variety = allVarieties.find(\r\n            (variety) => variety.crop_variety === e.target.value\r\n\r\n        )\r\n        if (variety) {\r\n            setInputsData({\r\n                ...InputsData,\r\n                cropType: \"\",\r\n                variety: variety.crop_variety,\r\n                Profondeur: variety.root_max,\r\n                days: variety.total,\r\n                plantingDate: variety.plant_date.slice(0, 11).replace('T', ''),\r\n                kcList: variety.all_kc\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    const handleCountryPick = (e) => {\r\n        e.preventDefault();\r\n        const country = allCountry.find(\r\n            (country) => country.iso === e.target.value\r\n        );\r\n        let cities = []\r\n        if (country) {\r\n            const city = allCity.map((city) => {\r\n                if (city.iso === country.iso) {\r\n                    cities.push({\r\n                        city: city.city,\r\n                        id : city.id\r\n                    })\r\n                }\r\n\r\n            });\r\n\r\n            setInputsData({\r\n                ...InputsData,\r\n                country: country.iso,\r\n                cities: cities\r\n            });\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleCityPick = (e) => {\r\n        e.preventDefault();\r\n        const city = allCity.find(\r\n            (city) => city.name === e.city.value\r\n        );\r\n        if (city) {\r\n            setInputsData({\r\n                ...InputsData,\r\n                city: city.city,\r\n                daysWeather: city.weather_data_days\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const onChangeHandler = (value,indx) => {\r\n        setPluie(state => ({ ...state, [indx]: value }))\r\n        let formulePe = Number(value) * Number(InputsData.effPluie) / 100\r\n        setPe(state => ({ ...state, [indx]: formulePe }))\r\n\r\n    }\r\n    \r\n    const onChangeHandlerIrrigated = (value, indx) => {\r\n        setIrrigatedAlready(state => ({...state,[indx] :value }) )\r\n        if(value){\r\n            let formulePe = Number(value) * Number(InputsData.effPluie) / 100\r\n            setPe(state => ({ ...state, [indx]: formulePe }))\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     let daysWeatherArray = []\r\n    //         InputsData.daysWeather.map(weather=>{\r\n    //             daysWeatherArray .push(allKc)\r\n    //         })\r\n    //         setAllDaysWeather(daysWeatherArray)\r\n    // },[InputsData.daysWeather])\r\n\r\n    // useEffect(() => {\r\n    //     let kcArray = []\r\n    //     InputsData.kcList.map(kc => {\r\n    //         let allKc = kc.kc\r\n    //         kcArray.push(allKc)\r\n    //     })\r\n    //     setAllKc(kcArray)\r\n    // }, [InputsData.kcList])\r\n\r\n    const tableHydrique = (n) => {\r\n        var elements = [];\r\n        let resultFormule = []\r\n        let kc = 0.7\r\n        let ET0 = 2\r\n        let ETC = 0\r\n        let bilanHydrique = 0\r\n        let Irrigation = 0\r\n        let firstFormule = 0\r\n        let formule = 0\r\n        let firstFormuleIrrig = 0\r\n        let formuleIrrig = 0\r\n        let IrrigationNbr = 0\r\n        let sumIrrig = 0\r\n        let sumNbrIrrig = 0\r\n        let sumETC = 0\r\n\r\n\r\n        for (let i = 1, j = n; i <= n; i++, j--) {\r\n            ETC = Number(allKc[i - 1]) * Number(ET0)\r\n            let prevResultBilan = 0\r\n            firstFormule = (Number(RuInitial) + Number(Pe[i])) - Number(ETC)\r\n\r\n            if (i > 1) {\r\n                prevResultBilan = resultFormule[(i - 1) - 1]\r\n                formule = (Number(prevResultBilan) + Number(Pe[i])) - (Number(ETC) + 0)\r\n                formuleIrrig = ((Number(RuMax) - Number(prevResultBilan)) + Number(ETC)) / InputsData.effIrrig\r\n            }\r\n            firstFormuleIrrig = (Number(RuMax) - Number(firstFormule)) / InputsData.effIrrig\r\n            if (i === 1) {\r\n                if (firstFormule <= RuMax) {\r\n                    bilanHydrique = firstFormule\r\n                } else {\r\n                    bilanHydrique = RuMax\r\n                }\r\n                if (RuInitial <= RuMin) {\r\n                    Irrigation = firstFormuleIrrig\r\n                } else {\r\n                    Irrigation = 0\r\n                }\r\n            } else {\r\n                if (formule <= RuMax) {\r\n                    bilanHydrique = formule\r\n                } else {\r\n                    bilanHydrique = RuMax\r\n                }\r\n                if (prevResultBilan <= RuMin) {\r\n                    Irrigation = formuleIrrig\r\n                } else {\r\n                    Irrigation = 0\r\n                }\r\n            }\r\n\r\n            if (Irrigation === 0) {\r\n                IrrigationNbr = 0\r\n            } else {\r\n                IrrigationNbr = 1\r\n            }\r\n            let dates = moment(InputsData.plantingDate).add(i - 1, 'days').format(\"YYYY-MM-DD\")\r\n            elements.push(\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{i}</td>\r\n                        <td>{dates}</td>\r\n                        <td>{parseFloat(allKc[i - 1]).toFixed(2)}</td>\r\n\r\n                        <td>{ET0}</td>\r\n                        <td> <input\r\n                            name={i}\r\n                            key={i}\r\n                            className='my-1'\r\n                            style={{outline: 'none', border: '1px solid #e4e4e4' }}\r\n                            value={pluie.i}\r\n                            onChange={(e) => onChangeHandler(e.target.value, i)}\r\n                        />\r\n                        </td>\r\n                        <td>\r\n                        <input\r\n                            name={i}\r\n                            key={i}\r\n                            className='my-1'\r\n                            style={{outline: 'none', border: '1px solid #e4e4e4' }}\r\n                            value={irrigatedAlready.i}\r\n                            onChange={(e) => onChangeHandlerIrrigated(e.target.value, i)}\r\n                        />  \r\n                        </td>\r\n                        <td>{parseFloat(ETC).toFixed(2)}</td>\r\n                        <td>{Pe[i]}</td>\r\n                        <td>{`${parseFloat(bilanHydrique).toFixed(1)}`}</td>\r\n                        <td>{parseFloat(Irrigation).toFixed(2)}</td>\r\n                        <td>{IrrigationNbr}</td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            );\r\n\r\n\r\n\r\n            resultFormule.push(bilanHydrique)\r\n            if (ETC) {\r\n                sumETC = sumETC + ETC\r\n\r\n            }\r\n            if (Irrigation > 0) {\r\n                sumNbrIrrig = sumNbrIrrig + IrrigationNbr\r\n                sumIrrig = sumIrrig + Irrigation\r\n            }\r\n\r\n\r\n        }\r\n        \r\n        return elements;\r\n    }\r\n    \r\n    const isValidInputs = () => {\r\n        let cityError = \"\"\r\n        let nameError = \"\"\r\n        let cropError = \"\"\r\n        let soilError = \"\"\r\n        let error= ''\r\n        if (dataSimulation.cityId === \"\") {\r\n            cityError = `${t('city_error')}`;\r\n            error= `${t('city_error')}`\r\n\r\n            setCityError(cityError)\r\n            setError(error)\r\n        }\r\n        if (dataSimulation.name === \"\") {\r\n            nameError = `${t('name_error')}`;\r\n            error= `${t('name_error')}`\r\n            setNameError(nameError)\r\n            setError(error)\r\n\r\n        }\r\n        if (InputsData.cropType === \"\") {\r\n            cropError = `${t('croptype_error')}`;\r\n            error= `${t('croptype_error')}`\r\n            setCropError(cropError)\r\n            setError(error)\r\n\r\n        }\r\n        if (InputsData.soilType ===\"\") {\r\n            soilError = `${t('soiltype_error')}`;\r\n            error= `${t('soiltype_error')}`\r\n            setSoilError(soilError)\r\n            setError(error)\r\n\r\n        }\r\n        if(soilError || cropError || cityError || nameError){\r\n            setSoilError(soilError)\r\n            setCropError(cropError)\r\n            setNameError(nameError)\r\n            setCityError(cityError)\r\n            setError(error)\r\n            return false;\r\n\r\n        }else{\r\n            setSoilError('')\r\n            setCropError('')\r\n            setNameError('')\r\n            setCityError('')\r\n            setError('')\r\n        }\r\n        \r\n         return true;\r\n    }\r\n    const returnInputs = () => {\r\n        switch (elemValue) {\r\n            case \"name\":\r\n                return (\r\n\r\n                    <FormGroup>\r\n                        <label htmlFor=\"name\">{t('name')}</label>\r\n                        <FormInput id=\"name\" placeholder={t('name')} value={dataSimulation.name} className={`form-control form-control-md ${nameError ? \"is-invalid\" : \"\"}`}  onChange={(e) => setDataSimulation({...dataSimulation , name : e.target.value})} />\r\n                    </FormGroup>\r\n\r\n                )\r\n            case \"pos\":\r\n                return (\r\n                    <Row form >\r\n\r\n                        <Col className=\"py-4\" lg=\"6\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n\r\n                                <label htmlFor=\"country\">{t('state')}</label>\r\n                                <FormSelect id=\"country\" value={InputsData.country || ''} onChange={handleCountryPick}>\r\n\r\n                                    <option value=''>{t('select_country')}</option>\r\n\r\n                                    {\r\n                                        allCountry.map(country => (\r\n                                            <option key={country.id} value={country.iso}>{country.name}</option>\r\n                                        ))\r\n                                    }\r\n\r\n                                </FormSelect>\r\n\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col className=\"py-4\" lg=\"6\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n\r\n                                <label htmlFor=\"city\">{t('city')}</label>\r\n                                <FormSelect className={`form-control form-control-md ${cityError ? \"is-invalid\" : \"\"}`} value={dataSimulation.cityId || \"\"} onChange={e => setDataSimulation({ ...dataSimulation, cityId: e.target.value })} id=\"city\">\r\n                                    <option value=\"\">{t('select_city')}</option>\r\n                                    {\r\n                                        InputsData.cities.map(city => {\r\n                                            return (\r\n                                                <option key={city.id} value={city.id}>{city.city}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                </FormSelect>\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n\r\n                )\r\n            case \"crop\":\r\n                return (\r\n                    <Row form className=\"py-2 m-2\">\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"cropType\">{t('crop_type')}</label>\r\n                                <FormSelect className={`form-control form-control-md ${cropError ? \"is-invalid\" : \"\"}`} id=\"cropType\" value={dataSimulation.cropTypeId || \"\"} onChange={(e) => handleCropPick(e.target.value)}>\r\n                                    <option value=\"\">{t('select_crop')}</option>\r\n                                    {\r\n                                        listCrop.map(cropType => (\r\n                                            <option style={{ textTransform: \"capitalize\" }} key={cropType.id} value={cropType.id}>{cropType.crop}</option>\r\n\r\n                                        ))\r\n                                    }\r\n\r\n                                </FormSelect>\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"cropVariety\">{t('crop_variety')}</label>\r\n                                <FormSelect value={InputsData.variety || \"\"} onChange={handleVarietyPick} id=\"cropVariety\">\r\n                                    <option value=\"\">{t('crop_type')}</option>\r\n                                    {\r\n                                        InputsData.cropVariety.map(variety => (\r\n                                            <option value={variety.id}>{variety.variety}</option>\r\n                                        ))\r\n                                    }\r\n                                </FormSelect>\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"ruPratique\">{t('fraction_pratique')} (%) </label>\r\n                                <FormInput value={InputsData.ruPratique || ''} onChange={e => setInputsData({ ...InputsData, ruPratique: e.target.value })} id='ruPratique' placeholder={t('fraction_pratique')} \r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"z\">{t('depth')} (m)</label>\r\n                                <FormInput value={InputsData.Profondeur || ''} onChange={e => setInputsData({ ...InputsData, Profondeur: e.target.value })} id='z' placeholder={t('profondeur')}\r\n                                />\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"days\">{t('Days')}</label>\r\n\r\n                                <FormInput value={InputsData.days || \"\"} id='days' onChange={e => setInputsData({ ...InputsData, days: e.target.value })} placeholder={t('Days')} />\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"days\">{t('growing_season')}</label>\r\n\r\n                                <FormInput type=\"date\" value={InputsData.plantingDate || \"\"} onChange={e => setInputsData({ ...InputsData, plantingDate: e.target.value })} id='days' />\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"ecartInter\">{t('ecart_inter')} (m)</label>\r\n                                <FormInput value={\"\"} onChange={\"\"} id='ecartInter' placeholder={t('ecart_inter')}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                        <FormGroup>\r\n                            <label htmlFor=\"ecartIntra\">{t('ecart_intra')} (m) </label>\r\n                            <FormInput value={\"\"} onChange={\"\"} id='ecartIntra' placeholder={t('ecart_intra')}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"densité\">{t('densité')} (plants/ha)</label>\r\n                                <FormInput value={\"\"} onChange={\"\"} id='densité' placeholder={t('densité')}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                )\r\n            case \"soil\":\r\n                return (\r\n                    <Row form className=\"py-2 m-2\">\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"soil\">{t('soil_type')}</label>\r\n                                <FormSelect className={`form-control form-control-md ${soilError ? \"is-invalid\" : \"\"}`} value={dataSimulation.soilTypeId} id=\"soil\" onChange={(e) => handleSoilPick(e.target.value)}>\r\n                                    <option value=''>{t('select_soil')}</option>\r\n                                    {\r\n                                        allSoils.map(soil => {\r\n                                            \r\n                                            return (\r\n                                                <option key={soil.id} value={soil.id}>{soil.soil}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </FormSelect>\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"effPluie\">{t('efficacité_pluie')} (%)</label>\r\n                                <FormInput value={InputsData.effPluie || ''} onChange={e => setInputsData({ ...InputsData, effPluie: e.target.value })} id='effPluie' placeholder={t('efficacité_pluie')} \r\n                                />\r\n\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"ruMax\">RU max (mm/m)</label>\r\n                                <FormInput value={InputsData.RUmax || ''} onChange={e => setInputsData({ ...InputsData, RUmax: e.target.value })} id='ruMax' placeholder=\"RU max\"\r\n                                />\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                )\r\n            case \"irrig\":\r\n                    return (\r\n                        <Row form className=\"py-2 m-2\">\r\n                             <Col lg=\"6\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"surfaceIrrig\">{t('surface_irriguée')} (ha)</label>\r\n                                <FormInput value={InputsData.surfaceIrrig || ''} onChange={e => setInputsData({ ...InputsData, surfaceIrrig: e.target.value })} id=\"surfaceIrrig\" placeholder={t('surface_irriguée')}\r\n                                />\r\n\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n                                <label htmlFor=\"effIrrig\">{t('efficience_irrigation')} (%) </label>\r\n                                <FormInput value={InputsData.effIrrig || ''} onChange={e => setInputsData({ ...InputsData, effIrrig: e.target.value })} id='effIrrig' placeholder={t('efficience_irrigation')} \r\n                                />\r\n\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n\r\n                        </Row>\r\n                    )\r\n\r\n            default:\r\n                return (\r\n                    <Row form  >\r\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n\r\n                                <label htmlFor=\"country\">{t('state')}</label>\r\n                                <FormSelect id=\"country\" value={InputsData.country || ''} onChange={handleCountryPick}>\r\n\r\n                                    <option value=''>{t('select_country')}</option>\r\n\r\n                                    {\r\n                                        allCountry.map(country => (\r\n                                            <option key={country.id} value={country.iso}>{country.name}</option>\r\n                                        ))\r\n                                    }\r\n\r\n                                </FormSelect>\r\n\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"8\" sm=\"8\">\r\n                            <FormGroup>\r\n\r\n                                <label htmlFor=\"city\">{t('city')}</label>\r\n                                <FormSelect value={InputsData.city || \"\"} onChange={e => setInputsData({ ...InputsData, city: e.target.value })} id=\"city\">\r\n                                    <option value=\"\">{t('select_city')}</option>\r\n                                    {\r\n                                        InputsData.cities.map(city => {\r\n                                            return (\r\n                                                <option value={city.city}>{city.city}</option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                </FormSelect>\r\n                            </FormGroup>\r\n\r\n                        </Col>\r\n\r\n                    </Row>)\r\n        }\r\n\r\n    }\r\n\r\n    const imageByInputs = () => {\r\n        switch (elemValue) {\r\n            case \"pos\":\r\n                return <img\r\n                    className=\"rounded-circle h-100\"\r\n                    width=\"140\"\r\n                    src={position}\r\n                />\r\n            case \"crop\":\r\n                return <img\r\n                    className=\"rounded-circle h-100\"\r\n                    width=\"140\"\r\n                    src={crop}\r\n                />\r\n            case \"soil\":\r\n                return <img\r\n                    className=\"rounded-circle h-100\"\r\n                    width=\"140\"\r\n                    src={soil}\r\n                />\r\n            default:\r\n                return <img\r\n                    className=\"rounded-circle h-100\"\r\n                    width=\"140\"\r\n                    src={position}\r\n                />\r\n        }\r\n    }\r\n\r\n        const [simulation,setSimulation] = useState([])\r\n   \r\n    const checkAndSave = () => {\r\n        const isValid = isValidInputs()\r\n        let data = {\r\n            name : dataSimulation.name,\r\n            city_id : dataSimulation.cityId,\r\n            croptype_id : dataSimulation.cropTypeId,\r\n            soiltype_id :dataSimulation.soilTypeId,\r\n            cropvariety_id : dataSimulation.cropVarietyId,\r\n            inputs : InputsData\r\n        }\r\n            api.post('/simulation/calcul-simulation',data)\r\n            .then(response=>{\r\n                    let simulationResult = response.data.simulation\r\n                    if(response.data.type === \"success\") {\r\n                        setSimulation(simulationResult.result)\r\n                        setSumETC(response.data.sumETC)\r\n                        setSumIrrig(response.data.sumIrrig)\r\n                        setSumNbrIrrig(response.data.sumNbrIrrig)\r\n                        swal({\r\n                            icon: 'info',\r\n                            title: 'OK',\r\n                            text: `${t('saved_simulation')}`\r\n                          })\r\n\r\n                    }\r\n                    if(response.data.type === \"danger\"){\r\n                        swal({\r\n                            icon: 'error',\r\n                            text: response.data.message\r\n                          })\r\n                    }\r\n            }).catch(error=>{   \r\n                console.log(error)\r\n            }).finally(() => setIsLoading(true) )\r\n        \r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let data = []\r\n        let sumRain = 0\r\n\r\n        simulation.map(result=>{\r\n            if(result){\r\n                sumRain = sumRain + Number(result.rain)\r\n                data.push({\r\n                   bilan: result.bilan,\r\n                    dates :result.date\r\n                })\r\n            }\r\n        })\r\n        setChartData(data)\r\n        setSumPluie(sumRain)\r\n    }, [simulation])\r\n\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container p-4\">\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle\r\n                    sm=\"4\"\r\n                    title={t('water_balance')}\r\n                    subtitle={t('overview')}\r\n                    className=\"text-sm-left\"\r\n                />\r\n            </Row>\r\n            <Row className='text-center my-2'>\r\n                <Col lg='12' md=\"12\" sm=\"12\">\r\n                    <Card>\r\n                        <CardHeader className=\"border-bottom d-flex justify-content-between align-items-center\">\r\n                                <h6 className=\"m-0\">{t('config')}</h6>\r\n                                <div>\r\n                                    <i className='material-icons'>&#xe88e;</i> <span style={{fontSize :13,textDecoration:\"underline\"}}>{t('msg_simulation_name')}</span>\r\n                                </div>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col lg='4' md=\"12\" sm=\"12\" className=\"border-right d-flex justify-content-center align-items-center\">\r\n                                    <div className=\"mb-3 mx-auto\" style={{ height: \"140px\" }}>\r\n                                        {imageByInputs()}\r\n                                    </div>\r\n                                </Col>\r\n                                <Col lg='8' md=\"12\" sm=\"12\">\r\n                                    <Row form className=\"py-2 m-2\" >\r\n                                        <Col lg=\"12\" md=\"8\" sm=\"8\" className='py-4'>\r\n                                           <div style={{color :\"tomato\" , fontSize : 14 , padding : 5}}>{error}</div>\r\n                                            <Nav tabs style={{ paddingBottom: 10 }}>\r\n                                            <NavItem>\r\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"name\" className={`${elemValue === \"name\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">\r\n                                                    {t('name')}\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"pos\" className={`${elemValue === \"pos\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">\r\n                                                        {t('position')}\r\n                                                    </NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"crop\" className={`${elemValue === \"crop\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">{t('crop_info')}</NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"soil\" className={`${elemValue === \"soil\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">{t('soil_info')}</NavLink>\r\n                                                </NavItem>\r\n                                                <NavItem>\r\n                                                    <NavLink onClick={(e) => setElemValue(e.target.id)} id=\"irrig\" className={`${elemValue === \"irrig\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">{t('Irrigation')}</NavLink>\r\n                                                </NavItem>\r\n                                            </Nav>\r\n                                        </Col>\r\n\r\n                                        {returnInputs()}\r\n                                    </Row>\r\n                                    {\r\n                                        elemValue === \"soil\"\r\n                                            ?\r\n                                            <Row className=\"d-flex justify-content-center align-items-center\">\r\n                                               \r\n                                                    <Button outline theme=\"success\" onClick={() => checkAndSave()} >{t('save')}</Button>\r\n\r\n                                            </Row>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg='12' md=\"12\" sm=\"12\">\r\n                    <Card>\r\n                        <CardHeader className=\"border-bottom\">\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-start\",\r\n                                    width: \"auto\",\r\n                                    float: \"left\"\r\n                                }}\r\n                            >\r\n                                <h6 className=\"m-0\">{t('outputs')}</h6>{\" \"}\r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col id=\"page\" lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"ruMax\">RU max (mm)</label>\r\n                                    <FormInput id=\"ruMax\" value={RuMax} placeholder=\"RU max\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"ruInit\">{t('ru_initiale')} (mm)</label>\r\n                                    <FormInput id='ruInit' value={RuInitial} placeholder=\"RU initiale\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"epuis\">{t('epuisement_max')} (mm)</label>\r\n                                    <FormInput id=\"epuis\" value={Epuisement_maximal} placeholder=\"Epuisement maximal\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"nbrIrrig\">{t('nbr_irrigations')}</label>\r\n\r\n                                    <FormInput id='nbrIrrig' value={sumNbrIrrig} placeholder=\"Nombre d'irrigations\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"hautIrrig\">{t('hauteur_irrigations')} (mm)</label>\r\n                                    <FormInput id='hautIrrig' value={parseFloat(sumIrrig).toFixed(0)} placeholder=\"Hauteur d'eau des irrigations\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"vIrrig\">{t('volume_irrigations')} (m³ /ha)</label>\r\n                                    <FormInput value={parseFloat(VolumeIrrigation).toFixed(0)} id=\"vIrrig\" placeholder=\"Volume des irrigations\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"rumin\">Ru Min (mm)</label>\r\n                                    <FormInput value={RuMin} id=\"rumin\" placeholder=\"RU min\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"volTotalIrrig\">{t('Volume_total_irrigation')} (m³)</label>\r\n                                    <FormInput value={parseFloat(VolumeTotalEauIrrigation).toFixed(0)} id=\"volTotalIrrig\" placeholder=\"Volume Total d'eau d'irrigation\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"pluieTotal\">{t('pluie_total')} (mm)</label>\r\n                                    <FormInput value={parseFloat(sumPluie).toFixed(0)} id=\"pluieTotal\" placeholder=\"Pluie total\" />\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" className=\"form-group\">\r\n                                    <label htmlFor=\"evoTotal\">{t('evapotranspiration_totale')} (mm)</label>\r\n                                    <FormInput value={parseFloat(sumETC).toFixed(0)} id='evoTotal' placeholder=\"Evapotranspiration totale\" />\r\n                                </Col>\r\n\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\" >\r\n                                    <label htmlFor=\"deficit\">{t('déficit')} (mm)</label>\r\n                                    <FormInput value={parseFloat(Deficit).toFixed(0)} id=\"deficit\" placeholder=\"Déficit\" />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"py-2 d-flex justify-content-center align-items-center text-center\">\r\n\r\n                    <Col>\r\n                    <Card>\r\n                        {\r\n                         isLoading\r\n\r\n                            ?\r\n                            <CardBody>\r\n                                <p className=\"py-2 d-flex justify-content-center align-items-center\">\r\n                                    <button style={{ fontSize: 30, margin: 8, border: '1px solid #eee', borderRadius: 10, background: 'none' }} onClick={() => setToggle(true)}><i className='material-icons'>&#xe265;</i></button>\r\n                                    <button style={{ fontSize: 30, margin: 8, border: '1px solid #eee', borderRadius: 10, background: 'none' }} onClick={() => setToggle(false)}><i className='material-icons'>&#xe6e1;</i></button>\r\n                                </p>\r\n\r\n                                <Col className={`${toggle ? '' : 'd-none'}`} lg=\"12\" md=\"12\" sm=\"12\">\r\n                                    <h6>{t('water_balance')}</h6>\r\n                                    <table className=\"table mb-0 text-center table-bordered table-hover table-responsive-lg\">\r\n                                        <thead className=\"bg-light\">\r\n                                            <tr>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('ET0')}</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Pluie')} (mm)</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('ETc')}</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Pe')} (mm)</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Bilan hydrique')} (mm)</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Irrigation')}</th>\r\n                                                <th scope=\"col\" className=\"border-0\">{t('Nbr Irrigation')}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        {/* <tbody> */}\r\n                                        {/* {tableHydrique(InputsData.days)} */}\r\n                                        {/* </tbody> */}\r\n                                        {\r\n                                            simulation.map(result=>{\r\n                                                \r\n                                                let dates = moment(result.date.slice(0,10)).locale('En').format('MMM DD')\r\n                                                let ET0 = 2\r\n                                                return(\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td>{result.days}</td>\r\n                                                            <td>{dates}</td>\r\n                                                            <td>{parseFloat(result.kc).toFixed(2)}</td>\r\n                                                            <td>{ET0}</td>\r\n                                                            <td>{result.rain}</td>\r\n                                                            <td>{parseFloat(result.Etc).toFixed(2)}</td>\r\n                                                            <td>{parseFloat(result.pe).toFixed(2)}</td>\r\n                                                            <td>{parseFloat(result.bilan).toFixed(2)}</td>\r\n                                                            <td>{parseFloat(result.irrigation).toFixed(2)}</td>\r\n                                                            <td>{result.irrigationNbr}</td>\r\n\r\n                                                        </tr>\r\n                                                        \r\n                                                        {/* <tr>\r\n                                                            <td>{i}</td>\r\n                                                            <td>{dates}</td>\r\n                                                            <td>{parseFloat(allKc[i - 1]).toFixed(2)}</td>\r\n                \r\n                                                            <td>{ET0}</td>\r\n                                                            <td> <input\r\n                                                                name={i}\r\n                                                                key={i}\r\n                                                                className='my-1'\r\n                                                                style={{outline: 'none', border: '1px solid #e4e4e4' }}\r\n                                                                value={pluie.i}\r\n                                                                onChange={(e) => onChangeHandler(e.target.value, i)}\r\n                                                            />\r\n                                                            </td>\r\n                                                            <td>\r\n                                                            <input\r\n                                                                name={i}\r\n                                                                key={i}\r\n                                                                className='my-1'\r\n                                                                style={{outline: 'none', border: '1px solid #e4e4e4' }}\r\n                                                                value={irrigatedAlready.i}\r\n                                                                onChange={(e) => onChangeHandlerIrrigated(e.target.value, i)}\r\n                                                            />  \r\n                                                            </td>\r\n                                                            <td>{parseFloat(ETC).toFixed(2)}</td>\r\n                                                            <td>{Pe[i]}</td>\r\n                                                            <td>{`${parseFloat(bilanHydrique).toFixed(1)}`}</td>\r\n                                                            <td>{parseFloat(Irrigation).toFixed(2)}</td>\r\n                                                            <td>{IrrigationNbr}</td>\r\n                                                        </tr>\r\n                */}\r\n                                                    </tbody>\r\n\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </table>\r\n                                </Col>\r\n                                <Col className={`${toggle ? 'd-none' : ''}`} lg=\"12\" md=\"8\" sm=\"8\">\r\n                                    <h6>{t('water_balance_chart')}</h6>\r\n                                    <WaterChart data={chartData} />\r\n                                </Col>\r\n\r\n                            </CardBody>\r\n                            :\r\n                            null\r\n\r\n                        }\r\n                    </Card>\r\n                    </Col>\r\n                        \r\n                    \r\n\r\n            </Row>\r\n\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BilanHydrique"],"mappings":"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"},"metadata":{},"sourceType":"module"}