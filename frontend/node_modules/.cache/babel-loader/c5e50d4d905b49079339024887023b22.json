{"ast":null,"code":"import _defineProperty from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Restored Files\\\\backoffice\\\\frontend\\\\src\\\\supplier\\\\SupplierSensors.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, FormGroup, CardBody, CardHeader, Form, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react';\nimport PageTitle from '../components/common/PageTitle';\nimport api from '../../src/api/api';\nimport { useTranslation } from 'react-i18next';\nimport Pagination from '../views/Pagination';\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport { FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField } from '@mui/material';\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\n\nvar SupplierSensors = function SupplierSensors() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sensorData = _useState4[0],\n      setSensorData = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sensorId = _useState6[0],\n      setSensorId = _useState6[1];\n\n  var history = useHistory();\n  var location = useLocation();\n  var _location$state = location.state,\n      lastDataTime = _location$state.lastDataTime,\n      formattedTime = _location$state.formattedTime,\n      sensorState = _location$state.sensorState;\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      settingValues = _useState8[0],\n      setSettingValues = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      frequency = _useState10[0],\n      setFrequency = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dateSetting = _useState12[0],\n      setDateSetting = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      minSetting = _useState14[0],\n      setMinSetting = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      maxSetting = _useState16[0],\n      setMaxSetting = _useState16[1];\n\n  var _useState17 = useState({\n    simNumber: \"\",\n    simIdentify: \"\"\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      simSettings = _useState18[0],\n      setSimSettings = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      formValid = _useState20[0],\n      setFormValid = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showScan = _useState22[0],\n      setShowScan = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      resultScan = _useState24[0],\n      setResultScan = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      extranelToken = _useState26[0],\n      setExtranelToken = _useState26[1];\n\n  var _useState27 = useState([{\n    Mv1: '',\n    Mv2: '',\n    Mv3: ''\n  }]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      rowsData = _useState28[0],\n      setRowsData = _useState28[1];\n\n  var _useState29 = useState({\n    lat: '',\n    lon: '',\n    locationInfo: {}\n  }),\n      _useState30 = _slicedToArray(_useState29, 2),\n      sensorCoords = _useState30[0],\n      setSensorCoords = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      existSuppliers = _useState32[0],\n      setExistSuppliers = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      supplierUid = _useState34[0],\n      setSupplierUid = _useState34[1];\n\n  var _useState35 = useState([]),\n      _useState36 = _slicedToArray(_useState35, 2),\n      allSensors = _useState36[0],\n      setAllSensors = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      users = _useState38[0],\n      setUsers = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      userUid = _useState40[0],\n      setUserUid = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      singleSensor = _useState42[0],\n      setSingleSensor = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      code = _useState44[0],\n      setCode = _useState44[1];\n\n  var getAllSensors = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/supplier/get-sensors').then(function (response) {\n                var sensorsData = response.data.sensors;\n                setAllSensors(sensorsData);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAllSensors() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getExistSuppliers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/admin/exist-suppliers').then(function (response) {\n                var Data = response.data.suppliers;\n                setExistSuppliers(Data);\n                setSupplierUid(Data.uid);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getExistSuppliers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getAllSensors();\n    getMyUsers();\n    getExistSuppliers();\n  }, []);\n\n  var getMyUsers = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/supplier/get-users').then(function (response) {\n                var usersList = response.data.users;\n                setUsers(usersList);\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getMyUsers() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getSingleSensor = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(sensorid, type) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api.get(\"/admin/single-sensor/\".concat(sensorid)).then(function (res) {\n                var sensorData = res.data.sensor;\n                setSingleSensor(sensorData);\n                setCode(sensorData.code);\n                users.map(function (user) {\n                  if (user.id === sensorData.user_id) {\n                    setUserUid(user.uid);\n                  }\n                });\n                existSuppliers.map(function (supplier) {\n                  if (supplier.id === sensorData.supplier_id) {\n                    setSupplierUid(supplier.uid);\n                  }\n                });\n              }).catch(function (error) {\n                swal({\n                  title: \"Error\",\n                  icon: \"error\"\n                });\n              });\n\n            case 2:\n              setToggle(!toggle);\n\n              if (type === \"User\") {\n                getMyUsers();\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getSingleSensor(_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getSingleSensorToModif = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!id) {\n                _context5.next = 3;\n                break;\n              }\n\n              _context5.next = 3;\n              return api.get(\"/sensor/single-sensor/\".concat(id)).then(function (res) {\n                var SensorData = res.data.sensor;\n                var SensorLocation = res.data.location;\n                var userSupplier = res.data.user;\n                setResultScan(SensorData.code);\n                setSensorCoords({\n                  lat: SensorData.Latitude,\n                  lon: SensorData.Longitude,\n                  locationInfo: SensorLocation\n                });\n                setSensorId(id);\n                var dataMapping = SensorData.dataMapping;\n\n                if (dataMapping.length > 0) {\n                  setSettingValues(dataMapping);\n                  dataMapping.map(function (data) {\n                    var frequency = data.frequency;\n                    setFrequency(frequency);\n                    setSimSettings({\n                      simIdentify: data.simIdentify,\n                      simNumber: data.simNumber\n                    });\n                    console.log(data);\n                    setDateSetting(data.date);\n                    setMinSetting(data.min);\n                    setMaxSetting(data.max);\n                  }); // dataArray.push({date : data.date, min : data.min, max : data.max})\n                }\n\n                if (userSupplier != null) {\n                  setExtranelToken(userSupplier.external_api_token);\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Error\",\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getSingleSensorToModif(_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var assignSensorToUser = function assignSensorToUser(userUid, supplierUid) {\n    var data = {\n      code: code,\n      user_uid: userUid,\n      supplier_uid: supplierUid\n    };\n    api.post('/admin/edit-sensor', data).then(function (response) {\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('sensor_updated')), {\n          icon: \"success\"\n        });\n        setToggle(false);\n        getAllSensors();\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Error'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Error'\n      });\n    });\n  };\n\n  var validateForm = function validateForm() {\n    // Check if the sensor code, frequency, and date inputs are not empty\n    var isCodeValid = resultScan.trim() !== \"\";\n    var isFrequencyValid = frequency.trim() !== \"\"; // Update the form validation status\n\n    setFormValid(isCodeValid && isFrequencyValid);\n  };\n\n  useEffect(function () {\n    validateForm();\n  }, [resultScan, frequency, dateSetting]);\n\n  var editSensor = function editSensor() {\n    if (sensorId) {\n      var data = {\n        sensor_id: sensorId,\n        code: resultScan,\n        dataMapping: settingValues,\n        frequency: frequency,\n        lat: sensorCoords.lat,\n        lon: sensorCoords.lon\n      };\n\n      if (formValid) {\n        api.post('/sensor/edit-mapping', data).then(function (response) {\n          if (response.data.type === 'success') {\n            swal(\"\".concat(t('sensor_added')), {\n              icon: \"success\"\n            });\n            getSingleSensor();\n          }\n        }).catch(function (err) {\n          swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Error'\n          });\n        });\n      } else {\n        swal({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Please fill in all required fields.\"\n        });\n      }\n    }\n  };\n\n  var niv = ['Mv1', 'Mv2', 'Mv3'];\n\n  var onChangeHandlerDate = function onChangeHandlerDate(value, name, label) {\n    setDateSetting(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, \"\".concat(name, \"_\").concat(label), value));\n    }, []);\n  };\n\n  var onChangeHandlerMax = function onChangeHandlerMax(value, name, label) {\n    setMaxSetting(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, \"\".concat(name, \"_\").concat(label), value));\n    }, []);\n  };\n\n  var onChangeHandlerMin = function onChangeHandlerMin(value, name, label) {\n    setMinSetting(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, \"\".concat(name, \"_\").concat(label), value));\n    }, []);\n  };\n\n  useEffect(function () {\n    var dataArray = [];\n    dataArray.push({\n      date: dateSetting,\n      min: minSetting,\n      max: maxSetting\n    });\n    setSettingValues(dataArray);\n  }, [dateSetting, minSetting, maxSetting]);\n\n  var Items = function Items() {\n    var element = [];\n\n    var _loop = function _loop(index) {\n      element.push( /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }\n      }, niv[index]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: 'date',\n        style: {\n          minHeight: 32,\n          marginRight: 5,\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        key: index,\n        type: \"date\",\n        required: true //  value={dateSetting.index}\n        ,\n        value: dateSetting != null && typeof dateSetting[\"Mv\".concat(index + 1, \"_date\")] !== 'undefined' ? dateSetting[\"Mv\".concat(index + 1, \"_date\")] : \"\",\n        onChange: function onChange(e) {\n          return onChangeHandlerDate(e.target.value, niv[index], 'date');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: 'min',\n        style: {\n          minHeight: 32,\n          marginRight: 5,\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        key: index // value={minSetting.indx}\n        ,\n        value: minSetting != null && typeof minSetting[\"Mv\".concat(index + 1, \"_min\")] !== 'undefined' ? minSetting[\"Mv\".concat(index + 1, \"_min\")] : \"\",\n        onChange: function onChange(e) {\n          return onChangeHandlerMin(e.target.value, niv[index], \"min\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: 'max',\n        style: {\n          minHeight: 32,\n          marginRight: 5,\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        key: index // value={maxSetting.indx}\n        ,\n        value: maxSetting != null && typeof maxSetting[\"Mv\".concat(index + 1, \"_max\")] !== 'undefined' ? maxSetting[\"Mv\".concat(index + 1, \"_max\")] : \"\",\n        onChange: function onChange(e) {\n          return onChangeHandlerMax(e.target.value, niv[index], \"max\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 19\n        }\n      })))));\n    };\n\n    for (var index = 0; index < niv.length; index++) {\n      _loop(index);\n    }\n\n    return element;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('list_sensors'),\n    subtitle: t('list_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('search_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"search\",\n    placeholder: \"Search By code\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('my_actions'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 33\n    }\n  }, t('sensor_code')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }, t('user')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 33\n    }\n  }, t('Actions')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, allSensors.map(function (sensor) {\n    var nameUser = '';\n    users.map(function (user) {\n      if (user.id === sensor.user_id) {\n        nameUser = user.name;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }, sensor.code), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 45\n      }\n    }, nameUser), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 45\n      }\n    }, sensor.deleted_at === null ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"History\",\n      onClick: function onClick() {\n        history.push(\"/my-history/\".concat(sensor.code));\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 168\n      }\n    }, \"\\uE889\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return getSingleSensorToModif(sensor.id);\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 127\n      }\n    }, \"\\uE3C9\"))) : null), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: function onClick() {\n        getSingleSensor(sensor.id, 'User');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 45\n      }\n    }, \"Assign to user\")));\n  })))), sensorId && /*#__PURE__*/React.createElement(Row, {\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"8\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      width: \"auto\",\n      float: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 21\n    }\n  }, t('sensor_setup')), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: editSensor,\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 21\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      return setSensorId(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 21\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pt-0 px-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    sm: \"12\",\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 29\n    }\n  }, t('sensor_code')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('sensor_code'),\n    value: resultScan,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      edge: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(QrCodeScannerIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 37\n      }\n    }))),\n    label: t('sensor_code'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, t('Frequency')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('Frequency'),\n    value: frequency,\n    onChange: function onChange(e) {\n      setFrequency(e.target.value);\n    },\n    label: t('Frequency'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 29\n    }\n  }, t('lat')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('lat'),\n    value: sensorCoords.lat,\n    onChange: function onChange(e) {\n      return setSensorCoords(_objectSpread({}, sensorCoords, {\n        lat: e.target.value\n      }));\n    },\n    label: t('lat'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 29\n    }\n  }, t('lon')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('lon'),\n    value: sensorCoords.lon,\n    onChange: function onChange(e) {\n      return setSensorCoords(_objectSpread({}, sensorCoords, {\n        lon: e.target.value\n      }));\n    },\n    label: t('lon'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center  table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 33\n    }\n  }, t('Date')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 33\n    }\n  }, t('Min'), \" (%)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 33\n    }\n  }, t('Max'), \" (%)\"))), Items()))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center mt-2  table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 33\n    }\n  }, t('Timezone')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 33\n    }\n  }, t('Location')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 33\n    }\n  }, t('Link to map')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 33\n    }\n  }, \"GMT +\", sensorCoords.locationInfo.offset), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 33\n    }\n  }, sensorCoords.locationInfo.timezone_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: sensorCoords.locationInfo.map_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 33\n    }\n  }, \"View position\")))))))))))), /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    open: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 29\n    }\n  }, \"Sensor code : \", code), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      return assignSensorToUser(userUid, supplierUid);\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 37\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 37\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 41\n    }\n  }, \"Select a user to assign sensor\"), /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: userUid,\n    onChange: function onChange(e) {\n      setUserUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 45\n    }\n  }, \"Select User\"), users.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 60\n      }\n    }, user.name);\n  }))))))));\n};\n\nexport default SupplierSensors;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","FormGroup","CardBody","CardHeader","Form","FormInput","ButtonGroup","Button","Modal","ModalHeader","ModalBody","FormSelect","PageTitle","api","useTranslation","Pagination","useHistory","useParams","Link","useLocation","swal","FormControl","IconButton","InputAdornment","InputLabel","OutlinedInput","TextField","QrCodeScannerIcon","SupplierSensors","t","i18n","toggle","setToggle","sensorData","setSensorData","sensorId","setSensorId","history","location","state","lastDataTime","formattedTime","sensorState","settingValues","setSettingValues","frequency","setFrequency","dateSetting","setDateSetting","minSetting","setMinSetting","maxSetting","setMaxSetting","simNumber","simIdentify","simSettings","setSimSettings","formValid","setFormValid","showScan","setShowScan","resultScan","setResultScan","extranelToken","setExtranelToken","Mv1","Mv2","Mv3","rowsData","setRowsData","lat","lon","locationInfo","sensorCoords","setSensorCoords","existSuppliers","setExistSuppliers","supplierUid","setSupplierUid","allSensors","setAllSensors","users","setUsers","userUid","setUserUid","singleSensor","setSingleSensor","code","setCode","getAllSensors","get","then","response","sensorsData","data","sensors","catch","err","console","log","getExistSuppliers","Data","suppliers","uid","getMyUsers","usersList","getSingleSensor","sensorid","type","res","sensor","map","user","id","user_id","supplier","supplier_id","error","title","icon","getSingleSensorToModif","SensorData","SensorLocation","userSupplier","Latitude","Longitude","dataMapping","length","date","min","max","external_api_token","assignSensorToUser","user_uid","supplier_uid","post","text","validateForm","isCodeValid","trim","isFrequencyValid","editSensor","sensor_id","niv","onChangeHandlerDate","value","name","label","onChangeHandlerMax","onChangeHandlerMin","dataArray","push","Items","element","index","minHeight","marginRight","outline","border","e","target","nameUser","deleted_at","display","justifyContent","width","float","m","offset","timezone_id","map_url"],"sources":["C:/Restored Files/backoffice/frontend/src/supplier/SupplierSensors.js"],"sourcesContent":["import React ,{useState ,useEffect } from 'react'\r\nimport { Container, Row, Col, Card, FormGroup,CardBody, CardHeader, Form, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react'\r\nimport PageTitle from '../components/common/PageTitle'\r\nimport api from '../../src/api/api'\r\nimport { useTranslation } from 'react-i18next';\r\nimport Pagination from '../views/Pagination';\r\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport { FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField } from '@mui/material';\r\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\r\n\r\nconst SupplierSensors = () => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [toggle, setToggle] = useState(false)\r\n    const [sensorData, setSensorData] = useState([]);\r\n    const [sensorId, setSensorId] = useState(null)\r\n    const history = useHistory()\r\n    const location = useLocation();\r\n    const { lastDataTime, formattedTime, sensorState } = location.state;\r\n    const [settingValues, setSettingValues] = useState([])\r\n    const [frequency, setFrequency] = useState('')\r\n    const [dateSetting, setDateSetting] = useState([])\r\n    const [minSetting, setMinSetting] = useState({})\r\n    const [maxSetting, setMaxSetting] = useState({})\r\n    const [simSettings, setSimSettings] = useState({\r\n      simNumber: \"\",\r\n      simIdentify: \"\"\r\n    })\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [showScan, setShowScan] = useState(false)\r\n    const [resultScan, setResultScan] = useState('')\r\n    const [extranelToken, setExtranelToken] = useState('')\r\n    const [rowsData, setRowsData] = useState([\r\n      { Mv1: '', Mv2: '', Mv3: '' },\r\n  \r\n    ])\r\n    const [sensorCoords, setSensorCoords] = useState({\r\n      lat: '',\r\n      lon: '',\r\n      locationInfo: {}\r\n    })\r\n    const [existSuppliers,setExistSuppliers] = useState([])\r\n    const [supplierUid,setSupplierUid] = useState('')\r\n    const [allSensors, setAllSensors] = useState([])\r\n    const [users,setUsers] = useState([])\r\n    const [userUid,setUserUid] = useState('')\r\n    const [singleSensor,setSingleSensor] = useState([])\r\n    const [code,setCode] = useState('')\r\n    const getAllSensors = async () => {\r\n        await api.get('/supplier/get-sensors')\r\n            .then(response => {\r\n                let sensorsData = response.data.sensors\r\n                setAllSensors(sensorsData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const getExistSuppliers = async () => {\r\n        await api.get('/admin/exist-suppliers')\r\n            .then(response => {\r\n                var Data = response.data.suppliers\r\n                setExistSuppliers(Data)\r\n                setSupplierUid(Data.uid)\r\n   \r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getAllSensors()\r\n        getMyUsers ()\r\n        getExistSuppliers()\r\n    },[])\r\n\r\n    const getMyUsers = async () => {\r\n        await api.get('/supplier/get-users')\r\n        .then(response =>{\r\n            let usersList = response.data.users\r\n            setUsers(usersList)\r\n        }).catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getSingleSensor = async (sensorid,type) => {\r\n\r\n        await api.get(`/admin/single-sensor/${sensorid}`)\r\n            .then(res => {\r\n                let sensorData = res.data.sensor\r\n                setSingleSensor(sensorData) \r\n                setCode(sensorData.code)  \r\n                    users.map(user=>{\r\n                        if(user.id === sensorData.user_id){\r\n                            setUserUid(user.uid)\r\n                        }\r\n                    })\r\n                    existSuppliers.map(supplier=>{\r\n                        if(supplier.id === sensorData.supplier_id){\r\n                            setSupplierUid(supplier.uid)\r\n                        }\r\n                    })\r\n            }).catch(error => {\r\n                swal({\r\n                    title: \"Error\",\r\n                    icon: \"error\",\r\n\r\n                });\r\n\r\n            })\r\n        setToggle(!toggle)\r\n        if(type === \"User\") {\r\n            getMyUsers()\r\n        }\r\n    }\r\n\r\n    const getSingleSensorToModif = async (id) => {\r\n        if(id){\r\n            await api.get(`/sensor/single-sensor/${id}`)\r\n               .then(res => {\r\n                 let SensorData = res.data.sensor\r\n                 let SensorLocation = res.data.location\r\n                 let userSupplier = res.data.user\r\n                 setResultScan(SensorData.code)\r\n                 setSensorCoords({ lat: SensorData.Latitude, lon: SensorData.Longitude, locationInfo: SensorLocation })\r\n                 setSensorId(id)\r\n                 let dataMapping = SensorData.dataMapping\r\n                 if (dataMapping.length > 0) {\r\n                   setSettingValues(dataMapping)\r\n                   dataMapping.map(data => {\r\n                     let frequency = data.frequency\r\n                     setFrequency(frequency)\r\n                     setSimSettings({ simIdentify: data.simIdentify, simNumber: data.simNumber })\r\n                     console.log(data)\r\n                     setDateSetting(data.date)\r\n                     setMinSetting(data.min)\r\n                     setMaxSetting(data.max)\r\n         \r\n                   })\r\n                   // dataArray.push({date : data.date, min : data.min, max : data.max})\r\n         \r\n                 }\r\n         \r\n         \r\n                 if (userSupplier != null) {\r\n                   setExtranelToken(userSupplier.external_api_token)\r\n                 }\r\n               }).catch(error => {\r\n                 swal({\r\n                   title: \"Error\",\r\n                   icon: \"error\",\r\n         \r\n                 });\r\n         \r\n               })\r\n    \r\n        }\r\n      }\r\n\r\n    const assignSensorToUser = (userUid,supplierUid) =>{\r\n        let data ={\r\n            code : code,\r\n            user_uid : userUid,\r\n            supplier_uid : supplierUid\r\n\r\n        }\r\n        api.post('/admin/edit-sensor',data)\r\n        .then(response =>{\r\n            if(response.data.type === 'success'){\r\n                swal(`${t('sensor_updated')}`, {\r\n                    icon: \"success\",\r\n                });\r\n                setToggle(false)\r\n                getAllSensors()\r\n            }\r\n            if(response.data.type === 'danger'){\r\n                swal({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Error'\r\n                })\r\n\r\n            }\r\n        }).catch(err=>{\r\n            swal({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Error'\r\n            })\r\n        })\r\n    }\r\n\r\n    const validateForm = () => {\r\n        // Check if the sensor code, frequency, and date inputs are not empty\r\n        const isCodeValid = resultScan.trim() !== \"\";\r\n        const isFrequencyValid = frequency.trim() !== \"\";\r\n    \r\n        // Update the form validation status\r\n        setFormValid(isCodeValid && isFrequencyValid);\r\n      };\r\n    \r\n      useEffect(() => {\r\n        validateForm();\r\n      }, [resultScan, frequency, dateSetting]);\r\n    \r\n    \r\n      const editSensor = () => {\r\n     if(sensorId) {\r\n          let data = {\r\n          sensor_id: sensorId,\r\n          code: resultScan,\r\n          dataMapping: settingValues,\r\n          frequency: frequency,\r\n          lat: sensorCoords.lat,\r\n          lon: sensorCoords.lon\r\n        }\r\n        if (formValid) {\r\n          api.post('/sensor/edit-mapping', data)\r\n            .then(response => {\r\n              if (response.data.type === 'success') {\r\n                swal(`${t('sensor_added')}`, {\r\n                  icon: \"success\",\r\n                })\r\n                getSingleSensor()\r\n              }\r\n            }).catch(err => {\r\n              swal({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Error'\r\n              })\r\n            })\r\n    \r\n        } else {\r\n          swal({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Please fill in all required fields.\",\r\n          });\r\n        }}\r\n      }\r\n\r\n      let niv = ['Mv1', 'Mv2', 'Mv3']\r\n\r\n      const onChangeHandlerDate = (value, name, label) => {\r\n    \r\n        setDateSetting(state => ({ ...state, [`${name}_${label}`]: value }), [])\r\n      }\r\n      const onChangeHandlerMax = (value, name, label) => {\r\n        setMaxSetting(state => ({ ...state, [`${name}_${label}`]: value }), [])\r\n      }\r\n      const onChangeHandlerMin = (value, name, label) => {\r\n        setMinSetting(state => ({ ...state, [`${name}_${label}`]: value }), [])\r\n      }\r\n    \r\n      useEffect(() => {\r\n        let dataArray = []\r\n        dataArray.push({ date: dateSetting, min: minSetting, max: maxSetting })\r\n        setSettingValues(dataArray)\r\n      }, [dateSetting, minSetting, maxSetting])\r\n    \r\n    \r\n    \r\n      const Items = () => {\r\n        let element = []\r\n    \r\n        for (let index = 0; index < niv.length; index++) {\r\n          element.push(\r\n            <tbody>\r\n              {/* {\r\n                          rowsData.map((item,indx)=>{ */}\r\n              {/* return ( */}\r\n              <tr>\r\n                <td>{niv[index]}</td>\r\n                <td>\r\n                  <input\r\n                    name={'date'}\r\n                    style={{ minHeight: 32, marginRight: 5, outline: 'none', border: '1px solid #e4e4e4' }}\r\n                    key={index}\r\n                    type=\"date\"\r\n                    required\r\n                    //  value={dateSetting.index}\r\n                    value={(dateSetting != null && typeof dateSetting[`Mv${index + 1}_date`] !== 'undefined') ? dateSetting[`Mv${index + 1}_date`] : \"\"}\r\n                    onChange={e => onChangeHandlerDate(e.target.value, niv[index], 'date')}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    name={'min'}\r\n                    style={{ minHeight: 32, marginRight: 5, outline: 'none', border: '1px solid #e4e4e4' }}\r\n                    key={index}\r\n                    // value={minSetting.indx}\r\n                    value={(minSetting != null && typeof minSetting[`Mv${index + 1}_min`] !== 'undefined') ? minSetting[`Mv${index + 1}_min`] : \"\"}\r\n                    onChange={e => onChangeHandlerMin(e.target.value, niv[index], \"min\")}\r\n    \r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    name={'max'}\r\n                    style={{ minHeight: 32, marginRight: 5, outline: 'none', border: '1px solid #e4e4e4' }}\r\n                    key={index}\r\n                    // value={maxSetting.indx}\r\n                    value={(maxSetting != null && typeof maxSetting[`Mv${index + 1}_max`] !== 'undefined') ? maxSetting[`Mv${index + 1}_max`] : \"\"}\r\n                    onChange={e => onChangeHandlerMax(e.target.value, niv[index], \"max\")}\r\n    \r\n                  />\r\n                </td>\r\n              </tr>\r\n    \r\n    \r\n              {/* //   })\r\n                        // } */}\r\n    \r\n            </tbody>\r\n    \r\n          )\r\n    \r\n        }\r\n        return element\r\n      }\r\n    \r\n\r\n  return (\r\n    <>\r\n            <Container>\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('list_sensors')}\r\n                        subtitle={t('list_sensors')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        subtitle={t('search_sensors')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Row form className=\"d-flex justify-content-center\">\r\n                    <Col md=\"3\" className=\"form-group\">\r\n                        <FormGroup>\r\n                            <div className=\"d-flex\">\r\n                                <FormInput\r\n                                    id=\"search\"\r\n                                    placeholder=\"Search By code\" />\r\n\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        subtitle={t('my_actions')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Card>\r\n                    <table className=\"table mb-0 text-center\">\r\n                        <thead className=\"bg-light\">\r\n                            <tr>\r\n                                <th scope=\"col\" className=\"border-0\">{t('sensor_code')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('user')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Actions')}</th>\r\n                                <th scope=\"col\" className=\"border-0\"></th>\r\n                                <th scope=\"col\" className=\"border-0\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                allSensors.map(sensor => {\r\n                                    let nameUser = ''\r\n                                    users.map(user=>{\r\n                                        if(user.id=== sensor.user_id){\r\n                                            nameUser = user.name\r\n                                        }\r\n                                    })\r\n                                    return (\r\n                                        <tr>\r\n                                            <td>{sensor.code}</td>\r\n                                            <td>{nameUser}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    sensor.deleted_at === null\r\n                                                        ?\r\n                                                        <ButtonGroup size=\"sm\" className=\"mr-2\">\r\n                                                            <Button title=\"History\" onClick={() => { history.push(`/my-history/${sensor.code}`)}} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i></Button>\r\n                                                            <Button onClick={() => getSingleSensorToModif(sensor.id)} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\r\n\r\n                                                        </ButtonGroup>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n\r\n                                            </td>\r\n                                            <td>\r\n                                            <Button  outline onClick={() => {getSingleSensor(sensor.id,'User')}}>Assign to user</Button>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </Card>\r\n                {/* <Row className=\"py-4 justify-content-center\">\r\n                    <Pagination usersPerPage={sensorsPerPage} totalUsers={allSensors.length} paginate={paginate} />\r\n\r\n                </Row> */}\r\n                {\r\n        sensorId  && (\r\n        <Row className='py-4'>\r\n            <Col lg=\"12\" md=\"8\" sm=\"12\" className=\"mb-4\">\r\n            <Card small className=\"h-100\">\r\n                <CardHeader className=\"border-bottom\">\r\n                <div\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    width: \"auto\",\r\n                    float: \"left\"\r\n                    }}\r\n                >\r\n                    <h6 className=\"m-0\">{t('sensor_setup')}</h6>{\" \"}\r\n                </div>\r\n                <div\r\n                    style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-end\",\r\n    \r\n                    }}\r\n                >\r\n                    <Button\r\n                    // theme=\"success\"\r\n                    onClick={editSensor}\r\n                    className=\"mb-2 mr-1 btn btn-success\"\r\n                    >\r\n                    <i class={`fa fa-check mx-2`}></i>\r\n                    {t('save')}\r\n                    </Button>\r\n                    <Button\r\n                    // theme=\"success\"\r\n                    className=\"mb-2 mr-1 btn btn-danger\"\r\n                    onClick={() => setSensorId(null)}\r\n    \r\n                    >\r\n                    <i class={`fa fa-times mx-2`}></i>\r\n                    {t('cancel')}\r\n                    </Button>\r\n                </div>\r\n                </CardHeader>\r\n                <CardBody className=\"pt-0 px-1\">\r\n                <Row className=\"p-2\">\r\n                    <Col lg=\"8\" sm=\"12\" md=\"12\">\r\n                    <Form>\r\n                        <Row form>\r\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('sensor_code')}</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type='text'\r\n                                placeholder={t('sensor_code')}\r\n                                value={resultScan}\r\n                                endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    edge=\"end\"\r\n                                    >\r\n                                    <QrCodeScannerIcon />\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                                }\r\n                                label={t('sensor_code')}\r\n                            />\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('Frequency')}</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type='text'\r\n                                placeholder={t('Frequency')}\r\n                                value={frequency}\r\n                                onChange={e => { setFrequency(e.target.value) }}\r\n                                label={t('Frequency')}\r\n                            />\r\n                            </FormControl>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row form>\r\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('lat')}</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type='text'\r\n                                placeholder={t('lat')}\r\n                                value={sensorCoords.lat}\r\n                                onChange={e => setSensorCoords({ ...sensorCoords, lat: e.target.value })}\r\n                                label={t('lat')}\r\n                            />\r\n                            </FormControl>\r\n                        </Col>\r\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('lon')}</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type='text'\r\n                                placeholder={t('lon')}\r\n                                value={sensorCoords.lon}\r\n                                onChange={e => setSensorCoords({ ...sensorCoords, lon: e.target.value })}\r\n                                label={t('lon')}\r\n                            />\r\n                            </FormControl>\r\n                        </Col>\r\n                        </Row>\r\n                        <Row form>\r\n                        <Col lg=\"12\" md=\"12\" sm=\"12\">\r\n                            <table className=\"table mb-0 border text-center  table-responsive-lg\">\r\n                            <thead className=\"bg-light\">\r\n                                <tr>\r\n                                {/* <th scope=\"col\" className=\"border-0\">\r\n                                    <div className='d-flex justify-content-center align-items-center'>\r\n                                    <Button style={{ outline: 'none', border: 'none', background: 'transparent' }} onClick={() => addTableRows()}><i style={{ fontSize: 20, color: \"#27A6B7\" }} className='material-icons'>&#xe147;</i></Button>\r\n                                    <Button style={{ outline: 'none', border: 'none', background: 'transparent' }} onClick={(e) => deleteTableRows(1, e)}><i style={{ fontSize: 20, color: \"#27A6B7\" }} className=\"material-icons\">&#xe872;</i></Button>\r\n                                    </div>\r\n                                </th> */}\r\n                                <th scope=\"col\" className=\"border-0\">{t('Date')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Min')} (%)</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Max')} (%)</th>\r\n                                </tr>\r\n                            </thead>\r\n    \r\n                            {Items()}\r\n    \r\n                            </table>\r\n                        \r\n                        </Col>\r\n    \r\n                        </Row>\r\n    \r\n                    </Form>\r\n                    </Col>\r\n                    <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"mt-1\">\r\n                    {/* <table className=\"table mb-0 border text-center  table-responsive-lg\">\r\n                            <thead className=\"bg-light\">\r\n                            <tr>\r\n    \r\n                                <th scope=\"col\" className=\"border-0\">{t('statu')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('last_reading')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('expected')}</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n    \r\n                            <tr>\r\n                                <td style={{ color: sensorState === 'Active' ? 'green' : 'red', fontSize: 13, fontWeight: 'bold' }}>\r\n                                {sensorState }\r\n                                </td>\r\n                                <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>\r\n                                {lastDataTime}\r\n                                </td>\r\n                                <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>\r\n                                {formattedTime}\r\n                                </td>\r\n                            </tr>\r\n    \r\n    \r\n    \r\n                            </tbody>\r\n    \r\n                        </table> */}\r\n                        <table className=\"table mb-0 border text-center mt-2  table-responsive-lg\">\r\n                            <thead className=\"bg-light\">\r\n                            <tr>\r\n    \r\n                                <th scope=\"col\" className=\"border-0\">{t('Timezone')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Location')}</th>\r\n                                <th scope=\"col\" className=\"border-0\">{t('Link to map')}</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n    \r\n                            <tr>\r\n                                <td>\r\n                                GMT +{sensorCoords.locationInfo.offset}\r\n                                </td>\r\n                                <td>\r\n                                {sensorCoords.locationInfo.timezone_id}\r\n                                </td>\r\n                                <td>\r\n                                <a href={sensorCoords.locationInfo.map_url} target=\"_blank\" rel=\"noopener noreferrer\">View position</a>\r\n                                </td>\r\n                            </tr>\r\n    \r\n    \r\n    \r\n                            </tbody>\r\n    \r\n                        </table>\r\n                    </Col>\r\n    \r\n                </Row>\r\n                </CardBody>\r\n            </Card>\r\n            </Col>\r\n        </Row>\r\n\r\n        ) \r\n                    }\r\n            </Container>\r\n            <Modal centered={true} open={toggle}>\r\n                        <ModalHeader className=\"d-flex justify-content-between align-items-center\">\r\n                            <div>\r\n                                Sensor code : {code}\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"flex-end\",\r\n        \r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    // theme=\"success\"\r\n                                    onClick={()  => assignSensorToUser(userUid,supplierUid)}\r\n                                    className=\"mb-2 mr-1 btn btn-success\"\r\n                                >\r\n                                    <i class={`fa fa-check mx-2`}></i>\r\n                                    {t('save')}\r\n                                </Button>\r\n                                <Button\r\n                                    // theme=\"success\"\r\n                                    className=\"mb-2 mr-1 btn btn-danger\"\r\n                                    onClick={() => {setToggle(false)} }\r\n                                >\r\n                                    <i class={`fa fa-times mx-2`}></i>\r\n                                    {t('cancel')}\r\n                                </Button>\r\n                            </div>\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <Row className='d-flex justify-content-center'>\r\n                                <Col lg='6' md='12' sm='12'>\r\n                                    <FormGroup>\r\n                                        <label htmlFor=\"users\">Select a user to assign sensor</label>\r\n                                            <FormSelect\r\n                                            id=\"users\"\r\n                                            value={userUid}\r\n                                            onChange={(e) => {setUserUid(e.target.value)} }\r\n                                        >\r\n                                            <option value=\"\">Select User</option>\r\n        \r\n                                            {\r\n                                                users.map(user =>{\r\n                                            \r\n                                                    return <option value={user.uid}>{user.name}</option>\r\n        \r\n                                                })\r\n                                            }\r\n                                        </FormSelect>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n        \r\n        \r\n                        </ModalBody>\r\n                    </Modal>\r\n        </>\r\n  )\r\n}\r\n\r\nexport default SupplierSensors"],"mappings":"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"},"metadata":{},"sourceType":"module"}