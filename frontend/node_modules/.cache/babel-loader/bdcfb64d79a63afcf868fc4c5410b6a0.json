{"ast":null,"code":"import _defineProperty from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorSettings.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Card, CardBody, CardHeader, Button, Form, FormInput, FormGroup, ButtonGroup, FormSelect } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport Html5QrcodePlugin from \"./Html5QrcodePlugin\";\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\nimport { FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField } from '@mui/material';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\n\nvar SensorSettings = function SensorSettings(props) {\n  // const { lastDataTime, formattedTime, sensorState } = props.location;\n  var params = useParams(); //   let id = params.id\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var history = useHistory();\n  var location = useLocation();\n  var _location$state = location.state,\n      lastDataTime = _location$state.lastDataTime,\n      formattedTime = _location$state.formattedTime,\n      sensorState = _location$state.sensorState;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      settingValues = _useState2[0],\n      setSettingValues = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      frequency = _useState4[0],\n      setFrequency = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dateSetting = _useState6[0],\n      setDateSetting = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      minSetting = _useState8[0],\n      setMinSetting = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      maxSetting = _useState10[0],\n      setMaxSetting = _useState10[1];\n\n  var _useState11 = useState({\n    simNumber: \"\",\n    simIdentify: \"\"\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      simSettings = _useState12[0],\n      setSimSettings = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      formValid = _useState14[0],\n      setFormValid = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showScan = _useState16[0],\n      setShowScan = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      resultScan = _useState18[0],\n      setResultScan = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      extranelToken = _useState20[0],\n      setExtranelToken = _useState20[1];\n\n  var _useState21 = useState([{\n    Mv1: '',\n    Mv2: '',\n    Mv3: ''\n  }]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      rowsData = _useState22[0],\n      setRowsData = _useState22[1];\n\n  var _useState23 = useState({\n    lat: '',\n    lon: '',\n    locationInfo: {}\n  }),\n      _useState24 = _slicedToArray(_useState23, 2),\n      sensorCoords = _useState24[0],\n      setSensorCoords = _useState24[1]; //   const addTableRows = () => {\n  //     setRowsData([...rowsData, { id: '' }])\n  //   }\n\n\n  var deleteTableRows = function deleteTableRows(index, e) {\n    console.log(index);\n    setRowsData(rowsData.filter(function (data, i) {\n      return i !== index;\n    }));\n  };\n\n  var onNewScanResult = function onNewScanResult(decodedText, decodedResult) {\n    setResultScan(decodedText); // Handle the result here.\n  };\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      sensorData = _useState26[0],\n      setSensorData = _useState26[1];\n\n  var _useState27 = useState(null),\n      _useState28 = _slicedToArray(_useState27, 2),\n      sensorId = _useState28[0],\n      setSensorId = _useState28[1];\n\n  var fetchDataSensors = function fetchDataSensors() {\n    api.get(\"/sensor/sensors\").then(function (response) {\n      var sensorData = response.data;\n      setSensorData(sensorData);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var getSingleSensor = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!id) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return api.get(\"/sensor/single-sensor/\".concat(id)).then(function (res) {\n                var SensorData = res.data.sensor;\n                var SensorLocation = res.data.location;\n                var userSupplier = res.data.user;\n                setResultScan(SensorData.code);\n                setSensorCoords({\n                  lat: SensorData.Latitude,\n                  lon: SensorData.Longitude,\n                  locationInfo: SensorLocation\n                });\n                setSensorId(id);\n                var dataMapping = SensorData.dataMapping;\n\n                if (dataMapping.length > 0) {\n                  setSettingValues(dataMapping);\n                  dataMapping.map(function (data) {\n                    var frequency = data.frequency;\n                    setFrequency(frequency);\n                    setSimSettings({\n                      simIdentify: data.simIdentify,\n                      simNumber: data.simNumber\n                    });\n                    console.log(data);\n                    setDateSetting(data.date);\n                    setMinSetting(data.min);\n                    setMaxSetting(data.max);\n                  }); // dataArray.push({date : data.date, min : data.min, max : data.max})\n                }\n\n                if (userSupplier != null) {\n                  setExtranelToken(userSupplier.external_api_token);\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Error\",\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getSingleSensor(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchDataSensors();\n  }, []);\n  useEffect(function () {\n    getSingleSensor();\n  }, [sensorId]);\n\n  var validateForm = function validateForm() {\n    // Check if the sensor code, frequency, and date inputs are not empty\n    var isCodeValid = resultScan.trim() !== \"\";\n    var isFrequencyValid = frequency.trim() !== \"\"; // Update the form validation status\n\n    setFormValid(isCodeValid && isFrequencyValid);\n  };\n\n  useEffect(function () {\n    validateForm();\n  }, [resultScan, frequency, dateSetting]);\n\n  var editSensor = function editSensor() {\n    if (sensorId) {\n      var data = {\n        sensor_id: sensorId,\n        code: resultScan,\n        dataMapping: settingValues,\n        frequency: frequency,\n        lat: sensorCoords.lat,\n        lon: sensorCoords.lon\n      };\n\n      if (formValid) {\n        api.post('/sensor/edit-mapping', data).then(function (response) {\n          if (response.data.type === 'success') {\n            swal(\"\".concat(t('sensor_added')), {\n              icon: \"success\"\n            });\n            getSingleSensor();\n            setSensorId(null);\n          }\n        }).catch(function (err) {\n          swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Error'\n          });\n        });\n      } else {\n        swal({\n          icon: \"error\",\n          title: \"Error\",\n          text: \"Please fill in all required fields.\"\n        });\n      }\n    }\n  };\n\n  var niv = ['Mv1', 'Mv2', 'Mv3'];\n\n  var onChangeHandlerDate = function onChangeHandlerDate(value, name, label) {\n    setDateSetting(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, \"\".concat(name, \"_\").concat(label), value));\n    }, []);\n  };\n\n  var onChangeHandlerMax = function onChangeHandlerMax(value, name, label) {\n    setMaxSetting(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, \"\".concat(name, \"_\").concat(label), value));\n    }, []);\n  };\n\n  var onChangeHandlerMin = function onChangeHandlerMin(value, name, label) {\n    setMinSetting(function (state) {\n      return _objectSpread({}, state, _defineProperty({}, \"\".concat(name, \"_\").concat(label), value));\n    }, []);\n  };\n\n  useEffect(function () {\n    var dataArray = [];\n    dataArray.push({\n      date: dateSetting,\n      min: minSetting,\n      max: maxSetting\n    });\n    setSettingValues(dataArray);\n  }, [dateSetting, minSetting, maxSetting]);\n\n  var Items = function Items() {\n    var element = [];\n\n    var _loop = function _loop(index) {\n      element.push( /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, niv[index]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: 'date',\n        style: {\n          minHeight: 32,\n          marginRight: 5,\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        key: index,\n        type: \"date\",\n        required: true //  value={dateSetting.index}\n        ,\n        value: dateSetting != null && typeof dateSetting[\"Mv\".concat(index + 1, \"_date\")] !== 'undefined' ? dateSetting[\"Mv\".concat(index + 1, \"_date\")] : \"\",\n        onChange: function onChange(e) {\n          return onChangeHandlerDate(e.target.value, niv[index], 'date');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: 'min',\n        style: {\n          minHeight: 32,\n          marginRight: 5,\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        key: index // value={minSetting.indx}\n        ,\n        value: minSetting != null && typeof minSetting[\"Mv\".concat(index + 1, \"_min\")] !== 'undefined' ? minSetting[\"Mv\".concat(index + 1, \"_min\")] : \"\",\n        onChange: function onChange(e) {\n          return onChangeHandlerMin(e.target.value, niv[index], \"min\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        name: 'max',\n        style: {\n          minHeight: 32,\n          marginRight: 5,\n          outline: 'none',\n          border: '1px solid #e4e4e4'\n        },\n        key: index // value={maxSetting.indx}\n        ,\n        value: maxSetting != null && typeof maxSetting[\"Mv\".concat(index + 1, \"_max\")] !== 'undefined' ? maxSetting[\"Mv\".concat(index + 1, \"_max\")] : \"\",\n        onChange: function onChange(e) {\n          return onChangeHandlerMax(e.target.value, niv[index], \"max\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }\n      })))));\n    };\n\n    for (var index = 0; index < niv.length; index++) {\n      _loop(index);\n    }\n\n    return element;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4 d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('edit_sensor'),\n    subtitle: t('edit_sensor'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"bg-light table mb-0 text-center table-bordered table-responsive-lg \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }, t('sensor_code')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, t('Actions')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, sensorData.map(function (item, indx) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 45\n      }\n    }, item.code), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return getSingleSensor(item.id);\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 110\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"History\",\n      onClick: function onClick() {\n        history.push(\"/my-history/\".concat(item.code));\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 158\n      }\n    }, \"\\uE889\")))));\n  }))))), sensorId && /*#__PURE__*/React.createElement(Row, {\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"8\",\n    sm: \"12\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      width: \"auto\",\n      float: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, t('sensor_setup')), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: editSensor,\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      return setSensorId(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"pt-0 px-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"8\",\n    sm: \"12\",\n    md: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, t('sensor_code')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('sensor_code'),\n    value: resultScan,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      edge: \"end\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(QrCodeScannerIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 37\n      }\n    }))),\n    label: t('sensor_code'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 29\n    }\n  }, t('Frequency')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('Frequency'),\n    value: frequency,\n    onChange: function onChange(e) {\n      setFrequency(e.target.value);\n    },\n    label: t('Frequency'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  }, t('lat')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('lat'),\n    value: sensorCoords.lat,\n    onChange: function onChange(e) {\n      return setSensorCoords(_objectSpread({}, sensorCoords, {\n        lat: e.target.value\n      }));\n    },\n    label: t('lat'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    sx: {\n      m: 1,\n      width: '25ch'\n    },\n    variant: \"outlined\",\n    size: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 29\n    }\n  }, t('lon')), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    placeholder: t('lon'),\n    value: sensorCoords.lon,\n    onChange: function onChange(e) {\n      return setSensorCoords(_objectSpread({}, sensorCoords, {\n        lon: e.target.value\n      }));\n    },\n    label: t('lon'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center  table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, t('Date')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }, t('Min'), \" (%)\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 33\n    }\n  }, t('Max'), \" (%)\"))), Items()))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center mt-2  table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 33\n    }\n  }, t('Timezone')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 33\n    }\n  }, t('Location')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 33\n    }\n  }, t('Link to map')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 33\n    }\n  }, \"GMT +\", sensorCoords.locationInfo.offset), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 33\n    }\n  }, sensorCoords.locationInfo.timezone_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: sensorCoords.locationInfo.map_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 33\n    }\n  }, \"View position\"))))))))))));\n};\n\nexport default SensorSettings;","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","CardBody","CardHeader","Button","Form","FormInput","FormGroup","ButtonGroup","FormSelect","PageTitle","api","useTranslation","Html5QrcodePlugin","useHistory","useParams","Link","useLocation","swal","QrCodeScannerIcon","FormControl","IconButton","InputAdornment","InputLabel","OutlinedInput","TextField","LoadingSpinner","SensorSettings","props","params","t","i18n","history","location","state","lastDataTime","formattedTime","sensorState","settingValues","setSettingValues","frequency","setFrequency","dateSetting","setDateSetting","minSetting","setMinSetting","maxSetting","setMaxSetting","simNumber","simIdentify","simSettings","setSimSettings","formValid","setFormValid","showScan","setShowScan","resultScan","setResultScan","extranelToken","setExtranelToken","Mv1","Mv2","Mv3","rowsData","setRowsData","lat","lon","locationInfo","sensorCoords","setSensorCoords","deleteTableRows","index","e","console","log","filter","data","i","onNewScanResult","decodedText","decodedResult","sensorData","setSensorData","sensorId","setSensorId","fetchDataSensors","get","then","response","catch","error","getSingleSensor","id","res","SensorData","sensor","SensorLocation","userSupplier","user","code","Latitude","Longitude","dataMapping","length","map","date","min","max","external_api_token","title","icon","validateForm","isCodeValid","trim","isFrequencyValid","editSensor","sensor_id","post","type","err","text","niv","onChangeHandlerDate","value","name","label","onChangeHandlerMax","onChangeHandlerMin","dataArray","push","Items","element","minHeight","marginRight","outline","border","target","item","indx","display","justifyContent","width","float","m","offset","timezone_id","map_url"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorSettings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Container, Row, Col, Card, CardBody, CardHeader, Button, Form, FormInput, FormGroup, ButtonGroup, FormSelect } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport api from '../api/api'\nimport { useTranslation } from \"react-i18next\";\nimport Html5QrcodePlugin from \"./Html5QrcodePlugin\";\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\nimport { FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField } from '@mui/material';\nimport LoadingSpinner from '../components/common/LoadingSpinner';\n\n\nconst SensorSettings = (props) => {\n  // const { lastDataTime, formattedTime, sensorState } = props.location;\n\n  const params = useParams()\n//   let id = params.id\n  const { t, i18n } = useTranslation();\n  const history = useHistory()\n  const location = useLocation();\n  const { lastDataTime, formattedTime, sensorState } = location.state;\n  const [settingValues, setSettingValues] = useState([])\n  const [frequency, setFrequency] = useState('')\n  const [dateSetting, setDateSetting] = useState([])\n  const [minSetting, setMinSetting] = useState({})\n  const [maxSetting, setMaxSetting] = useState({})\n  const [simSettings, setSimSettings] = useState({\n    simNumber: \"\",\n    simIdentify: \"\"\n  })\n  const [formValid, setFormValid] = useState(false);\n  const [showScan, setShowScan] = useState(false)\n  const [resultScan, setResultScan] = useState('')\n  const [extranelToken, setExtranelToken] = useState('')\n  const [rowsData, setRowsData] = useState([\n    { Mv1: '', Mv2: '', Mv3: '' },\n\n  ])\n  const [sensorCoords, setSensorCoords] = useState({\n    lat: '',\n    lon: '',\n    locationInfo: {}\n  })\n//   const addTableRows = () => {\n//     setRowsData([...rowsData, { id: '' }])\n\n//   }\n\n  const deleteTableRows = (index, e) => {\n    console.log(index)\n    setRowsData(rowsData.filter((data, i) => {\n      return i !== index\n    })\n    )\n  }\n\n  const onNewScanResult = (decodedText, decodedResult) => {\n    setResultScan(decodedText)\n\n    // Handle the result here.\n  }\n  const [sensorData, setSensorData] = useState([]);\nconst [sensorId, setSensorId] = useState(null)\n\n  const fetchDataSensors =  () => {\n    api.get(`/sensor/sensors`)\n      .then(response => {\n        let sensorData = response.data;\n            setSensorData(sensorData);\n         \n      }).catch(error=>{\n        console.log(error)\n      })\n  };\n\n  const getSingleSensor = async (id) => {\n    if(id){\n        await api.get(`/sensor/single-sensor/${id}`)\n           .then(res => {\n             let SensorData = res.data.sensor\n             let SensorLocation = res.data.location\n             let userSupplier = res.data.user\n             setResultScan(SensorData.code)\n             setSensorCoords({ lat: SensorData.Latitude, lon: SensorData.Longitude, locationInfo: SensorLocation })\n             setSensorId(id)\n             let dataMapping = SensorData.dataMapping\n             if (dataMapping.length > 0) {\n               setSettingValues(dataMapping)\n               dataMapping.map(data => {\n                 let frequency = data.frequency\n                 setFrequency(frequency)\n                 setSimSettings({ simIdentify: data.simIdentify, simNumber: data.simNumber })\n                 console.log(data)\n                 setDateSetting(data.date)\n                 setMinSetting(data.min)\n                 setMaxSetting(data.max)\n     \n               })\n               // dataArray.push({date : data.date, min : data.min, max : data.max})\n     \n             }\n     \n     \n             if (userSupplier != null) {\n               setExtranelToken(userSupplier.external_api_token)\n             }\n           }).catch(error => {\n             swal({\n               title: \"Error\",\n               icon: \"error\",\n     \n             });\n     \n           })\n\n    }\n  }\n  \n  \n  useEffect(() => {\n    fetchDataSensors()\n  }, [])\n\n  useEffect(() => {\n    getSingleSensor()\n\n  }, [sensorId])\n  \n\n  const validateForm = () => {\n    // Check if the sensor code, frequency, and date inputs are not empty\n    const isCodeValid = resultScan.trim() !== \"\";\n    const isFrequencyValid = frequency.trim() !== \"\";\n\n    // Update the form validation status\n    setFormValid(isCodeValid && isFrequencyValid);\n  };\n\n  useEffect(() => {\n    validateForm();\n  }, [resultScan, frequency, dateSetting]);\n\n\n  const editSensor = () => {\n if(sensorId) {\n      let data = {\n      sensor_id: sensorId,\n      code: resultScan,\n      dataMapping: settingValues,\n      frequency: frequency,\n      lat: sensorCoords.lat,\n      lon: sensorCoords.lon\n    }\n    if (formValid) {\n      api.post('/sensor/edit-mapping', data)\n        .then(response => {\n          if (response.data.type === 'success') {\n            swal(`${t('sensor_added')}`, {\n              icon: \"success\",\n            })\n            getSingleSensor()\n            setSensorId(null)\n          }\n        }).catch(err => {\n          swal({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Error'\n          })\n        })\n\n    } else {\n      swal({\n        icon: \"error\",\n        title: \"Error\",\n        text: \"Please fill in all required fields.\",\n      });\n    }}\n  }\n\n  let niv = ['Mv1', 'Mv2', 'Mv3']\n\n  const onChangeHandlerDate = (value, name, label) => {\n\n    setDateSetting(state => ({ ...state, [`${name}_${label}`]: value }), [])\n  }\n  const onChangeHandlerMax = (value, name, label) => {\n    setMaxSetting(state => ({ ...state, [`${name}_${label}`]: value }), [])\n  }\n  const onChangeHandlerMin = (value, name, label) => {\n    setMinSetting(state => ({ ...state, [`${name}_${label}`]: value }), [])\n  }\n\n  useEffect(() => {\n    let dataArray = []\n    dataArray.push({ date: dateSetting, min: minSetting, max: maxSetting })\n    setSettingValues(dataArray)\n  }, [dateSetting, minSetting, maxSetting])\n\n\n\n  const Items = () => {\n    let element = []\n\n    for (let index = 0; index < niv.length; index++) {\n      element.push(\n        <tbody>\n          {/* {\n                      rowsData.map((item,indx)=>{ */}\n          {/* return ( */}\n          <tr>\n            <td>{niv[index]}</td>\n            <td>\n              <input\n                name={'date'}\n                style={{ minHeight: 32, marginRight: 5, outline: 'none', border: '1px solid #e4e4e4' }}\n                key={index}\n                type=\"date\"\n                required\n                //  value={dateSetting.index}\n                value={(dateSetting != null && typeof dateSetting[`Mv${index + 1}_date`] !== 'undefined') ? dateSetting[`Mv${index + 1}_date`] : \"\"}\n                onChange={e => onChangeHandlerDate(e.target.value, niv[index], 'date')}\n              />\n            </td>\n            <td>\n              <input\n                name={'min'}\n                style={{ minHeight: 32, marginRight: 5, outline: 'none', border: '1px solid #e4e4e4' }}\n                key={index}\n                // value={minSetting.indx}\n                value={(minSetting != null && typeof minSetting[`Mv${index + 1}_min`] !== 'undefined') ? minSetting[`Mv${index + 1}_min`] : \"\"}\n                onChange={e => onChangeHandlerMin(e.target.value, niv[index], \"min\")}\n\n              />\n            </td>\n            <td>\n              <input\n                name={'max'}\n                style={{ minHeight: 32, marginRight: 5, outline: 'none', border: '1px solid #e4e4e4' }}\n                key={index}\n                // value={maxSetting.indx}\n                value={(maxSetting != null && typeof maxSetting[`Mv${index + 1}_max`] !== 'undefined') ? maxSetting[`Mv${index + 1}_max`] : \"\"}\n                onChange={e => onChangeHandlerMax(e.target.value, niv[index], \"max\")}\n\n              />\n            </td>\n          </tr>\n\n\n          {/* //   })\n                    // } */}\n\n        </tbody>\n\n      )\n\n    }\n    return element\n  }\n\n\n\n  return (\n    <Container fluid className=\"main-content-container px-4\">\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-4 d-flex justify-content-between align-items-center\">\n        <PageTitle\n          sm=\"4\"\n          title={t('edit_sensor')}\n          subtitle={t('edit_sensor')}\n          className=\"text-sm-left\"\n        />\n        {/* <div>\n          <Button title=\"Historique\" onClick={() => { history.push(`/my-history/${resultScan}`) }} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i> View History</Button>\n\n        </div> */}\n      </Row>\n        <Row>\n            <Col lg='12' md='12' sm='12'>\n                <table className=\"bg-light table mb-0 text-center table-bordered table-responsive-lg \">\n                        <thead className=\"bg-light\">\n                            <tr>\n                                \n                                <th scope=\"col\" className=\"border-0\">{t('sensor_code')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('Actions')}</th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                sensorData.map((item, indx) => {\n                                    return (\n\n                                        <tr>\n                                            <td>{item.code}</td>\n                                            \n                                            <td>\n                                                <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                    {/* {\n                                                        item.synchronized === \"0\"\n                                                        ?\n                                                        <Button onClick={() => fetchDataSensor(item.uid,item.code)} squared theme=\"info\"><i className='material-icons'>&#xe627;</i></Button>\n                                                        :\n                                                        null\n                                                    } */}\n                                                    <Button onClick={() => getSingleSensor(item.id)} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\n                                                    <Button title=\"History\" onClick={() => { history.push(`/my-history/${item.code}`)}} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i></Button>\n\n                                                    {/* <Button onClick={() => confirmDelete(item.uid)} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button> */}\n                                                </ButtonGroup>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n            \n            </Col>\n\n        </Row>\n\n        {\n        sensorId  && (\n        <Row className='py-4'>\n            <Col lg=\"12\" md=\"8\" sm=\"12\" className=\"mb-4\">\n            <Card small className=\"h-100\">\n                <CardHeader className=\"border-bottom\">\n                <div\n                    style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    width: \"auto\",\n                    float: \"left\"\n                    }}\n                >\n                    <h6 className=\"m-0\">{t('sensor_setup')}</h6>{\" \"}\n                </div>\n                <div\n                    style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n    \n                    }}\n                >\n                    <Button\n                    // theme=\"success\"\n                    onClick={editSensor}\n                    className=\"mb-2 mr-1 btn btn-success\"\n                    >\n                    <i class={`fa fa-check mx-2`}></i>\n                    {t('save')}\n                    </Button>\n                    <Button\n                    // theme=\"success\"\n                    className=\"mb-2 mr-1 btn btn-danger\"\n                    onClick={() => setSensorId(null)}\n    \n                    >\n                    <i class={`fa fa-times mx-2`}></i>\n                    {t('cancel')}\n                    </Button>\n                </div>\n                </CardHeader>\n                <CardBody className=\"pt-0 px-1\">\n                <Row className=\"p-2\">\n                    <Col lg=\"8\" sm=\"12\" md=\"12\">\n                    <Form>\n                        <Row form>\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('sensor_code')}</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password\"\n                                type='text'\n                                placeholder={t('sensor_code')}\n                                value={resultScan}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    edge=\"end\"\n                                    >\n                                    <QrCodeScannerIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                                label={t('sensor_code')}\n                            />\n                            </FormControl>\n                        </Col>\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('Frequency')}</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password\"\n                                type='text'\n                                placeholder={t('Frequency')}\n                                value={frequency}\n                                onChange={e => { setFrequency(e.target.value) }}\n                                label={t('Frequency')}\n                            />\n                            </FormControl>\n                        </Col>\n                        </Row>\n                        <Row form>\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('lat')}</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password\"\n                                type='text'\n                                placeholder={t('lat')}\n                                value={sensorCoords.lat}\n                                onChange={e => setSensorCoords({ ...sensorCoords, lat: e.target.value })}\n                                label={t('lat')}\n                            />\n                            </FormControl>\n                        </Col>\n                        <Col lg=\"6\" md=\"12\" sm=\"12\" className=\"form-group\">\n                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\" size='small'>\n                            <InputLabel htmlFor=\"outlined-adornment-password\">{t('lon')}</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password\"\n                                type='text'\n                                placeholder={t('lon')}\n                                value={sensorCoords.lon}\n                                onChange={e => setSensorCoords({ ...sensorCoords, lon: e.target.value })}\n                                label={t('lon')}\n                            />\n                            </FormControl>\n                        </Col>\n                        </Row>\n                        <Row form>\n                        <Col lg=\"12\" md=\"12\" sm=\"12\">\n                            <table className=\"table mb-0 border text-center  table-responsive-lg\">\n                            <thead className=\"bg-light\">\n                                <tr>\n                                {/* <th scope=\"col\" className=\"border-0\">\n                                    <div className='d-flex justify-content-center align-items-center'>\n                                    <Button style={{ outline: 'none', border: 'none', background: 'transparent' }} onClick={() => addTableRows()}><i style={{ fontSize: 20, color: \"#27A6B7\" }} className='material-icons'>&#xe147;</i></Button>\n                                    <Button style={{ outline: 'none', border: 'none', background: 'transparent' }} onClick={(e) => deleteTableRows(1, e)}><i style={{ fontSize: 20, color: \"#27A6B7\" }} className=\"material-icons\">&#xe872;</i></Button>\n                                    </div>\n                                </th> */}\n                                <th scope=\"col\" className=\"border-0\">{t('Date')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('Min')} (%)</th>\n                                <th scope=\"col\" className=\"border-0\">{t('Max')} (%)</th>\n                                </tr>\n                            </thead>\n    \n                            {Items()}\n    \n                            </table>\n                        \n                        </Col>\n    \n                        </Row>\n    \n                    </Form>\n                    </Col>\n                    <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"mt-1\">\n                    {/* <table className=\"table mb-0 border text-center  table-responsive-lg\">\n                            <thead className=\"bg-light\">\n                            <tr>\n    \n                                <th scope=\"col\" className=\"border-0\">{t('statu')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('last_reading')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('expected')}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n    \n                            <tr>\n                                <td style={{ color: sensorState === 'Active' ? 'green' : 'red', fontSize: 13, fontWeight: 'bold' }}>\n                                {sensorState }\n                                </td>\n                                <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>\n                                {lastDataTime}\n                                </td>\n                                <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>\n                                {formattedTime}\n                                </td>\n                            </tr>\n    \n    \n    \n                            </tbody>\n    \n                        </table> */}\n                        <table className=\"table mb-0 border text-center mt-2  table-responsive-lg\">\n                            <thead className=\"bg-light\">\n                            <tr>\n    \n                                <th scope=\"col\" className=\"border-0\">{t('Timezone')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('Location')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('Link to map')}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n    \n                            <tr>\n                                <td>\n                                GMT +{sensorCoords.locationInfo.offset}\n                                </td>\n                                <td>\n                                {sensorCoords.locationInfo.timezone_id}\n                                </td>\n                                <td>\n                                <a href={sensorCoords.locationInfo.map_url} target=\"_blank\" rel=\"noopener noreferrer\">View position</a>\n                                </td>\n                            </tr>\n    \n    \n    \n                            </tbody>\n    \n                        </table>\n                    </Col>\n    \n                </Row>\n                </CardBody>\n            </Card>\n            </Col>\n        </Row>\n\n        ) \n\n        }     \n    </Container>\n  )\n}\n\nexport default SensorSettings"],"mappings":"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"},"metadata":{},"sourceType":"module"}