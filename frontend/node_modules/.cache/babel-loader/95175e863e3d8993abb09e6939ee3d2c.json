{"ast":null,"code":"import _defineProperty from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorHistoryChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nvar SensorHistoryChart = function SensorHistoryChart(_ref) {\n  var data = _ref.data;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      chartData = _useState2[0],\n      setChartData = _useState2[1];\n\n  var _useState3 = useState({\n    temperature: true,\n    humidity: true,\n    pressure: true,\n    altitude: true,\n    tempSubSoil: true,\n    dataMv1: true,\n    dataMv2: true,\n    dataMv3: true\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visibility = _useState4[0],\n      setVisibility = _useState4[1];\n\n  var getChartData = function getChartData() {\n    if (!data) return;\n    var labels = [];\n    var datasets = {\n      temperature: [],\n      humidity: [],\n      pressure: [],\n      altitude: [],\n      tempSubSoil: [],\n      dataMv1: [],\n      dataMv2: [],\n      dataMv3: []\n    };\n    data.forEach(function (sensorData) {\n      var dateTime = moment(sensorData.time); // use the full timestamp\n\n      var hour = dateTime.format('MMM Do HH:00'); // format date as \"MMM Do HH:00\"\n\n      labels.push(hour);\n      datasets.temperature.push(parseFloat(sensorData.temperature).toFixed(2));\n      datasets.humidity.push(parseFloat(sensorData.humidity).toFixed(2));\n      datasets.pressure.push(parseFloat(sensorData.pressure).toFixed(2) / 1000);\n      datasets.altitude.push(parseFloat(sensorData.altitude));\n      datasets.tempSubSoil.push(parseFloat(sensorData.ts).toFixed(2));\n      datasets.dataMv1.push(parseFloat(sensorData.mv1).toFixed(2));\n      datasets.dataMv2.push(parseFloat(sensorData.mv2).toFixed(2));\n      datasets.dataMv3.push(parseFloat(sensorData.mv3).toFixed(2));\n    });\n    setChartData({\n      labels: labels.reverse(),\n      datasets: Object.keys(datasets).map(function (key) {\n        return {\n          label: key === 'tempSubSoil' ? 'Temperature subsoil' : key.charAt(0).toUpperCase() + key.slice(1),\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: datasets[key].reverse(),\n          fill: false,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: getColor(key),\n          hidden: !visibility[key] // Hide dataset if visibility is false\n\n        };\n      })\n    });\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data, visibility]);\n\n  var toggleVisibility = function toggleVisibility(key) {\n    setVisibility(function (prevState) {\n      return _objectSpread({}, prevState, _defineProperty({}, key, !prevState[key]));\n    });\n  };\n\n  var getColor = function getColor(key) {\n    switch (key) {\n      case 'temperature':\n        return '#f46835';\n\n      case 'humidity':\n        return '#2D40E5';\n\n      case 'pressure':\n        return '#4BC0C0';\n\n      case 'altitude':\n        return '#B7990D';\n\n      case 'tempSubSoil':\n        return '#8621e4';\n\n      case 'dataMv1':\n        return '#FC5566';\n\n      case 'dataMv2':\n        return '#3CB371';\n\n      case 'dataMv3':\n        return '#1E90FF';\n\n      default:\n        return '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, Object.keys(visibility).map(function (key) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: visibility[key],\n      onChange: function onChange() {\n        return toggleVisibility(key);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, key === 'tempSubSoil' ? 'Temperature subsoil' : key.charAt(0).toUpperCase() + key.slice(1)));\n  })), /*#__PURE__*/React.createElement(Line, {\n    data: chartData,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('Sensor History')),\n        fontSize: 20\n      },\n      legend: {\n        display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: 100,\n            min: 0,\n            stepSize: 25,\n            fontColor: '#000',\n            fontSize: 14\n          },\n          gridLines: {\n            color: 'rgba(0,0,0,0.2)',\n            lineWidth: 1\n          },\n          scaleOverride: true,\n          scaleSteps: 4,\n          scaleStepWidth: 25,\n          scaleStartValue: 0\n        }],\n        xAxes: [{\n          ticks: {\n            autoSkip: false,\n            maxRotation: 90,\n            fontColor: '#000',\n            fontSize: 10\n          },\n          gridLines: {\n            color: 'rgba(0,0,0,0.2)',\n            lineWidth: 1\n          }\n        }]\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SensorHistoryChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useTranslation","SensorHistoryChart","data","t","i18n","chartData","setChartData","temperature","humidity","pressure","altitude","tempSubSoil","dataMv1","dataMv2","dataMv3","visibility","setVisibility","getChartData","labels","datasets","forEach","sensorData","dateTime","time","hour","format","push","parseFloat","toFixed","ts","mv1","mv2","mv3","reverse","Object","keys","map","key","label","charAt","toUpperCase","slice","lineTension","borderWidth","fill","backgroundColor","borderColor","getColor","hidden","toggleVisibility","prevState","title","display","text","fontSize","legend","scales","yAxes","ticks","beginAtZero","max","min","stepSize","fontColor","gridLines","color","lineWidth","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","xAxes","autoSkip","maxRotation"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SensorHistoryChart.js"],"sourcesContent":["import moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from \"react-i18next\";\n\nconst SensorHistoryChart = ({ data }) => {\n  const { t, i18n } = useTranslation();\n  const [chartData, setChartData] = useState(null);\n  const [visibility, setVisibility] = useState({\n    temperature: true,\n    humidity: true,\n    pressure: true,\n    altitude: true,\n    tempSubSoil: true,\n    dataMv1: true,\n    dataMv2: true,\n    dataMv3: true\n  });\n\n  const getChartData = () => {\n    if (!data) return;\n    \n    const labels = [];\n    const datasets = {\n      temperature: [],\n      humidity: [],\n      pressure: [],\n      altitude: [],\n      tempSubSoil: [],\n      dataMv1: [],\n      dataMv2: [],\n      dataMv3: []\n    };\n\n    data.forEach(sensorData => {\n      const dateTime = moment(sensorData.time); // use the full timestamp\n      const hour = dateTime.format('MMM Do HH:00'); // format date as \"MMM Do HH:00\"\n      labels.push(hour);\n      \n      datasets.temperature.push(parseFloat(sensorData.temperature).toFixed(2));\n      datasets.humidity.push(parseFloat(sensorData.humidity).toFixed(2));\n      datasets.pressure.push(parseFloat(sensorData.pressure).toFixed(2) / 1000);\n      datasets.altitude.push(parseFloat(sensorData.altitude));\n      datasets.tempSubSoil.push(parseFloat(sensorData.ts).toFixed(2));\n      datasets.dataMv1.push(parseFloat(sensorData.mv1).toFixed(2));\n      datasets.dataMv2.push(parseFloat(sensorData.mv2).toFixed(2));\n      datasets.dataMv3.push(parseFloat(sensorData.mv3).toFixed(2));\n    });\n\n    setChartData({\n      labels: labels.reverse(),\n      datasets: Object.keys(datasets).map(key => ({\n        label: key === 'tempSubSoil' ? 'Temperature subsoil' : (key.charAt(0).toUpperCase() + key.slice(1)),\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: datasets[key].reverse(),\n        fill: false,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: getColor(key),\n        hidden: !visibility[key] // Hide dataset if visibility is false\n      }))\n    });\n  };\n\n  useEffect(() => {\n    getChartData();\n  }, [data, visibility]);\n\n  const toggleVisibility = (key) => {\n    setVisibility(prevState => ({\n      ...prevState,\n      [key]: !prevState[key]\n    }));\n  };\n\n  const getColor = (key) => {\n    switch (key) {\n      case 'temperature':\n        return '#f46835';\n      case 'humidity':\n        return '#2D40E5';\n      case 'pressure':\n        return '#4BC0C0';\n      case 'altitude':\n        return '#B7990D';\n      case 'tempSubSoil':\n        return '#8621e4';\n      case 'dataMv1':\n        return '#FC5566';\n      case 'dataMv2':\n        return '#3CB371';\n      case 'dataMv3':\n        return '#1E90FF';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {Object.keys(visibility).map((key) => (\n          <div key={key}>\n            <input\n              type=\"checkbox\"\n              checked={visibility[key]}\n              onChange={() => toggleVisibility(key)}\n            />\n            <label>{key === 'tempSubSoil' ? 'Temperature subsoil' : (key.charAt(0).toUpperCase() + key.slice(1))}</label>\n          </div>\n        ))}\n      </div>\n      <Line\n        data={chartData}\n        options={{\n          title: {\n            display: true,\n            text: `${t('Sensor History')}`,\n            fontSize: 20\n          },\n          legend: {\n            display: false\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 100,\n                min: 0,\n                stepSize: 25,\n                fontColor: '#000',\n                fontSize: 14,\n              },\n              gridLines: {\n                color: 'rgba(0,0,0,0.2)',\n                lineWidth: 1,\n              },\n              scaleOverride: true,\n              scaleSteps: 4,\n              scaleStepWidth: 25,\n              scaleStartValue: 0\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false,\n                maxRotation: 90,\n                fontColor: '#000',\n                fontSize: 10,\n              },\n              gridLines: {\n                color: 'rgba(0,0,0,0.2)',\n                lineWidth: 1,\n              },\n            }]\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default SensorHistoryChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}