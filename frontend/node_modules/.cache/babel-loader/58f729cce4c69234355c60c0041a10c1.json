{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport api from '../api/api';\n\nvar useSensorData = function useSensorData() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sensorData = _useState2[0],\n      setSensorData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allDataSensor = _useState4[0],\n      setAllDataSensor = _useState4[1];\n\n  var location = useLocation();\n  var userId = location.pathname.split('/')[2];\n  var userUid = JSON.parse(localStorage.getItem('user')).id;\n  var fieldUid = localStorage.getItem('Field'); // Determine the correct URL based on the user's role and current path\n\n  var url = '/sensor/sensor-update-data';\n\n  if (JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\" && location.pathname === \"/Fields/\".concat(userId, \"/\").concat(fieldUid)) {\n    url = '/supplier/sensor-data';\n  }\n\n  if (JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\" && location.pathname === \"/Dashboard-supplier\") {\n    url = '/supplier/get-sensors-data';\n  }\n\n  var data = {\n    userUid: userUid,\n    fieldUid: fieldUid,\n    userId: userId\n  };\n\n  var getDataSensor = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, sensors, dataMappings, applyMapping, updatedSensorData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.post(url, data);\n\n            case 3:\n              response = _context.sent;\n              sensors = response.data.sensors;\n              dataMappings = response.data.dataMapping; // Mapping function to apply the same logic for current sensor values\n\n              applyMapping = function applyMapping(value, num, mapping) {\n                var keyDataMax = \"Mv\".concat(num, \"_max\");\n                var keyDataMin = \"Mv\".concat(num, \"_min\");\n\n                if (mapping.max[keyDataMax] && mapping.min[keyDataMin]) {\n                  if (value >= parseFloat(mapping.min[keyDataMin]) && value <= parseFloat(mapping.max[keyDataMax])) {\n                    return ((parseFloat(value) - mapping.min[keyDataMin]) / (mapping.max[keyDataMax] - mapping.min[keyDataMin]) * 100).toFixed(2);\n                  } else if (value < parseFloat(mapping.min[keyDataMin])) {\n                    return 100;\n                  } else if (value > parseFloat(mapping.max[keyDataMax])) {\n                    return 0;\n                  }\n                }\n\n                return value; // Return original value if mapping not applied\n              };\n\n              updatedSensorData = sensors.map(function (sensor) {\n                var mappedCharge = 0;\n                var date = sensor.time;\n                var vals = [sensor.mv1, sensor.mv2, sensor.mv3];\n                var mappedValues = vals.map(function (val, index) {\n                  return applyMapping(val, index + 1, dataMappings.find(function (mapping) {\n                    return mapping.sensor_id === sensor.sensor_id;\n                  }) || {});\n                });\n\n                if (sensor) {\n                  var chargeMin = 73;\n                  var chargeMax = 100;\n                  mappedCharge = ((Number(sensor.charge) - chargeMin) / (chargeMax - chargeMin) * 100).toFixed(2);\n                  mappedCharge = Math.max(0, Math.min(100, mappedCharge));\n                }\n\n                return {\n                  code: sensor.code,\n                  sensor_id: sensor.sensor_id,\n                  time: sensor.time,\n                  temperature: sensor.temperature,\n                  humidity: sensor.humidity,\n                  pressure: sensor.pressure,\n                  charge: mappedCharge,\n                  signal: sensor.signal,\n                  adc: sensor.adc,\n                  ts: sensor.ts,\n                  mv1: mappedValues[0],\n                  mv2: mappedValues[1],\n                  mv3: mappedValues[2],\n                  originalmv1: sensor.mv1,\n                  originalmv2: sensor.mv2,\n                  originalmv3: sensor.mv3,\n                  altitude: sensor.altitude,\n                  mapping: response.data.dataMapping\n                };\n              });\n              setSensorData(sensors);\n              setAllDataSensor(updatedSensorData);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function getDataSensor() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getDataSensor();\n    var intervalId = setInterval(function () {\n      getDataSensor();\n    }, 30000);\n    return function () {\n      return clearInterval(intervalId);\n    };\n  }, []);\n  return allDataSensor;\n};\n\nexport default useSensorData;","map":{"version":3,"names":["React","useEffect","useState","useLocation","api","useSensorData","sensorData","setSensorData","allDataSensor","setAllDataSensor","location","userId","pathname","split","userUid","JSON","parse","localStorage","getItem","id","fieldUid","url","role","data","getDataSensor","post","response","sensors","dataMappings","dataMapping","applyMapping","value","num","mapping","keyDataMax","keyDataMin","max","min","parseFloat","toFixed","updatedSensorData","map","sensor","mappedCharge","date","time","vals","mv1","mv2","mv3","mappedValues","val","index","find","sensor_id","chargeMin","chargeMax","Number","charge","Math","code","temperature","humidity","pressure","signal","adc","ts","originalmv1","originalmv2","originalmv3","altitude","console","log","intervalId","setInterval","clearInterval"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/utils/useSensorData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport api from '../api/api';\n\nconst useSensorData = () => {\n    const [sensorData, setSensorData] = useState([]);\n    const [allDataSensor, setAllDataSensor] = useState([]);\n    let location = useLocation();\n    let userId = location.pathname.split('/')[2];\n    let userUid = JSON.parse(localStorage.getItem('user')).id;\n    let fieldUid = localStorage.getItem('Field');\n    \n    // Determine the correct URL based on the user's role and current path\n    let url = '/sensor/sensor-update-data';\n    if ((JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\") && location.pathname === `/Fields/${userId}/${fieldUid}`) {\n        url = '/supplier/sensor-data';\n    }\n    if ((JSON.parse(localStorage.getItem('user')).role === \"ROLE_SUPPLIER\") && location.pathname === `/Dashboard-supplier`) {\n        url = '/supplier/get-sensors-data';\n    }\n\n    const data = {\n        userUid: userUid,\n        fieldUid: fieldUid,\n        userId: userId\n    };\n\n    const getDataSensor = async () => {\n        try {\n            const response = await api.post(url, data);\n            const sensors = response.data.sensors;\n            const dataMappings = response.data.dataMapping;\n\n            // Mapping function to apply the same logic for current sensor values\n            const applyMapping = (value, num, mapping) => {\n                const keyDataMax = `Mv${num}_max`;\n                const keyDataMin = `Mv${num}_min`;\n\n                if (mapping.max[keyDataMax] && mapping.min[keyDataMin]) {\n                    if (value >= parseFloat(mapping.min[keyDataMin]) && value <= parseFloat(mapping.max[keyDataMax])) {\n                        return (((parseFloat(value) - mapping.min[keyDataMin]) / (mapping.max[keyDataMax] - mapping.min[keyDataMin])) * 100).toFixed(2);\n                    } else if (value < parseFloat(mapping.min[keyDataMin])) {\n                        return 100;\n                    } else if (value > parseFloat(mapping.max[keyDataMax])) {\n                        return 0;\n                    }\n                }\n                return value; // Return original value if mapping not applied\n            };\n\n            const updatedSensorData = sensors.map(sensor => {\n                let mappedCharge = 0;\n                const date = sensor.time;\n                const vals = [sensor.mv1, sensor.mv2, sensor.mv3];\n                const mappedValues = vals.map((val, index) => applyMapping(val, index + 1, dataMappings.find(mapping => mapping.sensor_id === sensor.sensor_id) || {}));\n\n                if (sensor) {\n                    const chargeMin = 73;\n                    const chargeMax = 100;\n                    mappedCharge = ((Number(sensor.charge) - chargeMin) / (chargeMax - chargeMin) * 100).toFixed(2);\n                    mappedCharge = Math.max(0, Math.min(100, mappedCharge));\n                }\n\n                return {\n                    code: sensor.code,\n                    sensor_id: sensor.sensor_id,\n                    time: sensor.time,\n                    temperature: sensor.temperature,\n                    humidity: sensor.humidity,\n                    pressure: sensor.pressure,\n                    charge: mappedCharge,\n                    signal: sensor.signal,\n                    adc: sensor.adc,\n                    ts: sensor.ts,\n                    mv1: mappedValues[0],\n                    mv2: mappedValues[1],\n                    mv3: mappedValues[2],\n                    originalmv1: sensor.mv1,\n                    originalmv2: sensor.mv2,\n                    originalmv3: sensor.mv3,\n                    altitude: sensor.altitude,\n                    mapping: response.data.dataMapping,\n                };\n            });\n\n            setSensorData(sensors);\n            setAllDataSensor(updatedSensorData);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getDataSensor();\n\n        const intervalId = setInterval(() => {\n            getDataSensor();\n        }, 30000);\n\n        return () => clearInterval(intervalId);\n    }, []);\n\n    return allDataSensor;\n};\n\nexport default useSensorData;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAAA,gBACYH,QAAQ,CAAC,EAAD,CADpB;EAAA;EAAA,IACjBI,UADiB;EAAA,IACLC,aADK;;EAAA,iBAEkBL,QAAQ,CAAC,EAAD,CAF1B;EAAA;EAAA,IAEjBM,aAFiB;EAAA,IAEFC,gBAFE;;EAGxB,IAAIC,QAAQ,GAAGP,WAAW,EAA1B;EACA,IAAIQ,MAAM,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;EACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,EAAvD;EACA,IAAIC,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf,CANwB,CAQxB;;EACA,IAAIG,GAAG,GAAG,4BAAV;;EACA,IAAKN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCI,IAAzC,KAAkD,eAAnD,IAAuEZ,QAAQ,CAACE,QAAT,uBAAiCD,MAAjC,cAA2CS,QAA3C,CAA3E,EAAkI;IAC9HC,GAAG,GAAG,uBAAN;EACH;;EACD,IAAKN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCI,IAAzC,KAAkD,eAAnD,IAAuEZ,QAAQ,CAACE,QAAT,0BAA3E,EAAwH;IACpHS,GAAG,GAAG,4BAAN;EACH;;EAED,IAAME,IAAI,GAAG;IACTT,OAAO,EAAEA,OADA;IAETM,QAAQ,EAAEA,QAFD;IAGTT,MAAM,EAAEA;EAHC,CAAb;;EAMA,IAAMa,aAAa;IAAA,oEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAESpB,GAAG,CAACqB,IAAJ,CAASJ,GAAT,EAAcE,IAAd,CAFT;;YAAA;cAERG,QAFQ;cAGRC,OAHQ,GAGED,QAAQ,CAACH,IAAT,CAAcI,OAHhB;cAIRC,YAJQ,GAIOF,QAAQ,CAACH,IAAT,CAAcM,WAJrB,EAMd;;cACMC,YAPQ,GAOO,SAAfA,YAAe,CAACC,KAAD,EAAQC,GAAR,EAAaC,OAAb,EAAyB;gBAC1C,IAAMC,UAAU,eAAQF,GAAR,SAAhB;gBACA,IAAMG,UAAU,eAAQH,GAAR,SAAhB;;gBAEA,IAAIC,OAAO,CAACG,GAAR,CAAYF,UAAZ,KAA2BD,OAAO,CAACI,GAAR,CAAYF,UAAZ,CAA/B,EAAwD;kBACpD,IAAIJ,KAAK,IAAIO,UAAU,CAACL,OAAO,CAACI,GAAR,CAAYF,UAAZ,CAAD,CAAnB,IAAgDJ,KAAK,IAAIO,UAAU,CAACL,OAAO,CAACG,GAAR,CAAYF,UAAZ,CAAD,CAAvE,EAAkG;oBAC9F,OAAO,CAAE,CAACI,UAAU,CAACP,KAAD,CAAV,GAAoBE,OAAO,CAACI,GAAR,CAAYF,UAAZ,CAArB,KAAiDF,OAAO,CAACG,GAAR,CAAYF,UAAZ,IAA0BD,OAAO,CAACI,GAAR,CAAYF,UAAZ,CAA3E,CAAD,GAAwG,GAAzG,EAA8GI,OAA9G,CAAsH,CAAtH,CAAP;kBACH,CAFD,MAEO,IAAIR,KAAK,GAAGO,UAAU,CAACL,OAAO,CAACI,GAAR,CAAYF,UAAZ,CAAD,CAAtB,EAAiD;oBACpD,OAAO,GAAP;kBACH,CAFM,MAEA,IAAIJ,KAAK,GAAGO,UAAU,CAACL,OAAO,CAACG,GAAR,CAAYF,UAAZ,CAAD,CAAtB,EAAiD;oBACpD,OAAO,CAAP;kBACH;gBACJ;;gBACD,OAAOH,KAAP,CAb0C,CAa5B;cACjB,CArBa;;cAuBRS,iBAvBQ,GAuBYb,OAAO,CAACc,GAAR,CAAY,UAAAC,MAAM,EAAI;gBAC5C,IAAIC,YAAY,GAAG,CAAnB;gBACA,IAAMC,IAAI,GAAGF,MAAM,CAACG,IAApB;gBACA,IAAMC,IAAI,GAAG,CAACJ,MAAM,CAACK,GAAR,EAAaL,MAAM,CAACM,GAApB,EAAyBN,MAAM,CAACO,GAAhC,CAAb;gBACA,IAAMC,YAAY,GAAGJ,IAAI,CAACL,GAAL,CAAS,UAACU,GAAD,EAAMC,KAAN;kBAAA,OAAgBtB,YAAY,CAACqB,GAAD,EAAMC,KAAK,GAAG,CAAd,EAAiBxB,YAAY,CAACyB,IAAb,CAAkB,UAAApB,OAAO;oBAAA,OAAIA,OAAO,CAACqB,SAAR,KAAsBZ,MAAM,CAACY,SAAjC;kBAAA,CAAzB,KAAwE,EAAzF,CAA5B;gBAAA,CAAT,CAArB;;gBAEA,IAAIZ,MAAJ,EAAY;kBACR,IAAMa,SAAS,GAAG,EAAlB;kBACA,IAAMC,SAAS,GAAG,GAAlB;kBACAb,YAAY,GAAG,CAAC,CAACc,MAAM,CAACf,MAAM,CAACgB,MAAR,CAAN,GAAwBH,SAAzB,KAAuCC,SAAS,GAAGD,SAAnD,IAAgE,GAAjE,EAAsEhB,OAAtE,CAA8E,CAA9E,CAAf;kBACAI,YAAY,GAAGgB,IAAI,CAACvB,GAAL,CAAS,CAAT,EAAYuB,IAAI,CAACtB,GAAL,CAAS,GAAT,EAAcM,YAAd,CAAZ,CAAf;gBACH;;gBAED,OAAO;kBACHiB,IAAI,EAAElB,MAAM,CAACkB,IADV;kBAEHN,SAAS,EAAEZ,MAAM,CAACY,SAFf;kBAGHT,IAAI,EAAEH,MAAM,CAACG,IAHV;kBAIHgB,WAAW,EAAEnB,MAAM,CAACmB,WAJjB;kBAKHC,QAAQ,EAAEpB,MAAM,CAACoB,QALd;kBAMHC,QAAQ,EAAErB,MAAM,CAACqB,QANd;kBAOHL,MAAM,EAAEf,YAPL;kBAQHqB,MAAM,EAAEtB,MAAM,CAACsB,MARZ;kBASHC,GAAG,EAAEvB,MAAM,CAACuB,GATT;kBAUHC,EAAE,EAAExB,MAAM,CAACwB,EAVR;kBAWHnB,GAAG,EAAEG,YAAY,CAAC,CAAD,CAXd;kBAYHF,GAAG,EAAEE,YAAY,CAAC,CAAD,CAZd;kBAaHD,GAAG,EAAEC,YAAY,CAAC,CAAD,CAbd;kBAcHiB,WAAW,EAAEzB,MAAM,CAACK,GAdjB;kBAeHqB,WAAW,EAAE1B,MAAM,CAACM,GAfjB;kBAgBHqB,WAAW,EAAE3B,MAAM,CAACO,GAhBjB;kBAiBHqB,QAAQ,EAAE5B,MAAM,CAAC4B,QAjBd;kBAkBHrC,OAAO,EAAEP,QAAQ,CAACH,IAAT,CAAcM;gBAlBpB,CAAP;cAoBH,CAjCyB,CAvBZ;cA0DdtB,aAAa,CAACoB,OAAD,CAAb;cACAlB,gBAAgB,CAAC+B,iBAAD,CAAhB;cA3Dc;cAAA;;YAAA;cAAA;cAAA;cA6Dd+B,OAAO,CAACC,GAAR;;YA7Dc;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbhD,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAiEAvB,SAAS,CAAC,YAAM;IACZuB,aAAa;IAEb,IAAMiD,UAAU,GAAGC,WAAW,CAAC,YAAM;MACjClD,aAAa;IAChB,CAF6B,EAE3B,KAF2B,CAA9B;IAIA,OAAO;MAAA,OAAMmD,aAAa,CAACF,UAAD,CAAnB;IAAA,CAAP;EACH,CARQ,EAQN,EARM,CAAT;EAUA,OAAOjE,aAAP;AACH,CAnGD;;AAqGA,eAAeH,aAAf"},"metadata":{},"sourceType":"module"}