{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/admin/SensorsManagement.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, FormGroup, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react';\nimport PageTitle from '../components/common/PageTitle';\nimport api from '../../src/api/api';\nimport { useTranslation } from 'react-i18next';\nimport Pagination from '../views/Pagination';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport sensorImg from \"../images/smartfarm_capteur.png\";\nimport LoadingSpinner from '../components/common/LoadingSpinner';\n\nvar SensorsManagement = function SensorsManagement() {\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(9),\n      _useState4 = _slicedToArray(_useState3, 1),\n      sensorsPerPage = _useState4[0];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      SearchCode = _useState8[0],\n      setSearchCode = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedUser = _useState10[0],\n      setSelectedUser = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedSupplier = _useState12[0],\n      setSelectedSupplier = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      code = _useState16[0],\n      setCode = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sensorId = _useState18[0],\n      setSensorId = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      singleSensor = _useState20[0],\n      setSingleSensor = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userUid = _useState22[0],\n      setUserUid = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      users = _useState24[0],\n      setUsers = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      allSensors = _useState26[0],\n      setAllSensors = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      existUsers = _useState28[0],\n      setExistUsers = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      existSuppliers = _useState30[0],\n      setExistSuppliers = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      supplierUid = _useState32[0],\n      setSupplierUid = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      supplier = _useState34[0],\n      setSupplier = _useState34[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var getAllSensors = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/admin/all-sensors').then(function (response) {\n                var sensorsData = response.data.sensors;\n                setAllSensors(sensorsData);\n              }).catch(function (err) {\n                console.log(err);\n              }).finally(function () {\n                return setIsLoading(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAllSensors() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getExistUsers = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/admin/exist-users').then(function (response) {\n                var Data = response.data.users;\n                setExistUsers(Data);\n                setSupplier(false);\n                setSupplierUid('');\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getExistUsers() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getExistSuppliers = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/admin/exist-suppliers').then(function (response) {\n                var Data = response.data.suppliers;\n                setExistSuppliers(Data);\n                setSupplierUid(Data.uid);\n                setSupplier(true);\n                setUserUid('');\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getExistSuppliers() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getUsersList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api.get(\"/admin/users\").then(function (response) {\n                var usersData = response.data.users;\n                setUsers(usersData);\n              });\n\n            case 2:\n              data = _context4.sent;\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getUsersList() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getAllSensors();\n    getUsersList();\n    getExistUsers();\n    getExistSuppliers();\n  }, []);\n  var filteredSensors = allSensors.filter(function (sensor) {\n    if (SearchCode !== '') {\n      return sensor.code.toLowerCase().includes(SearchCode.toLowerCase());\n    }\n\n    if (selectedUser !== '') {\n      return sensor.user_id == selectedUser;\n    }\n\n    if (selectedSupplier !== '') {\n      return sensor.supplier_id == selectedSupplier;\n    }\n\n    return sensor;\n  }); // Pagination \n\n  var indexOfLastPost = currentPage * sensorsPerPage;\n  var indexOfFirstPost = indexOfLastPost - sensorsPerPage;\n  var currentSensors = filteredSensors.slice(indexOfFirstPost, indexOfLastPost);\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  var assignSensorToUser = function assignSensorToUser(userUid, supplierUid) {\n    var data = {\n      code: code,\n      user_uid: userUid,\n      supplier_uid: supplierUid\n    };\n    api.post('/admin/edit-sensor', data).then(function (response) {\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('sensor_updated')), {\n          icon: \"success\"\n        });\n        setToggle(false);\n        getAllSensors();\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Error'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Error'\n      });\n    });\n  };\n\n  var getSingleSensor = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(sensorid, type) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return api.get(\"/admin/single-sensor/\".concat(sensorid)).then(function (res) {\n                var sensorData = res.data.sensor;\n                setSingleSensor(sensorData);\n                setCode(sensorData.code);\n                existUsers.map(function (user) {\n                  if (user.id === sensorData.user_id) {\n                    setUserUid(user.uid);\n                  }\n                });\n                existSuppliers.map(function (supplier) {\n                  if (supplier.id === sensorData.supplier_id) {\n                    setSupplierUid(supplier.uid);\n                  }\n                });\n              }).catch(function (error) {\n                swal({\n                  title: \"Error\",\n                  icon: \"error\"\n                });\n              });\n\n            case 2:\n              setToggle(!toggle);\n\n              if (type === \"User\") {\n                getExistUsers();\n              }\n\n              if (type === 'Supplier') {\n                getExistSuppliers();\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getSingleSensor(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); // const editSensorIdUser = (userSelectedUid) => {\n  //     let hasNotSensor = users.length;\n  //     existUsers.map(user =>{\n  //         if(user.id === singleSensor.user_id){\n  //             console.log(user.id +'==='+ singleSensor.user_id)\n  //             setUserUid(user.uid)\n  //             hasNotSensor = hasNotSensor - 1 ;\n  //         }\n  //     })\n  //     if(hasNotSensor == users.length){\n  //         setUserUid(\"\")\n  //     }\n  // }\n\n\n  var resetForm = function resetForm() {\n    setTimeout(function () {\n      setUserUid('');\n      setSupplierUid('');\n    }, 1000);\n  };\n\n  var handleCalculSensor = function handleCalculSensor() {\n    api.post('/calcul/add-sensor-calcul').then(function (response) {\n      console.log(response.data.message);\n\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('calcul_added')), {\n          icon: \"success\"\n        });\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...'\n      });\n    });\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(sensorUid) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              console.log(sensorUid);\n              data = {\n                sensor_uid: sensorUid\n              };\n              _context6.next = 4;\n              return api.delete('/sensor/delete-sensor', {\n                data: data\n              }).then(function (response) {\n                if (response.data.type && response.data.type == \"danger\") {\n                  swal({\n                    title: \"Cannot Delete Sensor\",\n                    icon: \"warning\"\n                  });\n                }\n\n                if (response.data.type == \"success\") {\n                  getAllSensors();\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Cannot Delete Sensor\",\n                  icon: \"Error\",\n                  text: 'Error'\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleDelete(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var confirmDelete = function confirmDelete(sensorUid) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this sensor!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (Delete) {\n      if (Delete) {\n        handleDelete(sensorUid);\n        swal(\" Sensor has been deleted!\", {\n          icon: \"success\"\n        });\n      }\n    }).catch(function (error) {\n      swal({\n        title: \"Cannot Delete sensor\",\n        icon: \"Error\",\n        text: 'Error'\n      });\n    });\n  };\n\n  var fetchDataSensor = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(sensorUid, code) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return api.post('/sensor/activate-synch', {\n                sensor_uid: sensorUid\n              }).then(function (response) {\n                if (response.data.type === \"success\") {\n                  swal(\"\".concat(t('sensor_updated')), {\n                    icon: \"success\"\n                  });\n                  getAllSensors();\n                }\n\n                if (response.data.type === \"danger\") {\n                  swal({\n                    icon: \"error\",\n                    text: 'Error'\n                  });\n                }\n              }).catch(function (err) {\n                swal({\n                  icon: \"error\",\n                  text: 'Error'\n                });\n              });\n\n            case 3:\n              _context7.next = 8;\n              break;\n\n            case 5:\n              _context7.prev = 5;\n              _context7.t0 = _context7[\"catch\"](0);\n              swal({\n                icon: \"error\",\n                text: 'Error'\n              });\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 5]]);\n    }));\n\n    return function fetchDataSensor(_x4, _x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('list_sensors'),\n    subtitle: t('list_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('search_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    value: SearchCode,\n    onChange: function onChange(e) {\n      return setSearchCode(e.target.value);\n    },\n    id: \"search\",\n    placeholder: \"Search By code\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      return setSelectedUser(e.target.value);\n    },\n    value: selectedUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 32\n    }\n  }, selectedUser === \"\" ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 33\n    }\n  }, \"Select by user\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }, t('see_all')), existUsers.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 47\n      }\n    }, user.name);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      return setSelectedSupplier(e.target.value);\n    },\n    value: selectedSupplier,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 32\n    }\n  }, selectedSupplier === \"\" ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 33\n    }\n  }, \"Select by supplier\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  }, t('see_all')), existSuppliers.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 47\n      }\n    }, user.name);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return history.push('/admin/add-sensor');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 29\n    }\n  }, \"Add Sensor\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return handleCalculSensor();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, \"Calcul\")))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-4 justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: sensorsPerPage,\n    totalUsers: allSensors.length,\n    paginate: paginate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  })), isLoading ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 21\n    }\n  }, currentSensors.map(function (sensor) {\n    var dataSensors = sensor.sensorsData;\n    var nameUser = '-';\n    var nameSupplier = '-';\n    users.map(function (user) {\n      if (user.id === sensor.user_id) {\n        nameUser = user.name;\n      }\n    });\n    existSuppliers.map(function (user) {\n      if (user.id === sensor.supplier_id) {\n        nameSupplier = user.name;\n      }\n    });\n    var lastTime = \"-\";\n    var lat = \"-\";\n    var lon = \"-\";\n\n    if (dataSensors.length > 0) {\n      lastTime = new Date(dataSensors[0].time).toLocaleString();\n      lat = parseFloat(sensor.Latitude).toFixed(3);\n      lon = parseFloat(sensor.Longitude).toFixed(3);\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: \"4\",\n      md: \"12\",\n      sm: \"12\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"m-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: \"d-flex justify-content-center align-items-center flex-column border-bottom py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-start align-items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: 33,\n      height: 33,\n      src: sensorImg,\n      alt: \"sensor\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 53\n      }\n    }, sensor.code)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mx-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 49\n      }\n    }, t('lat'), \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 82\n      }\n    }, lat), \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 49\n      }\n    }, t('lon'), \": \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 65\n      }\n    }, lon))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: 13,\n        margin: 0,\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 53\n      }\n    }, t('user'), \" : \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 13,\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 113\n      }\n    }, nameUser))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: 13,\n        margin: 0,\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 53\n      }\n    }, t('supplier'), \" : \", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 13,\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 117\n      }\n    }, nameSupplier)))), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: 13,\n        margin: 0,\n        padding: 0\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 53\n      }\n    }, \"Last reading \"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontSize: 13,\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 53\n      }\n    }, lastTime, \" (GMT)\"))), /*#__PURE__*/React.createElement(CardFooter, {\n      className: \"d-flex justify-content-center align-items-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 45\n      }\n    }, sensor.deleted_at === null ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      className: \"rounded\",\n      title: \"Edit\",\n      onClick: function onClick() {\n        history.push(\"/admin/edit-sensor/\".concat(sensor.id));\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 182\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"mx-2 rounded\",\n      title: \"History\",\n      onClick: function onClick() {\n        history.push(\"/my-history/\".concat(sensor.code));\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 197\n      }\n    }, \"\\uE889\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"rounded\",\n      title: \"Delete\",\n      onClick: function onClick() {\n        confirmDelete(sensor.uid);\n      },\n      squared: true,\n      theme: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 176\n      }\n    }, \"\\uE872\")), sensor.synchronized === \"0\" ? /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return fetchDataSensor(sensor.uid, sensor.code);\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 162\n      }\n    }, \"\\uE627\")) : null) : null)));\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    open: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 29\n    }\n  }, \"Sensor code : \", code), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      return assignSensorToUser(userUid, supplierUid);\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 37\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      resetForm();\n      setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 37\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 41\n    }\n  }, \"Select a user to assign sensor\"), supplier === true ? /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: supplierUid,\n    onChange: function onChange(e) {\n      return setSupplierUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 45\n    }\n  }, \"Select Supplier\"), existSuppliers.map(function (supplier) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: supplier.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 60\n      }\n    }, supplier.name);\n  })) : /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: userUid,\n    onChange: function onChange(e) {\n      setUserUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 45\n    }\n  }, \"Select User\"), existUsers.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 60\n      }\n    }, user.name);\n  }))))))));\n};\n\nexport default SensorsManagement;","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","FormGroup","FormInput","ButtonGroup","Button","Modal","ModalHeader","ModalBody","FormSelect","PageTitle","api","useTranslation","Pagination","useHistory","swal","sensorImg","LoadingSpinner","SensorsManagement","history","toggle","setToggle","sensorsPerPage","currentPage","setCurrentPage","SearchCode","setSearchCode","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isLoading","setIsLoading","code","setCode","sensorId","setSensorId","singleSensor","setSingleSensor","userUid","setUserUid","users","setUsers","allSensors","setAllSensors","existUsers","setExistUsers","existSuppliers","setExistSuppliers","supplierUid","setSupplierUid","supplier","setSupplier","t","i18n","getAllSensors","get","then","response","sensorsData","data","sensors","catch","err","console","log","finally","getExistUsers","Data","getExistSuppliers","suppliers","uid","getUsersList","usersData","filteredSensors","filter","sensor","toLowerCase","includes","user_id","supplier_id","indexOfLastPost","indexOfFirstPost","currentSensors","slice","paginate","pageNumber","assignSensorToUser","user_uid","supplier_uid","post","type","icon","title","text","getSingleSensor","sensorid","res","sensorData","map","user","id","error","resetForm","setTimeout","handleCalculSensor","message","handleDelete","sensorUid","sensor_uid","delete","confirmDelete","buttons","dangerMode","Delete","fetchDataSensor","e","target","value","name","push","length","dataSensors","nameUser","nameSupplier","lastTime","lat","lon","Date","time","toLocaleString","parseFloat","Latitude","toFixed","Longitude","fontSize","margin","padding","fontWeight","deleted_at","synchronized","display","justifyContent"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/admin/SensorsManagement.js"],"sourcesContent":["import React, { useState, useEffect ,useRef} from 'react'\nimport { Container, Row, Col, Card,CardBody,CardHeader,CardFooter, FormGroup, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react'\nimport PageTitle from '../components/common/PageTitle'\nimport api from '../../src/api/api'\nimport { useTranslation } from 'react-i18next';\nimport Pagination from '../views/Pagination';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport sensorImg from \"../images/smartfarm_capteur.png\"\nimport LoadingSpinner from '../components/common/LoadingSpinner'\n\nconst SensorsManagement = () => {\n\n    const history = useHistory()\n\n    const [toggle, setToggle] = useState(false)\n\n    const [sensorsPerPage] = useState(9)\n    const [currentPage, setCurrentPage] = useState(1);\n    const [SearchCode, setSearchCode] = useState('')\n    const [selectedUser,setSelectedUser] = useState('')\n    const [selectedSupplier,setSelectedSupplier] = useState('')\n    const [isLoading,setIsLoading] = useState(true)\n    const [code ,setCode] = useState('')\n    const [sensorId ,setSensorId] = useState('')\n\n    const [singleSensor,setSingleSensor] = useState('')\n\n    const [userUid,setUserUid] = useState('')\n    const [users,setUsers] = useState([])\n\n    const [allSensors, setAllSensors] = useState([])\n    const [existUsers,setExistUsers] = useState([])\n\n    const [existSuppliers,setExistSuppliers] = useState([])\n    const [supplierUid,setSupplierUid] = useState('')\n\n    const [supplier,setSupplier] = useState(false)\n\n\n    const { t, i18n } = useTranslation();\n\n    const getAllSensors = async () => {\n        await api.get('/admin/all-sensors')\n            .then(response => {\n                let sensorsData = response.data.sensors\n                setAllSensors(sensorsData)\n            }).catch(err => {\n                console.log(err)\n            }).finally(()=> setIsLoading(false))\n    }\n    const getExistUsers = async () => {\n        await api.get('/admin/exist-users')\n            .then(response => {\n                var Data = response.data.users\n                setExistUsers(Data)\n                setSupplier(false)\n                setSupplierUid('')\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    const getExistSuppliers = async () => {\n        await api.get('/admin/exist-suppliers')\n            .then(response => {\n                var Data = response.data.suppliers\n                setExistSuppliers(Data)\n                setSupplierUid(Data.uid)\n                setSupplier(true)\n                setUserUid('')\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n    const getUsersList = async () => {\n        let data = await api.get(\"/admin/users\")\n            .then(response => {\n                let usersData = response.data.users\n                setUsers(usersData)\n            })\n    }\n\n    useEffect(() => {\n        getAllSensors()\n        getUsersList()\n        getExistUsers()\n        getExistSuppliers()\n    }, [])\n\n    const filteredSensors = allSensors.filter(sensor => {\n        if (SearchCode !== '') {\n            return (\n                sensor.code.toLowerCase().includes(SearchCode.toLowerCase())\n            )\n        }\n        if (selectedUser !== '') {\n            return (\n                sensor.user_id == selectedUser\n            )\n        }\n        if (selectedSupplier !== '') {\n            return (\n                sensor.supplier_id == selectedSupplier\n            )\n        }\n        return sensor\n    })\n    \n\n    // Pagination \n\n    const indexOfLastPost = currentPage * sensorsPerPage;\n    const indexOfFirstPost = indexOfLastPost - sensorsPerPage;\n    const currentSensors = filteredSensors.slice(indexOfFirstPost, indexOfLastPost);\n\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    const assignSensorToUser = (userUid,supplierUid) =>{\n        let data ={\n            code : code,\n            user_uid : userUid,\n            supplier_uid : supplierUid\n        }\n        api.post('/admin/edit-sensor',data)\n        .then(response =>{\n            if(response.data.type === 'success'){\n                swal(`${t('sensor_updated')}`, {\n                    icon: \"success\",\n                });\n                setToggle(false)\n                getAllSensors()\n            }\n            if(response.data.type === 'danger'){\n                swal({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'Error'\n                })\n\n            }\n        }).catch(err=>{\n            swal({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Error'\n            })\n        })\n    }\n\n    const getSingleSensor = async (sensorid,type) => {\n\n        await api.get(`/admin/single-sensor/${sensorid}`)\n            .then(res => {\n                let sensorData = res.data.sensor\n                setSingleSensor(sensorData) \n                setCode(sensorData.code)  \n                    existUsers.map(user=>{\n                        if(user.id === sensorData.user_id){\n                            setUserUid(user.uid)\n                        }\n                    })\n                    existSuppliers.map(supplier=>{\n                        if(supplier.id === sensorData.supplier_id){\n                            setSupplierUid(supplier.uid)\n                        }\n                    })\n            }).catch(error => {\n                swal({\n                    title: \"Error\",\n                    icon: \"error\",\n\n                });\n\n            })\n        setToggle(!toggle)\n        if(type === \"User\") {\n            getExistUsers()\n        } if(type === 'Supplier') {\n            getExistSuppliers()\n        }\n    }\n\n    // const editSensorIdUser = (userSelectedUid) => {\n    //     let hasNotSensor = users.length;\n        \n\n    //     existUsers.map(user =>{\n    //         if(user.id === singleSensor.user_id){\n    //             console.log(user.id +'==='+ singleSensor.user_id)\n    //             setUserUid(user.uid)\n    //             hasNotSensor = hasNotSensor - 1 ;\n    //         }\n    //     })\n    //     if(hasNotSensor == users.length){\n    //         setUserUid(\"\")\n    //     }\n        \n    // }\n\n    const resetForm = () => {\n        setTimeout(()=>{\n            setUserUid('')\n            setSupplierUid('')\n\n        },1000)\n    }\n\n\n   const  handleCalculSensor = () => {\n    api.post('/calcul/add-sensor-calcul')\n    .then(response=>{\n        console.log(response.data.message)\n        if(response.data.type === 'success'){\n            swal(`${t('calcul_added')}`, {\n                icon: \"success\",\n            });\n        }\n        if(response.data.type === 'danger'){\n            swal({\n                icon: 'error',\n                title: 'Oops...',\n            })\n\n        }\n    }).catch(err=>{\n        swal({\n            icon: 'error',\n            title: 'Oops...',\n        })\n    })\n   }\n\n   const handleDelete = async sensorUid => {\n    console.log(sensorUid)\n\n    let data = {\n        sensor_uid: sensorUid,\n    }\n    await api.delete('/sensor/delete-sensor', { data: data })\n        .then(response => {\n            if (response.data.type && response.data.type == \"danger\") {\n                swal({\n                    title: \"Cannot Delete Sensor\",\n                    icon: \"warning\",\n                });\n            }\n            if (response.data.type == \"success\") {\n                getAllSensors();\n               \n            }\n        }).catch(error => {\n            swal({\n                title: \"Cannot Delete Sensor\",\n                icon: \"Error\",\n                text: 'Error'\n                \n            });\n        })\n    }\n\nconst confirmDelete = sensorUid => {\n\n    swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this sensor!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true,\n    })\n        .then((Delete) => {\n            if (Delete) {\n                handleDelete(sensorUid)\n                swal(\" Sensor has been deleted!\", {\n                    icon: \"success\",\n                });\n            }\n        }).catch(error => {\n            swal({\n                title: \"Cannot Delete sensor\",\n                icon: \"Error\",\n                text: 'Error'\n\n            });\n        })\n\n}\nconst fetchDataSensor = async (sensorUid,code) => {\n    try {\n        await api.post('/sensor/activate-synch',{sensor_uid : sensorUid})\n        .then(response=>{\n            if(response.data.type === \"success\"){\n                swal(`${t('sensor_updated')}`, {\n                    icon: \"success\",\n                });\n                getAllSensors()\n            }\n            if(response.data.type === \"danger\"){\n                swal({\n                    icon: \"error\",\n                    text: 'Error'\n                });\n            }\n        }).catch(err=>{\n            swal({\n                icon: \"error\",\n                text: 'Error'\n            });\n        })\n        \n    } catch (error) {\n        swal({\n            icon: \"error\",\n            text: 'Error'\n        });\n    }\n\n\n  }\n    return (\n        <>\n            <Container>\n                <Row noGutters className=\"page-header py-4\">\n                    <PageTitle\n                        sm=\"4\"\n                        title={t('list_sensors')}\n                        subtitle={t('list_sensors')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                <Row>\n                    <PageTitle\n                        sm=\"4\"\n                        subtitle={t('search_sensors')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                <Row form className=\"d-flex justify-content-center\">\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                                <FormInput\n                                    value={SearchCode}\n                                    onChange={(e) => setSearchCode(e.target.value)}\n                                    id=\"search\"\n                                    placeholder=\"Search By code\" />\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                               <FormSelect onChange={(e) => setSelectedUser(e.target.value)} value={selectedUser}>\n                               {\n                                selectedUser === \"\"\n                                ?\n                                <option value=\"\">Select by user</option>\n                                :\n                                <option value=\"\">{t('see_all')}</option>\n                                \n                               } \n\n                                {\n                                    existUsers.map(user=>{\n                                       return <option value={user.id}>{user.name}</option>\n\n                                    })\n                                }\n                               </FormSelect>\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                               <FormSelect onChange={(e) => setSelectedSupplier(e.target.value)} value={selectedSupplier}>\n                               {\n                                selectedSupplier === \"\"\n                                ?\n                                <option value=\"\">Select by supplier</option>\n                                :\n                                <option value=\"\">{t('see_all')}</option>\n                                \n                               } \n                                {\n                                    existSuppliers.map(user=>{\n                                       return <option value={user.id}>{user.name}</option>\n\n                                    })\n                                }\n                               </FormSelect>\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                    <Col lg=\"3\" md=\"12\" sm=\"12\">\n                        <ButtonGroup>\n                            <Button outline onClick={() => history.push('/admin/add-sensor')}>Add Sensor</Button>\n                            <Button outline onClick={() => handleCalculSensor()}>Calcul</Button>\n\n                        </ButtonGroup>\n                    </Col>\n\n                </Row>\n                  <Row className=\"py-4 justify-content-center\">\n                    <Pagination usersPerPage={sensorsPerPage} totalUsers={allSensors.length} paginate={paginate} />\n\n                </Row>\n                {\n                    isLoading\n                    ?\n                    <LoadingSpinner />\n                    :\n                    <Row >\n                            {\n                                currentSensors.map(sensor=>{\n                                    let dataSensors = sensor.sensorsData\n                                    let nameUser = '-'\n                                    let nameSupplier = '-'\n                                    users.map(user=>{\n                                        if(user.id=== sensor.user_id){\n                                            nameUser = user.name\n                                        }\n                                    })\n                                    existSuppliers.map(user=>{\n                                        if(user.id=== sensor.supplier_id){\n                                            nameSupplier = user.name\n                                        }\n                                    })\n                                    let lastTime = \"-\"\n                                    let lat = \"-\"\n                                    let lon =\"-\"\n                                    if(dataSensors.length > 0){\n                                        lastTime = new Date(dataSensors[0].time).toLocaleString()\n                                        lat = parseFloat(sensor.Latitude).toFixed(3)\n                                        lon =parseFloat(sensor.Longitude).toFixed(3)\n                                    }\n                                    return (\n                                        <Col lg='4' md=\"12\" sm=\"12\" >\n                                        <Card className=\"m-2\">\n                                            <CardHeader className=\"d-flex justify-content-center align-items-center flex-column border-bottom py-1\" >\n                                                <div className=\"d-flex justify-content-start align-items-center\">\n                                                    <img width={33} height={33} src={sensorImg} alt=\"sensor\" />\n                                                    <span>{sensor.code}</span>\n\n                                                </div>\n                                                <div className='d-flex'>\n                                                <h6 className='mx-1'>{t('lat')}: <span>{lat}</span> </h6>\n                                                <h6>{t('lon')}: <span>{lon}</span></h6>\n                                                </div>\n                                                <div>\n                                                    <h6  style={{fontSize:13,margin:0,padding:0}}>{t('user')} : <span style={{fontSize:13,fontWeight:\"bold\"}}>{nameUser}</span></h6>\n                                                </div>\n                                                <div>\n                                                    <h6  style={{fontSize:13,margin:0,padding:0}}>{t('supplier')} : <span style={{fontSize:13,fontWeight:\"bold\"}}>{nameSupplier}</span></h6>\n                                                </div>\n                                            </CardHeader>\n                                            <CardBody className=\"py-1\">\n                                                <div>\n                                                    <h6  style={{fontSize:13,margin:0,padding:0}}>Last reading </h6>\n                                                    <span style={{fontSize:13,fontWeight:\"bold\"}}>{lastTime} (GMT)</span>\n\n                                                </div>\n                                               \n                                            </CardBody>\n                                            <CardFooter className=\"d-flex justify-content-center align-items-center\">\n\n                                                {\n                                                        sensor.deleted_at === null\n                                                            ?\n                                                            <>\n                                                                <Button className=\"rounded\" title=\"Edit\" onClick={() => { history.push(`/admin/edit-sensor/${sensor.id}`) }} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\n                                                                <Button className=\"mx-2 rounded\" title=\"History\" onClick={() => { history.push(`/my-history/${sensor.code}`)}} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i></Button>\n                                                                <Button className=\"rounded\" title=\"Delete\" onClick={() => {confirmDelete(sensor.uid) }} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\n                                                                    {\n                                                                            sensor.synchronized === \"0\"\n                                                                            ?\n                                                                            <Button onClick={() => fetchDataSensor(sensor.uid,sensor.code)} squared theme=\"info\"><i className='material-icons'>&#xe627;</i></Button>\n                                                                            :\n                                                                            null\n                                                                    }\n\n                                                            </>\n                                                            :\n                                                            null\n                                                    }\n                                            </CardFooter>\n                                        </Card>\n                                        </Col>\n                                    )\n\n                                })\n                            }\n                    </Row>\n                    \n                }\n                {/* <Card>\n                    <table className=\"table mb-0 text-center table-responsive-lg\">\n                        <thead className=\"bg-light\">\n                            <tr>\n                                <th scope=\"col\" className=\"border-0\">{t('sensor_code')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('user')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('supplier')}</th>\n                                <th scope=\"col\" className=\"border-0\"></th>\n                                <th scope=\"col\" className=\"border-0\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                currentSensors.map(sensor => {\n                                    let nameUser = '-'\n                                    let nameSupplier = '-'\n                                    users.map(user=>{\n                                        if(user.id=== sensor.user_id){\n                                            nameUser = user.name\n                                        }\n                                    })\n                                    existSuppliers.map(user=>{\n                                        if(user.id=== sensor.supplier_id){\n                                            nameSupplier = user.name\n                                        }\n                                    })\n                                    return (\n                                        <tr>\n                                            <td>{sensor.code}</td>\n                                            <td>{nameUser}</td>\n                                            <td>{nameSupplier}</td>\n                                            <td>\n                                                {\n                                                    sensor.deleted_at === null\n                                                        ?\n                                                        <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                            <Button title=\"Edit\" onClick={() => { history.push(`/admin/edit-sensor/${sensor.id}`) }} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\n                                                            <Button title=\"History\" onClick={() => { history.push(`/my-history/${sensor.code}`)}} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i></Button>\n                                                            <Button title=\"Delete\" onClick={() => {confirmDelete(sensor.uid) }} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\n                                                                {\n                                                                        sensor.synchronized === \"0\"\n                                                                        ?\n                                                                        <Button onClick={() => fetchDataSensor(sensor.uid,sensor.code)} squared theme=\"info\"><i className='material-icons'>&#xe627;</i></Button>\n                                                                        :\n                                                                        null\n                                                                }\n\n                                                        </ButtonGroup>\n                                                        :\n                                                        null\n                                                }\n\n                                            </td>\n                                            {\n                                                sensor.deleted_at === null\n                                                    ?\n                                                    <td>\n                                                        <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                            <Button  outline onClick={() => getSingleSensor(sensor.id,'User')}>Assign to user</Button>\n                                                            <Button  outline onClick={() => getSingleSensor(sensor.id,'Supplier')}>Assign to supplier</Button>\n                                                        </ButtonGroup>\n\n                                                    </td>\n\n                                                    :\n                                                    null\n                                            }\n                                            <td></td>\n                                            \n                                        </tr>\n\n                                    )\n                                })\n                            }\n\n                        </tbody>\n                    </table>\n\n                </Card> */}\n              \n\n            </Container>\n                    <Modal centered={true} open={toggle}>\n                        <ModalHeader className=\"d-flex justify-content-between align-items-center\">\n                            <div>\n                                Sensor code : {code}\n                            </div>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n        \n                                }}\n                            >\n                                <Button\n                                    // theme=\"success\"\n                                    onClick={()  => assignSensorToUser(userUid ,supplierUid)}\n                                    className=\"mb-2 mr-1 btn btn-success\"\n                                >\n                                    <i class={`fa fa-check mx-2`}></i>\n                                    {t('save')}\n                                </Button>\n                                <Button\n                                    // theme=\"success\"\n                                    className=\"mb-2 mr-1 btn btn-danger\"\n                                    onClick={() => {resetForm() ;setToggle(false)} }\n                                >\n                                    <i class={`fa fa-times mx-2`}></i>\n                                    {t('cancel')}\n                                </Button>\n                            </div>\n                        </ModalHeader>\n                        <ModalBody>\n                            <Row className='d-flex justify-content-center'>\n                                <Col lg='6' md='8' sm='8'>\n                                    <FormGroup>\n                                        <label htmlFor=\"users\">Select a user to assign sensor</label>\n                                        {\n                                            supplier === true\n                                            ?\n                                            <FormSelect\n                                            id=\"users\"\n                                            value={supplierUid}\n                                            onChange={(e) => setSupplierUid(e.target.value) }\n                                        >\n                                            <option value=\"\">Select Supplier</option>\n        \n                                            {\n                                                existSuppliers.map(supplier =>{\n                                                    return <option value={supplier.uid}>{supplier.name}</option>\n        \n                                                })\n                                            }\n                                        </FormSelect>\n        \n                                            :\n                                            <FormSelect\n                                            id=\"users\"\n                                            value={userUid}\n                                            onChange={(e) => {setUserUid(e.target.value)} }\n                                        >\n                                            <option value=\"\">Select User</option>\n        \n                                            {\n                                                existUsers.map(user =>{\n                                            \n                                                    return <option value={user.uid}>{user.name}</option>\n        \n                                                })\n                                            }\n                                        </FormSelect>\n                                        }\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n        \n        \n                        </ModalBody>\n                    </Modal>\n\n        </>\n    )\n}\n\nexport default SensorsManagement"],"mappings":"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"},"metadata":{},"sourceType":"module"}