{"ast":null,"code":"import _toConsumableArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SatteliteMap.js\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Circle, FeatureGroup, Marker, Popup, useMap, ImageOverlay } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Styles.css\";\nimport useGeoLocation from \"../utils/useGeoLocation\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport api from \"../api/api\";\nimport L from 'leaflet';\nimport MarkerObject from \"./MarkerMap\";\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport axios from \"axios\";\nimport { Card, CardBody, CardImg, CardTitle, Col, FormSelect, Row } from \"shards-react\";\nimport IrrigationMap from '../images/Irrigation-index.png';\nimport ndvi from '../images/ndvi.png';\nimport NitrogenMap from '../images/Nitrogen-Map.png';\nimport PlantHealthMap from '../images/Plant-Health-gci.png';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Button from '@mui/material/Button';\nimport SatelliteAltIcon from '@mui/icons-material/SatelliteAlt';\nimport { Box } from \"@mui/material\";\nimport { ScaleControl } from 'react-leaflet';\nimport Legend from \"./Legend\";\n\nvar SatteliteMap = function SatteliteMap(_ref) {\n  var data = _ref.data,\n      selectedData = _ref.selectedData,\n      _onEdited = _ref._onEdited,\n      draw = _ref.draw,\n      edit = _ref.edit,\n      drawn = _ref.drawn,\n      getSatelliteImages = _ref.getSatelliteImages;\n  var position = [33.8921, 9.5615];\n  var location = useGeoLocation(); //   const map = useMap();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      overlayBounds = _useState2[0],\n      setOverlayBounds = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drawnPolygon = _useState4[0],\n      setDrawnPolygon = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRequesting = _useState6[0],\n      setIsRequesting = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDesignation = _useState8[0],\n      setSelectedDesignation = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      designationData = _useState10[0],\n      setDesignationData = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedDesignationUrl = _useState12[0],\n      setSelectedDesignationUrl = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      Map = _useState14[0],\n      setMap = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      markers = _useState16[0],\n      setMarkers = _useState16[1];\n\n  var _useState17 = useState([33.8921, 9.5615]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      center = _useState18[0],\n      setCenter = _useState18[1];\n\n  var _useState19 = useState('-'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      min = _useState20[0],\n      setMin = _useState20[1];\n\n  var _useState21 = useState('-'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      max = _useState22[0],\n      setMax = _useState22[1];\n\n  var designationImageMap = {\n    \"Vegetation index\": ndvi,\n    \"Irrigation index\": IrrigationMap,\n    \"Nitrogen Map\": NitrogenMap,\n    \"Plant Health\": PlantHealthMap\n  };\n  useEffect(function () {\n    if (data && data.length > 0) {\n      var _data$ = data[0],\n          Latitude = _data$.Latitude,\n          Longitude = _data$.Longitude;\n      setCenter([Number(Latitude), Number(Longitude)]);\n      setMarkers([Number(Latitude), Number(Longitude)]);\n    }\n  }, [data]);\n\n  var calculateBounds = function calculateBounds(coordinates) {\n    var latitudes = coordinates.map(function (coord) {\n      return coord[1];\n    });\n    var longitudes = coordinates.map(function (coord) {\n      return coord[0];\n    });\n    var bounds = [[Math.min.apply(Math, _toConsumableArray(latitudes)), Math.min.apply(Math, _toConsumableArray(longitudes))], [Math.max.apply(Math, _toConsumableArray(latitudes)), Math.max.apply(Math, _toConsumableArray(longitudes))]];\n    return bounds;\n  };\n\n  var handleCreated = function handleCreated(e) {\n    var type = e.layerType;\n    var layer = e.layer;\n\n    if (type === 'polygon') {\n      var coordinates = layer.getLatLngs()[0].map(function (coord) {\n        return [coord.lng, coord.lat];\n      });\n      setDrawnPolygon(coordinates);\n    }\n  };\n\n  var handleSendRequest = function handleSendRequest() {\n    setIsRequesting(true);\n  };\n\n  var handleCardClick = function handleCardClick(selected) {\n    handleDesignationChange({\n      target: {\n        value: selected\n      }\n    });\n  };\n\n  var handleDesignationChange = function handleDesignationChange(event) {\n    var selected = event.target.value;\n    var _designationData$0$se = designationData[0][selected],\n        url = _designationData$0$se.url,\n        min = _designationData$0$se.min,\n        max = _designationData$0$se.max;\n    var bounds = calculateBounds(drawnPolygon);\n    setSelectedDesignation(selected);\n    setSelectedDesignationUrl(url);\n    setOverlayBounds(bounds);\n    setMin(parseFloat(min).toFixed(2));\n    setMax(parseFloat(max).toFixed(2));\n  };\n\n  useEffect(function () {\n    // if (!Map) return\n    if (isRequesting && drawnPolygon) {\n      // Send API request with the drawn polygon data\n      var apiUrl = '/api/sattelite-images';\n      api.post(apiUrl, {\n        polygon: drawnPolygon\n      }).then(function (response) {\n        // Handle the API response here\n        var fetchedData = response.data.data.data;\n        var dataArray = [];\n\n        if (fetchedData) {\n          dataArray.push(fetchedData);\n        }\n\n        setDesignationData(dataArray);\n      }).catch(function (error) {\n        // Handle errors\n        console.error('API error:', error);\n      }).finally(function () {\n        setIsRequesting(false);\n        getSatelliteImages();\n      });\n    }\n  }, [isRequesting, drawnPolygon]);\n  useEffect(function () {\n    if (designationData.length > 0 && selectedData.length === 0) {\n      var apiUrl = '/field/add-sattelite-images';\n      var userUid = JSON.parse(localStorage.getItem('user')).id;\n      var Id = data[0].Id;\n      api.post(apiUrl, {\n        data: designationData,\n        field_id: Id,\n        user_uid: userUid,\n        polygon: drawnPolygon\n      }).then(function (response) {\n        var fetchedData = response.data.imagesData;\n        console.log(fetchedData);\n      }).catch(function (error) {\n        // Handle errors\n        console.error('API error:', error);\n      });\n    }\n  }, [designationData]);\n  useEffect(function () {\n    if (selectedData.length > 0 && drawn) {\n      setDesignationData(selectedData);\n      setDrawnPolygon(drawn);\n    }\n  }, [selectedData, drawn]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapContainer, {\n    ref: setMap,\n    style: {\n      borderRadius: 20,\n      boxShadow: '1px 1px 10px #bbb',\n      height: 300\n    },\n    className: \"markercluster-map\",\n    center: center.length === 0 ? position : center,\n    zoom: 5,\n    maxZoom: 18,\n    whenCreated: setMap,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatureGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditControl, {\n    draw: draw,\n    edit: edit,\n    position: \"topright\",\n    onCreated: handleCreated,\n    onEdited: _onEdited,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ScaleControl, {\n    position: \"bottomleft\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TileLayer, {\n    url: selectedDesignationUrl || 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    map: Map,\n    min: min,\n    max: max,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LeafletGeoCoder, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }), location.loaded && !location.error && /*#__PURE__*/React.createElement(Marker, {\n    position: [location.coordinates.lat, location.coordinates.lng],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"My position\")), markers.length > 0 && /*#__PURE__*/React.createElement(Marker, {\n    position: [markers[0], markers[1]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, data[0].title)), selectedDesignationUrl && overlayBounds && /*#__PURE__*/React.createElement(TileLayer, {\n    key: selectedDesignationUrl,\n    url: selectedDesignationUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(SatelliteAltIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 48\n      }\n    }),\n    onClick: handleSendRequest,\n    disabled: isRequesting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, isRequesting ? 'Sending Request...' : 'Satellite Images')), isRequesting ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 10\n    }\n  }, designationData.length > 0 && Object.keys(designationData[0]).map(function (item, indx) {\n    var data = designationData[0][item];\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: \"3\",\n      md: \"6\",\n      sm: \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"m-4 p-0 \",\n      key: indx,\n      style: {\n        width: \"150px\",\n        height: \"100px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return handleCardClick(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      width: 100,\n      height: 100,\n      top: true,\n      src: designationImageMap[data.designation],\n      alt: item.designation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      className: \"m-0 p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: \"16px\"\n      },\n      className: \"text-center py-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, data.designation))));\n  })));\n};\n\nexport default SatteliteMap;","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Polygon","Circle","FeatureGroup","Marker","Popup","useMap","ImageOverlay","useGeoLocation","EditControl","api","L","MarkerObject","LeafletGeoCoder","axios","Card","CardBody","CardImg","CardTitle","Col","FormSelect","Row","IrrigationMap","ndvi","NitrogenMap","PlantHealthMap","LinearProgress","Button","SatelliteAltIcon","Box","ScaleControl","Legend","SatteliteMap","data","selectedData","_onEdited","draw","edit","drawn","getSatelliteImages","position","location","overlayBounds","setOverlayBounds","drawnPolygon","setDrawnPolygon","isRequesting","setIsRequesting","selectedDesignation","setSelectedDesignation","designationData","setDesignationData","selectedDesignationUrl","setSelectedDesignationUrl","Map","setMap","markers","setMarkers","center","setCenter","min","setMin","max","setMax","designationImageMap","length","Latitude","Longitude","Number","calculateBounds","coordinates","latitudes","map","coord","longitudes","bounds","Math","handleCreated","e","type","layerType","layer","getLatLngs","lng","lat","handleSendRequest","handleCardClick","selected","handleDesignationChange","target","value","event","url","parseFloat","toFixed","apiUrl","post","polygon","then","response","fetchedData","dataArray","push","catch","error","console","finally","userUid","JSON","parse","localStorage","getItem","id","Id","field_id","user_uid","imagesData","log","borderRadius","boxShadow","height","loaded","title","display","justifyContent","marginTop","width","Object","keys","item","indx","cursor","designation","fontSize"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SatteliteMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Circle, FeatureGroup, Marker, Popup, useMap, ImageOverlay } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Styles.css\";\nimport useGeoLocation from \"../utils/useGeoLocation\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport api from \"../api/api\";\nimport L from 'leaflet';\nimport MarkerObject from \"./MarkerMap\"\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport axios from \"axios\";\nimport {  Card, CardBody, CardImg, CardTitle, Col, FormSelect, Row } from \"shards-react\";\nimport IrrigationMap from '../images/Irrigation-index.png'\nimport ndvi from '../images/ndvi.png'\nimport NitrogenMap from '../images/Nitrogen-Map.png'\nimport PlantHealthMap from '../images/Plant-Health-gci.png'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Button from '@mui/material/Button';\nimport SatelliteAltIcon from '@mui/icons-material/SatelliteAlt';\nimport { Box } from \"@mui/material\";\n\nimport { ScaleControl } from 'react-leaflet' \nimport Legend from \"./Legend\";\n\nconst SatteliteMap = ({ data, selectedData, _onEdited, draw, edit,drawn ,getSatelliteImages}) => {\n  const position = [33.8921, 9.5615];\n  const location = useGeoLocation();\n  //   const map = useMap();\n  const [overlayBounds, setOverlayBounds] = useState(null);\n  const [drawnPolygon, setDrawnPolygon] = useState(null);\n  const [isRequesting, setIsRequesting] = useState(false);\n  const [selectedDesignation, setSelectedDesignation] = useState('');\n  const [designationData, setDesignationData] = useState([]);\n  const [selectedDesignationUrl, setSelectedDesignationUrl] = useState(null);\n  const [Map, setMap] = useState(null)\n  const [markers, setMarkers] = useState([]);\n  const [center, setCenter] = useState([33.8921, 9.5615]); \n  const [min, setMin] = useState('-');\n  const [max, setMax] = useState('-');\n\n  const designationImageMap = {\n    \"Vegetation index\": ndvi,\n    \"Irrigation index\": IrrigationMap,\n    \"Nitrogen Map\": NitrogenMap,\n    \"Plant Health\": PlantHealthMap,\n  };\n  useEffect(() => {\n    if (data && data.length > 0) {\n      const { Latitude, Longitude } = data[0];\n      setCenter([Number(Latitude), Number(Longitude)]);\n      setMarkers([Number(Latitude), Number(Longitude)]);\n      \n    }\n  }, [data]);\n  const calculateBounds = (coordinates) => {\n    const latitudes = coordinates.map(coord => coord[1]);\n    const longitudes = coordinates.map(coord => coord[0]);\n\n    const bounds = [\n      [Math.min(...latitudes), Math.min(...longitudes)],\n      [Math.max(...latitudes), Math.max(...longitudes)]\n    ];\n\n    return bounds;\n  };\n\n\n  const handleCreated = (e) => {\n    const type = e.layerType;\n    const layer = e.layer;\n\n    if (type === 'polygon') {\n      const coordinates = layer.getLatLngs()[0].map(coord => [coord.lng, coord.lat]);\n      setDrawnPolygon(coordinates);\n    }\n  };\n  const handleSendRequest = () => {\n    setIsRequesting(true);\n  };\n  const handleCardClick = (selected) => {\n    handleDesignationChange({ target: { value: selected } });\n  };\n  const handleDesignationChange = (event) => {\n    const selected = event.target.value;\n    const { url , min , max } = designationData[0][selected];\n    const bounds = calculateBounds(drawnPolygon);\n    setSelectedDesignation(selected);\n    setSelectedDesignationUrl(url);\n    setOverlayBounds(bounds);\n    setMin(parseFloat(min).toFixed(2));\n    setMax(parseFloat(max).toFixed(2));\n  };\n\n\n\n\n  useEffect(() => {\n    // if (!Map) return\n    if (isRequesting && drawnPolygon) {\n      // Send API request with the drawn polygon data\n      const apiUrl = '/api/sattelite-images';\n\n      api.post(apiUrl, { polygon: drawnPolygon })\n        .then((response) => {\n          // Handle the API response here\n          const fetchedData = response.data.data.data\n          let dataArray = []\n          if (fetchedData) {\n            dataArray.push(fetchedData)\n          }\n          setDesignationData(dataArray);\n        })\n        .catch((error) => {\n          // Handle errors\n          console.error('API error:', error);\n        })\n        .finally(() => {\n          setIsRequesting(false);\n          getSatelliteImages()\n        });\n    }\n  }, [isRequesting, drawnPolygon]);\n\n  useEffect(() => {\n    if (designationData.length > 0 && selectedData.length === 0) {\n        const apiUrl = '/field/add-sattelite-images';\n        let userUid = JSON.parse(localStorage.getItem('user')).id\n        const { Id } = data[0];\n    \n        api.post(apiUrl, { data: designationData , field_id : Id , user_uid : userUid , polygon : drawnPolygon })\n        .then((response) => {\n          const fetchedData = response.data.imagesData\n          console.log(fetchedData)\n        })\n        .catch((error) => {\n          // Handle errors\n          console.error('API error:', error);\n        })\n      } \n    \n\n  }, [designationData])\n  \n\n  useEffect(() => {\n    if(selectedData.length > 0 && drawn) {\n      setDesignationData(selectedData)\n      setDrawnPolygon(drawn)\n    }\n  }, [selectedData,drawn])\n\n\n  return (\n    <div>\n      <MapContainer ref={setMap}\n        style={{ borderRadius: 20, boxShadow: '1px 1px 10px #bbb', height: 300 }}\n        className=\"markercluster-map\"\n        center={center.length === 0 ? position : center}\n        zoom={5} \n        maxZoom={18}\n        whenCreated={setMap}\n\n      >\n        <FeatureGroup>\n          <EditControl draw={draw} edit={edit} position=\"topright\" onCreated={handleCreated} onEdited={_onEdited} />\n          <ScaleControl position=\"bottomleft\" />\n        \n        </FeatureGroup>\n        <TileLayer\n          url={selectedDesignationUrl || 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'}\n          subdomains={['mt0', 'mt1', 'mt2', 'mt3']}\n        />\n        <Legend map={Map} min={min} max={max} />\n\n        <LeafletGeoCoder />\n\n        {location.loaded && !location.error && (\n          <Marker position={[location.coordinates.lat, location.coordinates.lng]}>\n            <Popup>My position</Popup>\n          </Marker>\n        )}\n         {markers.length > 0 && (\n          <Marker position={[markers[0], markers[1]]}>\n            <Popup>{data[0].title}</Popup>\n          </Marker>\n        )}\n        {selectedDesignationUrl && overlayBounds && (\n          <TileLayer\n          key={selectedDesignationUrl}\n            url={selectedDesignationUrl}\n          />\n        )}\n      </MapContainer>\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n        <Button  variant=\"outlined\" startIcon={<SatelliteAltIcon />} onClick={handleSendRequest} disabled={isRequesting}>\n          {isRequesting ? 'Sending Request...' : 'Satellite Images'}\n        </Button>\n\n      </div>\n      {\n        isRequesting ?     \n    <Box sx={{ width: '100%', marginTop: \"10px\" }}>\n        <LinearProgress />\n\n    </Box>\n     : \n         <Row style={{marginTop: \"20px\" }}>\n        {designationData.length > 0 &&\n          Object.keys(designationData[0]).map((item, indx) =>{\n            const data = designationData[0][item];\n            return(\n              <Col lg=\"3\" md=\"6\" sm=\"6\" >\n            \n              <Card className=\"m-4 p-0 \" key={indx} style={{ width: \"150px\",height:\"100px\", cursor: \"pointer\" }} onClick={() => handleCardClick(item)}>\n                <CardImg width={100} height={100} top src={designationImageMap[data.designation]} alt={item.designation} />\n                <CardBody className=\"m-0 p-0\">\n                  <h6 style={{fontSize:\"16px\"}} className=\"text-center py-2\">{data.designation}</h6>\n                </CardBody>\n              </Card>\n              </Col>\n           )\n            \n          }\n         )}\n      </Row>\n      }\n    \n    </div>\n  );\n};\n\nexport default SatteliteMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}