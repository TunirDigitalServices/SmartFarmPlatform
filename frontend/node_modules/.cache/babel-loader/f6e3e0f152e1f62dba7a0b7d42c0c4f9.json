{"ast":null,"code":"import { ZXingHtml5QrcodeDecoder } from \"./zxing-html5-qrcode-decoder\";\nimport { BarcodeDetectorDelegate } from \"./native-bar-code-detector\";\n\nvar Html5QrcodeShim = function () {\n  function Html5QrcodeShim(requestedFormats, verbose, logger, experimentalFeatureConfig) {\n    this.EXECUTIONS_TO_REPORT_PERFORMANCE = 100;\n    this.executions = 0;\n    this.executionResults = [];\n    this.verbose = verbose;\n\n    if (experimentalFeatureConfig.useBarCodeDetectorIfSupported === true && BarcodeDetectorDelegate.isSupported()) {\n      this.decoder = new BarcodeDetectorDelegate(requestedFormats, verbose, logger);\n    } else {\n      this.decoder = new ZXingHtml5QrcodeDecoder(requestedFormats, verbose, logger);\n    }\n  }\n\n  Html5QrcodeShim.prototype.decodeAsync = function (canvas) {\n    var _this = this;\n\n    var start = performance.now();\n    return this.decoder.decodeAsync(canvas).finally(function () {\n      if (_this.verbose) {\n        var executionTime = performance.now() - start;\n\n        _this.executionResults.push(executionTime);\n\n        _this.executions++;\n\n        _this.possiblyFlushPerformanceReport();\n      }\n    });\n  };\n\n  Html5QrcodeShim.prototype.possiblyFlushPerformanceReport = function () {\n    if (this.executions < this.EXECUTIONS_TO_REPORT_PERFORMANCE) {\n      return;\n    }\n\n    var sum = 0;\n\n    for (var _i = 0, _a = this.executionResults; _i < _a.length; _i++) {\n      var executionTime = _a[_i];\n      sum += executionTime;\n    }\n\n    var mean = sum / this.executionResults.length;\n    console.log(mean + \" ms for \" + this.executionResults.length + \" last runs.\");\n    this.executions = 0;\n    this.executionResults = [];\n  };\n\n  return Html5QrcodeShim;\n}();\n\nexport { Html5QrcodeShim };","map":null,"metadata":{},"sourceType":"module"}