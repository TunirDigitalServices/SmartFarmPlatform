{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\src\\\\admin\\\\SimulationChart.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'shards-react';\nimport moment from 'moment'; // Import moment library\n\nvar SimulationChart = function SimulationChart(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ruMax = _useState4[0],\n      setRuMax = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ruMin = _useState6[0],\n      setRuMin = _useState6[1];\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var dataBilan = [];\n    var RuMax = [];\n    var RuMin = [];\n    var Et0 = [];\n    var kc = [];\n    var Etc = [];\n\n    for (var i = 1; i < data.length; i++) {\n      var hourlyBilan = data[i].bilan;\n\n      for (var j = 0; j < hourlyBilan.length; j++) {\n        var hourData = hourlyBilan[j];\n        var date = moment(data[i].dates).add(hourData.hour, 'hours').locale('en').format('MMM DD YYYY HH:mm');\n        labels.push(date);\n        dataBilan.push(parseFloat(hourData.value).toFixed(2));\n        RuMax.push(data[i].RUmax);\n        RuMin.push(data[i].RUmin);\n        Et0.push(data[i].ET0);\n        Etc.push(data[i].ETC);\n        kc.push(data[i].kc);\n      }\n    }\n\n    var chartData = {\n      labels: labels,\n      datasets: [{\n        label: \"\".concat(t('water_balance')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: '#27A6B7',\n        borderWidth: 2,\n        data: dataBilan\n      }, {\n        label: \"\".concat(t('Ru max (mm)')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#32CB8D',\n        borderColor: '#32CB8D',\n        borderWidth: 1,\n        data: RuMax\n      }, {\n        label: \"\".concat(t('Ru min (mm)')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#e5331b',\n        borderColor: '#e5331b',\n        borderWidth: 1,\n        data: RuMin\n      }, {\n        label: \"\".concat(t('Etc')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#32CB8D',\n        borderColor: '#32CB8D',\n        borderWidth: 1,\n        data: Etc\n      }, {\n        label: \"\".concat(t('Et0')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#e5331b',\n        borderColor: '#e5331b',\n        borderWidth: 1,\n        data: Et0\n      }, {\n        label: \"\".concat(t('Kc')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#764248',\n        borderColor: '#764248',\n        borderWidth: 1,\n        data: kc\n      }]\n    };\n    setState(chartData);\n    setRuMax(RuMax[0]); // Find max RUmax value\n\n    setRuMin(RuMin[0]); // Find min RUmin value\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('water_balance')),\n        fontSize: 14\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: ruMax > 100 ? ruMax + 10 : 100 // min: Math.round(ruMin - 10),\n\n          }\n        }],\n        xAxes: [{\n          type: 'time',\n          // Use a time scale for x-axis\n          time: {\n            unit: 'hour',\n            // Display time in hours\n            stepSize: 1,\n            // Display every hour\n            displayFormats: {\n              hour: 'DD-MM-YYYY HH:mm' // Format of displayed time\n\n            }\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default SimulationChart;","map":{"version":3,"names":["React","useState","useEffect","Line","useTranslation","Col","moment","SimulationChart","data","state","setState","t","i18n","ruMax","setRuMax","ruMin","setRuMin","getChartData","labels","dataBilan","RuMax","RuMin","Et0","kc","Etc","i","length","hourlyBilan","bilan","j","hourData","date","dates","add","hour","locale","format","push","parseFloat","value","toFixed","RUmax","RUmin","ET0","ETC","chartData","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","title","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","max","xAxes","type","time","unit","stepSize","displayFormats","elements","point","radius"],"sources":["C:/Users/HP/Desktop/SmartFarm app/backoffice/frontend/src/admin/SimulationChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Col } from 'shards-react';\r\nimport moment from 'moment'; // Import moment library\r\n\r\nconst SimulationChart = ({ data }) => {\r\n  const [state, setState] = useState(null);\r\n  const { t, i18n } = useTranslation();\r\n  const [ruMax, setRuMax] = useState(0);\r\n  const [ruMin, setRuMin] = useState(0);\r\n  const getChartData = () => {\r\n    let labels = [];\r\n    let dataBilan = [];\r\n    let RuMax = [];\r\n    let RuMin = [];\r\n    let Et0 = [];\r\n    let kc = [];\r\n    let Etc = [];\r\n\r\n    for (let i = 1; i < data.length; i++) {\r\n      const hourlyBilan = data[i].bilan;\r\n      for (let j = 0; j < hourlyBilan.length; j++) {\r\n        const hourData = hourlyBilan[j];\r\n        const date = moment(data[i].dates).add(hourData.hour, 'hours').locale('en').format('MMM DD YYYY HH:mm');\r\n        labels.push(date);\r\n        dataBilan.push(parseFloat(hourData.value).toFixed(2));\r\n        RuMax.push(data[i].RUmax);\r\n        RuMin.push(data[i].RUmin);\r\n        Et0.push(data[i].ET0);\r\n        Etc.push(data[i].ETC);\r\n        kc.push(data[i].kc);\r\n\r\n      }\r\n    }\r\n    const chartData = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: `${t('water_balance')}`,\r\n          fill: false,\r\n          lineTension: 0,\r\n          backgroundColor: 'rgba(75,192,192,1)',\r\n          borderColor: '#27A6B7',\r\n          borderWidth: 2,\r\n          data: dataBilan,\r\n        },\r\n        {\r\n          label: `${t('Ru max (mm)')}`,\r\n          fill: false,\r\n          lineTension: 0,\r\n          backgroundColor: '#32CB8D',\r\n          borderColor: '#32CB8D',\r\n          borderWidth: 1,\r\n          data: RuMax,\r\n        },\r\n        {\r\n          label: `${t('Ru min (mm)')}`,\r\n          fill: false,\r\n          lineTension: 0,\r\n          backgroundColor: '#e5331b',\r\n          borderColor: '#e5331b',\r\n          borderWidth: 1,\r\n          data: RuMin,\r\n        },\r\n        {\r\n            label: `${t('Etc')}`,\r\n            fill: false,\r\n            lineTension: 0,\r\n            backgroundColor: '#32CB8D',\r\n            borderColor: '#32CB8D',\r\n            borderWidth: 1,\r\n            data: Etc,\r\n          },\r\n          {\r\n            label: `${t('Et0')}`,\r\n            fill: false,\r\n            lineTension: 0,\r\n            backgroundColor: '#e5331b',\r\n            borderColor: '#e5331b',\r\n            borderWidth: 1,\r\n            data: Et0,\r\n          },\r\n          {\r\n            label: `${t('Kc')}`,\r\n            fill: false,\r\n            lineTension: 0,\r\n            backgroundColor: '#764248',\r\n            borderColor: '#764248',\r\n            borderWidth: 1,\r\n            data: kc,\r\n          },\r\n      ],\r\n    };\r\n    setState(chartData);\r\n    setRuMax(RuMax[0]); // Find max RUmax value\r\n    setRuMin(RuMin[0]); // Find min RUmin value\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChartData();\r\n  }, [data]);\r\n\r\n  return (\r\n    <Line\r\n      data={state}\r\n      options={{\r\n        title: {\r\n          display: true,\r\n          text: `${t('water_balance')}`,\r\n          fontSize: 14,\r\n        },\r\n        legend: {\r\n          display: true,\r\n          position: 'bottom',\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                max: ruMax > 100 ? ruMax + 10 : 100,\r\n                // min: Math.round(ruMin - 10),\r\n              },\r\n            },\r\n          ],\r\n          xAxes: [\r\n            {\r\n              type: 'time', // Use a time scale for x-axis\r\n              time: {\r\n                unit: 'hour', // Display time in hours\r\n                stepSize: 1, // Display every hour\r\n                displayFormats: {\r\n                  hour: 'DD-MM-YYYY HH:mm', // Format of displayed time\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n        elements: {\r\n          point:{\r\n              radius: 0\r\n          }\r\n      }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SimulationChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}