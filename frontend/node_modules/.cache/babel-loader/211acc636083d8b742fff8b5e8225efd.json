{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar server_1 = require(\"react-dom/server\");\n\nvar acceptTypes = [\"string\", \"number\", \"boolean\"];\n\nfunction createTable(_ref) {\n  var header = _ref.header,\n      body = _ref.body;\n  var headers = react_1.default.createElement(\"tr\", null, header.map(function (head) {\n    return react_1.default.createElement(\"th\", {\n      key: head\n    }, head);\n  }));\n  var bodies = body.map(function (val, i) {\n    if (Array.isArray(val)) {\n      return react_1.default.createElement(\"tr\", {\n        key: i\n      }, val.map(function (value, i) {\n        return react_1.default.createElement(\"th\", {\n          key: i\n        }, \" \", value, \" \");\n      }));\n    }\n\n    if (val !== null && typeof val === \"object\") {\n      return react_1.default.createElement(\"tr\", {\n        key: i\n      }, Object.entries(val).map(function (_ref2, i) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n\n        if (typeof value === \"object\") {\n          console.error(\"typeof \".concat(key, \" is incorrect, only accept \").concat(acceptTypes.join(\", \"), \" \"));\n          return react_1.default.createElement(\"th\", {\n            key: i\n          });\n        }\n\n        return react_1.default.createElement(\"th\", {\n          key: i\n        }, react_1.default.createElement(react_1.default.Fragment, null, value));\n      }));\n    }\n\n    console.error(\"\\n       data structure is incorrect,  \\n       data structure type -> \\n       \\\" type data = Array<{ [key: string]: string | number | boolean }> \\n                         or \\n        type data = Array<(string | number | boolean)[]>\\\"\\n      \");\n    return null;\n  });\n  return (0, server_1.renderToString)(react_1.default.createElement(\"table\", null, react_1.default.createElement(\"tbody\", null, headers, bodies)));\n}\n\nexports.default = createTable;","map":null,"metadata":{},"sourceType":"script"}