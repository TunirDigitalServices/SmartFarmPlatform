{"ast":null,"code":"import _slicedToArray from \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\smartFarmOldVPS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\professional\\\\2K Media\\\\II.develepment\\\\smart farm\\\\smartFarmOldVPS\\\\frontend\\\\src\\\\components\\\\blog\\\\TempChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\nvar TempChart = function TempChart(_ref) {\n  var data = _ref.data,\n      title = _ref.title,\n      onSelect = _ref.onSelect;\n  var history = useHistory();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var dataTemp = [];\n    data.forEach(function (sensorData) {\n      var dateTime = moment(sensorData.time);\n      var hour = dateTime.format('MMM Do HH:00');\n      labels.push(hour);\n      dataTemp.push(parseFloat(sensorData.temperature).toFixed(2));\n    }); // Reverse both labels and dataTemp arrays\n\n    labels.reverse();\n    dataTemp.reverse();\n    var state = {\n      labels: labels,\n      datasets: [{\n        label: 'Temperature',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataTemp,\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: '#F46835'\n      }]\n    };\n    setState(state);\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n\n  var goToSelectedChart = function goToSelectedChart(title) {\n    history.push(\"/Graphs/\".concat(title));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, title, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return onSelect('TempChart');\n    },\n    squared: true,\n    theme: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24\",\n    width: \"24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.075 21.2Q4.125 21.2 3.463 20.538Q2.8 19.875 2.8 18.925V5.075Q2.8 4.125 3.463 3.462Q4.125 2.8 5.075 2.8H12V5.075H5.075Q5.075 5.075 5.075 5.075Q5.075 5.075 5.075 5.075V18.925Q5.075 18.925 5.075 18.925Q5.075 18.925 5.075 18.925H18.925Q18.925 18.925 18.925 18.925Q18.925 18.925 18.925 18.925V12H21.2V18.925Q21.2 19.875 20.538 20.538Q19.875 21.2 18.925 21.2ZM9.875 15.7 8.3 14.125 17.35 5.075H14V2.8H21.2V10H18.925V6.65Z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: 'Temperature C°',\n        fontSize: 15\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            min: 0\n          }\n        }]\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TempChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useHistory","Row","Col","Card","CardHeader","CardBody","Button","TempChart","data","title","onSelect","history","state","setState","getChartData","labels","dataTemp","forEach","sensorData","dateTime","time","hour","format","push","parseFloat","temperature","toFixed","reverse","datasets","label","lineTension","borderWidth","fill","backgroundColor","borderColor","goToSelectedChart","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","min"],"sources":["C:/professional/2K Media/II.develepment/smart farm/smartFarmOldVPS/frontend/src/components/blog/TempChart.js"],"sourcesContent":["import moment from 'moment';\nimport React , {useState,useEffect}from 'react'\nimport { Line } from  'react-chartjs-2';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\n\nconst TempChart = ({ data, title, onSelect }) => {\n  const history = useHistory();\n  const [state, setState] = useState(null);\n\n  const getChartData = () => {\n    const labels = [];\n    const dataTemp = [];\n  \n    data.forEach((sensorData) => {\n      const dateTime = moment(sensorData.time);\n      const hour = dateTime.format('MMM Do HH:00');\n  \n      labels.push(hour);\n      dataTemp.push(parseFloat(sensorData.temperature).toFixed(2));\n    });\n  \n    // Reverse both labels and dataTemp arrays\n    labels.reverse();\n    dataTemp.reverse();\n  \n    const state = {\n      labels,\n      datasets: [\n        {\n          label: 'Temperature',\n          lineTension: 0.5,\n          borderWidth: 2,\n          data: dataTemp,\n          fill: false,\n          backgroundColor: 'rgba(75,192,192,0.2)',\n          borderColor: '#F46835',\n        },\n      ],\n    };\n  \n    setState(state);\n  };\n  \n\n  useEffect(() => {\n    getChartData();\n  }, [data]);\n\n  const goToSelectedChart = (title) => {\n    history.push(`/Graphs/${title}`);\n  };\n\n  return (\n    <Card className=\"h-100\">\n      <CardHeader className=\"border-bottom d-flex justify-content-between\">\n        {title}\n        <Button onClick={() => onSelect('TempChart')} squared theme=\"light\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\">\n            <path d=\"M5.075 21.2Q4.125 21.2 3.463 20.538Q2.8 19.875 2.8 18.925V5.075Q2.8 4.125 3.463 3.462Q4.125 2.8 5.075 2.8H12V5.075H5.075Q5.075 5.075 5.075 5.075Q5.075 5.075 5.075 5.075V18.925Q5.075 18.925 5.075 18.925Q5.075 18.925 5.075 18.925H18.925Q18.925 18.925 18.925 18.925Q18.925 18.925 18.925 18.925V12H21.2V18.925Q21.2 19.875 20.538 20.538Q19.875 21.2 18.925 21.2ZM9.875 15.7 8.3 14.125 17.35 5.075H14V2.8H21.2V10H18.925V6.65Z\" />\n          </svg>\n        </Button>\n      </CardHeader>\n      <CardBody className=\"p-0\">\n        <Line\n          data={state}\n          options={{\n            title: {\n              display: true,\n              text: 'Temperature C°',\n              fontSize: 15,\n            },\n            legend: {\n              display: true,\n              position: 'bottom',\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                    min: 0,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </CardBody>\n    </Card>\n  );\n};\n\n\nexport default TempChart"],"mappings":"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"},"metadata":{},"sourceType":"module"}