{"ast":null,"code":"import _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/WaterChart.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'shards-react';\nimport moment from 'moment'; // Import moment library\n\nvar WaterChart = function WaterChart(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ruMax = _useState4[0],\n      setRuMax = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ruMin = _useState6[0],\n      setRuMin = _useState6[1];\n\n  console.log(data);\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var dataBilan = [];\n    var RuMax = [];\n    var RuMin = [];\n\n    for (var i = 0; i < data.length; i++) {\n      var hourlyBilan = data[i].bilan;\n\n      for (var j = 0; j < hourlyBilan.length; j++) {\n        var hourData = hourlyBilan[j];\n        var date = moment(data[i].dates).add(hourData.hour, 'hours').locale('en').format('MMM DD YYYY HH:mm');\n        labels.push(date);\n        dataBilan.push(parseFloat(hourData.value).toFixed(2));\n        RuMax.push(data[i].RUmax);\n        RuMin.push(data[i].RUmin);\n      }\n    }\n\n    console.log(RuMin);\n    var chartData = {\n      labels: labels,\n      datasets: [{\n        label: \"\".concat(t('water_balance')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: '#27A6B7',\n        borderWidth: 2,\n        data: dataBilan\n      }, {\n        label: \"\".concat(t('Ru max (mm)')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#32CB8D',\n        borderColor: '#32CB8D',\n        borderWidth: 1,\n        data: RuMax\n      }, {\n        label: \"\".concat(t('Ru min (mm)')),\n        fill: false,\n        lineTension: 0,\n        backgroundColor: '#e5331b',\n        borderColor: '#e5331b',\n        borderWidth: 1,\n        data: RuMin\n      }]\n    };\n    setState(chartData);\n    setRuMax(RuMax[0]); // Find max RUmax value\n\n    setRuMin(RuMin[0]); // Find min RUmin value\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n  return /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: \"\".concat(t('water_balance')),\n        fontSize: 14\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true,\n            max: ruMax > 100 ? ruMax + 10 : 100,\n            min: Math.round(ruMin - 10)\n          }\n        }],\n        xAxes: [{\n          type: 'time',\n          // Use a time scale for x-axis\n          time: {\n            unit: 'hour',\n            // Display time in hours\n            stepSize: 1,\n            // Display every hour\n            displayFormats: {\n              hour: 'MMM DD YYYY HH:mm' // Format of displayed time\n\n            }\n          }\n        }]\n      },\n      elements: {\n        point: {\n          radius: 0\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default WaterChart;","map":{"version":3,"names":["React","useState","useEffect","Line","useTranslation","Col","moment","WaterChart","data","state","setState","t","i18n","ruMax","setRuMax","ruMin","setRuMin","console","log","getChartData","labels","dataBilan","RuMax","RuMin","i","length","hourlyBilan","bilan","j","hourData","date","dates","add","hour","locale","format","push","parseFloat","value","toFixed","RUmax","RUmin","chartData","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","title","display","text","fontSize","legend","position","scales","yAxes","ticks","beginAtZero","max","min","Math","round","xAxes","type","time","unit","stepSize","displayFormats","elements","point","radius"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/Simulation/WaterChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useTranslation } from 'react-i18next';\nimport { Col } from 'shards-react';\nimport moment from 'moment'; // Import moment library\n\nconst WaterChart = ({ data }) => {\n  const [state, setState] = useState(null);\n  const { t, i18n } = useTranslation();\n  const [ruMax, setRuMax] = useState(0);\n  const [ruMin, setRuMin] = useState(0);\n  console.log(data)\n  const getChartData = () => {\n    let labels = [];\n    let dataBilan = [];\n    let RuMax = [];\n    let RuMin = [];\n\n    for (let i = 0; i < data.length; i++) {\n      const hourlyBilan = data[i].bilan;\n      for (let j = 0; j < hourlyBilan.length; j++) {\n        const hourData = hourlyBilan[j];\n        const date = moment(data[i].dates).add(hourData.hour, 'hours').locale('en').format('MMM DD YYYY HH:mm');\n        labels.push(date);\n        dataBilan.push(parseFloat(hourData.value).toFixed(2));\n        RuMax.push(data[i].RUmax);\n        RuMin.push(data[i].RUmin);\n      }\n    }\n    console.log(RuMin)\n    const chartData = {\n      labels: labels,\n      datasets: [\n        {\n          label: `${t('water_balance')}`,\n          fill: false,\n          lineTension: 0,\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: '#27A6B7',\n          borderWidth: 2,\n          data: dataBilan,\n        },\n        {\n          label: `${t('Ru max (mm)')}`,\n          fill: false,\n          lineTension: 0,\n          backgroundColor: '#32CB8D',\n          borderColor: '#32CB8D',\n          borderWidth: 1,\n          data: RuMax,\n        },\n        {\n          label: `${t('Ru min (mm)')}`,\n          fill: false,\n          lineTension: 0,\n          backgroundColor: '#e5331b',\n          borderColor: '#e5331b',\n          borderWidth: 1,\n          data: RuMin,\n        },\n      ],\n    };\n    setState(chartData);\n    setRuMax(RuMax[0]); // Find max RUmax value\n    setRuMin(RuMin[0]); // Find min RUmin value\n  };\n\n  useEffect(() => {\n    getChartData();\n  }, [data]);\n\n  return (\n    <Line\n      data={state}\n      options={{\n        title: {\n          display: true,\n          text: `${t('water_balance')}`,\n          fontSize: 14,\n        },\n        legend: {\n          display: true,\n          position: 'bottom',\n        },\n        scales: {\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                max: ruMax > 100 ? ruMax + 10 : 100,\n                min: Math.round(ruMin - 10),\n              },\n            },\n          ],\n          xAxes: [\n            {\n              type: 'time', // Use a time scale for x-axis\n              time: {\n                unit: 'hour', // Display time in hours\n                stepSize: 1, // Display every hour\n                displayFormats: {\n                  hour: 'MMM DD YYYY HH:mm', // Format of displayed time\n                },\n              },\n            },\n          ],\n        },\n        elements: {\n          point:{\n              radius: 0\n          }\n      }\n      }}\n    />\n  );\n};\n\nexport default WaterChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}