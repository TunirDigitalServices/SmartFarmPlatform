{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\src\\\\admin\\\\FieldsList.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport api from '../api/api';\nimport { Container, Card, Row, Col, CardHeader, Nav, NavItem, NavLink, CardBody, Button, Form, FormInput, FormSelect, FormGroup } from 'shards-react';\nimport PageTitle from '../components/common/PageTitle';\nimport { useTranslation } from \"react-i18next\";\nimport FieldList from '../views/FieldList';\nimport CropList from '../views/CropList';\nimport ZoneList from '../views/ZoneList';\nimport IrrigationList from '../views/IrrigationList';\nimport swal from 'sweetalert';\nimport DripForm from '../components/FieldSettingForms/dripForm';\nimport PivotForm from '../components/FieldSettingForms/pivotForm';\nimport LateralForm from '../components/FieldSettingForms/lateralForm';\nimport CompositeSoil from '../components/FieldSettingForms/compositeSoilForm';\nimport LeafletMap from '../views/map';\n\nvar FieldsList = function FieldsList() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      coords = _useState4[0],\n      setCoords = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      layerType = _useState6[0],\n      setLayerType = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      layer = _useState8[0],\n      setLayer = _useState8[1];\n\n  var _useState9 = useState({\n    draw: {\n      polygon: false,\n      circle: false,\n      rectangle: false,\n      polyline: true,\n      marker: true,\n      circlemarker: false\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      configMap = _useState10[0],\n      setConfigMap = _useState10[1];\n\n  var params = useParams();\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fields = _useState12[0],\n      setFields = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listSoil = _useState14[0],\n      setListSoil = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      listCrop = _useState16[0],\n      setListCrop = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      allVarieties = _useState18[0],\n      setAllVarieties = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      listIrrigations = _useState20[0],\n      setListIrrigations = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      crops = _useState22[0],\n      setCrops = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      zones = _useState24[0],\n      setZones = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      irrigations = _useState26[0],\n      setIrrig = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      farms = _useState28[0],\n      setFarms = _useState28[1];\n\n  var Uid = params.uid;\n\n  var _useState29 = useState('field'),\n      _useState30 = _slicedToArray(_useState29, 2),\n      elemValue = _useState30[0],\n      setView = _useState30[1];\n\n  var _useState31 = useState({\n    name: \"\",\n    farm_uid: \"\",\n    description: \"\",\n    Latitude: \"\",\n    Longitude: \"\"\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      dataField = _useState32[0],\n      setDataField = _useState32[1];\n\n  var _useState33 = useState({\n    farmError: \"\",\n    nameError: \"\"\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      errors = _useState34[0],\n      setErrors = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      checked = _useState36[0],\n      setChecked = _useState36[1];\n\n  var _useState37 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    growingDate: \"\",\n    rootDepth: \"\",\n    ecartInter: \"\",\n    ecartIntra: \"\",\n    density: \"\",\n    ruPratique: \"\",\n    kcList: []\n  }),\n      _useState38 = _slicedToArray(_useState37, 2),\n      cropData = _useState38[0],\n      setCropData = _useState38[1];\n\n  var _useState39 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    zoneName: \"\",\n    source: \"1\",\n    soilProperty: \"\",\n    soilType: \"\",\n    RUmax: \"\",\n    effPluie: \"\"\n  }),\n      _useState40 = _slicedToArray(_useState39, 2),\n      soilData = _useState40[0],\n      setSoilData = _useState40[1];\n\n  var _useState41 = useState(true),\n      _useState42 = _slicedToArray(_useState41, 2),\n      isStandardSoil = _useState42[0],\n      setSoilType = _useState42[1];\n\n  var _useState43 = useState({\n    irrigType: \"\",\n    zone_uid: \"\",\n    crop_uid: \"\",\n    flowrate: \"\",\n    irrigated_already: \"\",\n    name: \"\",\n    pivot_shape: \"\",\n    irrigation_syst: \"\",\n    pivot_length: \"\",\n    pivot_coord: \"\",\n    full_runtime: \"\",\n    lateral: \"\",\n    drippers: \"\",\n    effIrrig: \"\",\n    pumpFlow: \"\",\n    linesNumber: \"\"\n  }),\n      _useState44 = _slicedToArray(_useState43, 2),\n      irrigData = _useState44[0],\n      setIrrigData = _useState44[1];\n\n  var getFieldsByUser = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"/admin/user/\".concat(Uid, \"/fields\");\n              _context.next = 3;\n              return api.get(url).then(function (response) {\n                if (response.data.type === \"success\") {\n                  var FarmsData = response.data.farms;\n                  setFarms(FarmsData);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFieldsByUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getFields = function getFields() {\n    var Fields = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (field) {\n          Fields.push({\n            title: field.name,\n            status: field.status,\n            description: field.description,\n            Uid: field.uid,\n            farm_id: field.farm_id,\n            Id: field.id\n          });\n        });\n      }\n    });\n    setFields(Fields);\n  };\n\n  var getZones = function getZones() {\n    var Zones = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (itemZone) {\n          var zones = itemZone.zones;\n\n          if (zones) {\n            zones.map(function (i) {\n              Zones.push({\n                Id: i.id,\n                name: i.name,\n                Uid: i.uid,\n                source: i.source,\n                description: i.description,\n                field_id: i.field_id\n              });\n            });\n          }\n\n          ;\n        });\n      }\n\n      ;\n    });\n    setZones(Zones);\n  };\n\n  var getCrops = function getCrops() {\n    var Crops = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (itemCrop) {\n          var crops = itemCrop.crops;\n\n          if (crops) {\n            crops.map(function (i) {\n              Crops.push({\n                type: i.type,\n                Uid: i.uid,\n                irrigations: i.irrigations,\n                Id: i.id,\n                field_id: i.field_id,\n                zone_id: i.zone_id,\n                croptype_id: i.croptype_id,\n                croptype: i.croptypes\n              });\n            });\n          }\n\n          ;\n        });\n      }\n\n      ;\n    });\n    setCrops(Crops);\n  };\n\n  var getIrrig = function getIrrig() {\n    var Irrigations = [];\n    farms.map(function (item) {\n      var fields = item.fields;\n\n      if (fields) {\n        fields.map(function (itemCrop) {\n          var crops = itemCrop.crops;\n\n          if (crops) {\n            crops.map(function (i) {\n              var irrigations = i.irrigations;\n\n              if (irrigations) {\n                irrigations.map(function (itemIrrig) {\n                  Irrigations.push({\n                    type: itemIrrig.type,\n                    address: itemIrrig.address,\n                    pivotShape: itemIrrig.pivot_shape,\n                    flowrate: itemIrrig.flowrate,\n                    lateral: itemIrrig.lateral,\n                    Uid: itemIrrig.uid,\n                    crop_id: itemIrrig.crop_id,\n                    zone_id: itemIrrig.zone_id\n                  });\n                });\n              }\n            });\n          }\n\n          ;\n        });\n      }\n\n      ;\n    });\n    setIrrig(Irrigations);\n  };\n\n  useEffect(function () {\n    getFieldsByUser();\n\n    var getCropType = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setListSoil(listSoils);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var getIrrigations = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return api.get('/irrigations/get-irrigations').then(function (response) {\n                  if (response) {\n                    var dataIrrig = response.data.Irrigations;\n                    setListIrrigations(dataIrrig);\n                  }\n                });\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 5]]);\n      }));\n\n      return function getIrrigations() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var getVarieties = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return api.get('/varieties/get-varieties').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listVarieties = response.data.Varieties;\n                    setAllVarieties(listVarieties);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context5.next = 8;\n                break;\n\n              case 5:\n                _context5.prev = 5;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.log(_context5.t0);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n\n      return function getVarieties() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getIrrigations();\n    getSoils();\n    getCropType();\n  }, []);\n  useEffect(function () {\n    getFields();\n    getCrops();\n    getZones();\n    getIrrig();\n  }, [farms]);\n\n  var goProfile = function goProfile() {\n    history.push(\"/admin/user/\".concat(Uid));\n    window.location.reload();\n  };\n\n  var goFarms = function goFarms() {\n    history.push(\"/admin/user/\".concat(Uid, \"/farms\"));\n    window.location.reload();\n  };\n\n  var goSensor = function goSensor() {\n    history.push(\"/admin/user/\".concat(Uid, \"/sensors\"));\n    window.location.reload();\n  };\n\n  var handleName = function handleName(e) {};\n\n  var handleUidFarm = function handleUidFarm(e) {\n    setDataField({\n      farm_uid: e.target.value\n    });\n  };\n\n  var handleDescription = function handleDescription(e) {\n    setDataField({\n      description: e.target.value\n    });\n  };\n\n  var validate = function validate() {\n    var nameError = '';\n    var farmError = '';\n\n    if (!dataField.name) {\n      nameError = 'not_empty';\n      setErrors(_objectSpread({}, errors, {\n        nameError: nameError\n      }));\n      return false;\n    } else {\n      setErrors({\n        nameError: \"\"\n      });\n    }\n\n    if (dataField.farm_uid == '') {\n      farmError = 'not_empty';\n      setErrors({\n        farmError: farmError\n      });\n      return false;\n    }\n\n    if (dataField.farm_uid) {\n      setErrors({\n        farmError: \"\"\n      });\n    }\n\n    return true;\n  };\n\n  var _onCreated = function _onCreated(e) {\n    var type = e.layerType;\n    setLayerType(type);\n    var layer = e.layer;\n\n    if (type === \"marker\") {\n      layer.bindPopup('Field Name');\n    } else {\n      console.log(\"_onCreated: something else created:\", type, e);\n    }\n\n    if (type === \"polyline\") {\n      var _coords = layer._latlngs;\n\n      var Coordinates = _coords.map(function (coord) {\n        return {\n          Lat: coord.lat,\n          Long: coord.lng\n        };\n      });\n\n      if (Coordinates) setLayer(JSON.stringify(Coordinates));\n    } else {\n      setCoords({\n        Latitude: layer.getLatLng().lat,\n        Longitude: layer.getLatLng().lng\n      });\n    }\n  };\n\n  var addField = function addField() {\n    var data = {\n      name: dataField.name,\n      description: dataField.description,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid,\n      Latitude: coords.Latitude,\n      Longitude: coords.Longitude\n    };\n    api.post('/field/add-field', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('field_added')), {\n          icon: \"success\"\n        });\n        getFieldsByUser();\n      }\n    }).catch(function () {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault(); // const isValid = validate();\n    // if (isValid) {\n\n    addField(); // }\n  };\n\n  var resetForm = function resetForm() {\n    setDataField({\n      name: \"\",\n      description: \"\",\n      farm_uid: \"\"\n    });\n  };\n\n  var cropHandleSubmit = function cropHandleSubmit(event) {\n    event.preventDefault();\n    addCrop();\n  };\n\n  var addCrop = function addCrop() {\n    var data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction: cropData.ruPratique,\n      density: cropData.density,\n      ecart_inter: cropData.ecartInter,\n      ecart_intra: cropData.ecartIntra,\n      growingDate: cropData.growingDate\n    };\n    api.post('/crop/add-crop', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('crop_added')), {\n          icon: \"success\"\n        });\n        getFieldsByUser();\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var zoneHandleSubmit = function zoneHandleSubmit(event) {\n    event.preventDefault();\n    addZone();\n  };\n\n  var addZone = function addZone() {\n    var data = {\n      soilProperty: soilData.soilProperty,\n      field_uid: soilData.field_uid,\n      zone_uid: soilData.zone_uid,\n      name: soilData.zoneName,\n      source: soilData.source,\n      RUmax: soilData.RUmax,\n      effPluie: soilData.effPluie\n    };\n    api.post('/zone/add-zone', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('soil_added')), {\n          icon: \"success\"\n        });\n        getFieldsByUser();\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var IrrigHandleSubmit = function IrrigHandleSubmit(event) {\n    event.preventDefault();\n    addIrrigation();\n  };\n\n  var addIrrigation = function addIrrigation() {\n    var data = {\n      type: irrigData.irrigType,\n      zone_uid: irrigData.zone_uid,\n      crop_uid: irrigData.crop_uid,\n      flowrate: irrigData.flowrate,\n      irrigated_already: irrigData.irrigated_already,\n      name: irrigData.name,\n      pivot_shape: irrigData.pivot_shape,\n      irrigation_syst: irrigData.irrigation_syst,\n      pivot_length: irrigData.pivot_length,\n      pivot_coord: irrigData.pivot_coord,\n      full_runtime: irrigData.full_runtime,\n      lateral: irrigData.lateral,\n      drippers: irrigData.drippers,\n      effIrrig: irrigData.effIrrig,\n      pumpFlow: irrigData.pumpFlow,\n      lines_number: irrigData.linesNumber\n    };\n    api.post('/irrigation/add-irrigation', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('irrigation_added')), {\n          icon: \"success\"\n        });\n        getFieldsByUser();\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = listSoil.find(function (soil) {\n      return soil.soil == e.target.value;\n    });\n\n    if (typeof soilType !== \"undefined\") {\n      setSoilData(_objectSpread({}, soilData, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  };\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault(); // props.handleCropType(e)\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        ruPratique: crop.practical_fraction\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        days: crop.total\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        rootDepth: crop.root_max\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', '')\n      }));\n    }\n\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        rootDepth: crop.root_max,\n        ruPratique: crop.practical_fraction,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.id == e.target.value;\n    });\n\n    if (variety) {\n      setCropData(_objectSpread({}, cropData, {\n        variety: variety.id\n      }));\n    }\n  };\n\n  var _useState45 = useState({\n    clay: \"\",\n    sand: \"\",\n    silt: \"\"\n  }),\n      _useState46 = _slicedToArray(_useState45, 2),\n      soilCompos = _useState46[0],\n      setSoilCompos = _useState46[1];\n\n  var soilTypeForm = function soilTypeForm() {\n    if (isStandardSoil == true) return null;else {\n      return /*#__PURE__*/React.createElement(CompositeSoil, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  var handleIrrigPick = function handleIrrigPick(e) {\n    e.preventDefault();\n    var irrigation = listIrrigations.find(function (irrigation) {\n      return irrigation.irrigation == e.target.value;\n    }); //  setIM(irrigation.irrigation)\n\n    setIrrigData({\n      irrigType: irrigation.irrigation\n    }); // props.handleEffIrrig(irrigation.effIrrig)\n\n    if (irrigation) {\n      setIrrigData(_objectSpread({}, irrigData, {\n        irrigType: irrigation.irrigation,\n        effIrrig: irrigation.effIrrig\n      }));\n    }\n  };\n\n  var irrigationMethodForm = function irrigationMethodForm() {\n    switch (irrigData.irrigType) {\n      case \"\".concat(t('Pivot')):\n        return /*#__PURE__*/React.createElement(PivotForm, {\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          handleIrrgSyst: function handleIrrgSyst(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigation_syst: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handlePivotCoord: function handlePivotCoord(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_coord: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handlePivotShape: function handlePivotShape(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_shape: e.target.value\n            }));\n          },\n          irrigation_syst: irrigData.irrigation_syst,\n          pivot_coord: irrigData.pivot_coord,\n          pivot_length: irrigData.pivot_length,\n          pivot_shape: irrigData.pivot_shape,\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 22\n          }\n        });\n\n      case \"\".concat(t('Lateral')):\n        return /*#__PURE__*/React.createElement(LateralForm, {\n          handleLateral: function handleLateral(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              lateral: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handleName: function handleName(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              name: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          pivot_length: irrigData.pivot_length,\n          lateral: irrigData.lateral,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 22\n          }\n        });\n\n      case \"\".concat(t('None')):\n        return null;\n\n      default:\n        return /*#__PURE__*/React.createElement(DripForm, {\n          handleDrippers: function handleDrippers(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              drippers: e.target.value\n            }));\n          },\n          handleIrrigAlrd: function handleIrrigAlrd(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          flowrate: irrigData.flowrate,\n          drippers: irrigData.drippers,\n          irrigated_already: irrigData.irrigated_already,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 19\n          }\n        });\n    }\n  };\n\n  useEffect(function () {\n    if (cropData.ecartInter !== \"\" && cropData.ecartIntra !== \"\") {\n      var formule = 10000 / (Number(cropData.ecartInter) * Number(cropData.ecartIntra));\n      setCropData(_objectSpread({}, cropData, {\n        density: formule\n      }));\n    }\n  }, [cropData.ecartInter, cropData.ecartIntra]);\n\n  var renderAddSetup = function renderAddSetup() {\n    switch (elemValue) {\n      case 'field':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            width: \"auto\",\n            float: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 25\n          }\n        }, t(\"field_setup\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: handleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 25\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: resetForm // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 25\n          }\n        }), t('cancel')))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 29\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field'),\n          className: errors.nameError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 27\n          }\n        }, errors.nameError)), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 29\n          }\n        }, t('name_farm')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid,\n          className: errors.farmError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              farm_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 31\n          }\n        }, t('select_farm')), \";\", farms.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 40\n            }\n          }, item.name);\n        }))))))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_fields'),\n          subtitle: t('my_fields'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(FieldList, {\n          Fields: getFieldsByUser,\n          FieldsList: fields,\n          Uid: Uid,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 23\n          }\n        })))));\n\n      case 'soil':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            position: \"relative\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 23\n          }\n        }, t('soil_info')), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: zoneHandleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 27\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: \"\" // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 27\n          }\n        }), t('cancel'))))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 15\n          }\n        }, t('soil_zone')), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilData.zoneName,\n          placeholder: t('soil_zone'),\n          required: true,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              zoneName: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilData.field_uid,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('name_field'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 17\n          }\n        }, t('select_field')), fields.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 947,\n              columnNumber: 26\n            }\n          }, item.title);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 15\n          }\n        }, t('source')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilData.source,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              source: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 17\n          }\n        }, \"Manual\"))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 963,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 15\n          }\n        }, t('soil_prop')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: function onChange(evt) {\n            setSoilType(!isStandardSoil);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 17\n          }\n        }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n          selected: !isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 17\n          }\n        }, \"Composite\"))), soilTypeForm()), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 13\n          }\n        }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilData.soilType,\n          onChange: handleSoilPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 15\n          }\n        }, t('select_soil')), listSoil.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.soil,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 28\n            }\n          }, item.soil);\n        })))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 17\n          }\n        }, t('efficacité_pluie'), \" (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilData.effPluie,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: t('efficacité_pluie'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 17\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilData.RUmax,\n          onChange: function onChange(e) {\n            return setSoilData(_objectSpread({}, soilData, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 17\n          }\n        }))))))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_zones'),\n          subtitle: t('my_zones'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(ZoneList, {\n          zonesList: zones,\n          Zones: getFieldsByUser,\n          Fields: fields // state={this.dataChange}\n          ,\n          listSoils: listSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 23\n          }\n        })))));\n\n      case 'crop':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1045,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 23\n          }\n        }, t('crop_info')), \" \", /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: cropHandleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 27\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: \"\" // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 27\n          }\n        }), t('cancel'))))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1089,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 13\n          }\n        }, t('crop_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.zone_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              zone_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1094,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1099,\n            columnNumber: 15\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1103,\n              columnNumber: 29\n            }\n          }, soil.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 13\n          }\n        }, t('crop_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.field_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1112,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 15\n          }\n        }, t('select_field')), fields.map(function (field) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: field.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 34\n            }\n          }, field.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1127,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1128,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1129,\n            columnNumber: 13\n          }\n        }, t('crop_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCropPick,\n          placeholder: t('crop_type'),\n          value: cropData.cropType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1130,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 15\n          }\n        }, \"Select Crop\"), listCrop.map(function (crop) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 21\n            }\n          }, crop.crop);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1146,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1147,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 15\n          }\n        }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.variety,\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 17\n          }\n        }, t('crop_variety')), cropData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.varietyId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 27\n            }\n          }, variety.variety);\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"Autre\",\n          id: \"check\",\n          onClick: function onClick() {\n            return setChecked(!checked);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 15\n          }\n        }), \" \", t('other'), checked ? /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.variety || \"\",\n          placeholder: t('crop_variety'),\n          id: \"cropVariety\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              variety: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 23\n          }\n        }) : null))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1179,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1180,\n            columnNumber: 15\n          }\n        }, t('depth'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.rootDepth,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              rootDepth: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('depth'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1189,\n            columnNumber: 15\n          }\n        }, t('Days')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.days,\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: t('Days'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1197,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 15\n          }\n        }, t('planting_date')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.growingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              growingDate: e.target.value\n            }));\n          },\n          id: \"planting_date\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1199,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          hidden: true,\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 15\n          }\n        }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.plantingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1212,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1213,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 17\n          }\n        }, t('fraction_pratique'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ruPratique,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: t('fraction_pratique'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1215,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1222,\n            columnNumber: 17\n          }\n        }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartInter,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartInter: e.target.value\n            }));\n          },\n          id: \"ecartInter\",\n          placeholder: t('ecart_inter'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1229,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1230,\n            columnNumber: 17\n          }\n        }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartIntra,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartIntra: e.target.value\n            }));\n          },\n          id: \"ecartIntra\",\n          placeholder: t('ecart_intra'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1231,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1238,\n            columnNumber: 17\n          }\n        }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.density,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              density: e.target.value\n            }));\n          },\n          id: \"densit\\xE9\",\n          placeholder: t('densité'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 17\n          }\n        }))))))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_crops'),\n          subtitle: t('my_crops'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CropList, {\n          cropsList: crops,\n          Crops: getFieldsByUser,\n          Fields: fields,\n          Zones: zones,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1258,\n            columnNumber: 23\n          }\n        })))));\n\n      case 'irrig':\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1273,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1275,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1282,\n            columnNumber: 23\n          }\n        }, t('Irrigation_info')), \" \", /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: IrrigHandleSubmit,\n          theme: \"info\",\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 27\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: \"\" // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1303,\n            columnNumber: 27\n          }\n        }), t('cancel'))))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1309,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"12\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1317,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1318,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1319,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1320,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 35\n          }\n        }, t('irrigation_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.zone_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              zone_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1326,\n            columnNumber: 37\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 53\n            }\n          }, soil.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1336,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 35\n          }\n        }, t('irrigation_crop')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.crop_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              crop_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1338,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 37\n          }\n        }, t('select_crop')), crops.map(function (crop) {\n          var cropType = \"\";\n          listCrop.map(function (croptype) {\n            if (croptype.id === crop.croptype_id) {\n              cropType = croptype.crop;\n            }\n          });\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1351,\n              columnNumber: 53\n            }\n          }, cropType);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 35\n          }\n        }, t('Irrigation_system_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.irrigType,\n          onChange: function onChange(evt) {\n            handleIrrigPick(evt);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1360,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          disabled: true,\n          selected: true,\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1366,\n            columnNumber: 37\n          }\n        }, t('select_irriagtion')), listIrrigations.map(function (item) {\n          // if (item.value === irrigationMethod) {\n          //   return <option value={item.value} selected={true}>{item.type}</option>;\n          // } else {\n          //   return <option value={item.value} selected={false}>{item.type}</option>;\n          // }\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.irrigation,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 46\n            }\n          }, t(\"\".concat(item.irrigation)));\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1378,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 39\n          }\n        }, t('efficience_irrigation'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.effIrrig,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: t('efficience_irrigation'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 39\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1388,\n            columnNumber: 37\n          }\n        }, t('nbr_ligne')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.linesNumber,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              linesNumber: e.target.value\n            }));\n          },\n          id: \"nbr_ligne\",\n          placeholder: t('nbr_ligne'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1389,\n            columnNumber: 37\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1395,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1396,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 39\n          }\n        }, t('debit_reseau'), \" (l/s) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.pumpFlow,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpFlow: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('debit_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1398,\n            columnNumber: 39\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1404,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1405,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1406,\n            columnNumber: 39\n          }\n        }, t('irrigated_already'), \"(h) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.irrigated_already,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('irrigated_already'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1407,\n            columnNumber: 39\n          }\n        }))), irrigationMethodForm())))), /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_irrigations'),\n          subtitle: t('my_irrigations'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Row, {\n          className: \"px-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(IrrigationList, {\n          irrigationsList: irrigations,\n          Irrigations: getFieldsByUser,\n          Crops: crops,\n          Zones: zones,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 23\n          }\n        })))));\n\n      default:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          small: true,\n          className: \"h-100\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CardHeader, {\n          className: \"border-bottom\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-start\",\n            width: \"auto\",\n            float: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"h6\", {\n          className: \"m-0\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1454,\n            columnNumber: 25\n          }\n        }, t(\"field_setup\")), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"flex-end\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1457,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: handleSubmit // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-success\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1463,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-check mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1468,\n            columnNumber: 25\n          }\n        }), t('save')), /*#__PURE__*/React.createElement(Button, {\n          onClick: resetForm // theme=\"success\"\n          ,\n          className: \"mb-2 mr-1 btn btn-danger\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          class: \"fa fa-times mx-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1476,\n            columnNumber: 25\n          }\n        }), t('cancel')))), /*#__PURE__*/React.createElement(CardBody, {\n          className: \"pt-0\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          noGutters: true,\n          className: \"page-header py-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1482,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          sm: \"4\",\n          title: t('my_fields'),\n          subtitle: t('my_fields'),\n          className: \"text-sm-left\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: \"20px\",\n            flexWrap: \"wrap\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          sm: \"12\",\n          md: \"6\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1510,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Form, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1511,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1512,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1513,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1514,\n            columnNumber: 29\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field'),\n          className: errors.nameError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: handleName,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1515,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          style: {\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 27\n          }\n        }, errors.nameError)), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"6\",\n          sm: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1526,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1527,\n            columnNumber: 29\n          }\n        }, t('name_farm')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid,\n          className: errors.farmError == '' ? '' : 'is-invalid',\n          required: true,\n          onChange: handleUidFarm,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1528,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1534,\n            columnNumber: 31\n          }\n        }, t('select_farm')), \";\", farms.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1536,\n              columnNumber: 40\n            }\n          }, item.name);\n        }))))))))));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1567,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    justified: true,\n    pills: true,\n    className: \"bg-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1568,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1569,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1570,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: goProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1571,\n      columnNumber: 19\n    }\n  }, t('profile')))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1574,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1575,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: goFarms,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1576,\n      columnNumber: 19\n    }\n  }, t('farms')))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1579,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    active: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1580,\n      columnNumber: 17\n    }\n  }, t('fields'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1584,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1585,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: goSensor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1586,\n      columnNumber: 21\n    }\n  }, t('sensors'))))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1590,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    subtitle: t('fields'),\n    md: \"12\",\n    className: \"ml-sm-auto mr-sm-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1591,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \" d-flex justify-content-center align-items-center py-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1594,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    style: {\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1596,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"field\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"field\" ? \"bg-info rounded text-dark \" : 'rounded text-dark '),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1597,\n      columnNumber: 21\n    }\n  }, t('field_setup'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1601,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"soil\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"soil\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1602,\n      columnNumber: 21\n    }\n  }, t('soil_info'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1606,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"crop\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"crop\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1607,\n      columnNumber: 21\n    }\n  }, t('crop_info'))), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1609,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    id: \"irrig\",\n    onClick: function onClick(e) {\n      return setView(e.target.id);\n    },\n    className: \"\".concat(elemValue === \"irrig\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'),\n    href: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1610,\n      columnNumber: 21\n    }\n  }, t('Irrigation_info')))))), renderAddSetup()));\n};\n\nexport default FieldsList;","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","useHistory","api","Container","Card","Row","Col","CardHeader","Nav","NavItem","NavLink","CardBody","Button","Form","FormInput","FormSelect","FormGroup","PageTitle","useTranslation","FieldList","CropList","ZoneList","IrrigationList","swal","DripForm","PivotForm","LateralForm","CompositeSoil","LeafletMap","FieldsList","t","i18n","history","toggle","setToggle","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","layerType","setLayerType","layer","setLayer","draw","polygon","circle","rectangle","polyline","marker","circlemarker","edit","delete","configMap","setConfigMap","params","fields","setFields","listSoil","setListSoil","listCrop","setListCrop","allVarieties","setAllVarieties","listIrrigations","setListIrrigations","crops","setCrops","zones","setZones","irrigations","setIrrig","farms","setFarms","Uid","uid","elemValue","setView","name","farm_uid","description","dataField","setDataField","farmError","nameError","errors","setErrors","checked","setChecked","field_uid","zone_uid","cropType","variety","cropVariety","Profondeur","days","plantingDate","growingDate","rootDepth","ecartInter","ecartIntra","density","ruPratique","kcList","cropData","setCropData","zoneName","source","soilProperty","soilType","RUmax","effPluie","soilData","setSoilData","isStandardSoil","setSoilType","irrigType","crop_uid","flowrate","irrigated_already","pivot_shape","irrigation_syst","pivot_length","pivot_coord","full_runtime","lateral","drippers","effIrrig","pumpFlow","linesNumber","irrigData","setIrrigData","getFieldsByUser","url","get","then","response","data","type","FarmsData","catch","error","console","log","getFields","Fields","map","item","field","push","title","status","farm_id","Id","id","getZones","Zones","itemZone","i","field_id","getCrops","Crops","itemCrop","zone_id","croptype_id","croptype","croptypes","getIrrig","Irrigations","itemIrrig","address","pivotShape","crop_id","getCropType","dataCrop","Croptype","getSoils","listSoils","Soils","getIrrigations","dataIrrig","getVarieties","listVarieties","Varieties","goProfile","window","location","reload","goFarms","goSensor","handleName","e","handleUidFarm","target","value","handleDescription","validate","_onCreated","bindPopup","_latlngs","Coordinates","coord","Lat","lat","Long","lng","JSON","stringify","getLatLng","addField","farmName","post","res","icon","handleSubmit","event","preventDefault","resetForm","cropHandleSubmit","addCrop","previous_type","crop_variety_id","practical_fraction","ecart_inter","ecart_intra","err","zoneHandleSubmit","addZone","IrrigHandleSubmit","addIrrigation","lines_number","handleSoilPick","find","soil","ru","rain_eff","handleCropPick","crop","total","root_max","plant_date","slice","replace","varieties","varietyId","crop_variety","all_kc","handleVarietyPick","clay","sand","silt","soilCompos","setSoilCompos","soilTypeForm","handleIrrigPick","irrigation","irrigationMethodForm","formule","Number","renderAddSetup","display","justifyContent","width","float","textAlign","marginTop","flexWrap","margin","index","position","alignItems","evt","paddingBottom"],"sources":["C:/Users/HP/Desktop/SmartFarm app/backoffice/frontend/src/admin/FieldsList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link, useParams, useHistory } from 'react-router-dom'\r\nimport api from '../api/api'\r\nimport { Container, Card, Row,Col, CardHeader ,Nav,NavItem,NavLink ,CardBody,Button,Form,FormInput,FormSelect,FormGroup} from 'shards-react'\r\nimport PageTitle from '../components/common/PageTitle'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FieldList from '../views/FieldList'\r\nimport CropList from '../views/CropList'\r\nimport ZoneList from '../views/ZoneList'\r\nimport IrrigationList from '../views/IrrigationList'\r\nimport swal from 'sweetalert'\r\nimport DripForm from '../components/FieldSettingForms/dripForm'\r\nimport PivotForm from '../components/FieldSettingForms/pivotForm'\r\nimport LateralForm from '../components/FieldSettingForms/lateralForm'\r\nimport CompositeSoil from '../components/FieldSettingForms/compositeSoilForm'\r\nimport LeafletMap from '../views/map'\r\n\r\n\r\nconst FieldsList = () => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const history = useHistory()\r\n    const [toggle, setToggle] = useState(false);\r\n    const [coords,setCoords] = useState({\r\n      Latitude : \"\",\r\n      Longitude : \"\",\r\n      zoom: \"\",\r\n      center: [],\r\n      fromAction : false\r\n    })\r\n    const [layerType,setLayerType] = useState('')\r\n    const [layer,setLayer] = useState('')\r\n    const [configMap,setConfigMap] = useState({\r\n      draw : {\r\n        polygon: false,\r\n        circle: false,\r\n        rectangle: false,\r\n        polyline: true,\r\n        marker:true,\r\n        circlemarker: false,\r\n      },\r\n      edit : {\r\n        delete: false,\r\n        edit: false\r\n      }\r\n    })\r\n    const params = useParams();\r\n    const [fields, setFields] = useState([]);\r\n    const [listSoil,setListSoil] = useState([])\r\n    const [listCrop,setListCrop] = useState([])\r\n    const [allVarieties,setAllVarieties] = useState([])\r\n    const [listIrrigations,setListIrrigations] = useState([])\r\n\r\n    const [crops, setCrops] = useState([]);\r\n    const [zones, setZones] = useState([]);\r\n    const [irrigations, setIrrig] = useState([]);\r\n    const [farms, setFarms] = useState([])\r\n    let Uid = params.uid;\r\n    const [elemValue,setView] = useState('field')\r\n    const [dataField,setDataField] = useState({\r\n        name : \"\",\r\n        farm_uid :\"\",\r\n        description :\"\",\r\n        Latitude:\"\",\r\n        Longitude:\"\"\r\n    })\r\n    const [errors,setErrors] = useState({\r\n        farmError :\"\",\r\n        nameError :\"\"\r\n    })\r\n\r\n    const [checked,setChecked] = useState(false)\r\n    const [cropData,setCropData] = useState({\r\n      field_uid :\"\",\r\n      zone_uid :\"\",\r\n      cropType:\"\",\r\n      variety: '',\r\n      cropVariety: [],\r\n      Profondeur: \"\",\r\n      days: \"\",\r\n      plantingDate: \"\",\r\n      growingDate:\"\",\r\n      rootDepth:\"\",\r\n      ecartInter :\"\",\r\n      ecartIntra :\"\",\r\n      density :\"\",\r\n      ruPratique :\"\",\r\n      kcList: []\r\n    })  \r\n    const [soilData,setSoilData] = useState({\r\n      field_uid :\"\",\r\n      zone_uid :\"\",\r\n      zoneName:\"\",\r\n      source :\"1\",\r\n      soilProperty:\"\",\r\n      soilType :\"\",\r\n      RUmax: \"\",\r\n      effPluie: \"\",\r\n    })\r\n    const [isStandardSoil, setSoilType] = useState(true);\r\n\r\n    const [irrigData,setIrrigData] = useState({\r\n       irrigType : \"\",\r\n          zone_uid: \"\",\r\n          crop_uid: \"\",\r\n          flowrate: \"\",\r\n          irrigated_already: \"\" ,\r\n          name: \"\",\r\n          pivot_shape:\"\",\r\n          irrigation_syst:\"\", \r\n          pivot_length: \"\",\r\n          pivot_coord: \"\",\r\n          full_runtime: \"\",\r\n          lateral:\"\",\r\n          drippers : \"\",\r\n          effIrrig: \"\",\r\n          pumpFlow : \"\",\r\n          linesNumber:\"\"\r\n    })\r\n\r\n\r\n    const getFieldsByUser = async () => {\r\n        let url = `/admin/user/${Uid}/fields`;\r\n        await api.get(url)\r\n            .then(response => {\r\n                if (response.data.type === \"success\") {\r\n                    let FarmsData = response.data.farms\r\n                    setFarms(FarmsData);\r\n                }\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    const getFields = () => {\r\n        let Fields = [];\r\n        farms.map(item => {\r\n            let fields = item.fields;\r\n            if (fields) {\r\n                fields.map(field => {\r\n                    Fields.push({\r\n                        title: field.name,\r\n                        status: field.status,\r\n                        description: field.description,\r\n                        Uid: field.uid,\r\n                        farm_id: field.farm_id,\r\n                        Id: field.id\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        setFields(Fields)\r\n    }\r\n\r\n    const getZones = () => {\r\n        let Zones = [];\r\n        farms.map(item => {\r\n            let fields = item.fields;\r\n            if (fields) {\r\n                fields.map(itemZone => {\r\n                    let zones = itemZone.zones;\r\n                    if (zones) {\r\n                        zones.map(i => {\r\n                            Zones.push({\r\n                                Id: i.id,\r\n                                name: i.name,\r\n                                Uid: i.uid,\r\n                                source: i.source,\r\n                                description: i.description,\r\n                                field_id: i.field_id\r\n\r\n                            });\r\n                        });\r\n                    };\r\n                });\r\n            };\r\n        })\r\n        setZones(Zones)\r\n    }\r\n\r\n    const getCrops = () => {\r\n        let Crops = [];\r\n        farms.map(item => {\r\n            let fields = item.fields;\r\n            if (fields) {\r\n                fields.map(itemCrop => {\r\n                    let crops = itemCrop.crops;\r\n                    if (crops) {\r\n                        crops.map(i => {\r\n                            Crops.push({\r\n                                type: i.type,\r\n                                Uid: i.uid,\r\n                                irrigations: i.irrigations,\r\n                                Id: i.id,\r\n                                field_id: i.field_id,\r\n                                zone_id: i.zone_id,\r\n                                croptype_id :i.croptype_id,\r\n                                croptype : i.croptypes\r\n                            });\r\n                        });\r\n                    };\r\n                });\r\n            };\r\n        })\r\n        setCrops(Crops)\r\n    }\r\n\r\n    const getIrrig = () => {\r\n        let Irrigations = [];\r\n        farms.map(item => {\r\n            let fields = item.fields;\r\n            if (fields) {\r\n                fields.map(itemCrop => {\r\n                    let crops = itemCrop.crops;\r\n                    if (crops) {\r\n                        crops.map(i => {\r\n                            let irrigations = i.irrigations\r\n                            if (irrigations) {\r\n                                irrigations.map(itemIrrig => {\r\n                                    Irrigations.push({\r\n                                        type: itemIrrig.type,\r\n                                        address: itemIrrig.address,\r\n                                        pivotShape: itemIrrig.pivot_shape,\r\n                                        flowrate: itemIrrig.flowrate,\r\n                                        lateral: itemIrrig.lateral,\r\n                                        Uid: itemIrrig.uid,\r\n                                        crop_id: itemIrrig.crop_id,\r\n                                        zone_id: itemIrrig.zone_id,\r\n\r\n                                    });\r\n\r\n                                })\r\n                            }\r\n                        });\r\n                    };\r\n                });\r\n            };\r\n        })\r\n        setIrrig(Irrigations)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getFieldsByUser();\r\n        const getCropType = async () => {\r\n          try {\r\n              await api.get('/croptype/list-crop')\r\n                  .then(response => {\r\n                      if (response) {\r\n                          let dataCrop = response.data.Croptype\r\n                          setListCrop(dataCrop)\r\n                      }\r\n                  })\r\n\r\n          } catch (error) {\r\n              console.log(error)\r\n          }\r\n      }\r\n      const getSoils = async () => {\r\n          try {\r\n              await api.get('/soils/get-soils')\r\n                  .then(response => {\r\n                      let listSoils = response.data.Soils\r\n                      setListSoil(listSoils)\r\n                      \r\n                  }).catch(error => {\r\n                      console.log(error)\r\n                  })\r\n\r\n          } catch (error) {\r\n              console.log(error)\r\n          }\r\n      }\r\n      const getIrrigations = async () => {\r\n        try {\r\n          await api.get('/irrigations/get-irrigations')\r\n            .then(response => {\r\n              if (response) {\r\n                let dataIrrig = response.data.Irrigations\r\n                setListIrrigations(dataIrrig)\r\n              }\r\n            })\r\n  \r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n       const getVarieties = async () => {\r\n        try {\r\n            await api.get('/varieties/get-varieties')\r\n                .then(response => {\r\n                    if (response.data.type === \"success\") {\r\n                        let listVarieties = response.data.Varieties\r\n                        setAllVarieties(listVarieties)\r\n  \r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error)\r\n                })\r\n  \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n      getVarieties()\r\n      getIrrigations()\r\n      getSoils()\r\n      getCropType()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getFields();\r\n        getCrops();\r\n        getZones();\r\n        getIrrig();\r\n    }, [farms])\r\n\r\n    const goProfile = () => {\r\n        history.push(`/admin/user/${Uid}`);\r\n        window.location.reload();\r\n    }\r\n    const goFarms = () => {\r\n        history.push(`/admin/user/${Uid}/farms`);\r\n        window.location.reload();\r\n    }\r\n    const goSensor = () => {\r\n        history.push(`/admin/user/${Uid}/sensors`);\r\n        window.location.reload();\r\n    }\r\n\r\n    const handleName = (e) => {\r\n      \r\n      };\r\n     const handleUidFarm = (e) => {\r\n        setDataField({\r\n          farm_uid: e.target.value,\r\n        });\r\n      };\r\n    \r\n     const handleDescription = (e) => {\r\n        setDataField({\r\n          description: e.target.value,\r\n        });\r\n      };\r\n\r\n     const validate = () => {\r\n        let nameError = '';\r\n        let farmError = '';\r\n        if (!dataField.name) {\r\n          nameError = 'not_empty';\r\n          setErrors({ ...errors , nameError :nameError })\r\n          return false\r\n        } else {\r\n          setErrors({nameError :\"\"})\r\n        }\r\n        if (dataField.farm_uid == '') {\r\n          farmError = 'not_empty';\r\n          setErrors({ farmError })\r\n          return false\r\n        }\r\n        if (dataField.farm_uid) {\r\n          setErrors({ farmError: \"\" })\r\n        }\r\n        return true;\r\n      };\r\n    \r\n      const _onCreated = e => {\r\n        let type = e.layerType;\r\n        setLayerType(type)\r\n        let layer = e.layer;\r\n        if (type === \"marker\") {\r\n          layer.bindPopup('Field Name');\r\n        } else {\r\n          console.log(\"_onCreated: something else created:\", type, e);\r\n        }\r\n        if (type === \"polyline\") {\r\n          let coords = layer._latlngs;\r\n          const Coordinates = coords.map((coord) => ({\r\n            Lat: coord.lat,\r\n            Long: coord.lng,\r\n          }));\r\n          if (Coordinates)\r\n            setLayer(JSON.stringify(Coordinates))\r\n        } else {\r\n          setCoords({ Latitude: layer.getLatLng().lat , Longitude: layer.getLatLng().lng  });\r\n        }\r\n      \r\n      };\r\n    \r\n    const  addField = () => {\r\n    \r\n        let data = {\r\n          name: dataField.name,\r\n          description: dataField.description,\r\n          farmName: dataField.farmName,\r\n          farm_uid: dataField.farm_uid,\r\n          Latitude: coords.Latitude,\r\n          Longitude: coords.Longitude\r\n        }\r\n    \r\n        api.post('/field/add-field', data)\r\n          .then(res => {\r\n            \r\n            if (res.data.type && res.data.type == \"danger\") {\r\n                swal(`Error`, {\r\n                    icon: \"error\",\r\n                });\r\n            }\r\n            if (res.data.type && res.data.type == \"success\") {\r\n                swal(`${t('field_added')}`, {\r\n                    icon: \"success\",\r\n                });\r\n                getFieldsByUser()\r\n            }\r\n    \r\n          })\r\n          .catch(() => {\r\n            swal(`Error`, {\r\n                icon: \"error\",\r\n            });\r\n    \r\n          });\r\n      }\r\n    const  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    // const isValid = validate();\r\n    // if (isValid) {\r\n        addField()\r\n    // }\r\n    }\r\n   const resetForm = () => {\r\n        setDataField({\r\n          name: \"\",\r\n          description: \"\",\r\n          farm_uid: \"\"\r\n        });\r\n      };  \r\n\r\n     const cropHandleSubmit = (event) => {\r\n        event.preventDefault()\r\n        addCrop()\r\n      }\r\n    \r\n    \r\n     const addCrop = () => {\r\n    \r\n        let data = {\r\n          zone_uid: cropData.zone_uid,\r\n          field_uid: cropData.field_uid,\r\n          croptype_id: cropData.cropType,\r\n          previous_type: cropData.previous_type,\r\n          plantingDate: cropData.plantingDate,\r\n          rootDepth: cropData.rootDepth,\r\n          days: cropData.days,\r\n          crop_variety_id: cropData.variety,\r\n          practical_fraction : cropData.ruPratique,\r\n          density : cropData.density,\r\n          ecart_inter : cropData.ecartInter,\r\n          ecart_intra : cropData.ecartIntra,\r\n          growingDate:cropData.growingDate\r\n        }\r\n    \r\n        api.post('/crop/add-crop', data)\r\n          .then(res => {\r\n            if (res.data.type && res.data.type == \"danger\") {\r\n              swal(`Error`, {\r\n                icon: \"error\",\r\n             });\r\n            }\r\n            if (res.data.type && res.data.type == \"success\") {\r\n              swal(`${t('crop_added')}`, {\r\n                icon: \"success\",\r\n              });\r\n              getFieldsByUser()\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            swal(`Error`, {\r\n              icon: \"error\",\r\n            });\r\n    \r\n    \r\n          });\r\n      }\r\n\r\n      const zoneHandleSubmit = (event) => {\r\n        event.preventDefault()\r\n        addZone()\r\n    \r\n    \r\n      }\r\n    \r\n    \r\n      const addZone = () => {\r\n    \r\n        let data = {\r\n          soilProperty: soilData.soilProperty,\r\n          field_uid: soilData.field_uid,\r\n          zone_uid: soilData.zone_uid,\r\n          name: soilData.zoneName,\r\n          source: soilData.source,\r\n          RUmax: soilData.RUmax,\r\n          effPluie: soilData.effPluie,\r\n        }\r\n        api.post('/zone/add-zone', data)\r\n          .then(res => {\r\n      \r\n            if (res.data.type && res.data.type == \"danger\") {\r\n              swal(`Error`, {\r\n                icon: \"error\",\r\n             });\r\n            }\r\n            if (res.data.type && res.data.type == \"success\") {\r\n              swal(`${t('soil_added')}`, {\r\n                icon: \"success\",\r\n              });\r\n              getFieldsByUser()\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            swal(`Error`, {\r\n              icon: \"error\",\r\n           });\r\n    \r\n    \r\n          });\r\n      }\r\n\r\n     const IrrigHandleSubmit = (event) => {\r\n        event.preventDefault()\r\n       \r\n          addIrrigation()\r\n    \r\n        \r\n    \r\n      }\r\n    \r\n   \r\n    \r\n    \r\n     const addIrrigation = () => {\r\n    \r\n        let data = {\r\n          type: irrigData.irrigType,\r\n          zone_uid: irrigData.zone_uid,\r\n          crop_uid: irrigData.crop_uid,\r\n          flowrate: irrigData.flowrate,\r\n          irrigated_already: irrigData.irrigated_already,\r\n          name: irrigData.name,\r\n          pivot_shape:irrigData.pivot_shape,\r\n          irrigation_syst: irrigData.irrigation_syst,\r\n          pivot_length: irrigData.pivot_length,\r\n          pivot_coord: irrigData.pivot_coord,\r\n          full_runtime: irrigData.full_runtime,\r\n          lateral:irrigData.lateral,\r\n          drippers : irrigData.drippers,\r\n          effIrrig: irrigData.effIrrig,\r\n          pumpFlow : irrigData.pumpFlow,\r\n          lines_number:irrigData.linesNumber\r\n        }\r\n    \r\n    \r\n        api.post('/irrigation/add-irrigation', data)\r\n          .then(res => {\r\n            \r\n            if (res.data.type && res.data.type == \"danger\") {\r\n              swal(`Error`, {\r\n                icon: \"error\",\r\n             });\r\n            }\r\n            if (res.data.type && res.data.type == \"success\") {\r\n              swal(`${t('irrigation_added')}`, {\r\n                icon: \"success\",\r\n              });\r\n              getFieldsByUser()\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            \r\n            swal(`Error`, {\r\n              icon: \"error\",\r\n           });\r\n    \r\n          });\r\n      }\r\n    \r\n\r\n\r\n\r\n      const handleSoilPick = (e) => {\r\n        e.preventDefault()\r\n        const soilType = listSoil.find(\r\n            (soil) => soil.soil == e.target.value\r\n        );\r\n        \r\n        if (typeof soilType !== \"undefined\") {\r\n            setSoilData({\r\n                ...soilData,\r\n                soilType: soilType.soil,\r\n                RUmax: soilType.ru,\r\n                effPluie: soilType.rain_eff\r\n            });\r\n    \r\n        }\r\n    };\r\n    const handleCropPick = (e) => {\r\n      e.preventDefault()\r\n      // props.handleCropType(e)\r\n\r\n      const crop = listCrop.find(\r\n        (crop) => crop.id == e.target.value\r\n        );\r\n        if(e.target.value !== ''){\r\n           setCropData({...cropData, cropType : crop.id})\r\n          setCropData({...cropData, ruPratique : crop.practical_fraction})\r\n          setCropData({...cropData,days : crop.total})\r\n          setCropData({...cropData,rootDepth : crop.root_max})\r\n          setCropData({...cropData, plantingDate : crop.plant_date.slice(0, 11).replace('T', '')})\r\n  \r\n        }\r\n        let varieties = []\r\n        if (crop) {\r\n          const variety = allVarieties.map((variety) => {\r\n            if (variety.crop_id === crop.id) {\r\n              varieties.push({\r\n                varietyId :variety.id,\r\n                variety: variety.crop_variety\r\n              })\r\n            }\r\n          });\r\n          \r\n          setCropData({\r\n            ...cropData,\r\n              cropType: crop.id,\r\n              variety: crop.crop_variety,\r\n              cropVariety: varieties,\r\n              rootDepth: crop.root_max,\r\n              ruPratique :crop.practical_fraction,\r\n              days: crop.total,\r\n              plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\r\n              kcList: crop.all_kc\r\n            });\r\n            \r\n  \r\n      }\r\n  };\r\n  const handleVarietyPick = (e) => {\r\n    e.preventDefault();\r\n    const variety = allVarieties.find(\r\n     \r\n        (variety) => variety.id == e.target.value\r\n  \r\n    )\r\n    \r\n    if (variety) {\r\n        setCropData({\r\n            ...cropData,\r\n            variety: variety.id,\r\n         \r\n        });\r\n    }\r\n  };\r\n  const [soilCompos,setSoilCompos] = useState({\r\n    clay : \"\",\r\n    sand : \"\",\r\n    silt : \"\"\r\n\r\n  })\r\n    const soilTypeForm = () => {\r\n      if (isStandardSoil == true)\r\n        return (\r\n            null\r\n         \r\n        );\r\n      else {\r\n        return (\r\n          <CompositeSoil />\r\n        );\r\n      }\r\n    };\r\n\r\n    const handleIrrigPick = (e) => {\r\n      e.preventDefault();\r\n       const irrigation = listIrrigations.find((irrigation) => {\r\n        return irrigation.irrigation == e.target.value\r\n    \r\n       })\r\n      //  setIM(irrigation.irrigation)\r\n      setIrrigData({irrigType : irrigation.irrigation})\r\n      // props.handleEffIrrig(irrigation.effIrrig)\r\n       \r\n      if (irrigation) {\r\n          setIrrigData({\r\n              ...irrigData,\r\n              irrigType : irrigation.irrigation,\r\n              effIrrig : irrigation.effIrrig\r\n          });\r\n      }\r\n    };\r\n\r\n\r\n    const irrigationMethodForm = () => {\r\n      switch (irrigData.irrigType) {\r\n          case `${t('Pivot')}`:\r\n              return <PivotForm\r\n                  handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\r\n                  handleIrrgSyst={(e) => setIrrigData({...irrigData , irrigation_syst : e.target.value})}\r\n                  handleRunTime={(e) => setIrrigData({...irrigData, full_runtime : e.target.value})}\r\n                  handlePivotCoord={(e) => setIrrigData({...irrigData,pivot_coord :e.target.value})}\r\n                  handlePivotLength={(e) => setIrrigData({...irrigData, pivot_length : e.target.value})}\r\n                  handlePivotShape={(e) => setIrrigData({...irrigData, pivot_shape : e.target.value})}\r\n                  irrigation_syst={irrigData.irrigation_syst}\r\n                  pivot_coord={irrigData.pivot_coord}\r\n                  pivot_length={irrigData.pivot_length}\r\n                  pivot_shape={irrigData.pivot_shape}\r\n                  full_runtime={irrigData.full_runtime}\r\n                  flowrate={irrigData.flowrate}\r\n                  name={irrigData.name}\r\n              />;\r\n          case `${t('Lateral')}`:\r\n              return <LateralForm\r\n                  handleLateral={(e) => setIrrigData({...irrigData , lateral: e.target.value})}\r\n                  handlePivotLength={(e) => setIrrigData({...irrigData , pivot_length : e.target.value})}\r\n                  handleRunTime={(e) => setIrrigData({...irrigData , full_runtime :e.target.value})}\r\n                  handleName={(e) => setIrrigData({...irrigData ,  name : e.target.value})}\r\n                  handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\r\n                  full_runtime={irrigData.full_runtime}\r\n                  flowrate={irrigData.flowrate}\r\n                  name={irrigData.name}\r\n                  pivot_length={irrigData.pivot_length}\r\n                  lateral={irrigData.lateral}\r\n              />;\r\n          case `${t('None')}`:\r\n              return null;\r\n          default:\r\n              return (\r\n                  <DripForm\r\n                    handleDrippers={(e) => setIrrigData({ ...irrigData , drippers : e.target.value})}\r\n                    handleIrrigAlrd={(e) => setIrrigData({...irrigData , irrigated_already : e.target.value })}\r\n                    handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\r\n                    flowrate={irrigData.flowrate}\r\n                    drippers={irrigData.drippers}\r\n                    irrigated_already={irrigData.irrigated_already}\r\n                   />\r\n              );\r\n      }\r\n  };\r\n  useEffect(()=>{\r\n    if(cropData.ecartInter !== \"\" && cropData.ecartIntra !== \"\"){\r\n    \r\n    let formule  = 10000 / (Number(cropData.ecartInter) * Number(cropData.ecartIntra))\r\n    setCropData({...cropData , density :formule})\r\n  }\r\n  },[cropData.ecartInter,cropData.ecartIntra])\r\n    const renderAddSetup = () => {\r\n        switch (elemValue) {\r\n          case 'field':\r\n            return (\r\n              <div>\r\n                <Card small className=\"h-100\">\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        width: \"auto\",\r\n                        float: \"left\"\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <h6 className=\"m-0\" style={{ textAlign: \"left\" }}>{t(\"field_setup\")}</h6>{\" \"}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-end\"\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        onClick={handleSubmit}\r\n                        theme=\"info\"\r\n                        className=\"mb-2 mr-1 btn btn-success\"\r\n                      >\r\n                        <i class={`fa fa-check mx-2`}></i>\r\n                        {t('save')}\r\n                      </Button>\r\n                      <Button\r\n                        onClick={resetForm}\r\n                        // theme=\"success\"\r\n                        className=\"mb-2 mr-1 btn btn-danger\"\r\n                      >\r\n                        <i class={`fa fa-times mx-2`}></i>\r\n                        {t('cancel')}\r\n                      </Button>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"pt-0\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        marginTop: \"20px\",\r\n                        flexWrap: \"wrap\"\r\n                      }}\r\n                    >\r\n                       <Col lg=\"6\" sm=\"12\" md=\"6\">\r\n                      <Form>\r\n                        <Row>\r\n                          <Col lg='6' md=\"6\" sm='6' className=\"form-group\">\r\n                            <p style={{ margin: \"0px\" , textAlign:\"left\"}}>{t('name_field')}</p>\r\n                            <FormInput\r\n                              value={dataField.name}\r\n                              placeholder={t('name_field')}\r\n                              className={errors.nameError =='' ? '' : 'is-invalid'}\r\n                              required\r\n                              onChange={ e => setDataField({...dataField ,  name: e.target.value,})}\r\n                            />\r\n\r\n\r\n                          <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{errors.nameError}</div>\r\n                          </Col>\r\n                          <Col  lg='6' md=\"6\" sm='6'  className=\"form-group\">\r\n                            <p style={{ margin: \"0px\", textAlign:\"left\" }}>{t('name_farm')}</p>\r\n                            <FormSelect\r\n                                value={dataField.farm_uid}\r\n                                className={errors.farmError =='' ? '' : 'is-invalid'}\r\n                                required\r\n                                onChange={e => setDataField({...dataField ,  farm_uid: e.target.value,})}\r\n                            >\r\n                              <option value=\"\">{t('select_farm')}</option>;\r\n                              {farms.map((item, index) => {\r\n                                return <option value={item.uid}>{item.name}</option>;\r\n                              })}\r\n                            </FormSelect>\r\n                          </Col>\r\n                        </Row>\r\n                        {/* <Row>\r\n\r\n                        <Col lg='12' md=\"6\" sm='6'>\r\n                        <FormGroup>\r\n                          <p style={{ margin: \"0px\",textAlign: \"left\" }}>{t('desc')}</p>\r\n                          <textarea\r\n                            value={dataField.description}\r\n                            onChange={e => setDataField({...dataField ,  description: e.target.value,})}\r\n                            style={{ height: \"220px\" }}\r\n                            class=\"form-control\"\r\n                            placeholder=\"Description\"\r\n                          ></textarea>\r\n                        </FormGroup>\r\n                        </Col>\r\n                        </Row> */}\r\n                      </Form>\r\n                     </Col>\r\n\r\n                    </div>\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                      <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('my_fields')}\r\n                        subtitle={t('my_fields')}\r\n                        className=\"text-sm-left\"\r\n                      />\r\n                    </Row>\r\n                    <Row className='px-2'>\r\n                      <FieldList\r\n                        Fields={getFieldsByUser}\r\n                        FieldsList={fields}\r\n                        Uid={Uid}\r\n                      />\r\n                    </Row>\r\n                    \r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            )\r\n          case 'soil':\r\n            return (\r\n              <div style={{ position: \"relative\" }}>\r\n                <Card small className=\"h-100\">\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\"\r\n                      }}\r\n                    >\r\n                      <h6 className=\"m-0\">{t('soil_info')}</h6>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          onClick={zoneHandleSubmit}\r\n                          theme=\"info\"\r\n                          className=\"mb-2 mr-1 btn btn-success\"\r\n                        >\r\n                          <i class={`fa fa-check mx-2`}></i>\r\n                          {t('save')}\r\n                        </Button>\r\n                        <Button\r\n                          onClick={\"\"}\r\n                          // theme=\"success\"\r\n                          className=\"mb-2 mr-1 btn btn-danger\"\r\n                        >\r\n                          <i class={`fa fa-times mx-2`}></i>\r\n                          {t('cancel')}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"pt-0\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        marginTop: \"20px\",\r\n                        flexWrap: \"wrap\"\r\n                      }}\r\n                    >\r\n                     <Col lg=\"12\" sm=\"12\" md=\"6\">\r\n        <Form>\r\n          <Row form>\r\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n              <p style={{ margin: \"0px\" }}>{t('soil_zone')}</p>\r\n              <FormInput\r\n                value={soilData.zoneName}\r\n                placeholder={t('soil_zone')}\r\n                required\r\n                onChange={e => setSoilData({...soilData , zoneName : e.target.value})}\r\n\r\n              />\r\n            </Col>\r\n\r\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n              <p style={{ margin: \"0px\" }}>{t('name_field')}</p>\r\n              <FormSelect\r\n                value={soilData.field_uid}\r\n                onChange={e => setSoilData({...soilData , field_uid : e.target.value})}\r\n                placeholder={t('name_field')}\r\n              >\r\n                <option value=\"\">{t('select_field')}</option>\r\n                {fields.map((item, index) => {\r\n                  return <option value={item.Uid}>{item.title}</option>;\r\n                })}\r\n              </FormSelect>\r\n            </Col>\r\n\r\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n              <p style={{ margin: \"0px\" }}>{t('source')}</p>\r\n              <FormSelect\r\n                value={soilData.source}\r\n                onChange={e => setSoilData({...soilData , source : e.target.value})}\r\n              >\r\n                <option value=\"1\" >Manual</option>\r\n              </FormSelect>\r\n\r\n            </Col>\r\n\r\n            <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n              <p style={{ margin: \"0px\" }}>{t('soil_prop')}</p>\r\n              <FormSelect\r\n                onChange={evt => {\r\n                 \r\n                  setSoilType(!isStandardSoil);\r\n                  \r\n                }}\r\n              >\r\n                <option selected={isStandardSoil}>Standard</option>\r\n                <option selected={!isStandardSoil}>Composite</option>\r\n              </FormSelect>\r\n            </Col>\r\n            {soilTypeForm()}\r\n          </Row>\r\n          <Row form>\r\n          <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\r\n          <div>\r\n            <p style={{ margin: \"0px\" }}>{t('soil_type')}</p>\r\n            <FormSelect\r\n            value={soilData.soilType}\r\n              onChange={handleSoilPick}\r\n            >\r\n              <option value=\"\">{t('select_soil')}</option>\r\n              {\r\n                listSoil.map((item, index) => {  \r\n                    return <option value={item.soil} >{item.soil}</option>;\r\n                \r\n                })\r\n              }\r\n            </FormSelect>\r\n          </div>\r\n        </Col>\r\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n              <FormGroup>\r\n                <p style={{ margin: \"0px\" }}>{t('efficacité_pluie')} (%)</p>\r\n                <FormInput type=\"number\" value={soilData.effPluie} onChange={e => setSoilData({...soilData,effPluie : e.target.value})} id='effPluie' placeholder={t('efficacité_pluie')}\r\n                />\r\n\r\n              </FormGroup>\r\n            </Col>\r\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n              <FormGroup>\r\n                <p style={{ margin: \"0px\" }}>RU max (mm/m)</p>\r\n                <FormInput type=\"number\" value={soilData.RUmax} onChange={e => setSoilData({...soilData,RUmax : e.target.value})} id='ruMax' placeholder=\"RU max\"\r\n                />\r\n\r\n              </FormGroup>\r\n\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Col>\r\n                    </div>\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                      <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('my_zones')}\r\n                        subtitle={t('my_zones')}\r\n                        className=\"text-sm-left\"\r\n                      />\r\n                    </Row>\r\n                    <Row className=\"px-2\">\r\n  \r\n                      <ZoneList\r\n                        zonesList={zones}\r\n                        Zones={getFieldsByUser}\r\n                        Fields={fields}\r\n                        // state={this.dataChange}\r\n                        listSoils={listSoil}\r\n  \r\n                      />\r\n  \r\n  \r\n                    </Row>\r\n  \r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            )\r\n          case 'crop':\r\n            return (\r\n              <div>\r\n                <Card small className=\"h-100\">\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\"\r\n                      }}\r\n                    >\r\n                      <h6 className=\"m-0\">{t('crop_info')}</h6>{\" \"}\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          onClick={cropHandleSubmit}\r\n                          theme=\"info\"\r\n                          className=\"mb-2 mr-1 btn btn-success\"\r\n                        >\r\n                          <i class={`fa fa-check mx-2`}></i>\r\n                          {t('save')}\r\n                        </Button>\r\n                        <Button\r\n                          onClick={\"\"}\r\n                          // theme=\"success\"\r\n                          className=\"mb-2 mr-1 btn btn-danger\"\r\n                        >\r\n                          <i class={`fa fa-times mx-2`}></i>\r\n                          {t('cancel')}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"pt-0\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        marginTop: \"20px\",\r\n                        flexWrap: \"wrap\"\r\n                      }}\r\n                    >\r\n                         <Col lg=\"12\" sm=\"12\" md=\"6\">\r\n      <Form>\r\n        <Row form>\r\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\r\n            <p style={{ margin: \"0px\" }}>{t('crop_zone')}</p>\r\n            <FormSelect\r\n              value={cropData.zone_uid}\r\n              onChange={e=> setCropData({...cropData , zone_uid : e.target.value})}\r\n              placeholder={t('crop_zone')}\r\n            >\r\n              <option>{t('select_zone')}</option>\r\n\r\n                  {\r\n                    zones.map(soil=>{\r\n                     return <option value={soil.Uid}>{soil.name}</option>\r\n\r\n                    })\r\n                  }\r\n              \r\n            </FormSelect>\r\n          </Col>\r\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\r\n            <p style={{ margin: \"0px\" }}>{t('crop_field')}</p>\r\n            <FormSelect\r\n              value={cropData.field_uid}\r\n              onChange={e => setCropData({...cropData , field_uid : e.target.value})}\r\n              placeholder={t('crop_zone')}\r\n            >\r\n              <option>{t('select_field')}</option>\r\n                      {\r\n                        fields.map(field=>{\r\n                          return <option value={field.Uid}>{field.title}</option>\r\n                          \r\n                        })\r\n                      }\r\n            </FormSelect>\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col lg='6' md=\"12\" sm=\"12\" className=\"form-group\">\r\n            <p style={{ margin: \"0px\" }}>{t('crop_type')}</p>\r\n            <FormSelect\r\n              onChange={handleCropPick}\r\n              placeholder={t('crop_type')}\r\n              value={cropData.cropType}\r\n            >\r\n              <option value=\"\">Select Crop</option>\r\n              {\r\n                listCrop.map(crop => {\r\n                  return (\r\n                    <option value={crop.id}>{crop.crop}</option>\r\n\r\n                  )\r\n                })\r\n              }\r\n            </FormSelect>\r\n          </Col>\r\n          <Col lg=\"6\" md=\"8\" sm=\"8\">\r\n            <FormGroup>\r\n              <p style={{ margin: \"0px\" }}>{t('crop_variety')}</p>\r\n              <FormSelect value={cropData.variety} onChange={handleVarietyPick} id=\"cropVariety\">\r\n                <option value=\"\">{t('crop_variety')}</option>\r\n                {\r\n                      cropData.cropVariety.map(variety => (\r\n                          <option value={variety.varietyId}>{variety.variety}</option>\r\n                      ))\r\n                  }\r\n              </FormSelect>\r\n              <input type=\"checkbox\" name=\"Autre\" id=\"check\" onClick={() => setChecked(!checked)} /> {t('other')}\r\n                  {\r\n                      checked\r\n                      ?\r\n\r\n                      <FormInput \r\n                      value={cropData.variety || \"\"}\r\n                      placeholder={t('crop_variety')}\r\n                      id=\"cropVariety\"\r\n                      onChange={e => setCropData({...cropData , variety : e.target.value})}\r\n                      />\r\n\r\n                      :\r\n                      null\r\n                  }\r\n                      \r\n            </FormGroup>\r\n\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n            <FormGroup>\r\n              <p style={{ margin: \"0px\" }}>{t('depth')} (m)</p>\r\n              <FormInput type=\"number\" value={cropData.rootDepth} onChange={e => setCropData({...cropData,rootDepth :e.target.value})} id='z' placeholder={t('depth')}\r\n              />\r\n\r\n            </FormGroup>\r\n\r\n          </Col>\r\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n            <FormGroup>\r\n              <p style={{ margin: \"0px\" }}>{t('Days')}</p>\r\n\r\n              <FormInput type=\"number\" value={cropData.days} id='days' onChange={e => setCropData({...cropData,days :e.target.value})} placeholder={t('Days')} />\r\n\r\n            </FormGroup>\r\n\r\n          </Col>\r\n          <Col lg=\"4\" md=\"12\" sm=\"12\">\r\n            <FormGroup>\r\n              <p style={{ margin: \"0px\" }}>{t('planting_date')}</p>\r\n              <FormInput type=\"date\" value={cropData.growingDate} onChange={e => setCropData({...cropData,growingDate :e.target.value})} id='planting_date' />\r\n\r\n            </FormGroup>\r\n\r\n          </Col>\r\n          <Col hidden lg=\"4\" md=\"8\" sm=\"8\">\r\n            <FormGroup>\r\n              <p style={{ margin: \"0px\" }}>{t('growing_season')}</p>\r\n              <FormInput type=\"date\" value={cropData.plantingDate} onChange={e => setCropData({...cropData,plantingDate :e.target.value})} id='days' />\r\n\r\n            </FormGroup>\r\n\r\n          </Col>\r\n          <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n              <FormGroup>\r\n                <p style={{ margin: \"0px\" }}>{t('fraction_pratique')} (%) </p>\r\n                <FormInput type=\"number\" value={cropData.ruPratique} onChange={e => setCropData({...cropData,ruPratique :e.target.value})} id='ruPratique' placeholder={t('fraction_pratique')}\r\n                />\r\n              </FormGroup>\r\n\r\n            </Col>\r\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n              <FormGroup>\r\n                <p style={{ margin: \"0px\" }}>{t('ecart_inter')} (m)</p>\r\n                <FormInput type=\"number\" value={cropData.ecartInter} onChange={e => setCropData({...cropData,ecartInter :e.target.value})} id='ecartInter' placeholder={t('ecart_inter')}\r\n                />\r\n              </FormGroup>\r\n\r\n            </Col>\r\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n              <FormGroup>\r\n                <p style={{ margin: \"0px\" }}>{t('ecart_intra')} (m) </p>\r\n                <FormInput type=\"number\" value={cropData.ecartIntra} onChange={e => setCropData({...cropData,ecartIntra :e.target.value})} id='ecartIntra' placeholder={t('ecart_intra')}\r\n                />\r\n              </FormGroup>\r\n\r\n            </Col>\r\n            <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n              <FormGroup>\r\n                <p style={{ margin: \"0px\" }}>{t('densité')} (plants/ha)</p>\r\n                <FormInput type=\"number\" value={cropData.density} onChange={e => setCropData({...cropData,density :e.target.value})} id='densité' placeholder={t('densité')}\r\n                />\r\n              </FormGroup>\r\n\r\n            </Col>\r\n        </Row>\r\n      </Form>\r\n    </Col>\r\n                    </div>\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                      <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('my_crops')}\r\n                        subtitle={t('my_crops')}\r\n                        className=\"text-sm-left\"\r\n                      />\r\n                    </Row>\r\n                    <Row className=\"px-2\">\r\n  \r\n                      <CropList\r\n                        cropsList={crops}\r\n                        Crops={getFieldsByUser}\r\n                        Fields={fields}\r\n                        Zones={zones}\r\n                      />\r\n  \r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            )\r\n          case 'irrig':\r\n            return (\r\n              <div>\r\n                <Card small className=\"h-100\">\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\"\r\n                      }}\r\n                    >\r\n                      <h6 className=\"m-0\">{t('Irrigation_info')}</h6>{\" \"}\r\n  \r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-end\"\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          onClick={IrrigHandleSubmit}\r\n                          theme=\"info\"\r\n                          className=\"mb-2 mr-1 btn btn-success\"\r\n                        >\r\n                          <i class={`fa fa-check mx-2`}></i>\r\n                          {t('save')}\r\n                        </Button>\r\n                        <Button\r\n                          onClick={\"\"}\r\n                          // theme=\"success\"\r\n                          className=\"mb-2 mr-1 btn btn-danger\"\r\n                        >\r\n                          <i class={`fa fa-times mx-2`}></i>\r\n                          {t('cancel')}\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"pt-0\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        marginTop: \"20px\",\r\n                        flexWrap: \"wrap\"\r\n                      }}\r\n                    >\r\n                         <Col lg=\"12\" sm=\"12\" md=\"6\">\r\n                            <Form>\r\n                              <Row form>\r\n                                <Col md=\"6\" className=\"form-group\">\r\n                                  <p style={{ margin: \"0px\" }}>{t('irrigation_zone')}</p>\r\n                                  <FormSelect\r\n                                  value={irrigData.zone_uid}\r\n                                  onChange={e => setIrrigData({...irrigData , zone_uid : e.target.value})}\r\n                                  >\r\n                                    <option>{t('select_zone')}</option>\r\n                                          {\r\n                                            zones.map(soil=>{\r\n                                              return<option value={soil.Uid} >{soil.name}</option>\r\n\r\n                                            })\r\n                                          }\r\n                                    \r\n                                  </FormSelect>\r\n                                </Col>\r\n                                <Col md=\"6\" className=\"form-group\">\r\n                                  <p style={{ margin: \"0px\" }}>{t('irrigation_crop')}</p>\r\n                                  <FormSelect\r\n                                  value={irrigData.crop_uid}\r\n                                  onChange={e => setIrrigData({...irrigData , crop_uid : e.target.value}) }\r\n                                  >\r\n                                    <option>{t('select_crop')}</option>\r\n                                           {\r\n                                            crops.map(crop=>{\r\n                                              let cropType= \"\"\r\n                                              listCrop.map(croptype=>{\r\n                                                if(croptype.id === crop.croptype_id){\r\n                                                  cropType = croptype.crop\r\n                                                }\r\n                                              })\r\n                                             return <option value={crop.Uid} >{cropType}</option>\r\n\r\n                                            })\r\n                                          }\r\n                                  </FormSelect>\r\n                                </Col>\r\n                              \r\n                                <Col md=\"6\" className=\"form-group\">\r\n                                  <p style={{ margin: \"0px\" }}>{t('Irrigation_system_type')}</p>\r\n                                  <FormSelect\r\n                                    value={irrigData.irrigType}\r\n                                    onChange={evt => {\r\n                                      handleIrrigPick(evt)\r\n                                    }}\r\n                                  >\r\n                                    <option disabled selected value=\"\">{t('select_irriagtion')}</option>\r\n                                    {listIrrigations.map(item => {\r\n                                      // if (item.value === irrigationMethod) {\r\n                                      //   return <option value={item.value} selected={true}>{item.type}</option>;\r\n                                      // } else {\r\n                                      //   return <option value={item.value} selected={false}>{item.type}</option>;\r\n                                      // }\r\n                                      return <option value={item.irrigation} >{t(`${item.irrigation}`)}</option>;\r\n                                    })}\r\n                                  </FormSelect>\r\n                                </Col>\r\n                                <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                                    <FormGroup>\r\n                                      <p style={{ margin: \"0px\" }}>{t('efficience_irrigation')} (%) </p>\r\n                                      <FormInput type=\"number\" value={irrigData.effIrrig} onChange={e => setIrrigData({...irrigData , effIrrig :e.target.value})} id='effIrrig' placeholder={t('efficience_irrigation')}\r\n                                      />\r\n\r\n                                    </FormGroup>\r\n\r\n                                  </Col>\r\n                                  <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                                  <FormGroup>\r\n                                    <p style={{ margin: \"0px\" }}>{t('nbr_ligne')}</p>\r\n                                    <FormInput type='number' value={irrigData.linesNumber} onChange={e => setIrrigData({...irrigData , linesNumber :e.target.value})} id='nbr_ligne' placeholder={t('nbr_ligne')}\r\n                                    />\r\n                    \r\n                                  </FormGroup>\r\n                    \r\n                                </Col>\r\n                                  <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                                    <FormGroup>\r\n                                      <p style={{ margin: \"0px\" }}>{t('debit_reseau')} (l/s) </p>\r\n                                      <FormInput type=\"number\" value={irrigData.pumpFlow} onChange={e => setIrrigData({...irrigData , pumpFlow :e.target.value})} id='debitReseau' placeholder={t('debit_reseau')}\r\n                                      />\r\n\r\n                                    </FormGroup>\r\n\r\n                                  </Col>\r\n                                  <Col lg=\"4\" md=\"8\" sm=\"8\">\r\n                                    <FormGroup>\r\n                                      <p style={{ margin: \"0px\" }}>{t('irrigated_already')}(h) </p>\r\n                                      <FormInput type=\"number\" value={irrigData.irrigated_already} onChange={e => setIrrigData({...irrigData , irrigated_already :e.target.value})} id='debitReseau' placeholder={t('irrigated_already')}\r\n                                      />\r\n\r\n                                    </FormGroup>\r\n\r\n                                  </Col>\r\n                              {irrigationMethodForm()}\r\n                              </Row>\r\n\r\n                            </Form>\r\n                         </Col>\r\n                    </div>\r\n                    <Row noGutters className=\"page-header py-4\">\r\n                      <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('my_irrigations')}\r\n                        subtitle={t('my_irrigations')}\r\n                        className=\"text-sm-left\"\r\n                      />\r\n                    </Row>\r\n                    <Row className=\"px-2\">\r\n  \r\n                      <IrrigationList\r\n                        irrigationsList={irrigations}\r\n                        Irrigations={getFieldsByUser}\r\n                        Crops={crops}\r\n                        Zones={zones}\r\n                      />\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            )\r\n          default:\r\n            return (\r\n              <div>\r\n                <Card small className=\"h-100\">\r\n                  <CardHeader className=\"border-bottom\">\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-start\",\r\n                        width: \"auto\",\r\n                        float: \"left\"\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <h6 className=\"m-0\" style={{ textAlign: \"left\" }}>{t(\"field_setup\")}</h6>{\" \"}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"flex-end\"\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        onClick={handleSubmit}\r\n                        // theme=\"success\"\r\n                        className=\"mb-2 mr-1 btn btn-success\"\r\n                      >\r\n                        <i class={`fa fa-check mx-2`}></i>\r\n                        {t('save')}\r\n                      </Button>\r\n                      <Button\r\n                        onClick={resetForm}\r\n                        // theme=\"success\"\r\n                        className=\"mb-2 mr-1 btn btn-danger\"\r\n                      >\r\n                        <i class={`fa fa-times mx-2`}></i>\r\n                        {t('cancel')}\r\n                      </Button>\r\n                    </div>\r\n                  </CardHeader>\r\n                  <CardBody className=\"pt-0\">\r\n                      <Row noGutters className=\"page-header py-4\">\r\n                      <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('my_fields')}\r\n                        subtitle={t('my_fields')}\r\n                        className=\"text-sm-left\"\r\n                      />\r\n                    </Row>\r\n                    {/* <Row>\r\n                      <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-4\">\r\n                        <Card small>\r\n                          <CardHeader>{t('active_fields')}</CardHeader>\r\n                          <CardBody>\r\n                            <FieldList\r\n                              Fields={getDataFields}\r\n                              FieldsList={farmsData}\r\n                            />\r\n                          </CardBody>\r\n                        </Card>\r\n                      </Col>\r\n                    </Row> */}\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        marginTop: \"20px\",\r\n                        flexWrap: \"wrap\"\r\n                      }}\r\n                    >\r\n                      <Col lg=\"6\" sm=\"12\" md=\"6\">\r\n                      <Form>\r\n                        <Row>\r\n                          <Col lg='6' md=\"6\" sm='6' className=\"form-group\">\r\n                            <p style={{ margin: \"0px\" , textAlign:\"left\"}}>{t('name_field')}</p>\r\n                            <FormInput\r\n                              value={dataField.name}\r\n                              placeholder={t('name_field')}\r\n                              className={errors.nameError =='' ? '' : 'is-invalid'}\r\n                              required\r\n                              onChange={handleName}\r\n                            />\r\n\r\n\r\n                          <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{errors.nameError}</div>\r\n                          </Col>\r\n                          <Col  lg='6' md=\"6\" sm='6'  className=\"form-group\">\r\n                            <p style={{ margin: \"0px\", textAlign:\"left\" }}>{t('name_farm')}</p>\r\n                            <FormSelect\r\n                                value={dataField.farm_uid}\r\n                                className={errors.farmError =='' ? '' : 'is-invalid'}\r\n                                required\r\n                                onChange={handleUidFarm}\r\n                            >\r\n                              <option value=\"\">{t('select_farm')}</option>;\r\n                              {farms.map((item, index) => {\r\n                                return <option value={item.uid}>{item.name}</option>;\r\n                              })}\r\n                            </FormSelect>\r\n                          </Col>\r\n                        </Row>\r\n                        {/* <Row> */}\r\n\r\n                        {/* <Col lg='12' md=\"6\" sm='6'>\r\n                        <FormGroup>\r\n                          <p style={{ margin: \"0px\",textAlign: \"left\" }}>{t('desc')}</p>\r\n                          <textarea\r\n                            value={dataField.description}\r\n                            onChange={handleDescription}\r\n                            style={{ height: \"220px\" }}\r\n                            class=\"form-control\"\r\n                            placeholder=\"Description\"\r\n                          ></textarea>\r\n                        </FormGroup>\r\n                        </Col> */}\r\n                        {/* </Row> */}\r\n                      </Form>\r\n                     </Col>\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            )\r\n        }\r\n      }\r\n    return (\r\n        <>\r\n            <Container fluid className=\"main-content-container py-4\">\r\n            <Nav justified pills className=\"bg-white\">\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link onClick={goProfile}>{t('profile')}</Link> \r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink>\r\n                  <Link onClick={goFarms}>{t('farms')}</Link>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink active>\r\n                 {t('fields')}\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink>\r\n                    <Link onClick={goSensor}>{t('sensors')}</Link>\r\n                </NavLink>\r\n              </NavItem>\r\n        </Nav>\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle subtitle={t('fields')} md=\"12\" className=\"ml-sm-auto mr-sm-auto\" />\r\n        </Row>\r\n        <Row className=' d-flex justify-content-center align-items-center py-2'>\r\n              <Col lg='12' md='12' sm='12'>\r\n                <Nav tabs style={{ paddingBottom: 10 }}>\r\n                  <NavItem>\r\n                    <NavLink id=\"field\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"field\" ? \"bg-info rounded text-dark \" : 'rounded text-dark '}`} href=\"#\">\r\n                      {t('field_setup')}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink id=\"soil\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"soil\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'}`} href=\"#\">\r\n                      {t('soil_info')}\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink id=\"crop\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"crop\" ? \"bg-info rounded text-dark \" : 'rounded text-dark'}`} href=\"#\">{t('crop_info')}</NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink id=\"irrig\" onClick={(e) => setView( e.target.id )} className={`${elemValue === \"irrig\" ? \"bg-info rounded text-dark\" : 'rounded text-dark'}`} href=\"#\">{t('Irrigation_info')}</NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n\r\n              </Col>\r\n\r\n            </Row>\r\n               {renderAddSetup()}\r\n             \r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FieldsList"],"mappings":"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"},"metadata":{},"sourceType":"module"}