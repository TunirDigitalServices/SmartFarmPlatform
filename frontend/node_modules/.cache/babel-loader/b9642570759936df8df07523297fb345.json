{"ast":null,"code":"import _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/SatteliteMap.js\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Circle, FeatureGroup, Marker, Popup, useMap, ImageOverlay } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Styles.css\";\nimport useGeoLocation from \"../utils/useGeoLocation\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport api from \"../api/api\";\nimport L from 'leaflet';\nimport MarkerObject from \"./MarkerMap\";\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport axios from \"axios\";\nimport { Card, CardBody, CardImg, CardTitle, Col, FormSelect, Row } from \"shards-react\";\nimport IrrigationMap from '../images/Irrigation-index.png';\nimport ndvi from '../images/ndvi.png';\nimport NitrogenMap from '../images/Nitrogen-Map.png';\nimport PlantHealthMap from '../images/Plant-Health-gci.png';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Button from '@mui/material/Button';\nimport SatelliteAltIcon from '@mui/icons-material/SatelliteAlt';\nimport { Box } from \"@mui/material\";\nimport { ScaleControl } from 'react-leaflet';\nimport Legend from \"./Legend\";\n\nvar SatteliteMap = function SatteliteMap(_ref) {\n  var farms = _ref.farms,\n      data = _ref.data,\n      selectedData = _ref.selectedData,\n      _onEdited = _ref._onEdited,\n      draw = _ref.draw,\n      edit = _ref.edit,\n      drawn = _ref.drawn,\n      satellitesImages = _ref.satellitesImages;\n  var position = [33.8921, 9.5615];\n  var location = useGeoLocation(); //   const map = useMap();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      overlayBounds = _useState2[0],\n      setOverlayBounds = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drawnPolygon = _useState4[0],\n      setDrawnPolygon = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRequesting = _useState6[0],\n      setIsRequesting = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDesignation = _useState8[0],\n      setSelectedDesignation = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedStats = _useState10[0],\n      setSelectedStats = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      designationData = _useState12[0],\n      setDesignationData = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      stats = _useState14[0],\n      setStats = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedDesignationUrl = _useState16[0],\n      setSelectedDesignationUrl = _useState16[1];\n\n  var _useState17 = useState(null),\n      _useState18 = _slicedToArray(_useState17, 2),\n      Map = _useState18[0],\n      setMap = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      markers = _useState20[0],\n      setMarkers = _useState20[1];\n\n  var _useState21 = useState([33.8921, 9.5615]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      center = _useState22[0],\n      setCenter = _useState22[1];\n\n  var _useState23 = useState('-'),\n      _useState24 = _slicedToArray(_useState23, 2),\n      min = _useState24[0],\n      setMin = _useState24[1];\n\n  var _useState25 = useState('-'),\n      _useState26 = _slicedToArray(_useState25, 2),\n      max = _useState26[0],\n      setMax = _useState26[1];\n\n  var designationImageMap = {\n    \"Vegetation Index\": ndvi,\n    \"Dry Soil Water Index\": IrrigationMap,\n    \"Normalized Water Index\": NitrogenMap,\n    \"Built-Up Index\": PlantHealthMap,\n    \"Difference Vegetation Index\": ndvi,\n    \"Vegetation Index 2\": ndvi\n  };\n  console.log(stats);\n  useEffect(function () {\n    if (data && data.length > 0) {\n      var _data$ = data[0],\n          Latitude = _data$.Latitude,\n          Longitude = _data$.Longitude;\n      setCenter([Number(Latitude), Number(Longitude)]);\n      setMarkers([Number(Latitude), Number(Longitude)]);\n    }\n  }, [data]);\n  useEffect(function () {\n    if (data.length > 0) {\n      var coordinates = [];\n      data.map(function (field) {\n        var coord = JSON.parse(field.coordinates);\n\n        if (coord) {\n          coord.map(function (co) {\n            coordinates.push(Object.values(co));\n          });\n        }\n      });\n      setDrawnPolygon(coordinates);\n    }\n  }, [data]);\n\n  var calculateBounds = function calculateBounds(coordinates) {\n    var latitudes = coordinates.map(function (coord) {\n      return coord[1];\n    });\n    var longitudes = coordinates.map(function (coord) {\n      return coord[0];\n    });\n    var bounds = [[Math.min.apply(Math, _toConsumableArray(latitudes)), Math.min.apply(Math, _toConsumableArray(longitudes))], [Math.max.apply(Math, _toConsumableArray(latitudes)), Math.max.apply(Math, _toConsumableArray(longitudes))]];\n    return bounds;\n  };\n\n  var handleCardClick = function handleCardClick(selectedKey) {\n    handleDesignationChange(selectedKey);\n  };\n\n  var handleDesignationChange = function handleDesignationChange(selectedKey) {\n    var selected = Object.keys(selectedKey)[0];\n    var _selectedKey$selected = selectedKey[selected],\n        url = _selectedKey$selected.url,\n        designation = _selectedKey$selected.designation;\n    var bounds = calculateBounds(drawnPolygon);\n    setSelectedDesignation(selected);\n    setSelectedDesignationUrl(url);\n    setOverlayBounds(bounds);\n    var selectedStats = stats.find(function (stat) {\n      return stat[selected];\n    });\n\n    if (selectedStats) {\n      var _selectedStats$select = selectedStats[selected],\n          _url = _selectedStats$select.url,\n          _designation = _selectedStats$select.designation;\n      console.log(_url);\n      setSelectedStats(_designation);\n      setMin(parseFloat(_url.min).toFixed(2));\n      setMax(parseFloat(_url.max).toFixed(2));\n    }\n  };\n\n  useEffect(function () {\n    var abbreviationMapping = {\n      evi: \"Vegetation Index\",\n      nri: \"Built-Up Index\",\n      dswi: \"Dry Soil Water Index\",\n      ndwi: \"Normalized Water Index\",\n      evi2: \"Vegetation Index 2\",\n      truecolor: \"True Color\",\n      falsecolor: \"False Color\"\n    };\n    var modifiedDataArray = satellitesImages.flatMap(function (data) {\n      if (data && data.data[0]) {\n        return Object.entries(data.data[0].tile).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              key = _ref3[0],\n              value = _ref3[1];\n\n          var designation = abbreviationMapping[key] || key;\n          return _defineProperty({}, key, {\n            url: value,\n            designation: designation\n          });\n        });\n      }\n\n      return [];\n    }); // Remove entries for falsecolor, truecolor, and ndvi\n\n    var filteredDataArray = modifiedDataArray.filter(function (entry) {\n      var key = Object.keys(entry)[0];\n      return key !== \"falsecolor\" && key !== \"truecolor\" && key !== \"ndvi\" && key !== \"evi2\";\n    });\n    setDesignationData(filteredDataArray);\n  }, [satellitesImages]);\n  useEffect(function () {\n    var abbreviationMapping = {\n      evi: \"Vegetation Index\",\n      nri: \"Built-Up Index\",\n      dswi: \"Dry Soil Water Index\",\n      ndwi: \"Normalized Water Index\",\n      evi2: \"Vegetation Index 2\",\n      truecolor: \"True Color\",\n      falsecolor: \"False Color\"\n    };\n    var modifiedDataArrayStats = satellitesImages.flatMap(function (data) {\n      return Object.entries(data.data[0].stats).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            key = _ref6[0],\n            value = _ref6[1];\n\n        var designation = abbreviationMapping[key] || key;\n        return _defineProperty({}, key, {\n          url: value,\n          designation: designation\n        });\n      });\n    });\n    var filteredDataArrayStats = modifiedDataArrayStats.filter(function (entry) {\n      var key = Object.keys(entry)[0];\n      return key !== \"falsecolor\" && key !== \"truecolor\" && key !== \"ndvi\" && key !== \"evi2\";\n    });\n    setStats(filteredDataArrayStats);\n  }, [satellitesImages]);\n\n  var _useState27 = useState([36.806389, 10.181667]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      mapCenter = _useState28[0],\n      setMapCenter = _useState28[1];\n\n  var _useState29 = useState(10),\n      _useState30 = _slicedToArray(_useState29, 2),\n      zoomLevel = _useState30[0],\n      setZoomLevel = _useState30[1];\n\n  var mapRef = useRef(null);\n\n  var getCenterFromField = function getCenterFromField() {\n    if (data && data.length > 0) {\n      var firstField = data[0];\n      return [Number(firstField.Latitude), Number(firstField.Longitude)];\n    }\n\n    return null;\n  };\n\n  useEffect(function () {\n    var updateMapCenter = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var centerFromFields;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                centerFromFields = getCenterFromField();\n\n                if (centerFromFields) {\n                  setMapCenter(centerFromFields);\n                  setZoomLevel(17);\n                  mapRef.current.setView(centerFromFields, zoomLevel);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function updateMapCenter() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    updateMapCenter();\n  }, [data, mapRef, zoomLevel]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MapContainer, {\n    ref: mapRef,\n    style: {\n      borderRadius: 20,\n      boxShadow: '1px 1px 10px #bbb',\n      height: 300\n    },\n    className: \"markercluster-map\",\n    zoom: zoomLevel,\n    center: mapCenter // maxZoom={18}\n    ,\n    whenCreated: function whenCreated(map) {\n      mapRef.current = map; // Assign the map instance to mapRef.current\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeatureGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditControl, {\n    draw: draw,\n    edit: edit,\n    position: \"topright\",\n    onEdited: _onEdited,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ScaleControl, {\n    position: \"bottomleft\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TileLayer, {\n    maxNativeZoom: 18,\n    maxZoom: 20,\n    url: selectedDesignationUrl || 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    map: mapRef.current,\n    min: min,\n    max: max,\n    selectedStats: selectedStats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LeafletGeoCoder, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }), location.loaded && !location.error && /*#__PURE__*/React.createElement(Marker, {\n    position: [location.coordinates.lat, location.coordinates.lng],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"My position\")), markers.length > 0 && /*#__PURE__*/React.createElement(Marker, {\n    position: [markers[0], markers[1]],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Popup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, data[0].title)), markers.length > 0 && /*#__PURE__*/React.createElement(Polygon, {\n    pathOptions: {\n      color: '#26A6B7',\n      opacity: 0.5\n    },\n    positions: drawnPolygon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }), selectedDesignationUrl && overlayBounds && /*#__PURE__*/React.createElement(TileLayer, {\n    maxNativeZoom: 18,\n    maxZoom: 20,\n    key: selectedDesignationUrl,\n    url: selectedDesignationUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  })), isRequesting ? /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '100%',\n      marginTop: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: \"20px\",\n      marginRight: \"0px\",\n      marginLeft: \"0px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 10\n    }\n  }, designationData.length > 0 && designationData.map(function (item, indx) {\n    var key = Object.keys(item)[0];\n    var data = item[key];\n    return /*#__PURE__*/React.createElement(Col, {\n      lg: \"3\",\n      md: \"12\",\n      sm: \"12\",\n      style: {\n        padding: \"10px\",\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexWrap: \"wrap\"\n      },\n      key: indx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-4 p-0 \",\n      style: {\n        width: \"70px\",\n        height: \"100px\",\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        return handleCardClick(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-0 p-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      style: {\n        fontSize: \"12px\",\n        fontWeight: 'bold'\n      },\n      className: \"text-center py-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }\n    }, data.designation)), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        borderRadius: 50\n      },\n      width: 70,\n      height: 70,\n      top: true,\n      src: designationImageMap[data.designation],\n      alt: item.designation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    })));\n  })));\n};\n\nexport default SatteliteMap;","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Polygon","Circle","FeatureGroup","Marker","Popup","useMap","ImageOverlay","useGeoLocation","EditControl","api","L","MarkerObject","LeafletGeoCoder","axios","Card","CardBody","CardImg","CardTitle","Col","FormSelect","Row","IrrigationMap","ndvi","NitrogenMap","PlantHealthMap","LinearProgress","Button","SatelliteAltIcon","Box","ScaleControl","Legend","SatteliteMap","farms","data","selectedData","_onEdited","draw","edit","drawn","satellitesImages","position","location","overlayBounds","setOverlayBounds","drawnPolygon","setDrawnPolygon","isRequesting","setIsRequesting","selectedDesignation","setSelectedDesignation","selectedStats","setSelectedStats","designationData","setDesignationData","stats","setStats","selectedDesignationUrl","setSelectedDesignationUrl","Map","setMap","markers","setMarkers","center","setCenter","min","setMin","max","setMax","designationImageMap","console","log","length","Latitude","Longitude","Number","coordinates","map","field","coord","JSON","parse","co","push","Object","values","calculateBounds","latitudes","longitudes","bounds","Math","handleCardClick","selectedKey","handleDesignationChange","selected","keys","url","designation","find","stat","parseFloat","toFixed","abbreviationMapping","evi","nri","dswi","ndwi","evi2","truecolor","falsecolor","modifiedDataArray","flatMap","entries","tile","key","value","filteredDataArray","filter","entry","modifiedDataArrayStats","filteredDataArrayStats","mapCenter","setMapCenter","zoomLevel","setZoomLevel","mapRef","getCenterFromField","firstField","updateMapCenter","centerFromFields","current","setView","borderRadius","boxShadow","height","loaded","error","lat","lng","title","color","opacity","width","marginTop","marginRight","marginLeft","item","indx","padding","display","justifyContent","alignItems","flexWrap","cursor","fontSize","fontWeight"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/SatteliteMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Polygon, Circle, FeatureGroup, Marker, Popup, useMap, ImageOverlay } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"./Styles.css\";\nimport useGeoLocation from \"../utils/useGeoLocation\";\nimport { EditControl } from \"react-leaflet-draw\";\nimport api from \"../api/api\";\nimport L from 'leaflet';\nimport MarkerObject from \"./MarkerMap\"\nimport LeafletGeoCoder from \"./LeafletGeoCoder\";\nimport axios from \"axios\";\nimport {  Card, CardBody, CardImg, CardTitle, Col, FormSelect, Row } from \"shards-react\";\nimport IrrigationMap from '../images/Irrigation-index.png'\nimport ndvi from '../images/ndvi.png'\nimport NitrogenMap from '../images/Nitrogen-Map.png'\nimport PlantHealthMap from '../images/Plant-Health-gci.png'\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Button from '@mui/material/Button';\nimport SatelliteAltIcon from '@mui/icons-material/SatelliteAlt';\nimport { Box } from \"@mui/material\";\n\nimport { ScaleControl } from 'react-leaflet' \nimport Legend from \"./Legend\";\n\nconst SatteliteMap = ({farms, data, selectedData, _onEdited, draw, edit,drawn ,satellitesImages}) => {\n  const position = [33.8921, 9.5615];\n  const location = useGeoLocation();\n  //   const map = useMap();\n  const [overlayBounds, setOverlayBounds] = useState(null);\n  const [drawnPolygon, setDrawnPolygon] = useState(null);\n  const [isRequesting, setIsRequesting] = useState(false);\n  const [selectedDesignation, setSelectedDesignation] = useState('');\n  const [selectedStats, setSelectedStats] = useState('');\n  const [designationData, setDesignationData] = useState([]);\n  const [stats, setStats] = useState([])\n  const [selectedDesignationUrl, setSelectedDesignationUrl] = useState(null);\n  const [Map, setMap] = useState(null)\n  const [markers, setMarkers] = useState([]);\n  const [center, setCenter] = useState([33.8921, 9.5615]); \n  const [min, setMin] = useState('-');\n  const [max, setMax] = useState('-');\n\n  const designationImageMap = {\n    \"Vegetation Index\": ndvi,\n    \"Dry Soil Water Index\": IrrigationMap,\n    \"Normalized Water Index\": NitrogenMap,\n    \"Built-Up Index\": PlantHealthMap,\n    \"Difference Vegetation Index\": ndvi,\n    \"Vegetation Index 2\": ndvi,\n  };\n\n  console.log(stats)\n  \n  useEffect(() => {\n    if (data && data.length > 0) {\n      const { Latitude, Longitude } = data[0];\n      setCenter([Number(Latitude), Number(Longitude)]);\n      setMarkers([Number(Latitude), Number(Longitude)]);\n      \n    }\n  }, [data]);\n  useEffect(() => {\n    if( data.length > 0) {\n      let coordinates = []\n      data.map(field=>{\n        let coord = JSON.parse(field.coordinates)\n        if (coord) {\n          coord.map(co => {\n            coordinates.push(Object.values(co))\n          })\n        }\n      })\n      setDrawnPolygon(coordinates)\n    }\n  }, [data])\n  const calculateBounds = (coordinates) => {\n    const latitudes = coordinates.map(coord => coord[1]);\n    const longitudes = coordinates.map(coord => coord[0]);\n\n    const bounds = [\n      [Math.min(...latitudes), Math.min(...longitudes)],\n      [Math.max(...latitudes), Math.max(...longitudes)]\n    ];\n\n    return bounds;\n  };\n \n  const handleCardClick = (selectedKey) => {\n    handleDesignationChange(selectedKey);\n  };\n  \n  const handleDesignationChange = (selectedKey) => {\n    const selected = Object.keys(selectedKey)[0];\n    const { url, designation } = selectedKey[selected];\n    const bounds = calculateBounds(drawnPolygon);\n    setSelectedDesignation(selected);\n    setSelectedDesignationUrl(url);\n    setOverlayBounds(bounds);\n    const selectedStats = stats.find(stat => stat[selected]);\n    if (selectedStats) {\n      const { url , designation } = selectedStats[selected];\n      console.log(url)\n      setSelectedStats(designation)\n      setMin(parseFloat(url.min).toFixed(2));\n     setMax(parseFloat(url.max).toFixed(2));\n    }\n  };\n\n  useEffect(() => {\n    const abbreviationMapping = {\n      evi: \"Vegetation Index\",\n      nri: \"Built-Up Index\",\n      dswi: \"Dry Soil Water Index\",\n      ndwi: \"Normalized Water Index\",\n      evi2: \"Vegetation Index 2\",\n      truecolor: \"True Color\",\n      falsecolor: \"False Color\"\n    };\n  \n      const modifiedDataArray = satellitesImages.flatMap(data => {\n      if (data && data.data[0]) {\n      return Object.entries(data.data[0].tile).map(([key, value]) => {\n        const designation = abbreviationMapping[key] || key;\n        return {\n          [key]: {\n            url: value,\n            designation: designation\n          }\n        };\n      });\n      }\n      return [];\n    });\n  \n    // Remove entries for falsecolor, truecolor, and ndvi\n    const filteredDataArray = modifiedDataArray.filter(entry => {\n      const key = Object.keys(entry)[0];\n      return key !== \"falsecolor\" && key !== \"truecolor\" && key !== \"ndvi\" && key !== \"evi2\"\n      \n    });\n\n    setDesignationData(filteredDataArray);\n\n    \n  }, [satellitesImages]);\n\n  useEffect(() => {\n    const abbreviationMapping = {\n      evi: \"Vegetation Index\",\n      nri: \"Built-Up Index\",\n      dswi: \"Dry Soil Water Index\",\n      ndwi: \"Normalized Water Index\",\n      evi2: \"Vegetation Index 2\",\n      truecolor: \"True Color\",\n      falsecolor: \"False Color\"\n    };\n  \n    const modifiedDataArrayStats = satellitesImages.flatMap(data => {\n      return Object.entries(data.data[0].stats).map(([key, value]) => {\n        const designation = abbreviationMapping[key] || key;\n        return {\n          [key]: {\n            url: value,\n            designation: designation\n          }\n        };\n      });\n    });\n  \n    const filteredDataArrayStats = modifiedDataArrayStats.filter(entry => {\n      const key = Object.keys(entry)[0];\n      return key !== \"falsecolor\" && key !== \"truecolor\" && key !== \"ndvi\" && key !== \"evi2\";\n    });\n  \n    setStats(filteredDataArrayStats);\n  }, [satellitesImages]);\n  \n  \n\n\n  const [mapCenter, setMapCenter] = useState([36.806389, 10.181667]);\n  const [zoomLevel, setZoomLevel] = useState(10);\n  const mapRef = useRef(null);\n\n  const getCenterFromField = () => {\n    if (data && data.length > 0) {\n      const firstField = data[0];\n      return [Number(firstField.Latitude), Number(firstField.Longitude)];\n    }\n    return null;\n  };\n  useEffect(() => {\n    const updateMapCenter = async () => {\n      const centerFromFields = getCenterFromField();\n      if (centerFromFields) {\n        setMapCenter(centerFromFields);\n        setZoomLevel(17)\n        mapRef.current.setView(centerFromFields, zoomLevel);\n      }\n    };\n  \n    updateMapCenter();\n  }, [data, mapRef, zoomLevel]);\n\n\n  return (\n    <div>\n      <MapContainer ref={mapRef}\n        style={{ borderRadius: 20, boxShadow: '1px 1px 10px #bbb', height: 300 }}\n        className=\"markercluster-map\"\n        zoom={zoomLevel}\n        center={mapCenter}\n        // maxZoom={18}\n        whenCreated={(map) => {\n          mapRef.current = map; // Assign the map instance to mapRef.current\n        }}\n      >\n        <FeatureGroup>\n          <EditControl draw={draw} edit={edit} position=\"topright\"  onEdited={_onEdited} />\n          <ScaleControl position=\"bottomleft\" />\n        \n        </FeatureGroup>\n        <TileLayer\n          maxNativeZoom={18}\n          maxZoom={20}\n          url={selectedDesignationUrl || 'http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}'}\n          subdomains={['mt0', 'mt1', 'mt2', 'mt3']}\n        />\n        <Legend map={mapRef.current} min={min} max={max} selectedStats={selectedStats} />\n\n        <LeafletGeoCoder />\n\n        {location.loaded && !location.error && (\n          <Marker position={[location.coordinates.lat, location.coordinates.lng]}>\n            <Popup>My position</Popup>\n          </Marker>\n        )}\n         {markers.length > 0 && (\n          <Marker position={[markers[0], markers[1]]}>\n            <Popup>{data[0].title}</Popup>\n          </Marker>\n        )}\n         {markers.length > 0 && (\n          <Polygon\n            pathOptions={{ color: '#26A6B7' , opacity: 0.5 }}\n            positions={drawnPolygon}\n            \n          />\n        )}\n        {selectedDesignationUrl && overlayBounds && (\n          <TileLayer\n          maxNativeZoom={18}\n          maxZoom={20}\n          key={selectedDesignationUrl}\n            url={selectedDesignationUrl}\n          />\n        )}\n      </MapContainer>\n      {/* <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n        <Button  variant=\"outlined\" startIcon={<SatelliteAltIcon />} onClick={handleSendRequest} disabled={isRequesting || data.length === 0}>\n          {isRequesting ? 'Sending Request...' : 'Satellite Images'}\n        </Button>\n\n      </div> */}\n      {\n        isRequesting ?     \n    <Box sx={{ width: '100%', marginTop: \"10px\" }}>\n        <LinearProgress />\n\n    </Box>\n     : \n         <Row style={{marginTop: \"20px\",marginRight: \"0px\",marginLeft: \"0px\" }}>\n    {designationData.length > 0 &&\n  designationData.map((item, indx) => {\n    const key = Object.keys(item)[0];\n    const data = item[key];\n    return (\n      <Col lg=\"3\" md=\"12\" sm=\"12\" style={{ padding: \"10px\", display: 'flex', justifyContent: 'center', alignItems: 'center', flexWrap: \"wrap\" }} key={indx}>\n        <div className=\"m-4 p-0 \" style={{ width: \"70px\", height: \"100px\", cursor: \"pointer\" }} onClick={() => handleCardClick(item)}>\n          <div className=\"m-0 p-0\">\n            <h6 style={{ fontSize: \"12px\" ,fontWeight:'bold'  }} className=\"text-center py-1\">{data.designation}</h6>\n          </div>\n          <img style={{borderRadius:50}} width={70} height={70} top src={designationImageMap[data.designation]} alt={item.designation} />\n        </div>\n      </Col>\n    )\n  })}\n      </Row>\n      }\n    \n    </div>\n  );\n};\n\nexport default SatteliteMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}