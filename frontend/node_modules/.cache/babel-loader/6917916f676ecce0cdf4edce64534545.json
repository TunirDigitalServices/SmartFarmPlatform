{"ast":null,"code":"import _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/components/blog/PressionChart.js\";\n\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\nvar PressionChart = function PressionChart(_ref) {\n  var data = _ref.data,\n      title = _ref.title,\n      onSelect = _ref.onSelect;\n  var history = useHistory();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var getChartData = function getChartData() {\n    var labels = [];\n    var dataTemp = [];\n    var array = [];\n    data.map(function (sensorData) {\n      var dateTime = moment(sensorData.time); // use the full timestamp\n\n      var hour = dateTime.format('MMM Do HH:00'); // format date as \"MMM Do HH:00\"\n\n      var press = Number(sensorData.pressure) / 1000;\n      dataTemp.push(parseFloat(press).toFixed(2));\n      labels.push(hour);\n    }); // Reverse both labels and dataTemp arrays\n\n    labels.reverse();\n    dataTemp.reverse();\n    var state = {\n      labels: labels,\n      datasets: [{\n        label: 'Pression',\n        lineTension: 0.5,\n        borderWidth: 2,\n        data: dataTemp,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }]\n    };\n    setState(state);\n  };\n\n  useEffect(function () {\n    getChartData();\n  }, [data]);\n\n  var goToSelctedChart = function goToSelctedChart(title) {\n    history.push(\"/Graphs/\".concat(title));\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom d-flex justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, title, /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      return onSelect(\"PressionChart\");\n    },\n    squared: true,\n    theme: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24\",\n    width: \"24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.075 21.2Q4.125 21.2 3.463 20.538Q2.8 19.875 2.8 18.925V5.075Q2.8 4.125 3.463 3.462Q4.125 2.8 5.075 2.8H12V5.075H5.075Q5.075 5.075 5.075 5.075Q5.075 5.075 5.075 5.075V18.925Q5.075 18.925 5.075 18.925Q5.075 18.925 5.075 18.925H18.925Q18.925 18.925 18.925 18.925Q18.925 18.925 18.925 18.925V12H21.2V18.925Q21.2 19.875 20.538 20.538Q19.875 21.2 18.925 21.2ZM9.875 15.7 8.3 14.125 17.35 5.075H14V2.8H21.2V10H18.925V6.65Z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 76\n    }\n  })))), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    options: {\n      title: {\n        display: true,\n        text: 'Pression (kPa)',\n        fontSize: 15\n      },\n      legend: {\n        display: true,\n        position: 'bottom'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default PressionChart;","map":{"version":3,"names":["moment","React","useState","useEffect","Line","useHistory","Row","Col","Card","CardHeader","CardBody","Button","PressionChart","data","title","onSelect","history","state","setState","getChartData","labels","dataTemp","array","map","sensorData","dateTime","time","hour","format","press","Number","pressure","push","parseFloat","toFixed","reverse","datasets","label","lineTension","borderWidth","fill","backgroundColor","borderColor","goToSelctedChart","window","location","reload","display","text","fontSize","legend","position"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/components/blog/PressionChart.js"],"sourcesContent":["import moment from 'moment';\nimport React , {useState,useEffect}from 'react'\nimport { Line } from  'react-chartjs-2';\nimport { useHistory } from 'react-router-dom';\nimport { Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\n\n\nconst PressionChart = ({data,title,onSelect}) => {\n\n    const history = useHistory()\n\n    const [state,setState] = useState(null)\n \n    const getChartData = () => {\n    \n        let labels = []   \n        let dataTemp = []\n        let array = []\n\n            data.map(sensorData=>{\n              const dateTime = moment(sensorData.time); // use the full timestamp\n              const hour = dateTime.format('MMM Do HH:00'); // format date as \"MMM Do HH:00\"\n                let press = Number(sensorData.pressure) / 1000\n                dataTemp.push(parseFloat(press).toFixed(2))\n                labels.push(hour);\n               \n\n            })\n             // Reverse both labels and dataTemp arrays\n              labels.reverse();\n              dataTemp.reverse();\n\n        const state = {\n            labels: labels,\n            datasets: [\n              {\n                label: 'Pression',\n                lineTension: 0.5,\n                borderWidth: 2,\n                data: dataTemp,\n                fill: true,\n                backgroundColor: \"rgba(75,192,192,0.2)\",\n                borderColor: \"rgba(75,192,192,1)\"\n              }\n            ]\n          }\n          setState(state)\n    }\n\n    useEffect(()=>{\n        getChartData()\n    },[data])\n   const goToSelctedChart = (title) => {\n        history.push(`/Graphs/${title}`);\n        window.location.reload();\n      }\n\n    return (\n        <Card className=\"h-100\">\n        <CardHeader className=\"border-bottom d-flex justify-content-between\">\n            {title}\n          <Button onClick={() => onSelect(\"PressionChart\")} squared theme=\"light\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\"><path d=\"M5.075 21.2Q4.125 21.2 3.463 20.538Q2.8 19.875 2.8 18.925V5.075Q2.8 4.125 3.463 3.462Q4.125 2.8 5.075 2.8H12V5.075H5.075Q5.075 5.075 5.075 5.075Q5.075 5.075 5.075 5.075V18.925Q5.075 18.925 5.075 18.925Q5.075 18.925 5.075 18.925H18.925Q18.925 18.925 18.925 18.925Q18.925 18.925 18.925 18.925V12H21.2V18.925Q21.2 19.875 20.538 20.538Q19.875 21.2 18.925 21.2ZM9.875 15.7 8.3 14.125 17.35 5.075H14V2.8H21.2V10H18.925V6.65Z\" /></svg>\n          </Button>\n        </CardHeader>\n        <CardBody className=\"p-0\">\n      <Line\n      data={state}\n          options={{\n            title:{\n              display:true,\n              text:'Pression (kPa)',\n              fontSize:15\n            },\n            legend:{\n              display:true,\n              position:'bottom'\n            }\n          }}\n      />\n  </CardBody>\n      </Card>\n  );\n}\n\nexport default PressionChart"],"mappings":"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"},"metadata":{},"sourceType":"module"}