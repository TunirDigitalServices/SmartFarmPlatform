{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SmartFarm app\\\\backoffice\\\\frontend\\\\src\\\\admin\\\\SensorsManagement.js\";\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, FormGroup, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react';\nimport PageTitle from '../components/common/PageTitle';\nimport api from '../../src/api/api';\nimport { useTranslation } from 'react-i18next';\nimport Pagination from '../views/Pagination';\nimport { useHistory } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport sensorImg from \"../images/smartfarm_capteur.png\";\nimport LoadingSpinner from '../components/common/LoadingSpinner';\nimport moment from 'moment';\nimport { LinearProgress } from '@mui/material';\n\nvar SensorsManagement = function SensorsManagement() {\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sensorsPerPage = _useState4[0],\n      setSensorPerPage = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentPage = _useState6[0],\n      setCurrentPage = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      SearchCode = _useState8[0],\n      setSearchCode = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedUser = _useState10[0],\n      setSelectedUser = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedSupplier = _useState12[0],\n      setSelectedSupplier = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isLoading = _useState14[0],\n      setIsLoading = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      code = _useState16[0],\n      setCode = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sensorId = _useState18[0],\n      setSensorId = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      singleSensor = _useState20[0],\n      setSingleSensor = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userUid = _useState22[0],\n      setUserUid = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      users = _useState24[0],\n      setUsers = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      allSensors = _useState26[0],\n      setAllSensors = _useState26[1];\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      lastData = _useState28[0],\n      setLastData = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      frequency = _useState30[0],\n      setFrequency = _useState30[1];\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      existUsers = _useState32[0],\n      setExistUsers = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      existSuppliers = _useState34[0],\n      setExistSuppliers = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      supplierUid = _useState36[0],\n      setSupplierUid = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      supplier = _useState38[0],\n      setSupplier = _useState38[1];\n\n  var _useState39 = useState(new Date()),\n      _useState40 = _slicedToArray(_useState39, 2),\n      currentTime = _useState40[0],\n      setCurrentTime = _useState40[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setCurrentTime(new Date());\n    }, 120000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var sendNotificationEmail = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userEmail, sensorState, sensorInfo) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.post('/admin/send-notification-email', {\n                userEmail: userEmail,\n                sensorState: sensorState,\n                sensorInfo: sensorInfo\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error sending email notification:', _context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function sendNotificationEmail(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (users.length > 0) {\n      var checkSensor = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n          var response, inactiveSensors;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return api.get('/admin/check-sensor-status');\n\n                case 3:\n                  response = _context2.sent;\n                  inactiveSensors = response.data.inactiveSensors;\n                  inactiveSensors.forEach(function (inactiveSensor) {\n                    var sensorCode = inactiveSensor.sensor.code;\n                    var ownerName = '';\n                    var supplierName = ''; // You need to retrieve the owner name based on user_id\n\n                    var lastDataTime = new Date(inactiveSensor.data.time); // Additional information from the inactiveSensor object if needed\n\n                    var sensorId = inactiveSensor.sensor.id;\n                    var supplierId = inactiveSensor.sensor.supplier_id;\n                    users.map(function (user) {\n                      if (user.id === inactiveSensor.sensor.user_id) {\n                        ownerName = user.name;\n                      }\n                    });\n                    existSuppliers.map(function (user) {\n                      if (user.id === inactiveSensor.sensor.supplier_id) {\n                        supplierName = user.name;\n                      }\n                    });\n                    sendNotificationEmail(\"contact@smartfarm.com.tn\", 'Inactive', {\n                      sensorCode: sensorCode,\n                      ownerName: ownerName,\n                      lastDataTime: lastDataTime,\n                      supplierName: supplierName\n                    });\n                  });\n                  _context2.next = 11;\n                  break;\n\n                case 8:\n                  _context2.prev = 8;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  console.error(_context2.t0);\n\n                case 11:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 8]]);\n        }));\n\n        return function checkSensor() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      var statusCheckInterval = setInterval(function () {\n        checkSensor();\n      }, 5 * 60 * 1000); // 5 minutes\n\n      return function () {\n        return clearInterval(statusCheckInterval);\n      };\n    }\n  }, [users, existSuppliers]);\n\n  var getAllSensors = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/admin/all-sensors').then(function (response) {\n                var dataSensors = [];\n                var dataSensorApi = [];\n                var frequencyData = [];\n                var sensorsData = response.data.sensors;\n                sensorsData.map(function (data) {\n                  if (data.data) {\n                    dataSensors.push(data.sensor);\n                    frequencyData.push(data.config);\n                    dataSensorApi.push(data.data);\n                  }\n                });\n                setAllSensors(dataSensors);\n                setLastData(dataSensorApi);\n                setFrequency(frequencyData);\n              }).catch(function (err) {\n                console.log(err);\n              }).finally(function () {\n                return setIsLoading(false);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getAllSensors() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getExistUsers = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api.get('/admin/users').then(function (response) {\n                var Data = response.data.users;\n                setExistUsers(Data);\n                setSupplier(false);\n                setSupplierUid('');\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function getExistUsers() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var getExistSuppliers = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return api.get('/admin/exist-suppliers').then(function (response) {\n                var Data = response.data.suppliers;\n                setExistSuppliers(Data);\n                setSupplierUid(Data.uid);\n                setSupplier(true);\n                setUserUid('');\n              }).catch(function (err) {\n                console.log(err);\n              });\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getExistSuppliers() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getUsersList = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return api.get(\"/admin/users\").then(function (response) {\n                var usersData = response.data.users;\n                setUsers(usersData);\n              });\n\n            case 2:\n              data = _context6.sent;\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getUsersList() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getAllSensors();\n    getUsersList();\n    getExistUsers();\n    getExistSuppliers();\n  }, []);\n  var filteredSensors = allSensors.filter(function (sensor) {\n    if (SearchCode !== '') {\n      return sensor.code.toLowerCase().includes(SearchCode.toLowerCase());\n    }\n\n    if (selectedUser !== '') {\n      return sensor.user_id == selectedUser;\n    }\n\n    if (selectedSupplier !== '') {\n      return sensor.supplier_id == selectedSupplier;\n    }\n\n    return sensor;\n  }); // Pagination \n\n  var indexOfLastPost = currentPage * sensorsPerPage;\n  var indexOfFirstPost = indexOfLastPost - sensorsPerPage;\n  var currentSensors = filteredSensors.slice(indexOfFirstPost, indexOfLastPost);\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  var assignSensorToUser = function assignSensorToUser(userUid, supplierUid) {\n    var data = {\n      code: code,\n      user_uid: userUid,\n      supplier_uid: supplierUid\n    };\n    api.post('/admin/edit-sensor', data).then(function (response) {\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('sensor_updated')), {\n          icon: \"success\"\n        });\n        setToggle(false);\n        getAllSensors();\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Error'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Error'\n      });\n    });\n  };\n\n  var getSingleSensor = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(sensorid, type) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return api.get(\"/admin/single-sensor/\".concat(sensorid)).then(function (res) {\n                var sensorData = res.data.sensor;\n                setSingleSensor(sensorData);\n                setCode(sensorData.code);\n                existUsers.map(function (user) {\n                  if (user.id === sensorData.user_id) {\n                    setUserUid(user.uid);\n                  }\n                });\n                existSuppliers.map(function (supplier) {\n                  if (supplier.id === sensorData.supplier_id) {\n                    setSupplierUid(supplier.uid);\n                  }\n                });\n              }).catch(function (error) {\n                swal({\n                  title: \"Error\",\n                  icon: \"error\"\n                });\n              });\n\n            case 2:\n              setToggle(!toggle);\n\n              if (type === \"User\") {\n                getExistUsers();\n              }\n\n              if (type === 'Supplier') {\n                getExistSuppliers();\n              }\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function getSingleSensor(_x4, _x5) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var resetForm = function resetForm() {\n    setTimeout(function () {\n      setUserUid('');\n      setSupplierUid('');\n    }, 1000);\n  };\n\n  var handleCalculSensor = function handleCalculSensor() {\n    api.post('/calcul/add-sensor-calcul').then(function (response) {\n      console.log(response.data.message);\n\n      if (response.data.type === 'success') {\n        swal(\"\".concat(t('calcul_added')), {\n          icon: \"success\"\n        });\n      }\n\n      if (response.data.type === 'danger') {\n        swal({\n          icon: 'error',\n          title: 'Oops...'\n        });\n      }\n    }).catch(function (err) {\n      swal({\n        icon: 'error',\n        title: 'Oops...'\n      });\n    });\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(sensorUid) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              console.log(sensorUid);\n              data = {\n                sensor_uid: sensorUid\n              };\n              _context8.next = 4;\n              return api.delete('/sensor/delete-sensor', {\n                data: data\n              }).then(function (response) {\n                if (response.data.type && response.data.type == \"danger\") {\n                  swal({\n                    title: \"Cannot Delete Sensor\",\n                    icon: \"warning\"\n                  });\n                }\n\n                if (response.data.type == \"success\") {\n                  getAllSensors();\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Cannot Delete Sensor\",\n                  icon: \"Error\",\n                  text: 'Error'\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function handleDelete(_x6) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var confirmDelete = function confirmDelete(sensorUid) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this sensor!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (Delete) {\n      if (Delete) {\n        handleDelete(sensorUid);\n        swal(\" Sensor has been deleted!\", {\n          icon: \"success\"\n        });\n      }\n    }).catch(function (error) {\n      swal({\n        title: \"Cannot Delete sensor\",\n        icon: \"Error\",\n        text: 'Error'\n      });\n    });\n  };\n\n  var fetchDataSensor = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(sensorUid, code) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return api.post('/sensor/activate-synch', {\n                sensor_uid: sensorUid\n              }).then(function (response) {\n                if (response.data.type === \"success\") {\n                  swal(\"\".concat(t('sensor_updated')), {\n                    icon: \"success\"\n                  });\n                  getAllSensors();\n                }\n\n                if (response.data.type === \"danger\") {\n                  swal({\n                    icon: \"error\",\n                    text: 'Error'\n                  });\n                }\n              }).catch(function (err) {\n                swal({\n                  icon: \"error\",\n                  text: 'Error'\n                });\n              });\n\n            case 3:\n              _context9.next = 8;\n              break;\n\n            case 5:\n              _context9.prev = 5;\n              _context9.t0 = _context9[\"catch\"](0);\n              swal({\n                icon: \"error\",\n                text: 'Error'\n              });\n\n            case 8:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 5]]);\n    }));\n\n    return function fetchDataSensor(_x7, _x8) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  var handleSensorsPerPageChange = function handleSensorsPerPageChange(event) {\n    return setSensorPerPage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('list_sensors'),\n    subtitle: t('list_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('search_sensors'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    value: SearchCode,\n    onChange: function onChange(e) {\n      return setSearchCode(e.target.value);\n    },\n    id: \"search\",\n    placeholder: \"Search By code\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      return setSelectedUser(e.target.value);\n    },\n    value: selectedUser,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, selectedUser === \"\" ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 45\n    }\n  }, \"Select by user\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 45\n    }\n  }, t('see_all')), existUsers.sort(function (a, b) {\n    return a.name.localeCompare(b.name);\n  }).map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 52\n      }\n    }, user.name);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelect, {\n    onChange: function onChange(e) {\n      return setSelectedSupplier(e.target.value);\n    },\n    value: selectedSupplier,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }, selectedSupplier === \"\" ? /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 45\n    }\n  }, \"Select by supplier\") : /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 45\n    }\n  }, t('see_all')), existSuppliers.sort(function (a, b) {\n    return a.name.localeCompare(b.name);\n  }).map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 52\n      }\n    }, user.name);\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return history.push('/admin/add-sensor');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 29\n    }\n  }, \"Add Sensor\"), /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return handleCalculSensor();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 29\n    }\n  }, \"Calcul\")))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-2 justify-content-center flex-column align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"px-2\",\n    htmlFor: \"sensorsPerPage\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 25\n    }\n  }, \"Sensors per page: \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"sensorsPerPage\",\n    value: sensorsPerPage,\n    onChange: handleSensorsPerPageChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 29\n    }\n  }, \"20\"))), /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: sensorsPerPage,\n    totalUsers: allSensors.length,\n    paginate: paginate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"my-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center table-hover table-responsive-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 41\n    }\n  }, t('sensor_code')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 41\n    }\n  }, t('user')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 41\n    }\n  }, t('supplier')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 41\n    }\n  }, t('last_reading')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 41\n    }\n  }, t('expected')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 41\n    }\n  }, t('statu')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 41\n    }\n  }, t('actions')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 33\n    }\n  }, currentSensors.map(function (sensor, index) {\n    var dataIndex = allSensors.findIndex(function (s) {\n      return s.id === sensor.id;\n    });\n    var nameUser = '-';\n    var nameSupplier = '-';\n    var frequencyValue = '-';\n    var lastDataTime = '-';\n    var formattedTime = '-';\n    users.map(function (user) {\n      if (user.id === sensor.user_id) {\n        nameUser = user.name;\n      }\n    });\n    existSuppliers.map(function (user) {\n      if (user.id === sensor.supplier_id) {\n        nameSupplier = user.name;\n      }\n    });\n\n    if (frequency.length > 0 && lastData.length > 0 && lastData[dataIndex]) {\n      lastDataTime = moment(lastData[dataIndex].time).add(1, 'hours').format('YYYY-MM-DD HH:mm');\n      frequencyValue = frequency[dataIndex].frequence;\n    }\n\n    var newTime = moment(lastDataTime).add(frequencyValue, 'seconds');\n    formattedTime = newTime.format('YYYY-MM-DD HH:mm');\n    var timeStartDifference = moment(lastDataTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\n    var timeEndDifference = moment(formattedTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\n    var timeEndAfterRange = timeEndDifference + 15 * 60;\n    var sensorState = timeStartDifference < 0 && timeEndAfterRange > 0 ? 'Active' : 'Inactive';\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 53\n      }\n    }, sensor.code), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 53\n      }\n    }, nameUser), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 53\n      }\n    }, nameSupplier), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 53\n      }\n    }, lastDataTime.toString()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        fontSize: 11.5,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 53\n      }\n    }, formattedTime.toString()), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        color: sensorState === 'Active' ? 'green' : 'red',\n        fontSize: 13,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 53\n      }\n    }, sensorState), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 53\n      }\n    }, sensor.deleted_at === null ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Edit\",\n      onClick: function onClick() {\n        history.push({\n          pathname: \"/admin/edit-sensor/\".concat(sensor.id),\n          state: {\n            lastDataTime: lastDataTime,\n            formattedTime: formattedTime,\n            sensorState: sensorState\n          }\n        });\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 79\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"History\",\n      onClick: function onClick() {\n        history.push(\"/my-history/\".concat(sensor.code));\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 177\n      }\n    }, \"\\uE889\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"Delete\",\n      onClick: function onClick() {\n        confirmDelete(sensor.uid);\n      },\n      squared: true,\n      theme: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 161\n      }\n    }, \"\\uE872\")), sensor.synchronized === \"0\" ? /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        return fetchDataSensor(sensor.uid, sensor.code);\n      },\n      squared: true,\n      theme: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 163\n      }\n    }, \"\\uE627\")) : null) : null), sensor.deleted_at === null ? /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: function onClick() {\n        return getSingleSensor(sensor.id, 'User');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 69\n      }\n    }, \"Assign to user\"), /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: function onClick() {\n        return getSingleSensor(sensor.id, 'Supplier');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 69\n      }\n    }, \"Assign to supplier\"))) : null, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 53\n      }\n    }));\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    centered: true,\n    open: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 21\n    }\n  }, \"Sensor code : \", code), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      return assignSensorToUser(userUid, supplierUid);\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 29\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      resetForm();\n      setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 29\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"8\",\n    sm: \"8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 33\n    }\n  }, \"Select a user to assign sensor\"), supplier === true ? /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: supplierUid,\n    onChange: function onChange(e) {\n      return setSupplierUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 45\n    }\n  }, \"Select Supplier\"), existSuppliers.map(function (supplier) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: supplier.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 60\n      }\n    }, supplier.name);\n  })) : /*#__PURE__*/React.createElement(FormSelect, {\n    id: \"users\",\n    value: userUid,\n    onChange: function onChange(e) {\n      setUserUid(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 45\n    }\n  }, \"Select User\"), existUsers.map(function (user) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: user.uid,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 60\n      }\n    }, user.name);\n  }))))))));\n};\n\nexport default SensorsManagement;","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Row","Col","Card","CardBody","CardHeader","CardFooter","FormGroup","FormInput","ButtonGroup","Button","Modal","ModalHeader","ModalBody","FormSelect","PageTitle","api","useTranslation","Pagination","useHistory","swal","sensorImg","LoadingSpinner","moment","LinearProgress","SensorsManagement","history","toggle","setToggle","sensorsPerPage","setSensorPerPage","currentPage","setCurrentPage","SearchCode","setSearchCode","selectedUser","setSelectedUser","selectedSupplier","setSelectedSupplier","isLoading","setIsLoading","code","setCode","sensorId","setSensorId","singleSensor","setSingleSensor","userUid","setUserUid","users","setUsers","allSensors","setAllSensors","lastData","setLastData","frequency","setFrequency","existUsers","setExistUsers","existSuppliers","setExistSuppliers","supplierUid","setSupplierUid","supplier","setSupplier","Date","currentTime","setCurrentTime","interval","setInterval","clearInterval","t","i18n","sendNotificationEmail","userEmail","sensorState","sensorInfo","post","console","error","length","checkSensor","get","response","inactiveSensors","data","forEach","inactiveSensor","sensorCode","sensor","ownerName","supplierName","lastDataTime","time","id","supplierId","supplier_id","map","user","user_id","name","statusCheckInterval","getAllSensors","then","dataSensors","dataSensorApi","frequencyData","sensorsData","sensors","push","config","catch","err","log","finally","getExistUsers","Data","getExistSuppliers","suppliers","uid","getUsersList","usersData","filteredSensors","filter","toLowerCase","includes","indexOfLastPost","indexOfFirstPost","currentSensors","slice","paginate","pageNumber","assignSensorToUser","user_uid","supplier_uid","type","icon","title","text","getSingleSensor","sensorid","res","sensorData","resetForm","setTimeout","handleCalculSensor","message","handleDelete","sensorUid","sensor_uid","delete","confirmDelete","buttons","dangerMode","Delete","fetchDataSensor","handleSensorsPerPageChange","event","target","value","e","sort","a","b","localeCompare","index","dataIndex","findIndex","s","nameUser","nameSupplier","frequencyValue","formattedTime","add","format","frequence","newTime","timeStartDifference","diff","timeEndDifference","timeEndAfterRange","fontSize","fontWeight","toString","color","deleted_at","pathname","state","synchronized","display","justifyContent"],"sources":["C:/Users/HP/Desktop/SmartFarm app/backoffice/frontend/src/admin/SensorsManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, FormGroup, FormInput, ButtonGroup, Button, Modal, ModalHeader, ModalBody, FormSelect } from 'shards-react'\r\nimport PageTitle from '../components/common/PageTitle'\r\nimport api from '../../src/api/api'\r\nimport { useTranslation } from 'react-i18next';\r\nimport Pagination from '../views/Pagination';\r\nimport { useHistory } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport sensorImg from \"../images/smartfarm_capteur.png\"\r\nimport LoadingSpinner from '../components/common/LoadingSpinner'\r\nimport moment from 'moment';\r\nimport { LinearProgress } from '@mui/material';\r\n\r\n\r\nconst SensorsManagement = () => {\r\n\r\n    const history = useHistory()\r\n\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    const [sensorsPerPage, setSensorPerPage] = useState(10)\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [SearchCode, setSearchCode] = useState('')\r\n    const [selectedUser, setSelectedUser] = useState('')\r\n    const [selectedSupplier, setSelectedSupplier] = useState('')\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [code, setCode] = useState('')\r\n    const [sensorId, setSensorId] = useState('')\r\n\r\n    const [singleSensor, setSingleSensor] = useState('')\r\n\r\n    const [userUid, setUserUid] = useState('')\r\n    const [users, setUsers] = useState([])\r\n\r\n    const [allSensors, setAllSensors] = useState([])\r\n    const [lastData, setLastData] = useState([])\r\n    const [frequency, setFrequency] = useState([])\r\n\r\n    const [existUsers, setExistUsers] = useState([])\r\n\r\n    const [existSuppliers, setExistSuppliers] = useState([])\r\n    const [supplierUid, setSupplierUid] = useState('')\r\n\r\n    const [supplier, setSupplier] = useState(false)\r\n    const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCurrentTime(new Date());\r\n        }, 120000);\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n\r\n    const sendNotificationEmail = async (userEmail, sensorState, sensorInfo) => {\r\n        try {\r\n          await api.post('/admin/send-notification-email', {\r\n            userEmail,\r\n            sensorState,\r\n            sensorInfo,\r\n          });\r\n        } catch (error) {\r\n          console.error('Error sending email notification:', error);\r\n        }\r\n      };\r\n\r\n      \r\n      useEffect(() => {\r\n        if(users.length > 0 ) {\r\n            const checkSensor = async () => {\r\n          \r\n              try {\r\n                const response = await api.get('/admin/check-sensor-status');\r\n                const inactiveSensors = response.data.inactiveSensors;\r\n                inactiveSensors.forEach(inactiveSensor => {\r\n                  const sensorCode = inactiveSensor.sensor.code;\r\n                  let ownerName = '';\r\n                  let supplierName = ''; // You need to retrieve the owner name based on user_id\r\n                  const lastDataTime = new Date(inactiveSensor.data.time);\r\n      \r\n                  // Additional information from the inactiveSensor object if needed\r\n                  const sensorId = inactiveSensor.sensor.id;\r\n                  const supplierId = inactiveSensor.sensor.supplier_id;\r\n                  users.map(user => {\r\n                      if (user.id === inactiveSensor.sensor.user_id) {\r\n                          ownerName = user.name\r\n                      }\r\n                  })\r\n                  existSuppliers.map(user => {\r\n                      if (user.id === inactiveSensor.sensor.supplier_id) {\r\n                          supplierName = user.name\r\n                      }\r\n                  })\r\n                 sendNotificationEmail(\"contact@smartfarm.com.tn\", 'Inactive', {\r\n                    sensorCode,\r\n                    ownerName,\r\n                    lastDataTime,\r\n                    supplierName,\r\n                });\r\n              });\r\n              } catch (error) {\r\n                console.error(error)\r\n              }\r\n            };\r\n        \r\n            const statusCheckInterval = setInterval(() => {\r\n                checkSensor();\r\n              }, 5 * 60 * 1000); // 5 minutes\r\n          \r\n              return () => clearInterval(statusCheckInterval);\r\n\r\n        }\r\n\r\n      }, [users , existSuppliers])\r\n      \r\n\r\n\r\n    const getAllSensors = async () => {\r\n        await api.get('/admin/all-sensors')\r\n            .then(response => {\r\n                let dataSensors = [];\r\n                let dataSensorApi = [];\r\n                let frequencyData = [];\r\n                let sensorsData = response.data.sensors;\r\n\r\n                sensorsData.map(data => {\r\n                    if (data.data) {\r\n                        dataSensors.push(data.sensor);\r\n                        frequencyData.push(data.config);\r\n                        dataSensorApi.push(data.data);\r\n                    }\r\n                });\r\n\r\n                setAllSensors(dataSensors);\r\n                setLastData(dataSensorApi);\r\n                setFrequency(frequencyData);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    };\r\n\r\n    const getExistUsers = async () => {\r\n        await api.get('/admin/users')\r\n            .then(response => {\r\n                var Data = response.data.users\r\n                setExistUsers(Data)\r\n                setSupplier(false)\r\n                setSupplierUid('')\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const getExistSuppliers = async () => {\r\n        await api.get('/admin/exist-suppliers')\r\n            .then(response => {\r\n                var Data = response.data.suppliers\r\n                setExistSuppliers(Data)\r\n                setSupplierUid(Data.uid)\r\n                setSupplier(true)\r\n                setUserUid('')\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const getUsersList = async () => {\r\n        let data = await api.get(\"/admin/users\")\r\n            .then(response => {\r\n                let usersData = response.data.users\r\n                setUsers(usersData)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllSensors()\r\n        getUsersList()\r\n        getExistUsers()\r\n        getExistSuppliers()\r\n    }, [])\r\n    const filteredSensors = allSensors.filter(sensor => {\r\n        if (SearchCode !== '') {\r\n            return (\r\n                sensor.code.toLowerCase().includes(SearchCode.toLowerCase())\r\n            )\r\n        }\r\n        if (selectedUser !== '') {\r\n            return (\r\n                sensor.user_id == selectedUser\r\n            )\r\n        }\r\n        if (selectedSupplier !== '') {\r\n            return (\r\n                sensor.supplier_id == selectedSupplier\r\n            )\r\n        }\r\n        return sensor\r\n    })\r\n\r\n\r\n    // Pagination \r\n\r\n    const indexOfLastPost = currentPage * sensorsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - sensorsPerPage;\r\n    const currentSensors = filteredSensors.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const assignSensorToUser = (userUid, supplierUid) => {\r\n        let data = {\r\n            code: code,\r\n            user_uid: userUid,\r\n            supplier_uid: supplierUid\r\n        }\r\n        api.post('/admin/edit-sensor', data)\r\n            .then(response => {\r\n                if (response.data.type === 'success') {\r\n                    swal(`${t('sensor_updated')}`, {\r\n                        icon: \"success\",\r\n                    });\r\n                    setToggle(false)\r\n                    getAllSensors()\r\n                }\r\n                if (response.data.type === 'danger') {\r\n                    swal({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Error'\r\n                    })\r\n\r\n                }\r\n            }).catch(err => {\r\n                swal({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Error'\r\n                })\r\n            })\r\n    }\r\n\r\n    const getSingleSensor = async (sensorid, type) => {\r\n\r\n        await api.get(`/admin/single-sensor/${sensorid}`)\r\n            .then(res => {\r\n                let sensorData = res.data.sensor\r\n                setSingleSensor(sensorData)\r\n                setCode(sensorData.code)\r\n                existUsers.map(user => {\r\n                    if (user.id === sensorData.user_id) {\r\n                        setUserUid(user.uid)\r\n                    }\r\n                })\r\n                existSuppliers.map(supplier => {\r\n                    if (supplier.id === sensorData.supplier_id) {\r\n                        setSupplierUid(supplier.uid)\r\n                    }\r\n                })\r\n            }).catch(error => {\r\n                swal({\r\n                    title: \"Error\",\r\n                    icon: \"error\",\r\n\r\n                });\r\n\r\n            })\r\n        setToggle(!toggle)\r\n        if (type === \"User\") {\r\n            getExistUsers()\r\n        } if (type === 'Supplier') {\r\n            getExistSuppliers()\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setTimeout(() => {\r\n            setUserUid('')\r\n            setSupplierUid('')\r\n\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    const handleCalculSensor = () => {\r\n        api.post('/calcul/add-sensor-calcul')\r\n            .then(response => {\r\n                console.log(response.data.message)\r\n                if (response.data.type === 'success') {\r\n                    swal(`${t('calcul_added')}`, {\r\n                        icon: \"success\",\r\n                    });\r\n                }\r\n                if (response.data.type === 'danger') {\r\n                    swal({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                    })\r\n\r\n                }\r\n            }).catch(err => {\r\n                swal({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleDelete = async sensorUid => {\r\n        console.log(sensorUid)\r\n\r\n        let data = {\r\n            sensor_uid: sensorUid,\r\n        }\r\n        await api.delete('/sensor/delete-sensor', { data: data })\r\n            .then(response => {\r\n                if (response.data.type && response.data.type == \"danger\") {\r\n                    swal({\r\n                        title: \"Cannot Delete Sensor\",\r\n                        icon: \"warning\",\r\n                    });\r\n                }\r\n                if (response.data.type == \"success\") {\r\n                    getAllSensors();\r\n\r\n                }\r\n            }).catch(error => {\r\n                swal({\r\n                    title: \"Cannot Delete Sensor\",\r\n                    icon: \"Error\",\r\n                    text: 'Error'\r\n\r\n                });\r\n            })\r\n    }\r\n\r\n    const confirmDelete = sensorUid => {\r\n\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this sensor!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((Delete) => {\r\n                if (Delete) {\r\n                    handleDelete(sensorUid)\r\n                    swal(\" Sensor has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                }\r\n            }).catch(error => {\r\n                swal({\r\n                    title: \"Cannot Delete sensor\",\r\n                    icon: \"Error\",\r\n                    text: 'Error'\r\n\r\n                });\r\n            })\r\n\r\n    }\r\n    const fetchDataSensor = async (sensorUid, code) => {\r\n        try {\r\n            await api.post('/sensor/activate-synch', { sensor_uid: sensorUid })\r\n                .then(response => {\r\n                    if (response.data.type === \"success\") {\r\n                        swal(`${t('sensor_updated')}`, {\r\n                            icon: \"success\",\r\n                        });\r\n                        getAllSensors()\r\n                    }\r\n                    if (response.data.type === \"danger\") {\r\n                        swal({\r\n                            icon: \"error\",\r\n                            text: 'Error'\r\n                        });\r\n                    }\r\n                }).catch(err => {\r\n                    swal({\r\n                        icon: \"error\",\r\n                        text: 'Error'\r\n                    });\r\n                })\r\n\r\n        } catch (error) {\r\n            swal({\r\n                icon: \"error\",\r\n                text: 'Error'\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleSensorsPerPageChange = (event) => setSensorPerPage(event.target.value);\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row noGutters className=\"page-header py-4\">\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        title={t('list_sensors')}\r\n                        subtitle={t('list_sensors')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Row>\r\n                    <PageTitle\r\n                        sm=\"4\"\r\n                        subtitle={t('search_sensors')}\r\n                        className=\"text-sm-left\"\r\n                    />\r\n                </Row>\r\n                <Row form className=\"d-flex justify-content-center\">\r\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                        <FormGroup>\r\n                            <div className=\"d-flex\">\r\n                                <FormInput\r\n                                    value={SearchCode}\r\n                                    onChange={(e) => setSearchCode(e.target.value)}\r\n                                    id=\"search\"\r\n                                    placeholder=\"Search By code\" />\r\n\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                        <FormGroup>\r\n                            <div className=\"d-flex\">\r\n                                <FormSelect onChange={(e) => setSelectedUser(e.target.value)} value={selectedUser}>\r\n                                    {\r\n                                        selectedUser === \"\"\r\n                                            ?\r\n                                            <option value=\"\">Select by user</option>\r\n                                            :\r\n                                            <option value=\"\">{t('see_all')}</option>\r\n\r\n                                    }\r\n\r\n                                    {\r\n\r\n\r\n                                        existUsers.sort((a, b) => a.name.localeCompare(b.name)).map(user => {\r\n                                            return <option value={user.id}>{user.name}</option>\r\n\r\n                                        })\r\n                                    }\r\n                                </FormSelect>\r\n\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"12\" sm=\"12\" className=\"form-group\">\r\n                        <FormGroup>\r\n                            <div className=\"d-flex\">\r\n                                <FormSelect onChange={(e) => setSelectedSupplier(e.target.value)} value={selectedSupplier}>\r\n                                    {\r\n                                        selectedSupplier === \"\"\r\n                                            ?\r\n                                            <option value=\"\">Select by supplier</option>\r\n                                            :\r\n                                            <option value=\"\">{t('see_all')}</option>\r\n\r\n                                    }\r\n                                    {\r\n                                        existSuppliers.sort((a, b) => a.name.localeCompare(b.name)).map(user => {\r\n                                            return <option value={user.id}>{user.name}</option>\r\n\r\n                                        })\r\n                                    }\r\n                                </FormSelect>\r\n\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"12\" sm=\"12\">\r\n                        <ButtonGroup>\r\n                            <Button outline onClick={() => history.push('/admin/add-sensor')}>Add Sensor</Button>\r\n                            <Button outline onClick={() => handleCalculSensor()}>Calcul</Button>\r\n\r\n                        </ButtonGroup>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row className=\"py-2 justify-content-center flex-column align-items-center\">\r\n                    <div className=\"d-flex justify-content-center align-items-start\">\r\n                        <label className='px-2' htmlFor=\"sensorsPerPage\">Sensors per page: </label>\r\n                        <select id=\"sensorsPerPage\" value={sensorsPerPage} onChange={handleSensorsPerPageChange}>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"20\">20</option>\r\n                        </select>\r\n\r\n                    </div>\r\n                    <Pagination usersPerPage={sensorsPerPage} totalUsers={allSensors.length} paginate={paginate} />\r\n\r\n                </Row>\r\n                <Card className=\"my-2\" >\r\n\r\n                    {\r\n                        isLoading\r\n                            ?\r\n                            <LinearProgress />\r\n                            :\r\n                            <table className=\"table mb-0 text-center table-hover table-responsive-lg\">\r\n                                <thead className=\"bg-light\">\r\n                                    <tr>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('sensor_code')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('user')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('supplier')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('last_reading')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('expected')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('statu')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\">{t('actions')}</th>\r\n                                        <th scope=\"col\" className=\"border-0\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        currentSensors.map((sensor, index) => {\r\n                                            const dataIndex = allSensors.findIndex((s) => s.id === sensor.id);\r\n\r\n                                            let nameUser = '-'\r\n                                            let nameSupplier = '-'\r\n                                            let frequencyValue = '-'\r\n                                            let lastDataTime = '-'\r\n                                            let formattedTime = '-'\r\n                                            users.map(user => {\r\n                                                if (user.id === sensor.user_id) {\r\n                                                    nameUser = user.name\r\n                                                }\r\n                                            })\r\n                                            existSuppliers.map(user => {\r\n                                                if (user.id === sensor.supplier_id) {\r\n                                                    nameSupplier = user.name\r\n                                                }\r\n                                            })\r\n                                            if (frequency.length > 0 && lastData.length > 0 && lastData[dataIndex]) {\r\n                                                lastDataTime = moment(lastData[dataIndex].time).add(1, 'hours').format('YYYY-MM-DD HH:mm')\r\n                                                frequencyValue = frequency[dataIndex].frequence\r\n                                            }\r\n                                            const newTime = moment(lastDataTime).add(frequencyValue, 'seconds');\r\n                                            formattedTime = newTime.format('YYYY-MM-DD HH:mm');\r\n                                            const timeStartDifference = moment(lastDataTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\r\n                                            const timeEndDifference = moment(formattedTime, 'YYYY-MM-DD HH:mm').diff(moment(currentTime), 'seconds');\r\n                                            const timeEndAfterRange =  timeEndDifference + (15 * 60);\r\n                                            const sensorState = timeStartDifference < 0 && timeEndAfterRange > 0 ? 'Active' : 'Inactive';\r\n\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{sensor.code}</td>\r\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{nameUser}</td>\r\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{nameSupplier}</td>\r\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{lastDataTime.toString()}</td>\r\n                                                    <td style={{ fontSize: 11.5, fontWeight: 'bold' }}>{formattedTime.toString()}</td>\r\n                                                    <td style={{ color: sensorState === 'Active' ? 'green' : 'red', fontSize: 13, fontWeight: 'bold' }}>{sensorState}</td>\r\n                                                    <td>\r\n                                                        {\r\n                                                            sensor.deleted_at === null\r\n                                                                ?\r\n                                                                <ButtonGroup size=\"sm\" className=\"mr-2\">\r\n                                                                    <Button title=\"Edit\" onClick={() => {\r\n                                                                        history.push({pathname : `/admin/edit-sensor/${sensor.id}`, state : {\r\n                                                                            lastDataTime: lastDataTime,\r\n                                                                            formattedTime: formattedTime,\r\n                                                                            sensorState: sensorState,\r\n                                                                        }})\r\n                                                                    }}squared><i className=\"material-icons\">&#xe3c9;</i></Button>\r\n                                                                    <Button title=\"History\" onClick={() => { history.push(`/my-history/${sensor.code}`) }} squared theme=\"info\"><i className=\"material-icons\">&#xe889;</i></Button>\r\n                                                                    <Button title=\"Delete\" onClick={() => { confirmDelete(sensor.uid) }} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\r\n                                                                    {\r\n                                                                        sensor.synchronized === \"0\"\r\n                                                                            ?\r\n                                                                            <Button onClick={() => fetchDataSensor(sensor.uid, sensor.code)} squared theme=\"info\"><i className='material-icons'>&#xe627;</i></Button>\r\n                                                                            :\r\n                                                                            null\r\n                                                                    }\r\n\r\n                                                                </ButtonGroup>\r\n                                                                :\r\n                                                                null\r\n                                                        }\r\n\r\n                                                    </td>\r\n                                                    {\r\n                                                        sensor.deleted_at === null\r\n                                                            ?\r\n                                                            <td>\r\n                                                                <ButtonGroup size=\"sm\" className=\"mr-2\">\r\n                                                                    <Button outline onClick={() => getSingleSensor(sensor.id, 'User')}>Assign to user</Button>\r\n                                                                    <Button outline onClick={() => getSingleSensor(sensor.id, 'Supplier')}>Assign to supplier</Button>\r\n                                                                </ButtonGroup>\r\n\r\n                                                            </td>\r\n\r\n                                                            :\r\n                                                            null\r\n                                                    }\r\n                                                    <td></td>\r\n\r\n\r\n                                                </tr>\r\n\r\n                                            )\r\n                                        })\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </table>\r\n                    }\r\n\r\n\r\n                </Card>\r\n            </Container>\r\n            <Modal centered={true} open={toggle}>\r\n                <ModalHeader className=\"d-flex justify-content-between align-items-center\">\r\n                    <div>\r\n                        Sensor code : {code}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"flex-end\",\r\n\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            // theme=\"success\"\r\n                            onClick={() => assignSensorToUser(userUid, supplierUid)}\r\n                            className=\"mb-2 mr-1 btn btn-success\"\r\n                        >\r\n                            <i class={`fa fa-check mx-2`}></i>\r\n                            {t('save')}\r\n                        </Button>\r\n                        <Button\r\n                            // theme=\"success\"\r\n                            className=\"mb-2 mr-1 btn btn-danger\"\r\n                            onClick={() => { resetForm(); setToggle(false) }}\r\n                        >\r\n                            <i class={`fa fa-times mx-2`}></i>\r\n                            {t('cancel')}\r\n                        </Button>\r\n                    </div>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row className='d-flex justify-content-center'>\r\n                        <Col lg='6' md='8' sm='8'>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"users\">Select a user to assign sensor</label>\r\n                                {\r\n                                    supplier === true\r\n                                        ?\r\n                                        <FormSelect\r\n                                            id=\"users\"\r\n                                            value={supplierUid}\r\n                                            onChange={(e) => setSupplierUid(e.target.value)}\r\n                                        >\r\n                                            <option value=\"\">Select Supplier</option>\r\n\r\n                                            {\r\n                                                existSuppliers.map(supplier => {\r\n                                                    return <option value={supplier.uid}>{supplier.name}</option>\r\n\r\n                                                })\r\n                                            }\r\n                                        </FormSelect>\r\n\r\n                                        :\r\n                                        <FormSelect\r\n                                            id=\"users\"\r\n                                            value={userUid}\r\n                                            onChange={(e) => { setUserUid(e.target.value) }}\r\n                                        >\r\n                                            <option value=\"\">Select User</option>\r\n\r\n                                            {\r\n                                                existUsers.map(user => {\r\n\r\n                                                    return <option value={user.uid}>{user.name}</option>\r\n\r\n                                                })\r\n                                            }\r\n                                        </FormSelect>\r\n                                }\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SensorsManagement"],"mappings":"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"},"metadata":{},"sourceType":"module"}