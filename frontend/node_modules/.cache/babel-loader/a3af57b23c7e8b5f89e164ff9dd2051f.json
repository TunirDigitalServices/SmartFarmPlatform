{"ast":null,"code":"import _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/admin/ConfigurationCrops.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, ButtonGroup, Button, Progress, Modal, ModalHeader, ModalBody, BreadcrumbItem, Breadcrumb, Nav, NavItem, NavLink } from \"shards-react\";\nimport PageTitle from '../components/common/PageTitle';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { Carousel } from 'react-responsive-carousel';\nimport countryState from '../data/gistfile.json';\nimport cartImg from '../images/pin.png';\nimport soil from '../images/soil.png';\nimport api from '../api/api';\nimport swal from 'sweetalert';\nimport Pagination from '../views/Pagination';\nimport moment from 'moment';\n\nvar ConfigurationCrops = function ConfigurationCrops() {\n  var _useState = useState(10),\n      _useState2 = _slicedToArray(_useState, 1),\n      cropsPerPage = _useState2[0];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      SearchName = _useState6[0],\n      setSearchName = _useState6[1];\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var history = useHistory();\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      kcByDays = _useState8[0],\n      setKcByDays = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      plantDateErr = _useState10[0],\n      setPlantDateErr = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      allCrops = _useState12[0],\n      setAllCrops = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      resultCalculKc = _useState14[0],\n      setResultCalculKc = _useState14[1];\n\n  var _useState15 = useState({\n    crop: '',\n    cropVariety: '',\n    init: \"\",\n    dev: \"\",\n    mid: \"\",\n    late: \"\",\n    plantDate: \"\",\n    rootMin: \"\",\n    rootMax: \"\",\n    kcInit: \"\",\n    kcDev: \"\",\n    kcMid: \"\",\n    kcLate: \"\",\n    allKcList: [],\n    fractionRuPratique: \"\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      cropData = _useState16[0],\n      setCropData = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      toggle = _useState18[0],\n      setToggle = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      toggleEdit = _useState20[0],\n      setToggleEdit = _useState20[1];\n\n  var _useState21 = useState({}),\n      _useState22 = _slicedToArray(_useState21, 2),\n      singleCrop = _useState22[0],\n      setSingleCrop = _useState22[1];\n\n  var getCrops = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/crops/get-crops').then(function (response) {\n                if (response.data.type === \"success\") {\n                  var listCrops = response.data.Crops;\n                  setAllCrops(listCrops);\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function getCrops() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCrops();\n  }, []);\n\n  var getSingleCrop = function getSingleCrop(cropId, title) {\n    var data = {\n      crop_id: cropId\n    };\n    api.post('/crops/get-crop', data).then(function (res) {\n      var dataCrops = res.data.crop;\n      var date = dataCrops.plant_date;\n      setSingleCrop(dataCrops);\n      setCropData({\n        crop: dataCrops.crop\n      });\n      setCropData({\n        cropVariety: dataCrops.crop_variety\n      });\n      setCropData({\n        fractionRuPratique: dataCrops.practical_fraction\n      });\n      setCropData({\n        plantDate: date.slice(0, 10)\n      });\n      setCropData({\n        init: dataCrops.init\n      });\n      setCropData({\n        dev: dataCrops.dev\n      });\n      setCropData({\n        mid: dataCrops.mid\n      });\n      setCropData({\n        late: dataCrops.late\n      });\n      setCropData({\n        rootMin: dataCrops.root_min\n      });\n      setCropData({\n        rootMax: dataCrops.root_max\n      });\n      setCropData({\n        kcInit: dataCrops.kc_init\n      });\n      setCropData({\n        kcDev: dataCrops.kc_dev\n      });\n      setCropData({\n        kcMid: dataCrops.kc_mid\n      });\n      setCropData({\n        kcLate: dataCrops.kc_late\n      });\n      setCropData({\n        allKcList: dataCrops.all_kc\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (title === 'Edit') {\n      setToggleEdit(!toggleEdit);\n    }\n  };\n\n  var isValidate = function isValidate() {\n    var plantDateErr = '';\n\n    if (!cropData.plantDate) {\n      plantDateErr = 'Please select a date !';\n      setPlantDateErr(plantDateErr);\n    }\n\n    if (plantDateErr) {\n      setPlantDateErr(plantDateErr);\n      return false;\n    }\n\n    return true;\n  };\n\n  var addCrops = function addCrops() {\n    var isValid = isValidate();\n    var data = {\n      crop: cropData.crop,\n      crop_variety: cropData.cropVariety,\n      plant_date: cropData.plantDate,\n      init: cropData.init,\n      dev: cropData.dev,\n      mid: cropData.mid,\n      late: cropData.late,\n      kc_init: cropData.kcInit,\n      kc_dev: cropData.kcDev,\n      kc_mid: cropData.kcMid,\n      kc_late: cropData.kcLate,\n      root_max: cropData.rootMax,\n      root_min: cropData.rootMin,\n      all_kc: resultCalculKc,\n      practical_fraction: cropData.fractionRuPratique\n    };\n    api.post('/crops/add-crops', data).then(function (response) {\n      if (response && response.data.type === \"success\") {\n        swal(\"\".concat(t('Crop Added')), {\n          icon: \"success\"\n        });\n        setToggle(false);\n        getCrops();\n      }\n\n      if (response && response.data.type === \"danger\") {\n        swal(\"\".concat(t('Crop Added')), {\n          icon: \"error\"\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var handleEdit = function handleEdit(cropId) {\n    var isValid = isValidate();\n    var data = {\n      crop_id: cropId,\n      crop: cropData.crop,\n      crop_variety: cropData.cropVariety,\n      plant_date: cropData.plantDate,\n      init: cropData.init,\n      dev: cropData.dev,\n      mid: cropData.mid,\n      late: cropData.late,\n      kc_init: cropData.kcInit,\n      kc_dev: cropData.kcDev,\n      kc_mid: cropData.kcMid,\n      kc_late: cropData.kcLate,\n      root_max: cropData.rootMax,\n      root_min: cropData.rootMin,\n      all_kc: resultCalculKc,\n      practical_fraction: cropData.fractionRuPratique\n    };\n    api.post('/crops/edit-crop', data).then(function (response) {\n      if (response.data.type == \"success\") {\n        swal(\" Crop has been updated\", {\n          icon: \"success\"\n        });\n        setToggleEdit(false);\n        getCrops();\n      }\n\n      if (response.data.type && response.data.type == \"danger\") {\n        swal({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'error_edit_crop'\n        });\n        return false;\n      }\n    }).catch(function (error) {\n      swal({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'error_edit_crop'\n      });\n    });\n  };\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cropId) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                crop_id: cropId\n              };\n              _context2.next = 3;\n              return api.delete('/crops/delete-crop', {\n                data: data\n              }).then(function (response) {\n                if (response.data.type && response.data.type == \"danger\") {\n                  swal({\n                    title: \"Cannot Delete Crop\",\n                    icon: \"warning\"\n                  });\n                }\n\n                if (response.data.type == \"success\") {\n                  getCrops();\n                }\n              }).catch(function (error) {\n                swal({\n                  title: \"Cannot Delete Crop\",\n                  icon: \"error\",\n                  text: 'error_delete_crop'\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var confirmDelete = function confirmDelete(cropId) {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this crop!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (Delete) {\n      if (Delete) {\n        handleDelete(cropId);\n        swal(\" Crop has been deleted!\", {\n          icon: \"success\"\n        });\n      }\n    }).catch(function (error) {\n      swal({\n        title: \"Cannot Delete Crop\",\n        icon: \"error\",\n        text: 'error_delete_crop'\n      });\n    });\n  };\n\n  var filteredCrops = allCrops.filter(function (crops) {\n    if (SearchName !== '') {\n      return crops.crop.toLowerCase().includes(SearchName.toLowerCase());\n    }\n\n    return crops;\n  });\n  var indexOfLastPost = currentPage * cropsPerPage;\n  var indexOfFirstPost = indexOfLastPost - cropsPerPage;\n  var currentCrops = filteredCrops.slice(indexOfFirstPost, indexOfLastPost);\n\n  var handleKcByDays = function handleKcByDays() {\n    var DataCropKc = [];\n\n    if (cropData.init != \"\" && cropData.dev != \"\" && cropData.mid != \"\" && cropData.late != \"\" && cropData.kcInit != \"\" && cropData.kcDev != \"\" && cropData.kcMid != \"\" && cropData.kcLate != \"\") {\n      DataCropKc = [{\n        \"period\": cropData.init,\n        \"kc\": cropData.kcInit\n      }, {\n        \"period\": cropData.dev,\n        \"kc\": cropData.kcDev\n      }, {\n        \"period\": cropData.mid,\n        \"kc\": cropData.kcMid\n      }, {\n        \"period\": cropData.late,\n        \"kc\": cropData.kcLate\n      }];\n    }\n\n    setKcByDays(DataCropKc);\n  };\n\n  useEffect(function () {\n    handleKcByDays();\n  }, [cropData]);\n\n  var onChangeHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e, idx) {\n      var clone, obj;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              //modifier le setResultCalculKc pour ensuite ajouter le resultCalculKc dans l'action save pour inserer un objet clé (1,2,3..) valeur (kc dans le tableau html) dans la base de données colonne kc par jour\n              // setResultCalculKc(state => ([...state ,{['day'] : day ,  ['kc'] : value }]), [])\n              clone = _toConsumableArray(cropData.allKcList);\n              obj = clone[idx];\n              obj.kc = e.target.value;\n              clone[idx] = obj;\n              setResultCalculKc(_toConsumableArray(clone));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onChangeHandler(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var KcResults = [];\n\n  var tableConfigKc = function tableConfigKc(async) {\n    var periods = [];\n    var KcValues = [];\n    useEffect(function () {\n      setResultCalculKc(KcResults);\n    }, [kcByDays]);\n\n    if (kcByDays.length > 0) {\n      var _ret = function () {\n        kcByDays.map(function (days) {\n          periods.push(days.period);\n          KcValues.push(days.kc);\n        });\n        var elements = [];\n        var result = 0;\n        var arrayPeriod = periods;\n        var nextKc = 0;\n        var nextPeriod = 0;\n        var currentPeriod = 0;\n        var j = 0;\n        var compteur = 1;\n        var ligne = 0;\n        var elment = {};\n        var resultFormule = [];\n\n        for (var i = 0; i < arrayPeriod.length; i++) {\n          if (i == 0) {\n            j = 1;\n          }\n\n          if (i > 0) {\n            j = arrayPeriod[i - 1];\n          }\n\n          if (i + 1 in arrayPeriod === true) {\n            nextKc = KcValues[i + 1];\n            nextPeriod = arrayPeriod[i + 1];\n          } else {\n            nextKc = 0;\n            nextPeriod = 0;\n          }\n\n          currentPeriod = arrayPeriod[i];\n\n          for (var n = 1; n <= currentPeriod; n++) {\n            ligne = compteur++;\n\n            if (nextKc > 0 && nextPeriod > 0) {\n              result = parseFloat((nextKc - KcValues[i]) / nextPeriod) + parseFloat(KcValues[i]);\n            } else {\n              result = parseFloat(KcValues[i]);\n            } //@TODO ajouter le tableau dans setResultCalculKc\n\n\n            elment = {\n              \"day\": ligne,\n              \"kc\": parseFloat(result).toFixed(1)\n            }; //object result to save in database\n\n            KcResults.push(elment);\n            var dates = moment(cropData.plantDate).add(ligne - 1, 'days').format(\"YYYY-MM-DD\");\n            elements.push( /*#__PURE__*/React.createElement(\"tbody\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"tr\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 25\n              }\n            }, ligne), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 25\n              }\n            }, dates), /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(\"input\", {\n              name: ligne,\n              key: ligne,\n              className: \"my-1\",\n              value: result,\n              onChange: function onChange(e) {\n                return onChangeHandler(e.target.value, ligne);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 29\n              }\n            })))));\n          }\n        }\n\n        return {\n          v: elements\n        };\n      }();\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    className: \"p-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: t('Crops Configuration'),\n    subtitle: t('Crops Configuration'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('search'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    value: SearchName,\n    onChange: function onChange(e) {\n      return setSearchName(e.target.value);\n    },\n    id: \"search\",\n    placeholder: \"Search By Name \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    subtitle: t('my actions'),\n    className: \"text-sm-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    form: true,\n    className: \"py-2 d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      setToggle(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }, \"Add Crop\"))), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 29\n    }\n  }, \"Crops Info\"))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 33\n    }\n  }, t('Crop')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 33\n    }\n  }, t('Planting Date')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, currentCrops.map(function (crop) {\n    var plantDate = moment(crop.plant_date).locale('En').format('MMM Do YYYY ');\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 45\n      }\n    }, crop.crop), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 45\n      }\n    }, plantDate), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      size: \"sm\",\n      className: \"mr-2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: \"Edit\",\n      onClick: function onClick() {\n        getSingleCrop(crop.id, 'Edit');\n      },\n      squared: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 138\n      }\n    }, \"\\uE3C9\")), /*#__PURE__*/React.createElement(Button, {\n      title: \"Delete\",\n      onClick: function onClick() {\n        confirmDelete(crop.id);\n      },\n      squared: true,\n      theme: \"danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 149\n      }\n    }, \"\\uE872\")))));\n  }))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"py-4 justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: cropsPerPage,\n    totalUsers: allCrops.length,\n    paginate: paginate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    centered: true,\n    open: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      addCrops();\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 37\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      setToggle(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 37\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"7\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 45\n    }\n  }, \"Crop Type\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.crop,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        crop: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"plantDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 45\n    }\n  }, \"Planting Date\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"plantDate\",\n    placeholder: \"Planting Date\",\n    type: \"date\",\n    className: \"form-control form-control-md \".concat(plantDateErr ? 'is-invalid' : \"\"),\n    value: cropData.plantDate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        plantDate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 46\n    }\n  }, plantDateErr))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Practical Fraction Ru\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 41\n    }\n  }, \"Practical Fraction Ru\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Practical Fraction Ru\",\n    placeholder: \"Practical Fraction Ru\",\n    value: cropData.fractionRuPratique,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        fractionRuPratique: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"feDescription\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 37\n    }\n  }, t('desc')), /*#__PURE__*/React.createElement(FormTextarea, {\n    placeholder: t('desc'),\n    id: \"feDescription\",\n    rows: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"5\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"pt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 29\n    }\n  }, \"Kc\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcInit,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcInit: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcDev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcDev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcMid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcMid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcLate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcLate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 29\n    }\n  }, \"Stage (Days)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Init\",\n    className: \"m-1\",\n    value: cropData.init,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        init: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Dev\",\n    value: cropData.dev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        dev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Mid\",\n    className: \"m-1\",\n    value: cropData.mid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        mid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Late\",\n    value: cropData.late,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        late: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 29\n    }\n  }, \"Roots\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Min\",\n    className: \"m-1\",\n    value: cropData.rootMin,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMin: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Max\",\n    value: cropData.rootMax,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMax: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-top mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 37\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 37\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 37\n    }\n  }, t('Kc')))), tableConfigKc()))))), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    centered: true,\n    open: toggleEdit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"d-flex justify-content-between align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    onClick: function onClick() {\n      handleEdit(singleCrop.id);\n    },\n    className: \"mb-2 mr-1 btn btn-success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-check mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 37\n    }\n  }), t('save')), /*#__PURE__*/React.createElement(Button // theme=\"success\"\n  , {\n    className: \"mb-2 mr-1 btn btn-danger\",\n    onClick: function onClick() {\n      setToggleEdit(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times mx-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 37\n    }\n  }), t('cancel')))), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"7\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"border-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"crop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 45\n    }\n  }, \"Crop Type\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"crop\",\n    placeholder: \"Crop Type\",\n    value: cropData.crop,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        crop: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"plantDate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 45\n    }\n  }, \"Planting Date\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"plantDate\",\n    placeholder: \"Planting Date\",\n    type: \"date\",\n    className: \"form-control form-control-md \".concat(plantDateErr ? 'is-invalid' : \"\"),\n    value: cropData.plantDate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        plantDate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 46\n    }\n  }, plantDateErr))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"12\",\n    sm: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Practical Fraction Ru\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 41\n    }\n  }, \"Practical Fraction Ru\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Practical Fraction Ru\",\n    placeholder: \"Practical Fraction Ru\",\n    value: cropData.fractionRuPratique,\n    onChange: function onChange(e) {\n      setCropData(_objectSpread({}, cropData, {\n        fractionRuPratique: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"feDescription\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 37\n    }\n  }, t('desc')), /*#__PURE__*/React.createElement(FormTextarea, {\n    placeholder: t('desc'),\n    id: \"feDescription\",\n    rows: \"5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"5\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"pt-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 29\n    }\n  }, \"Kc\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcInit,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcInit: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcDev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcDev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    className: \"m-1\",\n    value: cropData.kcMid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcMid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"\",\n    value: cropData.kcLate,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        kcLate: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 29\n    }\n  }, \"Stage (Days)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Init\",\n    className: \"m-1\",\n    value: cropData.init,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        init: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Dev\",\n    value: cropData.dev,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        dev: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Mid\",\n    className: \"m-1\",\n    value: cropData.mid,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        mid: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Late\",\n    value: cropData.late,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        late: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 38\n    }\n  })), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 29\n    }\n  }, \"Roots\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Min\",\n    className: \"m-1\",\n    value: cropData.rootMin,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMin: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    placeholder: \"Max\",\n    value: cropData.rootMax,\n    onChange: function onChange(e) {\n      return setCropData(_objectSpread({}, cropData, {\n        rootMax: e.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-top mt-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"12\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"mt-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mb-0 border text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 37\n    }\n  }, t('Days')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 37\n    }\n  }, t('Dates')), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 37\n    }\n  }, t('Kc')))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 29\n    }\n  }, cropData.allKcList && cropData.allKcList.map(function (result, indx) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 45\n      }\n    }, result.day), /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: indx,\n      key: indx,\n      className: \"my-1\",\n      defaultValue: parseFloat(result.kc).toFixed(2),\n      onChange: function onChange(e) {\n        return onChangeHandler(e, indx);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 45\n      }\n    })));\n  }))))))));\n};\n\nexport default ConfigurationCrops;","map":{"version":3,"names":["React","useEffect","useState","Container","Card","CardHeader","CardBody","ListGroup","ListGroupItem","Row","Col","Form","FormGroup","FormInput","FormSelect","FormTextarea","ButtonGroup","Button","Progress","Modal","ModalHeader","ModalBody","BreadcrumbItem","Breadcrumb","Nav","NavItem","NavLink","PageTitle","useTranslation","Link","useHistory","useParams","Carousel","countryState","cartImg","soil","api","swal","Pagination","moment","ConfigurationCrops","cropsPerPage","currentPage","setCurrentPage","SearchName","setSearchName","paginate","pageNumber","t","i18n","history","kcByDays","setKcByDays","plantDateErr","setPlantDateErr","allCrops","setAllCrops","resultCalculKc","setResultCalculKc","crop","cropVariety","init","dev","mid","late","plantDate","rootMin","rootMax","kcInit","kcDev","kcMid","kcLate","allKcList","fractionRuPratique","cropData","setCropData","toggle","setToggle","toggleEdit","setToggleEdit","singleCrop","setSingleCrop","getCrops","get","then","response","data","type","listCrops","Crops","catch","error","console","log","getSingleCrop","cropId","title","crop_id","post","res","dataCrops","date","plant_date","crop_variety","practical_fraction","slice","root_min","root_max","kc_init","kc_dev","kc_mid","kc_late","all_kc","isValidate","addCrops","isValid","icon","handleEdit","text","handleDelete","delete","confirmDelete","buttons","dangerMode","Delete","filteredCrops","filter","crops","toLowerCase","includes","indexOfLastPost","indexOfFirstPost","currentCrops","handleKcByDays","DataCropKc","onChangeHandler","e","idx","clone","obj","kc","target","value","KcResults","tableConfigKc","async","periods","KcValues","length","map","days","push","period","elements","result","arrayPeriod","nextKc","nextPeriod","currentPeriod","j","compteur","ligne","elment","resultFormule","i","n","parseFloat","toFixed","dates","add","format","locale","id","display","justifyContent","indx","day"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/admin/ConfigurationCrops.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Card, CardHeader, CardBody, ListGroup, ListGroupItem, Row, Col, Form, FormGroup, FormInput, FormSelect, FormTextarea, ButtonGroup, Button, Progress, Modal, ModalHeader, ModalBody, BreadcrumbItem, Breadcrumb, Nav, NavItem, NavLink } from \"shards-react\";\nimport PageTitle from '../components/common/PageTitle';\nimport { useTranslation } from 'react-i18next';\nimport { Link , useHistory , useParams } from 'react-router-dom';\nimport { Carousel } from 'react-responsive-carousel';\nimport countryState from '../data/gistfile.json'\nimport cartImg from '../images/pin.png'\nimport soil from '../images/soil.png'\nimport api from '../api/api';\nimport swal from 'sweetalert';\nimport Pagination from '../views/Pagination';\nimport moment from 'moment';\n\nconst ConfigurationCrops = () => {\n\n    const [cropsPerPage] = useState(10)\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [SearchName, setSearchName] = useState('')\n\n\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    const { t, i18n } = useTranslation();\n    const history = useHistory()\n\n    const [kcByDays,setKcByDays] = useState([])\n\n    const  [plantDateErr,setPlantDateErr] = useState('')\n\n    const [allCrops,setAllCrops] = useState([])\n    const [resultCalculKc,setResultCalculKc] = useState([])\n\n    const [cropData,setCropData] = useState({\n        crop : '',\n        cropVariety : '',\n        init : \"\",\n        dev :\"\",\n        mid :\"\",\n        late :\"\",\n        plantDate :\"\",\n        rootMin : \"\",\n        rootMax : \"\",\n        kcInit :\"\",\n        kcDev : \"\",\n        kcMid :\"\",\n        kcLate :\"\",\n        allKcList : [],\n        fractionRuPratique: \"\",\n\n    })\n\n        \n\n\n\n    const [toggle ,setToggle] = useState(false)\n    const [toggleEdit ,setToggleEdit] = useState(false)\n    const [singleCrop ,setSingleCrop] = useState({})\n\n    const getCrops = async () => {\n            try {\n                    await api.get('/crops/get-crops')\n                    .then(response=>{\n                        if(response.data.type === \"success\"){\n                            let listCrops = response.data.Crops\n                            setAllCrops(listCrops)\n\n                        }\n                    }).catch(error =>{\n                        console.log(error)\n                    })\n                    \n            } catch (error) {   \n                console.log(error)\n            }\n    }\n \n    useEffect(() => {\n        getCrops()\n    }, [])\n\n    const getSingleCrop =  (cropId,title) => {\n\n        let data = {\n            crop_id: cropId,\n        }\n\n         api.post('/crops/get-crop', data)\n            .then(res => {\n                let dataCrops = res.data.crop\n                let date = dataCrops.plant_date\n                setSingleCrop(dataCrops)\n                setCropData({crop : dataCrops.crop})\n                setCropData({cropVariety: dataCrops.crop_variety})\n                setCropData({fractionRuPratique: dataCrops.practical_fraction})\n                setCropData({plantDate: date.slice(0,10)})\n                setCropData({init : dataCrops.init})\n                setCropData({dev: dataCrops.dev})\n                setCropData({mid : dataCrops.mid})\n                setCropData({late: dataCrops.late})\n                setCropData({rootMin : dataCrops.root_min})\n                setCropData({rootMax: dataCrops.root_max})\n                setCropData({kcInit : dataCrops.kc_init})\n                setCropData({kcDev: dataCrops.kc_dev})\n                setCropData({kcMid : dataCrops.kc_mid})\n                setCropData({kcLate: dataCrops.kc_late})\n                setCropData({allKcList : dataCrops.all_kc})\n            }).catch(error => {\n                console.log(error)\n\n            })\n            if(title === 'Edit'){\n                setToggleEdit(!toggleEdit)\n\n            }\n\n    }\n    \n    const isValidate = () => {\n        let plantDateErr = ''\n        if(!cropData.plantDate){\n            plantDateErr = 'Please select a date !'\n            setPlantDateErr(plantDateErr)\n        }\n        if(plantDateErr){\n            setPlantDateErr(plantDateErr)\n            return false\n        }\n        return true\n    } \n\n    const addCrops = () => {\n        let isValid = isValidate()\n        let data = {\n            crop : cropData.crop ,\n            crop_variety :cropData.cropVariety,\n            plant_date : cropData.plantDate,\n            init : cropData.init,\n            dev : cropData.dev,\n            mid: cropData.mid,\n            late : cropData.late,\n            kc_init : cropData.kcInit,\n            kc_dev : cropData.kcDev,\n            kc_mid: cropData.kcMid,\n            kc_late : cropData.kcLate,\n            root_max : cropData.rootMax,\n            root_min : cropData.rootMin,\n            all_kc : resultCalculKc,\n            practical_fraction : cropData.fractionRuPratique\n        }\n            api.post('/crops/add-crops',data)\n            .then(response=>{\n                if(response && response.data.type === \"success\"){\n                    swal(`${t('Crop Added')}`, { icon: \"success\" });\n                    setToggle(false)\n                    getCrops()\n                }\n                if(response && response.data.type === \"danger\"){\n                    swal(`${t('Crop Added')}`, { icon: \"error\" });\n                }\n            }).catch(error=>{\n                console.log(error)\n            })\n\n        \n    }\n\n    const handleEdit = (cropId) => {\n        let isValid = isValidate()\n\n        let data = {\n            crop_id : cropId,\n            crop : cropData.crop ,\n            crop_variety :cropData.cropVariety,\n            plant_date : cropData.plantDate,\n            init : cropData.init,\n            dev : cropData.dev,\n            mid: cropData.mid,\n            late : cropData.late,\n            kc_init : cropData.kcInit,\n            kc_dev : cropData.kcDev,\n            kc_mid: cropData.kcMid,\n            kc_late : cropData.kcLate,\n            root_max : cropData.rootMax,\n            root_min : cropData.rootMin,\n            all_kc : resultCalculKc,\n            practical_fraction : cropData.fractionRuPratique\n\n        }\n    \n        api.post('/crops/edit-crop', data)\n          .then(response => {\n            if (response.data.type == \"success\") {\n              swal(\" Crop has been updated\", {\n                icon: \"success\",\n              });\n              setToggleEdit(false)\n              getCrops();\n            }\n            if (response.data.type && response.data.type == \"danger\") {\n              swal({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'error_edit_crop'\n              })\n              return false;\n            }\n          }).catch(error => {\n            swal({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'error_edit_crop'\n            })\n          })\n          \n      }\n    \n\n      const handleDelete = async cropId => {\n\n    \n        let data = {\n            crop_id: cropId,\n        }\n        await api.delete('/crops/delete-crop', { data: data })\n            .then(response => {\n                if (response.data.type && response.data.type == \"danger\") {\n                    swal({\n                        title: \"Cannot Delete Crop\",\n                        icon: \"warning\",\n                    });\n                }\n                if (response.data.type == \"success\") {\n                    getCrops();\n                   \n                }\n            }).catch(error => {\n                swal({\n                    title: \"Cannot Delete Crop\",\n                    icon: \"error\",\n                    text: 'error_delete_crop'\n                    \n                });\n            })\n        }\n    \n    const confirmDelete = cropId => {\n    \n        swal({\n            title: \"Are you sure?\",\n            text: \"Once deleted, you will not be able to recover this crop!\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n        })\n            .then((Delete) => {\n                if (Delete) {\n                    handleDelete(cropId)\n                    swal(\" Crop has been deleted!\", {\n                        icon: \"success\",\n                    });\n                }\n            }).catch(error => {\n                swal({\n                    title: \"Cannot Delete Crop\",\n                    icon: \"error\",\n                    text: 'error_delete_crop'\n    \n                });\n            })\n    \n    }  \n\n\n    const filteredCrops = allCrops.filter(crops => {\n        if (SearchName !== '') {\n            return (\n                crops.crop.toLowerCase().includes(SearchName.toLowerCase())\n            )\n        }\n        \n        return crops\n    })\n\n    const indexOfLastPost = currentPage * cropsPerPage;\n    const indexOfFirstPost = indexOfLastPost - cropsPerPage;\n    const currentCrops = filteredCrops.slice(indexOfFirstPost, indexOfLastPost);\n\n            \n\n    const handleKcByDays = () => {\n        let DataCropKc = []\n        if(cropData.init != \"\" && cropData.dev != \"\" && cropData.mid != \"\" && cropData.late != \"\" &&\n         cropData.kcInit != \"\" && cropData.kcDev != \"\" && cropData.kcMid != \"\" && cropData.kcLate != \"\"\n        \n        ){\n            DataCropKc = [\n                { \n                    \"period\": cropData.init,\n                    \"kc\" : cropData.kcInit\n                },\n                { \n                    \"period\": cropData.dev,\n                    \"kc\" : cropData.kcDev\n                },\n                { \n                    \"period\": cropData.mid,\n                    \"kc\" : cropData.kcMid\n                },\n                { \n                    \"period\": cropData.late,\n                    \"kc\" : cropData.kcLate\n                }]\n        }\n           \n        \n                \n       setKcByDays(DataCropKc)\n    }\n\n    useEffect(()=>{\n        handleKcByDays()\n    },[cropData])\n\n    const onChangeHandler = async (e,idx) => {\n        //modifier le setResultCalculKc pour ensuite ajouter le resultCalculKc dans l'action save pour inserer un objet clé (1,2,3..) valeur (kc dans le tableau html) dans la base de données colonne kc par jour\n        // setResultCalculKc(state => ([...state ,{['day'] : day ,  ['kc'] : value }]), [])\n       let clone = [...cropData.allKcList];\n        let obj = clone[idx];\n        obj.kc = e.target.value;\n        clone[idx] = obj;\n        setResultCalculKc([...clone])\n    }\n    \n    let KcResults = [];\n    const tableConfigKc = (async) => {\n        let periods = [];\n        let KcValues = [];\n        useEffect(()=>{\n            setResultCalculKc(KcResults)\n        },[kcByDays])\n        if(kcByDays.length > 0){\n            kcByDays.map(days=>{\n                periods.push(days.period)\n                KcValues.push(days.kc)\n            })\n            \n            \n        let elements = []\n        let result = 0\n        let arrayPeriod = periods\n        let nextKc = 0\n        let nextPeriod = 0\n        let currentPeriod = 0 \n        let j = 0\n        let compteur = 1;\n        let ligne = 0;\n        let elment = {}\n        let resultFormule =[];\n        for (let i = 0; i < arrayPeriod.length; i++) {\n            \n            if(i==0){\n                j=1 \n            } \n            if(i>0){\n                j=arrayPeriod[i-1]\n                \n            }\n\n            if( i+1 in arrayPeriod === true){\n                nextKc = KcValues[i+1]\n                nextPeriod = arrayPeriod[i+1]\n            }\n            else {\n                nextKc = 0\n                nextPeriod = 0\n            }\n            currentPeriod=arrayPeriod[i]\n        for (let n = 1 ; n <= currentPeriod ; n++){\n            ligne = compteur++;\n            if(nextKc > 0 && nextPeriod > 0){\n                    result = (parseFloat((nextKc - KcValues[i]) / (nextPeriod) )  + parseFloat(KcValues[i]))\n\n\n            }else{\n                result = parseFloat(KcValues[i]);\n            }\n            \n            //@TODO ajouter le tableau dans setResultCalculKc\n            elment = {\n                \"day\": ligne,\n                \"kc\": parseFloat(result).toFixed(1)\n                 }\n            //object result to save in database\n            KcResults.push(elment)\n            let dates = moment(cropData.plantDate).add(ligne - 1 , 'days').format(\"YYYY-MM-DD\")\n            elements.push(\n                <tbody>\n                    <tr>\n                        <td>{ligne}</td>  \n                        <td>{dates}</td> \n                        <td>\n                            <input\n                                     name={ligne}\n                                     key={ligne}\n                                    className='my-1'\n                                    value={result}\n                                    onChange={(e) => onChangeHandler(e.target.value , ligne)}\n                            />    \n                        </td> \n                    </tr>\n\n                </tbody>\n                );\n        }   \n        }\n        return elements\n    }\n    }\n\n    return (\n        <>\n        <Container className=\"p-4\">\n            <Row noGutters className=\"page-header py-4\">\n                <PageTitle\n                    sm=\"4\"\n                    title={t('Crops Configuration')}\n                    subtitle={t('Crops Configuration')}\n                    className=\"text-sm-left\"\n                />\n            </Row>\n            <Row>\n                    <PageTitle\n                        sm=\"4\"\n                        subtitle={t('search')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                <Row form className=\"d-flex justify-content-center\">\n                    <Col md=\"3\" className=\"form-group\">\n                        <FormGroup>\n                            <div className=\"d-flex\">\n                                <FormInput\n                                    value={SearchName}\n                                    onChange={(e) => setSearchName(e.target.value)}\n                                    id=\"search\"\n                                    placeholder=\"Search By Name \" />\n\n                            </div>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <Row>\n                    <PageTitle\n                        sm=\"4\"\n                        subtitle={t('my actions')}\n                        className=\"text-sm-left\"\n                    />\n                </Row>\n                <Row form className=\"py-2 d-flex justify-content-center\">\n                    <ButtonGroup>\n                        <Button outline onClick={() => {setToggle(true)}}>Add Crop</Button>\n                    </ButtonGroup>\n\n                </Row>\n                <Card>\n                    <CardHeader className=\"border-bottom\">\n                        <div>\n                            <h5>\n                                Crops Info\n\n                            </h5>\n\n                        </div>\n                    </CardHeader>\n                    <CardBody>\n                    <table className=\"table mb-0 text-center\">\n                        <thead className=\"bg-light\">\n                            <tr>\n                                <th scope=\"col\" className=\"border-0\">{t('Crop')}</th>\n                                <th scope=\"col\" className=\"border-0\">{t('Planting Date')}</th>\n                                <th scope=\"col\" className=\"border-0\"></th>\n\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                currentCrops.map(crop=>{\n                                    let plantDate = moment(crop.plant_date).locale('En').format('MMM Do YYYY ')\n                                    return(\n                                        <tr>\n                                            <td>{crop.crop}</td>\n                                            <td>{plantDate}</td>\n\n\n                                            <td>\n                                               \n                                                        <ButtonGroup size=\"sm\" className=\"mr-2\">\n                                                            <Button title=\"Edit\" onClick={() => {getSingleCrop(crop.id,'Edit')}} squared><i className=\"material-icons\">&#xe3c9;</i></Button>\n                                                            <Button title=\"Delete\" onClick={() => {confirmDelete(crop.id) }} squared theme=\"danger\"><i className=\"material-icons\">&#xe872;</i></Button>\n                                                        </ButtonGroup>\n                                                \n\n                                            </td>\n                                            \n                                        </tr>\n\n                                    )\n                                })\n                            }\n\n\n\n                        </tbody>\n                    </table>\n                    </CardBody>\n                </Card>\n                <Row className=\"py-4 justify-content-center\">\n                    <Pagination usersPerPage={cropsPerPage} totalUsers={allCrops.length} paginate={paginate} />\n\n                </Row>\n        </Container>\n        <Modal size='lg' centered={true} open={toggle}>\n                        <ModalHeader className=\"d-flex justify-content-between align-items-center\">\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n        \n                                }}\n                            >\n                                <Button\n                                    // theme=\"success\"\n                                    onClick={()  => {addCrops()}}\n                                    className=\"mb-2 mr-1 btn btn-success\"\n                                >\n                                    <i class={`fa fa-check mx-2`}></i>\n                                    {t('save')}\n                                </Button>\n                                <Button\n                                    // theme=\"success\"\n                                    className=\"mb-2 mr-1 btn btn-danger\"\n                                    onClick={() => {setToggle(false)} }\n                                >\n                                    <i class={`fa fa-times mx-2`}></i>\n                                    {t('cancel')}\n                                </Button>\n                            </div>\n                        </ModalHeader>\n                        <ModalBody>\n                        <Row>\n                        <Col lg=\"7\" md=\"12\" sm=\"12\" className=\"border-right\" >\n\n                            <CardBody>\n                                <Row>\n                                    <Col lg='6' md=\"12\" sm=\"12\">\n                                        <FormGroup>\n                                            <label htmlFor=\"crop\">Crop Type</label>\n                                            <FormInput\n                                                id='crop'\n                                                placeholder=\"Crop Type\"\n                                                value={cropData.crop}\n                                                onChange={e => setCropData({...cropData , crop : e.target.value})}\n                                            />\n                                        </FormGroup>\n                                    </Col>           \n                                <Col lg='6' md=\"12\" sm=\"12\">\n                                        <FormGroup>\n                                            <label htmlFor=\"plantDate\">Planting Date</label>\n                                            <FormInput\n                                                id='plantDate'\n                                                placeholder=\"Planting Date\"\n                                                type='date'\n                                                className={`form-control form-control-md ${plantDateErr ? 'is-invalid' : \"\"}`}\n                                                value={cropData.plantDate}\n                                                onChange={e => setCropData({...cropData , plantDate : e.target.value})}\n                                            />\n                                             <div className=\"invalid-feedback\">{plantDateErr}</div>\n\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg='6' md=\"12\" sm=\"12\">\n\n                                    <FormGroup className='d-flex justify-content-center align-items-center flex-column'>\n                                        <label htmlFor=\"Practical Fraction Ru\">Practical Fraction Ru</label>\n                                        <FormInput\n                                            id='Practical Fraction Ru'\n                                            placeholder='Practical Fraction Ru'\n                                            value={cropData.fractionRuPratique}\n                                            onChange={e => { setCropData({...cropData , fractionRuPratique : e.target.value}) }}\n\n                                        />\n                                    </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <label htmlFor=\"feDescription\">{t('desc')}</label>\n                                    <FormTextarea\n                                        placeholder={t('desc')}\n                                        id=\"feDescription\"\n                                        rows=\"5\" />\n\n                                </FormGroup>\n                            </CardBody>\n                        </Col>\n\n                        <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"pt-3\">\n                            <h6>Kc</h6>\n                            <div  className='d-flex justify-content-center align-items-center'>\n                                \n                                    <FormInput\n                                       placeholder=\"\"\n                                        className=\"m-1\"\n                                        value={cropData.kcInit}\n                                        onChange={e => setCropData({...cropData , kcInit : e.target.value})}\n                                     />\n                                        <FormInput\n                                       placeholder=\"\"\n                                       value={cropData.kcDev}\n                                       onChange={e => setCropData({...cropData , kcDev: e.target.value})}\n\n                                     />\n                                     <FormInput\n                                       placeholder=\"\"\n                                       className=\"m-1\"\n                                       value={cropData.kcMid}\n                                       onChange={e => setCropData({...cropData , kcMid : e.target.value})}\n\n                                     />      \n                                     <FormInput\n                                       placeholder=\"\"\n                                       value={cropData.kcLate}\n                                       onChange={e => setCropData({...cropData , kcLate : e.target.value})}\n\n                                     />   \n                            </div>  \n                            <h6>Stage (Days)</h6>   \n                            <div  className='d-flex justify-content-around align-items-center'>\n                                \n                                    <FormInput\n                                       placeholder=\"Init\"\n                                        className=\"m-1\"\n                                        value={cropData.init}\n                                        onChange={e => setCropData({...cropData , init : e.target.value})}\n                                     />\n                                        <FormInput\n                                       placeholder=\"Dev\"\n                                       value={cropData.dev}\n                                       onChange={e => setCropData({...cropData , dev : e.target.value})}\n                                     />\n                                     <FormInput\n                                       placeholder=\"Mid\"\n                                       className=\"m-1\"\n                                       value={cropData.mid}\n                                       onChange={e => setCropData({...cropData , mid : e.target.value})}\n                                     />      \n                                     <FormInput\n                                       placeholder=\"Late\"\n                                       value={cropData.late}\n                                       onChange={e => setCropData({...cropData , late : e.target.value})}\n                                     />      \n                            </div>  \n                            <h6>Roots</h6>   \n                            <div  className='d-flex justify-content-around align-items-center'>\n                                \n                                    <FormInput\n                                       placeholder=\"Min\"\n                                        className=\"m-1\"\n                                        value={cropData.rootMin}\n                                        onChange={e => setCropData({...cropData , rootMin : e.target.value})}\n\n                                     />\n                                        <FormInput\n                                       placeholder=\"Max\"\n                                       value={cropData.rootMax}\n                                       onChange={e => setCropData({...cropData , rootMax : e.target.value})}\n                                     />                               \n                            </div>          \n                        </Col>\n                    </Row>\n                    <Row className=\"border-top mt-2\">\n                        <Col lg='12' md='12' sm='12' className=\"mt-1\" >\n                            {/* <button onClick={() => tableConfigKc()}>Calculer</button> */}\n                        <table className=\"table mb-0 border text-center\">\n                            <thead className=\"bg-light\">\n                                <tr>\n                                    <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\n                                    <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\n                                    <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\n                              \n                                </tr>\n                            </thead>\n                            {tableConfigKc()}\n                        </table>\n                        </Col>\n                    </Row>\n                        </ModalBody>\n        </Modal>\n        <Modal size='lg' centered={true} open={toggleEdit}>\n                        <ModalHeader className=\"d-flex justify-content-between align-items-center\">\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n        \n                                }}\n                            >\n                                <Button\n                                    // theme=\"success\"\n                                    onClick={()  => {handleEdit(singleCrop.id)}}\n                                    className=\"mb-2 mr-1 btn btn-success\"\n                                >\n                                    <i class={`fa fa-check mx-2`}></i>\n                                    {t('save')}\n                                </Button>\n                                <Button\n                                    // theme=\"success\"\n                                    className=\"mb-2 mr-1 btn btn-danger\"\n                                    onClick={() => {setToggleEdit(false)} }\n                                >\n                                    <i class={`fa fa-times mx-2`}></i>\n                                    {t('cancel')}\n                                </Button>\n                            </div>\n                        </ModalHeader>\n                        <ModalBody>\n                        <Row>\n                        <Col lg=\"7\" md=\"12\" sm=\"12\" className=\"border-right\" >\n\n                            <CardBody>\n                                <Row>\n                                    <Col lg='6' md=\"12\" sm=\"12\">\n                                        <FormGroup>\n                                            <label htmlFor=\"crop\">Crop Type</label>\n                                            <FormInput\n                                                id='crop'\n                                                placeholder=\"Crop Type\"\n                                                value={cropData.crop}\n                                                onChange={e => setCropData({...cropData , crop : e.target.value})}\n                                            />\n                                        </FormGroup>\n                                    </Col>\n\n                                <Col lg='6' md=\"12\" sm=\"12\">\n                                        <FormGroup>\n                                            <label htmlFor=\"plantDate\">Planting Date</label>\n                                            <FormInput\n                                                id='plantDate'\n                                                placeholder=\"Planting Date\"\n                                                type='date'\n                                                className={`form-control form-control-md ${plantDateErr ? 'is-invalid' : \"\"}`}\n                                                value={cropData.plantDate}\n                                                onChange={e => setCropData({...cropData , plantDate : e.target.value})}\n                                            />\n                                             <div className=\"invalid-feedback\">{plantDateErr}</div>\n\n                                        </FormGroup>\n                                    </Col>\n                                    <Col lg='6' md=\"12\" sm=\"12\">\n\n                                    <FormGroup className='d-flex justify-content-center align-items-center flex-column'>\n                                        <label htmlFor=\"Practical Fraction Ru\">Practical Fraction Ru</label>\n                                        <FormInput\n                                            id='Practical Fraction Ru'\n                                            placeholder='Practical Fraction Ru'\n                                            value={cropData.fractionRuPratique}\n                                            onChange={e => { setCropData({...cropData , fractionRuPratique : e.target.value}) }}\n\n                                        />\n                                    </FormGroup>\n                                    </Col>\n                                </Row>\n                                <FormGroup>\n                                    <label htmlFor=\"feDescription\">{t('desc')}</label>\n                                    <FormTextarea\n                                        placeholder={t('desc')}\n                                        id=\"feDescription\"\n                                        rows=\"5\" />\n\n                                </FormGroup>\n                            </CardBody>\n                        </Col>\n\n                        <Col lg=\"5\" md=\"12\" sm=\"12\" className=\"pt-3\">\n                            <h6>Kc</h6>\n                            <div  className='d-flex justify-content-center align-items-center'>\n                                \n                            <FormInput\n                                       placeholder=\"\"\n                                        className=\"m-1\"\n                                        value={cropData.kcInit}\n                                        onChange={e => setCropData({...cropData , kcInit : e.target.value})}\n                                     />\n                                        <FormInput\n                                       placeholder=\"\"\n                                       value={cropData.kcDev}\n                                       onChange={e => setCropData({...cropData , kcDev: e.target.value})}\n\n                                     />\n                                     <FormInput\n                                       placeholder=\"\"\n                                       className=\"m-1\"\n                                       value={cropData.kcMid}\n                                       onChange={e => setCropData({...cropData , kcMid : e.target.value})}\n\n                                     />      \n                                     <FormInput\n                                       placeholder=\"\"\n                                       value={cropData.kcLate}\n                                       onChange={e => setCropData({...cropData , kcLate : e.target.value})}\n\n                                     />   \n                            </div>  \n                            <h6>Stage (Days)</h6>   \n                            <div  className='d-flex justify-content-around align-items-center'>\n                                \n                                    <FormInput\n                                       placeholder=\"Init\"\n                                        className=\"m-1\"\n                                        value={cropData.init}\n                                        onChange={e => setCropData({...cropData , init : e.target.value})}\n                                     />\n                                        <FormInput\n                                       placeholder=\"Dev\"\n                                       value={cropData.dev}\n                                       onChange={e => setCropData({...cropData , dev : e.target.value})}\n                                     />\n                                     <FormInput\n                                       placeholder=\"Mid\"\n                                       className=\"m-1\"\n                                       value={cropData.mid}\n                                       onChange={e => setCropData({...cropData , mid : e.target.value})}\n                                     />      \n                                     <FormInput\n                                       placeholder=\"Late\"\n                                       value={cropData.late}\n                                       onChange={e => setCropData({...cropData , late : e.target.value})}\n                                     />      \n                            </div>  \n                            <h6>Roots</h6>   \n                            <div  className='d-flex justify-content-around align-items-center'>\n                                \n                            <FormInput\n                                       placeholder=\"Min\"\n                                        className=\"m-1\"\n                                        value={cropData.rootMin}\n                                        onChange={e => setCropData({...cropData , rootMin : e.target.value})}\n\n                                     />\n                                        <FormInput\n                                       placeholder=\"Max\"\n                                       value={cropData.rootMax}\n                                       onChange={e => setCropData({...cropData , rootMax : e.target.value})}\n                                     />   \n                            </div>          \n                        </Col>\n                    </Row>\n                    <Row className=\"border-top mt-2\">\n                        <Col lg='12' md='12' sm='12' className=\"mt-1\" >\n                            {/* <button onClick={() => tableConfigKc()}>Calculer</button> */}\n                        <table className=\"table mb-0 border text-center\">\n                            <thead className=\"bg-light\">\n                                <tr>\n                                    <th scope=\"col\" className=\"border-0\">{t('Days')}</th>\n                                    <th scope=\"col\" className=\"border-0\">{t('Dates')}</th>\n                                    <th scope=\"col\" className=\"border-0\">{t('Kc')}</th>\n                              \n                                </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                cropData.allKcList && cropData.allKcList.map((result,indx)=>{\n                                   \n                                    return(\n\n                                        <tr>\n                                            <td>{result.day}</td>\n                                            <td>\n                                            <input\n                                                name={indx}\n                                                key={indx}\n                                                className='my-1'\n                                                defaultValue={parseFloat(result.kc).toFixed(2)}\n                                                onChange={(e) => onChangeHandler(e, indx)}\n                                            />    \n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n\n                         </tbody>\n                        </table>\n                        </Col>\n                    </Row>\n                        </ModalBody>\n        </Modal>\n        </>\n    )\n}\n\nexport default ConfigurationCrops"],"mappings":"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"},"metadata":{},"sourceType":"module"}