{"ast":null,"code":"import _objectSpread from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/var/www/prod/smartfarm/backoffice/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/prod/smartfarm/backoffice/frontend/src/views/Overview.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from 'react-router-dom';\nimport { Container, Row, Col, CardBody, Card, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields';\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport AddField from \"./AddField\";\nimport FieldSetupForm from \"../components/FieldSettingForms/FieldSetupForm\";\nimport FieldSoilForm from \"../components/FieldSettingForms/FieldSoilForm\";\nimport FieldCropForm from \"../components/FieldSettingForms/FieldCropForm\";\nimport CompositeSoil from \"../components/FieldSettingForms/compositeSoilForm\";\nimport DripForm from \"../components/FieldSettingForms/dripForm\";\nimport LateralForm from \"../components/FieldSettingForms/lateralForm\";\nimport PivotForm from \"../components/FieldSettingForms/pivotForm\";\nimport clap from \"../images/applause.png\";\n\nvar Overview = function Overview(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      farms = _useState4[0],\n      setFarms = _useState4[1];\n\n  var _useState5 = useState({\n    polygon: false,\n    circle: false,\n    rectangle: false,\n    polyline: false,\n    marker: false,\n    circlemarker: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      draw = _useState6[0],\n      setDraw = _useState6[1];\n\n  var history = useHistory();\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      steps = _useState8[0],\n      setSteps = _useState8[1]; // const [offer,setOffer] = useState(null)\n\n\n  var _useState9 = useState({\n    draw: {\n      polygon: true,\n      circle: false,\n      rectangle: false,\n      polyline: true,\n      marker: true,\n      circlemarker: false\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      configMap = _useState10[0],\n      setConfigMap = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      layer = _useState12[0],\n      setLayer = _useState12[1];\n\n  var _useState13 = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      coords = _useState14[0],\n      setCoords = _useState14[1];\n\n  var _onCreated = function _onCreated(e) {\n    var type = e.layerType;\n    var layer = e.layer;\n\n    if (type === \"polygon\") {\n      var _coords = layer._latlngs[0];\n\n      var Coordinates = _coords.map(function (coord) {\n        return {\n          Lat: coord.lat,\n          Long: coord.lng\n        };\n      });\n\n      if (Coordinates) setLayer(JSON.stringify(Coordinates));\n    } else {\n      setCoords({\n        Latitude: layer.getLatLng().lat,\n        Longitude: layer.getLatLng().lng\n      });\n    }\n  }; // let user = JSON.parse(localStorage.getItem(\"user\"));\n  // let offerType = user.offer_type;\n\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fieldStats = _useState16[0],\n      setFS = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      sensorStats = _useState18[0],\n      setSensorStats = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      open = _useState20[0],\n      setOpen = _useState20[1];\n\n  var _useState21 = useState(\"#\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userMapDetails = _useState22[0],\n      setUserMapDetails = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      layerFarm = _useState24[0],\n      setLayerFarm = _useState24[1];\n\n  var _useState25 = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      mapConfig = _useState26[0],\n      setMapConfig = _useState26[1];\n\n  var sensorsData = useSensorData('/sensor/sensor-update-data');\n\n  var toggleDropDown = function toggleDropDown() {\n    setToggle(!toggle);\n  };\n\n  var toggleToolTip = function toggleToolTip() {\n    setOpen(!open);\n  };\n\n  var getFieldStats = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('/dashboard/fields');\n\n            case 2:\n              response = _context.sent;\n              setFS(response.data.farms);\n              setUserMapDetails(response.data.user_map_details.map_link_details);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFieldStats() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getSensorsStats = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('/dashboard/sensors');\n\n            case 2:\n              response = _context2.sent;\n              setSensorStats(response.data.sensors);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getSensorsStats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState27 = useState([]),\n      _useState28 = _slicedToArray(_useState27, 2),\n      crops = _useState28[0],\n      setCrops = _useState28[1];\n\n  var _useState29 = useState([]),\n      _useState30 = _slicedToArray(_useState29, 2),\n      dataCrops = _useState30[0],\n      setDataCrops = _useState30[1]; // const fetchDataCrops = async () => {\n  //   await api.get('/crop/crops')\n  //     .then(response => {\n  //       let dataCrops = response.data.farms;\n  //       setDataCrops(dataCrops)\n  //       let Crops = [];\n  //       dataCrops.map(farm => {\n  //         let fields = farm.fields;\n  //         if (fields) {\n  //           fields.map(field => {\n  //             let crops = field.crops\n  //             if (crops) {\n  //               crops.map(crop => {\n  //                 Crops.push({\n  //                   type: crop.type,\n  //                   id: crop.id,\n  //                   fieldId: crop.field_id\n  //                 })\n  //               })\n  //             }\n  //           })\n  //         }\n  //       })\n  //       setCrops(Crops)\n  //     }).catch(err => {\n  //       console.log(err)\n  //     })\n  // }\n\n\n  var getLayerFarm = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('/farm/farms').then(function (res) {\n                var DataFarm = res.data.farms;\n                setLayerFarm(DataFarm);\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getLayerFarm() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    // getLastDataSensor()\n    getLayerFarm();\n    getFieldStats();\n    getSensorsStats(); // fetchDataCrops()\n  }, []);\n  var critical = 0;\n  var full = 0;\n  var opt = 0;\n  fieldStats.map(function (item) {\n    item.fields.map(function (field) {\n      var status = field.status;\n\n      if (status) {\n        if (status == \"Optimal\") {\n          opt++;\n        }\n\n        if (status == \"Full\") {\n          full++;\n        }\n\n        if (status == \"Critical\") {\n          critical++;\n        }\n      }\n    });\n  });\n  var smallStats = [{\n    state: \"\".concat(t('Critical')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint-slash\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: critical,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n      borderColor: \"rgb(0, 184, 216)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Optimal')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"far fa-check-circle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: opt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"6\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(23,198,113,0.1)\",\n      borderColor: \"rgb(23,198,113)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('Full')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-tint\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('fields')),\n    value: full,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n  var online = 0;\n  var offline = 0;\n  var lowBatt = 0;\n  sensorStats.map(function (item) {\n    var sensor = item.id;\n\n    if (sensor) {\n      online++;\n    }\n  });\n  var smallStats2 = [{\n    state: \"\".concat(t('online')),\n    icon: /*#__PURE__*/React.createElement(SignalCellular4BarIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: online,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('low_batt')),\n    icon: /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-battery-quarter\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: lowBatt,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }, {\n    state: \"\".concat(t('offline')),\n    icon: /*#__PURE__*/React.createElement(SignalCellularNodataIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }),\n    label: \"\".concat(t('sensors')),\n    value: offline,\n    chartLabels: [null, null, null, null, null, null, null],\n    attrs: {\n      md: \"4\",\n      sm: \"6\"\n    },\n    datasets: [{\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(255,180,0,0.1)\",\n      borderColor: \"rgb(255,180,0)\",\n      data: []\n    }]\n  }];\n\n  var FilterByStatus = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(status) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              data = {\n                status: status\n              };\n              _context4.next = 3;\n              return api.post('/field/field-status', data).then(function (response) {\n                var farmsData = response.data.farms;\n                setFarms(farmsData);\n              }).catch(function (err) {\n                swal({\n                  title: 'Error',\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function FilterByStatus(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var ToSensorPage = function ToSensorPage() {\n    history.push('/Sensors');\n    window.location.reload();\n  };\n\n  var ToAddSensorPage = function ToAddSensorPage() {\n    history.push('/AddSensor');\n    window.location.reload();\n  };\n\n  var ToAddFarmPage = function ToAddFarmPage() {\n    history.push('/AddFarm');\n    window.location.reload();\n  };\n\n  var ToAddFieldPage = function ToAddFieldPage() {\n    history.push('/AddField');\n    window.location.reload();\n  };\n\n  var ToWaterBalancePage = function ToWaterBalancePage() {\n    history.push('/Bilan');\n    window.location.reload();\n  };\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      show = _useState32[0],\n      setShow = _useState32[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var prevStep = function prevStep() {\n    setSteps(steps - 1);\n  };\n\n  var nextStep = function nextStep() {\n    setSteps(steps + 1);\n  };\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      listSoils = _useState34[0],\n      setListSoils = _useState34[1];\n\n  var _useState35 = useState([]),\n      _useState36 = _slicedToArray(_useState35, 2),\n      fields = _useState36[0],\n      setFields = _useState36[1];\n\n  var _useState37 = useState([]),\n      _useState38 = _slicedToArray(_useState37, 2),\n      zones = _useState38[0],\n      setZones = _useState38[1];\n\n  var _useState39 = useState([]),\n      _useState40 = _slicedToArray(_useState39, 2),\n      allCities = _useState40[0],\n      setAllCities = _useState40[1];\n\n  var _useState41 = useState([]),\n      _useState42 = _slicedToArray(_useState41, 2),\n      countries = _useState42[0],\n      setCountries = _useState42[1];\n\n  var getSoils = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return api.get('/soils/get-soils').then(function (response) {\n                var listSoils = response.data.Soils;\n                setListSoils(listSoils);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 3:\n              _context5.next = 8;\n              break;\n\n            case 5:\n              _context5.prev = 5;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 5]]);\n    }));\n\n    return function getSoils() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var getDataFields = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return api.get('/field/fields').then(function (res) {\n                var newData = res.data.farms;\n                setFarms(newData);\n                var Fields = [];\n                var Zones = [];\n                var Crops = [];\n                newData.map(function (item) {\n                  var fields = item.fields;\n\n                  if (fields) {\n                    fields.map(function (itemfield) {\n                      Fields.push({\n                        title: itemfield.name,\n                        status: itemfield.status,\n                        description: itemfield.description,\n                        Uid: itemfield.uid,\n                        farm_id: itemfield.farm_id,\n                        Latitude: itemfield.Latitude,\n                        Longitude: itemfield.Longitude,\n                        Id: itemfield.id\n                      });\n                      var zones = itemfield.zones;\n                      var crops = itemfield.crops;\n\n                      if (crops) {\n                        crops.map(function (crop) {\n                          Crops.push({\n                            type: crop.type,\n                            id: crop.id,\n                            Uid: crop.uid,\n                            fieldId: crop.field_id,\n                            zone_id: crop.zone_id,\n                            croptype_id: crop.croptype_id,\n                            croptype: crop.croptypes\n                          });\n                        });\n                      }\n\n                      if (zones) {\n                        zones.map(function (i) {\n                          Zones.push({\n                            Id: i.id,\n                            name: i.name,\n                            Uid: i.uid,\n                            source: i.source,\n                            description: i.description,\n                            field_id: i.field_id\n                          });\n                        });\n                      }\n\n                      ;\n                    });\n                  }\n                });\n                setFields(Fields);\n                setZones(Zones);\n                setCrops(Crops);\n              });\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function getDataFields() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var getDataFields = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return api.get('/field/fields').then(function (res) {\n                  var newData = res.data.farms;\n                  setFarms(newData);\n                  var Fields = [];\n                  var Zones = [];\n                  var Crops = [];\n                  newData.map(function (item) {\n                    var fields = item.fields;\n\n                    if (fields) {\n                      fields.map(function (itemfield) {\n                        Fields.push({\n                          title: itemfield.name,\n                          status: itemfield.status,\n                          description: itemfield.description,\n                          Uid: itemfield.uid,\n                          farm_id: itemfield.farm_id,\n                          Latitude: itemfield.Latitude,\n                          Longitude: itemfield.Longitude,\n                          Id: itemfield.id\n                        });\n                        var zones = itemfield.zones;\n                        var crops = itemfield.crops;\n\n                        if (crops) {\n                          crops.map(function (crop) {\n                            Crops.push({\n                              type: crop.type,\n                              id: crop.id,\n                              Uid: crop.uid,\n                              fieldId: crop.field_id,\n                              zone_id: crop.zone_id,\n                              croptype_id: crop.croptype_id,\n                              croptype: crop.croptypes\n                            });\n                          });\n                        }\n\n                        if (zones) {\n                          zones.map(function (i) {\n                            Zones.push({\n                              Id: i.id,\n                              name: i.name,\n                              Uid: i.uid,\n                              source: i.source,\n                              description: i.description,\n                              field_id: i.field_id\n                            });\n                          });\n                        }\n\n                        ;\n                      });\n                    }\n                  });\n                  setFields(Fields);\n                  setZones(Zones);\n                  setCrops(Crops);\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function getDataFields() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    getDataFields();\n  }, []);\n  useEffect(function () {\n    var getCities = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return api.get('/cities/get-cities').then(function (res) {\n                  var cities = res.data.Cities;\n                  setAllCities(cities);\n                });\n\n              case 2:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function getCities() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var getCountries = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return api.get('/countries/get-countries').then(function (res) {\n                  var countries = res.data.Countries;\n                  setCountries(countries);\n                });\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function getCountries() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    getSoils();\n    getCountries();\n    getCities();\n  }, []);\n\n  var handleSoilPick = function handleSoilPick(e) {\n    e.preventDefault();\n    var soilType = listSoils.find(function (soil) {\n      return soil.soil == e.target.value;\n    });\n\n    if (e.target.value !== \"\") {\n      setSoilParams({\n        effPluie: soilType.rain_eff\n      });\n      setSoilParams({\n        RUmax: soilType.ru\n      });\n    }\n\n    if (typeof soilType !== \"undefined\") {\n      setSoilParams(_objectSpread({}, soilParams, {\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      }));\n    }\n  }; // ADD Farm\n\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      country = _useState44[0],\n      setCountry = _useState44[1];\n\n  var _useState45 = useState(''),\n      _useState46 = _slicedToArray(_useState45, 2),\n      cities = _useState46[0],\n      setCities = _useState46[1];\n\n  var handleCountryPick = function handleCountryPick(e) {\n    e.preventDefault();\n    var country = countries.find(function (country) {\n      return country.iso === e.target.value;\n    });\n    var Cities = [];\n\n    if (country) {\n      allCities.map(function (city) {\n        if (city.iso === country.iso) {\n          Cities.push({\n            city: city.city,\n            id: city.id,\n            lat: city.lat,\n            lon: city.lon\n          });\n        }\n      });\n      setCountry(country.iso);\n      setCities(Cities);\n    }\n  };\n\n  var _useState47 = useState({\n    name: \"\",\n    groupName: \"\",\n    cityId: \"\"\n  }),\n      _useState48 = _slicedToArray(_useState47, 2),\n      farmParams = _useState48[0],\n      setFarmParams = _useState48[1];\n\n  var userUid = JSON.parse(localStorage.getItem('user')).id;\n\n  var addFarm = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              data = {\n                name: farmParams.name,\n                name_group: farmParams.groupName,\n                user_uid: userUid,\n                city_id: farmParams.cityId // Coordinates : layer,\n                // Latitude : coords.Latitude,\n                // Longitude : coords.Longitude\n\n              };\n              _context10.next = 3;\n              return api.post('/farm/add-farm', data).then(function (response) {\n                if (response.data.type === \"success\") {\n                  swal('Farm Added', {\n                    icon: \"success\"\n                  });\n                  getLayerFarm();\n                  setSteps(steps + 1);\n                }\n              }).catch(function (err) {\n                swal(err, {\n                  icon: \"error\"\n                });\n              });\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function addFarm() {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // ADD Field\n\n\n  var _useState49 = useState({\n    name: \"\",\n    farm_uid: \"\",\n    width: \"\",\n    length: \"\",\n    Latitude: \"\",\n    Longitude: \"\"\n  }),\n      _useState50 = _slicedToArray(_useState49, 2),\n      dataField = _useState50[0],\n      setDataField = _useState50[1];\n\n  var addField = function addField() {\n    var data = {\n      name: dataField.name,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid,\n      largeur: dataField.width,\n      longueur: dataField.length // Latitude: coords.Latitude,\n      // Longitude: coords.Longitude\n\n    };\n    api.post('/field/add-field', data).then(function (res) {\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('field_added')), {\n          icon: \"success\"\n        });\n        getDataFields();\n        setSteps(steps + 1);\n      }\n    }).catch(function () {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  }; // ADD Soil Zone\n\n\n  var soilTypeForm = function soilTypeForm() {\n    if (isStandardSoil == true) return null;else {\n      return /*#__PURE__*/React.createElement(CompositeSoil, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  var _useState51 = useState(true),\n      _useState52 = _slicedToArray(_useState51, 2),\n      isStandardSoil = _useState52[0],\n      setSoilType = _useState52[1];\n\n  var _useState53 = useState({\n    soilProperty: \"\",\n    soilType: \"\",\n    field_uid: \"\",\n    zone_uid: \"\",\n    name: \"\",\n    RUmax: \"\",\n    effPluie: \"\"\n  }),\n      _useState54 = _slicedToArray(_useState53, 2),\n      soilParams = _useState54[0],\n      setSoilParams = _useState54[1];\n\n  var addZone = function addZone() {\n    var data = {\n      soilProperty: soilParams.soilProperty,\n      field_uid: soilParams.field_uid,\n      zone_uid: soilParams.zone_uid,\n      name: soilParams.name,\n      RUmax: soilParams.RUmax,\n      effPluie: soilParams.effPluie\n    };\n    api.post('/zone/add-zone', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal({\n          title: 'Cannot add soil',\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal({\n          title: 'Soil added',\n          icon: \"success\",\n          text: 'Soil added successfully '\n        });\n      }\n\n      getDataFields();\n      setSteps(steps + 1);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var _useState55 = useState([]),\n      _useState56 = _slicedToArray(_useState55, 2),\n      listSoil = _useState56[0],\n      setListSoil = _useState56[1];\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      listCrop = _useState58[0],\n      setListCrop = _useState58[1];\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      allVarieties = _useState60[0],\n      setAllVarieties = _useState60[1];\n\n  var _useState61 = useState([]),\n      _useState62 = _slicedToArray(_useState61, 2),\n      listIrrigations = _useState62[0],\n      setListIrrigations = _useState62[1];\n\n  useEffect(function () {\n    var getCropType = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return api.get('/croptype/list-crop').then(function (response) {\n                  if (response) {\n                    var dataCrop = response.data.Croptype;\n                    setListCrop(dataCrop);\n                  }\n                });\n\n              case 3:\n                _context11.next = 8;\n                break;\n\n              case 5:\n                _context11.prev = 5;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.log(_context11.t0);\n\n              case 8:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[0, 5]]);\n      }));\n\n      return function getCropType() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    var getSoils = /*#__PURE__*/function () {\n      var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.prev = 0;\n                _context12.next = 3;\n                return api.get('/soils/get-soils').then(function (response) {\n                  var listSoils = response.data.Soils;\n                  setListSoil(listSoils);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context12.next = 8;\n                break;\n\n              case 5:\n                _context12.prev = 5;\n                _context12.t0 = _context12[\"catch\"](0);\n                console.log(_context12.t0);\n\n              case 8:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[0, 5]]);\n      }));\n\n      return function getSoils() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n\n    var getIrrigations = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.prev = 0;\n                _context13.next = 3;\n                return api.get('/irrigations/get-irrigations').then(function (response) {\n                  if (response) {\n                    var dataIrrig = response.data.Irrigations;\n                    setListIrrigations(dataIrrig);\n                  }\n                });\n\n              case 3:\n                _context13.next = 8;\n                break;\n\n              case 5:\n                _context13.prev = 5;\n                _context13.t0 = _context13[\"catch\"](0);\n                console.log(_context13.t0);\n\n              case 8:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, null, [[0, 5]]);\n      }));\n\n      return function getIrrigations() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    var getVarieties = /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.prev = 0;\n                _context14.next = 3;\n                return api.get('/varieties/get-varieties').then(function (response) {\n                  if (response.data.type === \"success\") {\n                    var listVarieties = response.data.Varieties;\n                    setAllVarieties(listVarieties);\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                _context14.next = 8;\n                break;\n\n              case 5:\n                _context14.prev = 5;\n                _context14.t0 = _context14[\"catch\"](0);\n                console.log(_context14.t0);\n\n              case 8:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, null, [[0, 5]]);\n      }));\n\n      return function getVarieties() {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n\n    getVarieties();\n    getIrrigations();\n    getSoils();\n    getCropType();\n  }, []); // ADD Crop \n\n  var _useState63 = useState(false),\n      _useState64 = _slicedToArray(_useState63, 2),\n      checked = _useState64[0],\n      setChecked = _useState64[1];\n\n  var _useState65 = useState({\n    field_uid: \"\",\n    zone_uid: \"\",\n    cropType: \"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    growingDate: \"\",\n    rootDepth: \"\",\n    ecartInter: \"\",\n    ecartIntra: \"\",\n    density: \"\",\n    ruPratique: \"\",\n    kcList: []\n  }),\n      _useState66 = _slicedToArray(_useState65, 2),\n      cropData = _useState66[0],\n      setCropData = _useState66[1];\n\n  var handleCropPick = function handleCropPick(e) {\n    e.preventDefault(); // props.handleCropType(e)\n\n    var crop = listCrop.find(function (crop) {\n      return crop.id == e.target.value;\n    });\n\n    if (e.target.value !== '') {\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        ruPratique: crop.practical_fraction\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        days: crop.total\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        rootDepth: crop.root_max\n      }));\n      setCropData(_objectSpread({}, cropData, {\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', '')\n      }));\n    }\n\n    var varieties = [];\n\n    if (crop) {\n      var variety = allVarieties.map(function (variety) {\n        if (variety.crop_id === crop.id) {\n          varieties.push({\n            varietyId: variety.id,\n            variety: variety.crop_variety\n          });\n        }\n      });\n      setCropData(_objectSpread({}, cropData, {\n        cropType: crop.id,\n        variety: crop.crop_variety,\n        cropVariety: varieties,\n        rootDepth: crop.root_max,\n        ruPratique: crop.practical_fraction,\n        days: crop.total,\n        plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n        kcList: crop.all_kc\n      }));\n    }\n  };\n\n  var handleVarietyPick = function handleVarietyPick(e) {\n    e.preventDefault();\n    var variety = allVarieties.find(function (variety) {\n      return variety.id == e.target.value;\n    });\n\n    if (variety) {\n      setCropData(_objectSpread({}, cropData, {\n        variety: variety.id\n      }));\n    }\n  };\n\n  var addCrop = function addCrop() {\n    var data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction: cropData.ruPratique,\n      density: cropData.density,\n      ecart_inter: cropData.ecartInter,\n      ecart_intra: cropData.ecartIntra,\n      growingDate: cropData.growingDate\n    };\n    api.post('/crop/add-crop', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('crop_added')), {\n          icon: \"success\"\n        });\n        getDataFields();\n        setSteps(steps + 1);\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  }; // ADD Irrigation\n\n\n  var _useState67 = useState({\n    irrigType: \"\",\n    zone_uid: \"\",\n    crop_uid: \"\",\n    flowrate: \"\",\n    irrigated_already: \"\",\n    name: \"\",\n    pivot_shape: \"\",\n    irrigation_syst: \"\",\n    pivot_length: \"\",\n    pivot_coord: \"\",\n    full_runtime: \"\",\n    lateral: \"\",\n    drippers: \"\",\n    effIrrig: \"\",\n    pumpFlow: \"\",\n    pumpType: \"\",\n    linesNumber: \"\"\n  }),\n      _useState68 = _slicedToArray(_useState67, 2),\n      irrigData = _useState68[0],\n      setIrrigData = _useState68[1];\n\n  var handleIrrigPick = function handleIrrigPick(e) {\n    e.preventDefault();\n    var irrigation = listIrrigations.find(function (irrigation) {\n      return irrigation.irrigation == e.target.value;\n    });\n    setIrrigData({\n      irrigType: irrigation.irrigation\n    });\n\n    if (irrigation) {\n      setIrrigData(_objectSpread({}, irrigData, {\n        irrigType: irrigation.irrigation,\n        effIrrig: irrigation.effIrrig\n      }));\n    }\n  };\n\n  var irrigationMethodForm = function irrigationMethodForm() {\n    switch (irrigData.irrigType) {\n      case \"\".concat(t('Pivot')):\n        return /*#__PURE__*/React.createElement(PivotForm, {\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          handleIrrgSyst: function handleIrrgSyst(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigation_syst: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handlePivotCoord: function handlePivotCoord(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_coord: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handlePivotShape: function handlePivotShape(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_shape: e.target.value\n            }));\n          },\n          irrigation_syst: irrigData.irrigation_syst,\n          pivot_coord: irrigData.pivot_coord,\n          pivot_length: irrigData.pivot_length,\n          pivot_shape: irrigData.pivot_shape,\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 18\n          }\n        });\n\n      case \"\".concat(t('Lateral')):\n        return /*#__PURE__*/React.createElement(LateralForm, {\n          handleLateral: function handleLateral(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              lateral: e.target.value\n            }));\n          },\n          handlePivotLength: function handlePivotLength(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pivot_length: e.target.value\n            }));\n          },\n          handleRunTime: function handleRunTime(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              full_runtime: e.target.value\n            }));\n          },\n          handleName: function handleName(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              name: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          full_runtime: irrigData.full_runtime,\n          flowrate: irrigData.flowrate,\n          name: irrigData.name,\n          pivot_length: irrigData.pivot_length,\n          lateral: irrigData.lateral,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 18\n          }\n        });\n\n      case \"\".concat(t('None')):\n        return null;\n\n      default:\n        return /*#__PURE__*/React.createElement(DripForm, {\n          handleDrippers: function handleDrippers(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              drippers: e.target.value\n            }));\n          },\n          handleIrrigAlrd: function handleIrrigAlrd(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          handleFlowRate: function handleFlowRate(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              flowrate: e.target.value\n            }));\n          },\n          flowrate: irrigData.flowrate,\n          drippers: irrigData.drippers,\n          irrigated_already: irrigData.irrigated_already,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }\n        });\n    }\n  };\n\n  var addIrrigation = function addIrrigation() {\n    var data = {\n      type: irrigData.irrigType,\n      zone_uid: irrigData.zone_uid,\n      crop_uid: irrigData.crop_uid,\n      flowrate: irrigData.flowrate,\n      irrigated_already: irrigData.irrigated_already,\n      name: irrigData.name,\n      pivot_shape: irrigData.pivot_shape,\n      irrigation_syst: irrigData.irrigation_syst,\n      pivot_length: irrigData.pivot_length,\n      pivot_coord: irrigData.pivot_coord,\n      full_runtime: irrigData.full_runtime,\n      lateral: irrigData.lateral,\n      drippers: irrigData.drippers,\n      effIrrig: irrigData.effIrrig,\n      pumpFlow: irrigData.pumpFlow,\n      pumpType: irrigData.pumpType,\n      lines_number: irrigData.linesNumber\n    };\n    api.post('/irrigation/add-irrigation', data).then(function (res) {\n      if (res.data.type && res.data.type == \"danger\") {\n        swal(\"Error\", {\n          icon: \"error\"\n        });\n      }\n\n      if (res.data.type && res.data.type == \"success\") {\n        swal(\"\".concat(t('irrigation_added')), {\n          icon: \"success\"\n        });\n        setSteps(steps + 1);\n      }\n    }).catch(function (err) {\n      swal(\"Error\", {\n        icon: \"error\"\n      });\n    });\n  };\n\n  var configProcess = function configProcess() {\n    switch (steps) {\n      case 0:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('farm_setup')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 12\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 13\n          }\n        }, \"\\\"To get started, please provide a name and location for your farm. This will help us to identify and locate your farm accurately.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1055,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1057,\n            columnNumber: 17\n          }\n        }, \" \", t('name_farm')), /*#__PURE__*/React.createElement(FormInput, {\n          placeholder: t('name_farm'),\n          required: true,\n          value: farmParams.name,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 17\n          }\n        }, t('group_name')), /*#__PURE__*/React.createElement(FormInput, {\n          placeholder: t('group_name'),\n          value: farmParams.groupName,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              groupName: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 17\n          }\n        }))), /*#__PURE__*/React.createElement(Row, {\n          className: \"pt-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 31\n          }\n        }, t('select_country')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCountryPick,\n          value: country,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 31\n          }\n        }, countries.map(function (country) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: country.id,\n            value: country.iso,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1085,\n              columnNumber: 39\n            }\n          }, country.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 31\n          }\n        }, t('select_city')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: farmParams.cityId,\n          onChange: function onChange(e) {\n            return setFarmParams(_objectSpread({}, farmParams, {\n              cityId: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 33\n          }\n        }, t('select_city')), cities && cities.map(function (city) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            key: city.id,\n            value: city.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1101,\n              columnNumber: 39\n            }\n          }, city.city);\n        })))));\n\n      case 1:\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1114,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('field_setup')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1117,\n            columnNumber: 13\n          }\n        }, \"\\\"To add a field configuration, please provide a name and associate it with the appropriate farm. This will help us to accurately track and manage your crops.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 19\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormInput, {\n          value: dataField.name,\n          placeholder: t('name_field') // className={props.nameError =='' ? '' : 'is-invalid'}\n          ,\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1126,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 19\n          }\n        }, t('name_farm')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: dataField.farm_uid // className={props.farmError =='' ? '' : 'is-invalid'}\n          ,\n          required: true,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              farm_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 21\n          }\n        }, t('select_farm')), \";\", layerFarm.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 30\n            }\n          }, item.name);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1153,\n            columnNumber: 19\n          }\n        }, t('width'), \" (M)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          placeholder: t('width'),\n          value: dataField.width,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              width: e.target.value\n            }));\n          },\n          required: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 19\n          }\n        })), /*#__PURE__*/React.createElement(Col, {\n          lg: \"6\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\",\n            textAlign: \"left\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 19\n          }\n        }, t('length'), \" (M)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          placeholder: t('length'),\n          value: dataField.length,\n          onChange: function onChange(e) {\n            return setDataField(_objectSpread({}, dataField, {\n              length: e.target.value\n            }));\n          },\n          required: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 19\n          }\n        }))))));\n\n      case 2:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1184,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('soil_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1186,\n            columnNumber: 12\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1188,\n            columnNumber: 13\n          }\n        }, \"\\\"To add your soil type configuration, please provide the appropriate details and associate it with the appropriate field. This will help us to provide accurate recommendations for managing your crops.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1191,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1214,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1215,\n            columnNumber: 17\n          }\n        }, t('soil_zone')), /*#__PURE__*/React.createElement(FormInput, {\n          value: soilParams.name,\n          placeholder: t('soil_zone'),\n          required: true,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              name: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1223,\n            columnNumber: 17\n          }\n        }, t('soil_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilParams.soilType,\n          onChange: handleSoilPick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 19\n          }\n        }, t('select_soil')), listSoils.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.soil,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1231,\n              columnNumber: 30\n            }\n          }, item.soil);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1239,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1240,\n            columnNumber: 15\n          }\n        }, t('soil_prop')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: function onChange(evt) {\n            setSoilType(!isStandardSoil);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1241,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          selected: isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 17\n          }\n        }, \"Standard\"), /*#__PURE__*/React.createElement(\"option\", {\n          selected: !isStandardSoil,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1249,\n            columnNumber: 17\n          }\n        }, \"Composite\")), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1251,\n            columnNumber: 17\n          }\n        }, t('name_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: soilParams.field_uid,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('name_field'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1257,\n            columnNumber: 19\n          }\n        }, t('select_field')), fields.map(function (item, index) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 28\n            }\n          }, item.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 13\n          }\n        }, soilTypeForm()), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1269,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1270,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1271,\n            columnNumber: 19\n          }\n        }, t('efficacité_pluie'), \" (%)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilParams.effPluie,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              effPluie: e.target.value\n            }));\n          },\n          id: \"effPluie\",\n          placeholder: t('efficacité_pluie'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1277,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1278,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1279,\n            columnNumber: 19\n          }\n        }, \"RU max (mm/m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: soilParams.RUmax,\n          onChange: function onChange(e) {\n            return setSoilParams(_objectSpread({}, soilParams, {\n              RUmax: e.target.value\n            }));\n          },\n          id: \"ruMax\",\n          placeholder: \"RU max\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 19\n          }\n        })))));\n\n      case 3:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('crop_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 12\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1294,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 13\n          }\n        }, \"\\\"To add your crop type configuration, please provide the appropriate details and associate it with the appropriate field and soil type. This will help us to provide personalized recommendations for managing your crops and achieving optimal yields.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2 d-flex justify-content-start border-bottom align-items-center\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group pt-4\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1323,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 17\n          }\n        }, t('crop_type')), /*#__PURE__*/React.createElement(FormSelect, {\n          onChange: handleCropPick,\n          placeholder: t('crop_type'),\n          value: cropData.cropType,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 19\n          }\n        }, \"Select Crop\"), listCrop.map(function (crop) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.id,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 21\n            }\n          }, crop.crop);\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1341,\n            columnNumber: 17\n          }\n        }, t('crop_variety')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.variety,\n          onChange: handleVarietyPick,\n          id: \"cropVariety\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1342,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1343,\n            columnNumber: 19\n          }\n        }, t('crop_variety')), cropData.cropVariety.map(function (variety) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: variety.varietyId,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1346,\n              columnNumber: 27\n            }\n          }, variety.variety);\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          name: \"Autre\",\n          id: \"check\",\n          onClick: function onClick() {\n            return setChecked(!checked);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 17\n          }\n        }), \" \", t('other'), checked ? /*#__PURE__*/React.createElement(FormInput, {\n          value: cropData.variety || \"\",\n          placeholder: t('crop_variety'),\n          id: \"cropVariety\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              variety: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1355,\n            columnNumber: 23\n          }\n        }) : null), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1367,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1368,\n            columnNumber: 17\n          }\n        }, t('crop_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.zone_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              zone_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1369,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1374,\n            columnNumber: 19\n          }\n        }, t('select_zone')), zones.map(function (soil) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: soil.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1378,\n              columnNumber: 29\n            }\n          }, soil.name);\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1384,\n            columnNumber: 17\n          }\n        }, t('crop_field')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: cropData.field_uid,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              field_uid: e.target.value\n            }));\n          },\n          placeholder: t('crop_zone'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 19\n          }\n        }, t('select_field')), fields.map(function (item, indx) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1393,\n              columnNumber: 30\n            }\n          }, item.title);\n        })))), /*#__PURE__*/React.createElement(Row, {\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1401,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1403,\n            columnNumber: 19\n          }\n        }, t('depth'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.rootDepth,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              rootDepth: e.target.value\n            }));\n          },\n          id: \"z\",\n          placeholder: t('depth'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1404,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1410,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 19\n          }\n        }, t('Days')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.days,\n          id: \"days\",\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              days: e.target.value\n            }));\n          },\n          placeholder: t('Days'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1413,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1418,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1419,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 19\n          }\n        }, t('planting_date')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.growingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              growingDate: e.target.value\n            }));\n          },\n          id: \"planting_date\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1421,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          hidden: true,\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 19\n          }\n        }, t('growing_season')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"date\",\n          value: cropData.plantingDate,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              plantingDate: e.target.value\n            }));\n          },\n          id: \"days\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1436,\n            columnNumber: 19\n          }\n        }, t('fraction_pratique'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ruPratique,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ruPratique: e.target.value\n            }));\n          },\n          id: \"ruPratique\",\n          placeholder: t('fraction_pratique'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 19\n          }\n        }, t('ecart_inter'), \" (m)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartInter,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartInter: e.target.value\n            }));\n          },\n          id: \"ecartInter\",\n          placeholder: t('ecart_inter'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1450,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1451,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1452,\n            columnNumber: 19\n          }\n        }, t('ecart_intra'), \" (m) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.ecartIntra,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              ecartIntra: e.target.value\n            }));\n          },\n          id: \"ecartIntra\",\n          placeholder: t('ecart_intra'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1453,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"12\",\n          sm: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1458,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 19\n          }\n        }, t('densité'), \" (plants/ha)\"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: cropData.density,\n          onChange: function onChange(e) {\n            return setCropData(_objectSpread({}, cropData, {\n              density: e.target.value\n            }));\n          },\n          id: \"densit\\xE9\",\n          placeholder: t('densité'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1461,\n            columnNumber: 19\n          }\n        })))));\n\n      case 4:\n        return /*#__PURE__*/React.createElement(Form, {\n          className: \"pb-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1472,\n            columnNumber: 14\n          }\n        }, /*#__PURE__*/React.createElement(PageTitle, {\n          subtitle: \"\".concat(t('step'), \" \").concat(steps + 1, \" - \").concat(t('Irrigation_info')),\n          className: \" mb-1\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1473,\n            columnNumber: 12\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            backgroundColor: '#F7F7F7',\n            padding: '20px',\n            borderRadius: '10px'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1474,\n            columnNumber: 12\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '1.5',\n            margin: '0'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1475,\n            columnNumber: 13\n          }\n        }, \"\\\"To add your irrigation type configuration, please provide the appropriate details and associate it with the appropriate crop type and soil type. This will help us to provide personalized recommendations for managing your crops and optimizing water usage.\\\"\"))), /*#__PURE__*/React.createElement(Row, {\n          form: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1478,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1480,\n            columnNumber: 17\n          }\n        }, t('irrigation_zone')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.zone_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              zone_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1485,\n            columnNumber: 19\n          }\n        }, t('select_zone')), zones.map(function (item, indx) {\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 31\n            }\n          }, item.name);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1495,\n            columnNumber: 17\n          }\n        }, t('irrigation_crop')), /*#__PURE__*/React.createElement(FormSelect, {\n          value: irrigData.crop_uid,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              crop_uid: e.target.value\n            }));\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1496,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1500,\n            columnNumber: 19\n          }\n        }, t('select_crop')), crops.map(function (crop) {\n          var cropType = \"\";\n          listCrop.map(function (croptype) {\n            if (croptype.id === crop.croptype_id) {\n              cropType = croptype.crop;\n            }\n          });\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: crop.Uid,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 30\n            }\n          }, cropType);\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          className: \"form-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1516,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1517,\n            columnNumber: 17\n          }\n        }, t('Irrigation_system_type')), /*#__PURE__*/React.createElement(FormSelect // className={props.typeErrorIrrig == '' ? '' : 'is-invalid'}\n        , {\n          value: irrigData.irrigType,\n          onChange: function onChange(evt) {\n            handleIrrigPick(evt);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          disabled: true,\n          selected: true,\n          value: \"\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1525,\n            columnNumber: 19\n          }\n        }, t('select_irriagtion')), listIrrigations.map(function (item) {\n          // if (item.value === irrigationMethod) {\n          //   return <option value={item.value} selected={true}>{item.type}</option>;\n          // } else {\n          //   return <option value={item.value} selected={false}>{item.type}</option>;\n          // }\n          return /*#__PURE__*/React.createElement(\"option\", {\n            value: item.irrigation,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1533,\n              columnNumber: 32\n            }\n          }, t(\"\".concat(item.irrigation)));\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1539,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1540,\n            columnNumber: 19\n          }\n        }, t('efficience_irrigation'), \" (%) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.effIrrig,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              effIrrig: e.target.value\n            }));\n          },\n          id: \"effIrrig\",\n          placeholder: t('efficience_irrigation'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1541,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1547,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1548,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1549,\n            columnNumber: 19\n          }\n        }, t('type_reseau')), /*#__PURE__*/React.createElement(FormInput, {\n          value: irrigData.pumpType,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpType: e.target.value\n            }));\n          },\n          id: \"type_reseau\",\n          placeholder: t('type_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1550,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1556,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1557,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1558,\n            columnNumber: 19\n          }\n        }, t('debit_reseau'), \" (l/s) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.pumpFlow,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              pumpFlow: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('debit_reseau'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1559,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1565,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1566,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1567,\n            columnNumber: 19\n          }\n        }, t('nbr_ligne')), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.linesNumber,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              linesNumber: e.target.value\n            }));\n          },\n          id: \"nbr_ligne\",\n          placeholder: t('nbr_ligne'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1568,\n            columnNumber: 19\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          lg: \"4\",\n          md: \"8\",\n          sm: \"8\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1574,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1575,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            margin: \"0px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1576,\n            columnNumber: 17\n          }\n        }, t('irrigated_already'), \"(h) \"), /*#__PURE__*/React.createElement(FormInput, {\n          type: \"number\",\n          value: irrigData.irrigated_already,\n          onChange: function onChange(e) {\n            return setIrrigData(_objectSpread({}, irrigData, {\n              irrigated_already: e.target.value\n            }));\n          },\n          id: \"debitReseau\",\n          placeholder: t('irrigated_already'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1577,\n            columnNumber: 17\n          }\n        }))), irrigationMethodForm()));\n\n      case 5:\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-column align-items-center justify-content-around\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1589,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          width: \"20%\",\n          src: clap,\n          alt: \"Congratulations\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1591,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"h6\", {\n          style: {\n            textAlign: \"center\",\n            width: \"88%\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 11\n          }\n        }, \"Congratulations, your farm configuration is complete \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 109\n          }\n        }), \" Thank you for filling out all 5 steps of the form. \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 167\n          }\n        }), \"Now it's time to configure your sensors. Please proceed to the next step to add your sensor configuration.\"));\n\n      default:\n        break;\n    }\n  };\n\n  var totalSteps = 5;\n  var percentageComplete = Math.ceil(steps / totalSteps * 100);\n\n  var handleSubmit = function handleSubmit() {\n    switch (steps) {\n      case 0:\n        return addFarm();\n\n      case 1:\n        return addField();\n\n      case 2:\n        return addZone();\n\n      case 3:\n        return addCrop();\n\n      case 4:\n        return addIrrigation();\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1635,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    show: show,\n    onHide: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1637,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    className: \"d-flex flex-column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1638,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1639,\n      columnNumber: 13\n    }\n  }, \"Farm Configuration\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textDecoration: \"underline\",\n      fontSize: 12,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1640,\n      columnNumber: 13\n    }\n  }, \"Each step of this form is dependent on the previous step, so please fill out the fields in the correct order to avoid errors or an incomplete submission.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1641,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProgressBar, {\n    animated: true,\n    variant: \"success\",\n    now: percentageComplete,\n    label: \"\".concat(percentageComplete, \"%\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1642,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1647,\n      columnNumber: 11\n    }\n  }, configProcess()), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1650,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1651,\n      columnNumber: 13\n    }\n  }, \"Close\"), steps !== 5 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1657,\n      columnNumber: 15\n    }\n  }, \"Save & continue process\") : null, steps > 0 && steps < 5 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: prevStep,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1667,\n      columnNumber: 17\n    }\n  }, \"Previous\") : null))), /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-2 mb-4 d-flex justify-content-between flex-nowrap align-items-center border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1677,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    title: t('overview'),\n    className: \" mb-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1678,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    open: toggle,\n    toggle: toggleDropDown,\n    className: \"d-table mr-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1679,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1680,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"TooltipExample\",\n    theme: \"info\",\n    className: \"rounded-circle\",\n    style: {\n      height: 50,\n      width: 50\n    },\n    onClick: toggleDropDown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    style: {\n      fontSize: 30,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      color: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1682,\n      columnNumber: 15\n    }\n  }, \"\\uE145\"), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: \"left\",\n    open: open,\n    target: \"#TooltipExample\",\n    toggle: toggleToolTip,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1683,\n      columnNumber: 15\n    }\n  }, t('add_element')))), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    style: {\n      zIndex: \"10\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1695,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: handleShow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1696,\n      columnNumber: 13\n    }\n  }, t('farms')), /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return ToAddSensorPage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1704,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1705,\n      columnNumber: 15\n    }\n  }, t('sensors'))), /*#__PURE__*/React.createElement(Link, {\n    onClick: function onClick() {\n      return ToWaterBalancePage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1709,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1710,\n      columnNumber: 15\n    }\n  }, t('water_balance')))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1718,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1719,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1720,\n      columnNumber: 11\n    }\n  }, t('field_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1721,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 d-flex  justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1722,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1723,\n      columnNumber: 15\n    }\n  }, smallStats.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      FilterByStatus: FilterByStatus,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1734,\n        columnNumber: 21\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1751,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"6\",\n    className: \"mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1767,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1768,\n      columnNumber: 11\n    }\n  }, t('sensor_stats')), /*#__PURE__*/React.createElement(Card, {\n    small: true,\n    className: \"stats-small h-100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1769,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-2 d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1770,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1771,\n      columnNumber: 15\n    }\n  }, smallStats2.map(function (stats, idx) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SmallStats, {\n      ToSensorPage: ToSensorPage,\n      style: {\n        borderColor: \"blue\",\n        borderWidth: 2,\n        borderStyle: \"solid\"\n      },\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      icon: stats.icon,\n      state: stats.state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1781,\n        columnNumber: 21\n      }\n    }), idx != 2 ? /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        backgroundColor: \"#ebebeb\",\n        width: \"1px\",\n        height: \"75%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1798,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    lg: \"4\",\n    md: \"12\",\n    sm: \"12\",\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1814,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LeafletMap, {\n    data: layerFarm,\n    sensor: sensorStats,\n    draw: draw,\n    zoom: mapConfig.zoom,\n    center: mapConfig.center,\n    fromAcrion: mapConfig.fromAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1816,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex justify-content-center align-items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1819,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1821,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterFields, {\n    smallStats: smallStats,\n    sensorsData: sensorsData,\n    crops: crops,\n    filteredByStatus: farms,\n    sensorStats: sensorStats,\n    fieldStats: fieldStats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1822,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Overview;","map":{"version":3,"names":["React","useEffect","useState","useHistory","Link","Container","Row","Col","CardBody","Card","Button","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Tooltip","FormInput","FormSelect","FormGroup","Form","PageTitle","SmallStats","LeafletMap","SignalCellularNodataIcon","SignalCellular4BarIcon","Modal","ProgressBar","api","useTranslation","FilterFields","swal","useSensorData","AddField","FieldSetupForm","FieldSoilForm","FieldCropForm","CompositeSoil","DripForm","LateralForm","PivotForm","clap","Overview","props","toggle","setToggle","farms","setFarms","polygon","circle","rectangle","polyline","marker","circlemarker","draw","setDraw","history","steps","setSteps","edit","delete","configMap","setConfigMap","layer","setLayer","Latitude","Longitude","zoom","center","fromAction","coords","setCoords","_onCreated","e","type","layerType","_latlngs","Coordinates","map","coord","Lat","lat","Long","lng","JSON","stringify","getLatLng","t","i18n","fieldStats","setFS","sensorStats","setSensorStats","open","setOpen","userMapDetails","setUserMapDetails","layerFarm","setLayerFarm","mapConfig","setMapConfig","sensorsData","toggleDropDown","toggleToolTip","getFieldStats","get","response","data","user_map_details","map_link_details","getSensorsStats","sensors","crops","setCrops","dataCrops","setDataCrops","getLayerFarm","then","res","DataFarm","critical","full","opt","item","fields","field","status","smallStats","state","icon","label","value","chartLabels","attrs","md","sm","datasets","fill","borderWidth","backgroundColor","borderColor","online","offline","lowBatt","sensor","id","smallStats2","FilterByStatus","post","farmsData","catch","err","title","ToSensorPage","push","window","location","reload","ToAddSensorPage","ToAddFarmPage","ToAddFieldPage","ToWaterBalancePage","show","setShow","handleClose","handleShow","prevStep","nextStep","listSoils","setListSoils","setFields","zones","setZones","allCities","setAllCities","countries","setCountries","getSoils","Soils","error","console","log","getDataFields","newData","Fields","Zones","Crops","itemfield","name","description","Uid","uid","farm_id","Id","crop","fieldId","field_id","zone_id","croptype_id","croptype","croptypes","i","source","getCities","cities","Cities","getCountries","Countries","handleSoilPick","preventDefault","soilType","find","soil","target","setSoilParams","effPluie","rain_eff","RUmax","ru","soilParams","country","setCountry","setCities","handleCountryPick","iso","city","lon","groupName","cityId","farmParams","setFarmParams","userUid","parse","localStorage","getItem","addFarm","name_group","user_uid","city_id","farm_uid","width","length","dataField","setDataField","addField","farmName","largeur","longueur","soilTypeForm","isStandardSoil","setSoilType","soilProperty","field_uid","zone_uid","addZone","text","listSoil","setListSoil","listCrop","setListCrop","allVarieties","setAllVarieties","listIrrigations","setListIrrigations","getCropType","dataCrop","Croptype","getIrrigations","dataIrrig","Irrigations","getVarieties","listVarieties","Varieties","checked","setChecked","cropType","variety","cropVariety","Profondeur","days","plantingDate","growingDate","rootDepth","ecartInter","ecartIntra","density","ruPratique","kcList","cropData","setCropData","handleCropPick","practical_fraction","total","root_max","plant_date","slice","replace","varieties","crop_id","varietyId","crop_variety","all_kc","handleVarietyPick","addCrop","previous_type","crop_variety_id","ecart_inter","ecart_intra","irrigType","crop_uid","flowrate","irrigated_already","pivot_shape","irrigation_syst","pivot_length","pivot_coord","full_runtime","lateral","drippers","effIrrig","pumpFlow","pumpType","linesNumber","irrigData","setIrrigData","handleIrrigPick","irrigation","irrigationMethodForm","addIrrigation","lines_number","configProcess","padding","borderRadius","fontSize","lineHeight","margin","textAlign","index","evt","indx","totalSteps","percentageComplete","Math","ceil","handleSubmit","textDecoration","fontWeight","height","display","justifyContent","alignItems","color","zIndex","flexDirection","flexWrap","stats","idx","borderStyle"],"sources":["/var/www/prod/smartfarm/backoffice/frontend/src/views/Overview.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, Link } from 'react-router-dom'\nimport { Container, Row, Col, CardBody, Card, Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Tooltip, FormInput, FormSelect, FormGroup, Form } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport SmallStats from \"../components/common/SmallStats\";\nimport \"./../assets/Styles.css\";\nimport \"./Styles.css\";\nimport LeafletMap from \"./map\";\nimport SignalCellularNodataIcon from \"@mui/icons-material/SignalCellularNodata\";\nimport SignalCellular4BarIcon from \"@mui/icons-material/SignalCellular4Bar\";\nimport { Modal, ProgressBar } from \"react-bootstrap\";\nimport api from '../api/api';\nimport { useTranslation } from \"react-i18next\";\nimport FilterFields from './FilterFields'\nimport swal from \"sweetalert\";\nimport useSensorData from \"../utils/useSensorData\";\nimport AddField from \"./AddField\";\nimport FieldSetupForm from \"../components/FieldSettingForms/FieldSetupForm\";\nimport FieldSoilForm from \"../components/FieldSettingForms/FieldSoilForm\";\nimport FieldCropForm from \"../components/FieldSettingForms/FieldCropForm\";\nimport CompositeSoil from \"../components/FieldSettingForms/compositeSoilForm\";\nimport DripForm from \"../components/FieldSettingForms/dripForm\";\nimport LateralForm from \"../components/FieldSettingForms/lateralForm\";\nimport PivotForm from \"../components/FieldSettingForms/pivotForm\";\nimport clap from \"../images/applause.png\";\n\n\nconst Overview = (props) => {\n  const [toggle, setToggle] = useState(false)\n  const [farms, setFarms] = useState([]);\n  const [draw, setDraw] = useState({\n    polygon: false,\n    circle: false,\n    rectangle: false,\n    polyline: false,\n    marker: false,\n    circlemarker: false\n  })\n  const history = useHistory();\n  const [steps, setSteps] = useState(0)\n  // const [offer,setOffer] = useState(null)\n  const [configMap, setConfigMap] = useState({\n    draw: {\n      polygon: true,\n      circle: false,\n      rectangle: false,\n      polyline: true,\n      marker: true,\n      circlemarker: false,\n    },\n    edit: {\n      delete: false,\n      edit: false\n    }\n  })\n  const [layer, setLayer] = useState('')\n\n  const [coords, setCoords] = useState({\n    Latitude: \"\",\n    Longitude: \"\",\n    zoom: \"\",\n    center: [],\n    fromAction: false\n  })\n  const _onCreated = e => {\n    let type = e.layerType;\n\n    let layer = e.layer;\n    if (type === \"polygon\") {\n      let coords = layer._latlngs[0];\n      const Coordinates = coords.map((coord) => ({\n        Lat: coord.lat,\n        Long: coord.lng,\n      }));\n      if (Coordinates)\n        setLayer(JSON.stringify(Coordinates))\n    } else {\n      setCoords({ Latitude: layer.getLatLng().lat, Longitude: layer.getLatLng().lng });\n    }\n\n  };\n  // let user = JSON.parse(localStorage.getItem(\"user\"));\n  // let offerType = user.offer_type;\n  const { t, i18n } = useTranslation();\n\n  const [fieldStats, setFS] = useState([])\n  const [sensorStats, setSensorStats] = useState([])\n  const [open, setOpen] = useState(false)\n  const [userMapDetails, setUserMapDetails] = useState(\"#\")\n  const [layerFarm, setLayerFarm] = useState([])\n  const [mapConfig, setMapConfig] = useState({\n    zoom: \"\",\n    center: [],\n    fromAction: false,\n  })\n\n\n\n  let sensorsData = useSensorData('/sensor/sensor-update-data')\n\n  const toggleDropDown = () => {\n    setToggle(!toggle)\n  }\n\n  const toggleToolTip = () => {\n    setOpen(!open)\n  }\n\n  const getFieldStats = async () => {\n    const response = await api.get('/dashboard/fields');\n    setFS(response.data.farms);\n    setUserMapDetails(response.data.user_map_details.map_link_details)\n  }\n\n  const getSensorsStats = async () => {\n    const response = await api.get('/dashboard/sensors');\n    setSensorStats(response.data.sensors);\n  }\n  const [crops, setCrops] = useState([])\n  const [dataCrops, setDataCrops] = useState([]);\n\n  // const fetchDataCrops = async () => {\n  //   await api.get('/crop/crops')\n  //     .then(response => {\n  //       let dataCrops = response.data.farms;\n  //       setDataCrops(dataCrops)\n  //       let Crops = [];\n  //       dataCrops.map(farm => {\n  //         let fields = farm.fields;\n  //         if (fields) {\n  //           fields.map(field => {\n  //             let crops = field.crops\n  //             if (crops) {\n  //               crops.map(crop => {\n  //                 Crops.push({\n  //                   type: crop.type,\n  //                   id: crop.id,\n  //                   fieldId: crop.field_id\n  //                 })\n  //               })\n  //             }\n  //           })\n  //         }\n  //       })\n  //       setCrops(Crops)\n  //     }).catch(err => {\n  //       console.log(err)\n  //     })\n  // }\n\n  const getLayerFarm = async () => {\n    await api.get('/farm/farms').then(res => {\n      const DataFarm = res.data.farms;\n      setLayerFarm(DataFarm);\n    })\n  }\n\n  useEffect(() => {\n    // getLastDataSensor()\n    getLayerFarm()\n    getFieldStats();\n    getSensorsStats();\n    // fetchDataCrops()\n  }, [])\n  let critical = 0;\n  let full = 0;\n  let opt = 0;\n\n  fieldStats.map(item => {\n    item.fields.map(field => {\n      let status = field.status\n      if (status) {\n        if (status == \"Optimal\") {\n          opt++\n        }\n        if (status == \"Full\") {\n          full++\n        }\n        if (status == \"Critical\") {\n          critical++\n        }\n      }\n\n    })\n  });\n\n\n\n\n  let smallStats = [\n    {\n      state: `${t('Critical')}`,\n      icon: <i class=\"fas fa-tint-slash\"></i>,\n      label: `${t('fields')}`,\n      value: critical,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(0, 184, 216, 0.1)\",\n          borderColor: \"rgb(0, 184, 216)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('Optimal')}`,\n      icon: <i class={\"far fa-check-circle\"}></i>,\n      label: `${t('fields')}`,\n      value: opt,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"6\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(23,198,113,0.1)\",\n          borderColor: \"rgb(23,198,113)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('Full')}`,\n      icon: <i class=\"fas fa-tint\"></i>,\n      label: `${t('fields')}`,\n      value: full,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    }\n  ]\n\n  let online = 0;\n  let offline = 0;\n  let lowBatt = 0;\n\n  sensorStats.map(item => {\n    let sensor = item.id;\n    if (sensor) {\n      online++;\n    }\n  });\n\n\n  let smallStats2 = [\n    {\n      state: `${t('online')}`,\n      icon: <SignalCellular4BarIcon />,\n      label: `${t('sensors')}`,\n      value: online,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('low_batt')}`,\n      icon: <i class=\"fas fa-battery-quarter\"></i>,\n      label: `${t('sensors')}`,\n      value: lowBatt,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    },\n    {\n      state: `${t('offline')}`,\n      icon: <SignalCellularNodataIcon />,\n      label: `${t('sensors')}`,\n      value: offline,\n      chartLabels: [null, null, null, null, null, null, null],\n      attrs: { md: \"4\", sm: \"6\" },\n      datasets: [\n        {\n          label: \"Today\",\n          fill: \"start\",\n          borderWidth: 1.5,\n          backgroundColor: \"rgba(255,180,0,0.1)\",\n          borderColor: \"rgb(255,180,0)\",\n          data: []\n        }\n      ]\n    }\n  ]\n\n\n\n  const FilterByStatus = async (status) => {\n    let data = {\n      status: status\n    }\n    await api.post('/field/field-status', data)\n      .then(response => {\n        let farmsData = response.data.farms\n        setFarms(farmsData);\n      }).catch((err) => {\n        swal({\n          title: 'Error',\n          icon: \"error\"\n        });\n      })\n  }\n\n  const ToSensorPage = () => {\n    history.push('/Sensors')\n    window.location.reload()\n  }\n  const ToAddSensorPage = () => {\n    history.push('/AddSensor')\n    window.location.reload()\n  }\n  const ToAddFarmPage = () => {\n    history.push('/AddFarm')\n    window.location.reload()\n  }\n  const ToAddFieldPage = () => {\n    history.push('/AddField')\n    window.location.reload()\n  }\n  const ToWaterBalancePage = () => {\n    history.push('/Bilan')\n    window.location.reload()\n  }\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const prevStep = () => {\n\n    setSteps(steps - 1);\n  }\n  const nextStep = () => {\n\n    setSteps(steps + 1);\n  }\n\n  const [listSoils, setListSoils] = useState([])\n  const [fields, setFields] = useState([])\n  const [zones, setZones] = useState([]);\n  const [allCities,setAllCities] = useState([])\n  const [countries,setCountries] = useState([])\n\n  const getSoils = async () => {\n    try {\n      await api.get('/soils/get-soils')\n        .then(response => {\n          let listSoils = response.data.Soils\n          setListSoils(listSoils)\n\n        }).catch(error => {\n          console.log(error)\n        })\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  \n  const getDataFields = async () => {\n    await api.get('/field/fields').then(res => {\n      const newData = res.data.farms;\n      setFarms(newData);\n      let Fields = [];\n      let Zones = [];\n      let Crops = []\n      newData.map(item => {\n        let fields = item.fields\n        if (fields) {\n          fields.map(itemfield => {\n            Fields.push({\n              title: itemfield.name,\n              status: itemfield.status,\n              description: itemfield.description,\n              Uid: itemfield.uid,\n              farm_id: itemfield.farm_id,\n              Latitude: itemfield.Latitude,\n              Longitude: itemfield.Longitude,\n              Id: itemfield.id\n            });\n            let zones = itemfield.zones;\n            let crops = itemfield.crops\n            if (crops) {\n              crops.map(crop => {\n                Crops.push({\n                  type: crop.type,\n                  id: crop.id,\n                  Uid:crop.uid,\n                  fieldId: crop.field_id,\n                  zone_id: crop.zone_id,\n                  croptype_id :crop.croptype_id,\n                  croptype : crop.croptypes\n                })\n              })\n            }\n            if (zones) {\n              zones.map(i => {\n                  Zones.push({\n                      Id: i.id,\n                      name: i.name,\n                      Uid: i.uid,\n                      source: i.source,\n                      description: i.description,\n                      field_id: i.field_id\n\n                  });\n              });\n          };\n          })\n        }\n      });\n      setFields(Fields)\n      setZones(Zones)\n      setCrops(Crops)\n\n    })\n  }\n  \n  useEffect(()=>{\n  const getDataFields = async () => {\n    await api.get('/field/fields').then(res => {\n      const newData = res.data.farms;\n      setFarms(newData);\n      let Fields = [];\n      let Zones = [];\n      let Crops = []\n      newData.map(item => {\n        let fields = item.fields\n        if (fields) {\n          fields.map(itemfield => {\n            Fields.push({\n              title: itemfield.name,\n              status: itemfield.status,\n              description: itemfield.description,\n              Uid: itemfield.uid,\n              farm_id: itemfield.farm_id,\n              Latitude: itemfield.Latitude,\n              Longitude: itemfield.Longitude,\n              Id: itemfield.id\n            });\n            let zones = itemfield.zones;\n            let crops = itemfield.crops\n            if (crops) {\n              crops.map(crop => {\n                Crops.push({\n                  type: crop.type,\n                  id: crop.id,\n                  Uid:crop.uid,\n                  fieldId: crop.field_id,\n                  zone_id: crop.zone_id,\n                  croptype_id :crop.croptype_id,\n                  croptype : crop.croptypes\n                })\n              })\n            }\n            if (zones) {\n              zones.map(i => {\n                  Zones.push({\n                      Id: i.id,\n                      name: i.name,\n                      Uid: i.uid,\n                      source: i.source,\n                      description: i.description,\n                      field_id: i.field_id\n\n                  });\n              });\n          };\n          })\n        }\n      });\n      setFields(Fields)\n      setZones(Zones)\n      setCrops(Crops)\n\n    })\n  }\n  getDataFields()\n},[])\n\nuseEffect(() => {\n    const getCities = async () => {\n      await api.get('/cities/get-cities').then(res => {\n        const cities = res.data.Cities;\n        setAllCities(cities);\n    \n      })\n    }\n    \n   const getCountries = async () => {\n      await api.get('/countries/get-countries').then(res => {\n        const countries = res.data.Countries;\n        setCountries(countries);\n    \n      })\n    }\n    getSoils()\n    getCountries()\n    getCities()\n  }, [])\n\n  const handleSoilPick = (e) => {\n    e.preventDefault()\n    const soilType = listSoils.find(\n      (soil) => soil.soil == e.target.value\n    );\n    if (e.target.value !== \"\") {\n      setSoilParams({effPluie: soilType.rain_eff })\n      setSoilParams({RUmax: soilType.ru })\n\n    }\n    if (typeof soilType !== \"undefined\") {\n      setSoilParams({\n        ...soilParams,\n        soilType: soilType.soil,\n        RUmax: soilType.ru,\n        effPluie: soilType.rain_eff\n      });\n\n    }\n  };\n\n\n \n  // ADD Farm\n\n  const [country,setCountry] = useState('')\n  const [cities,setCities] = useState('')\n\n const handleCountryPick = (e) => {\n    e.preventDefault();\n    const country = countries.find(\n      (country) => country.iso === e.target.value\n    );\n    let Cities = []\n    if (country) {\n    allCities.map((city) => {\n        if (city.iso === country.iso) {\n          Cities.push({\n            city: city.city,\n            id: city.id,\n            lat: city.lat,\n            lon: city.lon\n          })\n        }\n      });\n\n      setCountry(country.iso);\n      setCities(Cities)\n      \n    }\n  };\n  const [farmParams,setFarmParams] = useState({\n    name : \"\",\n    groupName : \"\",\n    cityId : \"\"\n  })\n  const userUid = JSON.parse(localStorage.getItem('user')).id\n\n  const addFarm = async () => {\n\n    let data = {\n      name: farmParams.name,\n      name_group: farmParams.groupName,\n      user_uid: userUid,\n      city_id:farmParams.cityId\n      // Coordinates : layer,\n      // Latitude : coords.Latitude,\n      // Longitude : coords.Longitude\n    }\n    await api.post('/farm/add-farm', data)\n      .then(response => {\n        if (response.data.type === \"success\") {\n          swal('Farm Added', { icon: \"success\" });\n          getLayerFarm()\n          setSteps(steps+1)\n        }\n      }).catch(err => {\n        swal(err, { icon: \"error\" })\n      })\n  }\n\n\n  // ADD Field\n\n  const [dataField,setDataField] = useState({\n    name : \"\",\n    farm_uid :\"\",\n    width :\"\",\n    length:\"\",\n    Latitude:\"\",\n    Longitude:\"\"\n})\n\n  const  addField = () => {\n    \n    let data = {\n      name: dataField.name,\n      farmName: dataField.farmName,\n      farm_uid: dataField.farm_uid,\n      largeur:dataField.width,\n      longueur:dataField.length\n      // Latitude: coords.Latitude,\n      // Longitude: coords.Longitude\n    }\n\n    api.post('/field/add-field', data)\n      .then(res => {\n        \n        if (res.data.type && res.data.type == \"success\") {\n            swal(`${t('field_added')}`, {\n                icon: \"success\",\n            });\n            getDataFields()\n            setSteps(steps+1)\n          }\n\n      })\n      .catch(() => {\n        swal(`Error`, {\n            icon: \"error\",\n        });\n\n      });\n  }\n  // ADD Soil Zone\n\n  const soilTypeForm = () => {\n    if (isStandardSoil == true)\n      return (\n          null\n       \n      );\n    else {\n      return (\n        <CompositeSoil />\n      );\n    }\n  };\n  const [isStandardSoil, setSoilType] = useState(true);\n  const [soilParams, setSoilParams] = useState({\n    soilProperty: \"\",\n    soilType: \"\",\n    field_uid: \"\",\n    zone_uid: \"\",\n    name: \"\",\n    RUmax: \"\",\n    effPluie: \"\",\n  })\n\n\n  const addZone = () => {\n\n    let data = {\n      soilProperty: soilParams.soilProperty,\n      field_uid: soilParams.field_uid,\n      zone_uid: soilParams.zone_uid,\n      name: soilParams.name,\n      RUmax: soilParams.RUmax,\n      effPluie: soilParams.effPluie,\n    }\n    api.post('/zone/add-zone', data)\n      .then(res => {\n        if (res.data.type && res.data.type == \"danger\") {\n          swal({\n            title: 'Cannot add soil',\n            icon: \"error\",\n\n          });\n        }\n        if (res.data.type && res.data.type == \"success\") {\n          swal({\n            title: 'Soil added',\n            icon: \"success\",\n            text: 'Soil added successfully '\n\n          });\n        }\n        getDataFields()\n        setSteps(steps+1)\n      })\n      .catch((err) => {\n\n        console.log(err)\n\n      });\n  }\n\n  const [listSoil,setListSoil] = useState([])\n  const [listCrop,setListCrop] = useState([])\n  const [allVarieties,setAllVarieties] = useState([])\n  const [listIrrigations,setListIrrigations] = useState([])\n\n  useEffect(() => {\n    const getCropType = async () => {\n      try {\n          await api.get('/croptype/list-crop')\n              .then(response => {\n                  if (response) {\n                      let dataCrop = response.data.Croptype\n                      setListCrop(dataCrop)\n                  }\n              })\n\n      } catch (error) {\n          console.log(error)\n      }\n  }\n  const getSoils = async () => {\n      try {\n          await api.get('/soils/get-soils')\n              .then(response => {\n                  let listSoils = response.data.Soils\n                  setListSoil(listSoils)\n                  \n              }).catch(error => {\n                  console.log(error)\n              })\n\n      } catch (error) {\n          console.log(error)\n      }\n  }\n  const getIrrigations = async () => {\n    try {\n      await api.get('/irrigations/get-irrigations')\n        .then(response => {\n          if (response) {\n            let dataIrrig = response.data.Irrigations\n            setListIrrigations(dataIrrig)\n          }\n        })\n\n    } catch (error) {\n      console.log(error)\n    }\n  }\n   const getVarieties = async () => {\n    try {\n        await api.get('/varieties/get-varieties')\n            .then(response => {\n                if (response.data.type === \"success\") {\n                    let listVarieties = response.data.Varieties\n                    setAllVarieties(listVarieties)\n\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n  getVarieties()\n  getIrrigations()\n  getSoils()\n  getCropType()\n}, [])\n\n  // ADD Crop \n  const [checked,setChecked] = useState(false)\n\n    const [cropData,setCropData] = useState({\n    field_uid :\"\",\n    zone_uid :\"\",\n    cropType:\"\",\n    variety: '',\n    cropVariety: [],\n    Profondeur: \"\",\n    days: \"\",\n    plantingDate: \"\",\n    growingDate:\"\",\n    rootDepth:\"\",\n    ecartInter :\"\",\n    ecartIntra :\"\",\n    density :\"\",\n    ruPratique :\"\",\n    kcList: []\n  })  \n\n  const handleCropPick = (e) => {\n    e.preventDefault()\n    // props.handleCropType(e)\n\n    const crop = listCrop.find(\n      (crop) => crop.id == e.target.value\n      );\n      if(e.target.value !== ''){\n         setCropData({...cropData, cropType : crop.id})\n        setCropData({...cropData, ruPratique : crop.practical_fraction})\n        setCropData({...cropData,days : crop.total})\n        setCropData({...cropData,rootDepth : crop.root_max})\n        setCropData({...cropData, plantingDate : crop.plant_date.slice(0, 11).replace('T', '')})\n\n      }\n      let varieties = []\n      if (crop) {\n        const variety = allVarieties.map((variety) => {\n          if (variety.crop_id === crop.id) {\n            varieties.push({\n              varietyId :variety.id,\n              variety: variety.crop_variety\n            })\n          }\n        });\n        \n        setCropData({\n          ...cropData,\n            cropType: crop.id,\n            variety: crop.crop_variety,\n            cropVariety: varieties,\n            rootDepth: crop.root_max,\n            ruPratique :crop.practical_fraction,\n            days: crop.total,\n            plantingDate: crop.plant_date.slice(0, 11).replace('T', ''),\n            kcList: crop.all_kc\n          });\n          \n\n    }\n};\n\nconst handleVarietyPick = (e) => {\n  e.preventDefault();\n  const variety = allVarieties.find(\n   \n      (variety) => variety.id == e.target.value\n\n  )\n  \n  if (variety) {\n      setCropData({\n          ...cropData,\n          variety: variety.id,\n       \n      });\n  }\n};\n  const addCrop = () => {\n    \n    let data = {\n      zone_uid: cropData.zone_uid,\n      field_uid: cropData.field_uid,\n      croptype_id: cropData.cropType,\n      previous_type: cropData.previous_type,\n      plantingDate: cropData.plantingDate,\n      rootDepth: cropData.rootDepth,\n      days: cropData.days,\n      crop_variety_id: cropData.variety,\n      practical_fraction : cropData.ruPratique,\n      density : cropData.density,\n      ecart_inter : cropData.ecartInter,\n      ecart_intra : cropData.ecartIntra,\n      growingDate:cropData.growingDate\n    }\n\n    api.post('/crop/add-crop', data)\n      .then(res => {\n        if (res.data.type && res.data.type == \"danger\") {\n          swal(`Error`, {\n            icon: \"error\",\n         });\n        }\n        if (res.data.type && res.data.type == \"success\") {\n          swal(`${t('crop_added')}`, {\n            icon: \"success\",\n          });\n          getDataFields()\n          setSteps(steps+1)\n        }\n      })\n      .catch((err) => {\n        swal(`Error`, {\n          icon: \"error\",\n        });\n\n\n      });\n  }\n\n// ADD Irrigation\nconst [irrigData,setIrrigData] = useState({\n  irrigType : \"\",\n     zone_uid: \"\",\n     crop_uid: \"\",\n     flowrate: \"\",\n     irrigated_already: \"\" ,\n     name: \"\",\n     pivot_shape:\"\",\n     irrigation_syst:\"\", \n     pivot_length: \"\",\n     pivot_coord: \"\",\n     full_runtime: \"\",\n     lateral:\"\",\n     drippers : \"\",\n     effIrrig: \"\",\n     pumpFlow : \"\",\n     pumpType:\"\",\n     linesNumber:\"\"\n})\nconst handleIrrigPick = (e) => {\n  e.preventDefault();\n   const irrigation = listIrrigations.find((irrigation) => {\n    return irrigation.irrigation == e.target.value\n\n   })\n  setIrrigData({irrigType : irrigation.irrigation})\n   \n  if (irrigation) {\n      setIrrigData({\n          ...irrigData,\n          irrigType : irrigation.irrigation,\n          effIrrig : irrigation.effIrrig\n      });\n  }\n};\n\nconst irrigationMethodForm = () => {\n  switch (irrigData.irrigType) {\n      case `${t('Pivot')}`:\n          return <PivotForm\n              handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\n              handleIrrgSyst={(e) => setIrrigData({...irrigData , irrigation_syst : e.target.value})}\n              handleRunTime={(e) => setIrrigData({...irrigData, full_runtime : e.target.value})}\n              handlePivotCoord={(e) => setIrrigData({...irrigData,pivot_coord :e.target.value})}\n              handlePivotLength={(e) => setIrrigData({...irrigData, pivot_length : e.target.value})}\n              handlePivotShape={(e) => setIrrigData({...irrigData, pivot_shape : e.target.value})}\n              irrigation_syst={irrigData.irrigation_syst}\n              pivot_coord={irrigData.pivot_coord}\n              pivot_length={irrigData.pivot_length}\n              pivot_shape={irrigData.pivot_shape}\n              full_runtime={irrigData.full_runtime}\n              flowrate={irrigData.flowrate}\n              name={irrigData.name}\n          />;\n      case `${t('Lateral')}`:\n          return <LateralForm\n              handleLateral={(e) => setIrrigData({...irrigData , lateral: e.target.value})}\n              handlePivotLength={(e) => setIrrigData({...irrigData , pivot_length : e.target.value})}\n              handleRunTime={(e) => setIrrigData({...irrigData , full_runtime :e.target.value})}\n              handleName={(e) => setIrrigData({...irrigData ,  name : e.target.value})}\n              handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\n              full_runtime={irrigData.full_runtime}\n              flowrate={irrigData.flowrate}\n              name={irrigData.name}\n              pivot_length={irrigData.pivot_length}\n              lateral={irrigData.lateral}\n          />;\n      case `${t('None')}`:\n          return null;\n      default:\n          return (\n              <DripForm\n                handleDrippers={(e) => setIrrigData({ ...irrigData , drippers : e.target.value})}\n                handleIrrigAlrd={(e) => setIrrigData({...irrigData , irrigated_already : e.target.value })}\n                handleFlowRate={(e) => setIrrigData({...irrigData, flowrate : e.target.value})}\n                flowrate={irrigData.flowrate}\n                drippers={irrigData.drippers}\n                irrigated_already={irrigData.irrigated_already}\n               />\n          );\n  }\n};\n\nconst addIrrigation = () => {\n    \n  let data = {\n    type: irrigData.irrigType,\n    zone_uid: irrigData.zone_uid,\n    crop_uid: irrigData.crop_uid,\n    flowrate: irrigData.flowrate,\n    irrigated_already: irrigData.irrigated_already,\n    name: irrigData.name,\n    pivot_shape:irrigData.pivot_shape,\n    irrigation_syst: irrigData.irrigation_syst,\n    pivot_length: irrigData.pivot_length,\n    pivot_coord: irrigData.pivot_coord,\n    full_runtime: irrigData.full_runtime,\n    lateral:irrigData.lateral,\n    drippers : irrigData.drippers,\n    effIrrig: irrigData.effIrrig,\n    pumpFlow : irrigData.pumpFlow,\n    pumpType : irrigData.pumpType,\n    lines_number:irrigData.linesNumber\n  }\n\n\n  api.post('/irrigation/add-irrigation', data)\n    .then(res => {\n      \n      if (res.data.type && res.data.type == \"danger\") {\n        swal(`Error`, {\n          icon: \"error\",\n       });\n      }\n      if (res.data.type && res.data.type == \"success\") {\n        swal(`${t('irrigation_added')}`, {\n          icon: \"success\",\n        });\n        setSteps(steps + 1)\n      }\n    })\n    .catch((err) => {\n      \n      swal(`Error`, {\n        icon: \"error\",\n     });\n\n    });\n}\n\n  const configProcess = () => {\n    switch (steps) {\n      case 0:\n        return (\n          <>\n          <Row className='pb-2'>\n           <PageTitle subtitle= {`${t('step')} ${steps + 1} - ${t('farm_setup')}`} className=\" mb-1\" />\n          <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n            <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To get started, please provide a name and location for your farm. This will help us to identify and locate your farm accurately.\"</p>\n          </div> \n          </Row>\n            <Row>\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <p style={{ margin: \"0px\" }}> {t('name_farm')}</p>\n                <FormInput\n                  placeholder={t('name_farm')}\n                  required\n                  value={farmParams.name}\n                  onChange={(e) => setFarmParams({...farmParams,name:e.target.value})}\n                />\n              </Col>\n              <Col lg=\"6\" md=\"12\" sm=\"12\">\n                <p style={{ margin: \"0px\" }}>{t('group_name')}</p>\n                <FormInput\n                  placeholder={t('group_name')}\n                  value={farmParams.groupName}\n                  onChange={(e) => setFarmParams({...farmParams,groupName:e.target.value})}\n\n                />\n              </Col>\n            </Row>\n            <Row className=\"pt-1\">\n            <Col lg=\"6\" md=\"12\" sm=\"12\">\n                              <p style={{ margin: \"0px\" }}>{t('select_country')}</p>\n                              <FormSelect\n                                onChange={handleCountryPick}\n                                 value={country}\n                              >\n                                {\n                                  countries.map(country => {\n                                    return (\n                                      <option key={country.id} value={country.iso}>{country.name}</option>\n                                    )\n                                  })\n                                }\n                              </FormSelect>\n                            </Col>\n                            <Col lg=\"6\" md=\"12\" sm=\"12\">\n                              <p style={{ margin: \"0px\" }}>{t('select_city')}</p>\n                              <FormSelect\n                                value={farmParams.cityId}\n                                onChange={e => setFarmParams({...farmParams,cityId : e.target.value})}\n                              >\n                                <option selected>{t('select_city')}</option>\n                                {\n                                  cities && cities.map(city => {\n                                    return (\n                                      <option key={city.id} value={city.id}>{city.city}</option>\n                                    )\n                                  })\n                                }\n                              </FormSelect>\n                            </Col>\n            </Row>\n          \n          </>\n        )\n      case 1:\n        return (\n          <>\n          <Row className='pb-2'>\n          <PageTitle subtitle= {`${t('step')} ${steps + 1} - ${t('field_setup')}`} className=\" mb-1\" />\n          <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n            <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add a field configuration, please provide a name and associate it with the appropriate farm. This will help us to accurately track and manage your crops.\"</p>\n          </div> \n         </Row>\n          <Row>\n            \n            <Col lg='6' md=\"12\" sm='12'>\n              <Row>\n                <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                  <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('name_field')}</p>\n                  <FormInput\n                    value={dataField.name}\n                    placeholder={t('name_field')}\n                    // className={props.nameError =='' ? '' : 'is-invalid'}\n                    required\n                    onChange={e => setDataField({...dataField , name:e.target.value})}\n                  />\n                  {/* <div className=\"invalid-feedback\" style={{textAlign: \"left\"}}>{props.nameError}</div> */}\n                </Col>\n                <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                  <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('name_farm')}</p>\n                  <FormSelect\n                    value={dataField.farm_uid}\n                    // className={props.farmError =='' ? '' : 'is-invalid'}\n                    required\n                    onChange={e => setDataField({...dataField , farm_uid:e.target.value})}\n                  >\n                    <option value=\"\">{t('select_farm')}</option>;\n                    {layerFarm.map((item, index) => {\n                      return <option value={item.uid}>{item.name}</option>;\n                    })}\n                  </FormSelect>\n                </Col>\n\n              </Row>\n              <Row>\n                <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                  <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('width')} (M)</p>\n                  <FormInput\n                    type=\"number\"\n                    placeholder={t('width')}\n                    value={dataField.width}\n                    onChange={e => setDataField({...dataField,width:e.target.value})}\n                    required\n                  />\n                </Col>\n                <Col lg='6' md=\"12\" sm='12' className=\"form-group\">\n                  <p style={{ margin: \"0px\", textAlign: \"left\" }}>{t('length')} (M)</p>\n                  <FormInput\n                    type=\"number\"\n                    placeholder={t('length')}\n                    value={dataField.length}\n                    onChange={e => setDataField({...dataField,length:e.target.value})}\n                    required\n                  />\n                </Col>\n\n              </Row>\n            </Col>\n            {/* <Col lg='6' md=\"12\" sm='12'>\n              <LeafletMap _onCreated={_onCreated} draw={configMap.draw} edit={configMap.edit} zoom={coords.zoom} center={coords.center} data={farms} fromAction={coords.fromAction} />\n            </Col> */}\n          </Row>\n          </>\n\n        )\n      case 2:\n        return (\n          <Form className='pb-2'>\n             <Row>\n           <PageTitle subtitle= {`${t('step')} ${steps + 1} - ${t('soil_info')}`} className=\" mb-1\" />\n           <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n            <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your soil type configuration, please provide the appropriate details and associate it with the appropriate field. This will help us to provide accurate recommendations for managing your crops.\"</p>\n          </div> \n          </Row>\n            <Row className=\"py-2 d-flex justify-content-start border-bottom align-items-center\" >\n              {/* <Col lg=\"4\" sm=\"12\" md=\"12\">\n                <Carousel>\n                    {\n                      otherInfo.listSoils.map(item => {\n                        return (\n                          <>\n                          <img\n                          className=\"h-100\"\n                          src={`${process.env.REACT_APP_BASE_URL}/static/${item.soil_photo}`}  \n                          alt={item.soil}\n                          width=\"110\"\n                          />\n                          <span>{item.soil}</span>\n                          </>\n  \n                        )\n                      })\n                    }\n  \n                  </Carousel>\n              \n              </Col> */}\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('soil_zone')}</p>\n                <FormInput\n                  value={soilParams.name}\n                  placeholder={t('soil_zone')}\n                  required\n                  onChange={e => setSoilParams({ ...soilParams, name: e.target.value })}\n\n                />\n                <p style={{ margin: \"0px\" }}>{t('soil_type')}</p>\n                <FormSelect\n                  value={soilParams.soilType}\n                  onChange={handleSoilPick}\n                >\n                  <option value=\"\">{t('select_soil')}</option>\n                  {\n                    listSoils.map((item, index) => {\n                      return <option value={item.soil} >{item.soil}</option>;\n\n                    })\n                  }\n                </FormSelect>\n\n\n              </Col>\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group\">\n              <p style={{ margin: \"0px\" }}>{t('soil_prop')}</p>\n              <FormSelect\n                onChange={evt => {\n                 \n                  setSoilType(!isStandardSoil);\n                  \n                }}\n              >\n                <option selected={isStandardSoil}>Standard</option>\n                <option selected={!isStandardSoil}>Composite</option>\n              </FormSelect>\n                <p style={{ margin: \"0px\" }}>{t('name_field')}</p>\n                <FormSelect\n                  value={soilParams.field_uid}\n                  onChange={e => setSoilParams({ ...soilParams, field_uid: e.target.value })}\n                  placeholder={t('name_field')}\n                >\n                  <option value=\"\">{t('select_field')}</option>\n                  {fields.map((item, index) => {\n                    return <option value={item.Uid}>{item.title}</option>;\n                  })}\n                </FormSelect>\n              </Col>\n            </Row>\n            <Row form>\n              {soilTypeForm()}\n            </Row>\n            <Row form className=\"py-2\" >\n\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('efficacité_pluie')} (%)</p>\n                  <FormInput type=\"number\" value={soilParams.effPluie} onChange={e => setSoilParams({ ...soilParams, effPluie: e.target.value })} id='effPluie' placeholder={t('efficacité_pluie')}\n                  />\n\n                </FormGroup>\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>RU max (mm/m)</p>\n                  <FormInput type=\"number\" value={soilParams.RUmax} onChange={e => setSoilParams({ ...soilParams, RUmax: e.target.value })} id='ruMax' placeholder=\"RU max\"\n                  />\n\n                </FormGroup>\n\n              </Col>\n            </Row>\n          </Form>\n        )\n      case 3:\n        return (\n          <Form className='pb-2'>\n             <Row>\n           <PageTitle subtitle= {`${t('step')} ${steps + 1} - ${t('crop_info')}`} className=\" mb-1\" />\n           <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n            <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your crop type configuration, please provide the appropriate details and associate it with the appropriate field and soil type. This will help us to provide personalized recommendations for managing your crops and achieving optimal yields.\"</p>\n          </div> \n          </Row>\n            <Row className=\"py-2 d-flex justify-content-start border-bottom align-items-center\">\n              {/* <Col lg=\"4\" sm=\"12\" md=\"12\" > */}\n\n                {/* <Carousel  \n            >\n                    {\n                      listCrop.map(crop => {\n                        return (\n                          <>\n                          <img\n                          className=\"h-100\"\n                          src={`${process.env.REACT_APP_BASE_URL}/static/${crop.crop_photo}`}  \n                          alt={crop.crop}\n                          width=\"110\"\n                          />\n                          <span>{crop.crop}</span>\n                          </>\n\n                        )\n                      })\n                    }\n\n             </Carousel> */}\n\n              {/* </Col> */}\n              <Col lg='4' md=\"12\" sm=\"12\" className=\"form-group pt-4\">\n                <p style={{ margin: \"0px\" }}>{t('crop_type')}</p>\n                <FormSelect\n                  onChange={handleCropPick}\n                  placeholder={t('crop_type')}\n                  value={cropData.cropType}\n                >\n                  <option value=\"\">Select Crop</option>\n                  {\n                listCrop.map(crop => {\n                  return (\n                    <option value={crop.id}>{crop.crop}</option>\n\n                  )\n                })\n              }\n                </FormSelect>\n\n                <p style={{ margin: \"0px\" }}>{t('crop_variety')}</p>\n                <FormSelect value={cropData.variety} onChange={handleVarietyPick} id=\"cropVariety\">\n                  <option value=\"\">{t('crop_variety')}</option>\n                  {\n                      cropData.cropVariety.map(variety => (\n                          <option value={variety.varietyId}>{variety.variety}</option>\n                      ))\n                  }\n                </FormSelect>\n                <input type=\"checkbox\" name=\"Autre\" id=\"check\" onClick={() => setChecked(!checked)} /> {t('other')}\n                  {\n                      checked\n                      ?\n\n                      <FormInput \n                      value={cropData.variety || \"\"}\n                      placeholder={t('crop_variety')}\n                      id=\"cropVariety\"\n                      onChange={e => setCropData({...cropData , variety : e.target.value})}\n                      />\n\n                      :\n                      null\n                  }\n\n              </Col>\n              < Col lg=\"4\" md=\"12\" sm=\"12\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('crop_zone')}</p>\n                <FormSelect\n                  value={cropData.zone_uid}\n                  onChange={e=> setCropData({...cropData , zone_uid : e.target.value})}\n                  placeholder={t('crop_zone')}\n                >\n                  <option>{t('select_zone')}</option>\n\n                  {\n                    zones.map(soil=>{\n                     return <option value={soil.Uid}>{soil.name}</option>\n\n                    })\n                  }\n              \n            </FormSelect>\n                <p style={{ margin: \"0px\" }}>{t('crop_field')}</p>\n                <FormSelect\n                  value={cropData.field_uid}\n                  onChange={e => setCropData({...cropData , field_uid : e.target.value})}\n                  placeholder={t('crop_zone')}\n                >\n                  <option>{t('select_field')}</option>\n                  {\n                    fields.map((item, indx) => {\n                      return <option value={item.Uid}>{item.title}</option>\n                    })\n                  }\n                </FormSelect>\n\n              </Col>\n            </Row>\n            <Row className=\"py-2\">\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('depth')} (m)</p>\n                  <FormInput type=\"number\" value={cropData.rootDepth} onChange={e => setCropData({...cropData,rootDepth :e.target.value})} id='z' placeholder={t('depth')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('Days')}</p>\n                  <FormInput type=\"number\" value={cropData.days} id='days' onChange={e => setCropData({...cropData,days :e.target.value})} placeholder={t('Days')} />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('planting_date')}</p>\n                  <FormInput type=\"date\" value={cropData.growingDate} onChange={e => setCropData({...cropData,growingDate :e.target.value})} id='planting_date' />\n\n                </FormGroup>\n\n              </Col>\n              <Col hidden lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('growing_season')}</p>\n                  <FormInput type=\"date\" value={cropData.plantingDate} onChange={e => setCropData({...cropData,plantingDate :e.target.value})} id='days' />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('fraction_pratique')} (%) </p>\n                  <FormInput type=\"number\" value={cropData.ruPratique} onChange={e => setCropData({...cropData,ruPratique :e.target.value})} id='ruPratique' placeholder={t('fraction_pratique')}\n                  />\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('ecart_inter')} (m)</p>\n                  <FormInput type=\"number\" value={cropData.ecartInter} onChange={e => setCropData({...cropData,ecartInter :e.target.value})} id='ecartInter' placeholder={t('ecart_inter')}\n                  />\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('ecart_intra')} (m) </p>\n                  <FormInput type=\"number\" value={cropData.ecartIntra} onChange={e => setCropData({...cropData,ecartIntra :e.target.value})} id='ecartIntra' placeholder={t('ecart_intra')}\n                  />\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"12\" sm=\"12\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('densité')} (plants/ha)</p>\n                  <FormInput type=\"number\" value={cropData.density} onChange={e => setCropData({...cropData,density :e.target.value})} id='densité' placeholder={t('densité')}\n                  />\n                </FormGroup>\n\n              </Col>\n            </Row>\n          </Form>\n        )\n      case 4:\n        return (\n          <Form className='pb-2'>\n             <Row>\n           <PageTitle subtitle= {`${t('step')} ${steps + 1} - ${t('Irrigation_info')}`} className=\" mb-1\" />\n           <div style={{ backgroundColor: '#F7F7F7', padding: '20px', borderRadius: '10px' }}>\n            <p style={{ fontSize: '16px', lineHeight: '1.5', margin: '0' }}>\"To add your irrigation type configuration, please provide the appropriate details and associate it with the appropriate crop type and soil type. This will help us to provide personalized recommendations for managing your crops and optimizing water usage.\"</p>\n          </div> \n          </Row>\n            <Row form>\n              <Col md=\"6\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('irrigation_zone')}</p>\n                <FormSelect\n                  value={irrigData.zone_uid}\n                  onChange={e => setIrrigData({...irrigData , zone_uid : e.target.value})}\n                >\n                  <option>{t('select_zone')}</option>\n\n                  {\n                      zones.map((item,indx) =>{       \n                       return <option value={item.Uid}>{item.name}</option>\n                      })\n                    }\n                </FormSelect>\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('irrigation_crop')}</p>\n                <FormSelect\n                  value={irrigData.crop_uid}\n                  onChange={e => setIrrigData({...irrigData , crop_uid : e.target.value}) }\n                >\n                  <option>{t('select_crop')}</option>\n                    {\n                    crops.map(crop=>{\n                      let cropType= \"\"\n                      listCrop.map(croptype=>{\n                        if(croptype.id === crop.croptype_id){\n                          cropType = croptype.crop\n                        }\n                      })\n                      return <option value={crop.Uid} >{cropType}</option>\n\n                    })\n                  }\n                </FormSelect>\n              </Col>\n\n              <Col md=\"6\" className=\"form-group\">\n                <p style={{ margin: \"0px\" }}>{t('Irrigation_system_type')}</p>\n                <FormSelect\n                  // className={props.typeErrorIrrig == '' ? '' : 'is-invalid'}\n                  value={irrigData.irrigType}\n                  onChange={evt => {\n                    handleIrrigPick(evt)\n                  }}\n                >\n                  <option disabled selected value=\"\">{t('select_irriagtion')}</option>\n                    {\n                      listIrrigations.map(item => {\n                      // if (item.value === irrigationMethod) {\n                      //   return <option value={item.value} selected={true}>{item.type}</option>;\n                      // } else {\n                      //   return <option value={item.value} selected={false}>{item.type}</option>;\n                      // }\n                        return <option value={item.irrigation} >{t(`${item.irrigation}`)}</option>;\n                      })\n                    }\n                </FormSelect>\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('efficience_irrigation')} (%) </p>\n                  <FormInput type=\"number\" value={irrigData.effIrrig} onChange={e => setIrrigData({...irrigData , effIrrig :e.target.value})} id='effIrrig' placeholder={t('efficience_irrigation')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('type_reseau')}</p>\n                  <FormInput value={irrigData.pumpType} onChange={e => setIrrigData({...irrigData , pumpType :e.target.value})} id='type_reseau' placeholder={t('type_reseau')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('debit_reseau')} (l/s) </p>\n                  <FormInput type=\"number\" value={irrigData.pumpFlow} onChange={e => setIrrigData({...irrigData , pumpFlow :e.target.value})} id='debitReseau' placeholder={t('debit_reseau')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n                <FormGroup>\n                  <p style={{ margin: \"0px\" }}>{t('nbr_ligne')}</p>\n                  <FormInput type='number' value={irrigData.linesNumber} onChange={e => setIrrigData({...irrigData , linesNumber :e.target.value})} id='nbr_ligne' placeholder={t('nbr_ligne')}\n                  />\n\n                </FormGroup>\n\n              </Col>\n              <Col lg=\"4\" md=\"8\" sm=\"8\">\n              <FormGroup>\n                <p style={{ margin: \"0px\" }}>{t('irrigated_already')}(h) </p>\n                <FormInput type=\"number\" value={irrigData.irrigated_already} onChange={e => setIrrigData({...irrigData , irrigated_already :e.target.value})} id='debitReseau' placeholder={t('irrigated_already')}\n                />\n\n              </FormGroup>\n\n            </Col>\n              {irrigationMethodForm()}\n            </Row>\n          </Form>\n        )\n        case 5: \n        return (\n          <div className=\"d-flex flex-column align-items-center justify-content-around\">\n\n          <img width=\"20%\" src={clap} alt=\"Congratulations\" />\n          <h6 style={{textAlign:\"center\",width:\"88%\"}}>Congratulations, your farm configuration is complete <br /> Thank you for filling out all 5 steps of the form. <br />\n          Now it's time to configure your sensors. Please proceed to the next step to add your sensor configuration.\n          </h6>\n          </div>\n\n\n        )\n      default:\n        break;\n    }\n  }\n\nconst totalSteps = 5;\n\nconst percentageComplete = Math.ceil(((steps) / totalSteps) * 100);\n\n  const handleSubmit = () => {\n    switch (steps) {\n      case 0:\n        return (\n          addFarm()\n        )\n        case 1:\n        return (\n          addField()\n        )\n          case 2:\n            return (\n              addZone()\n            )\n            case 3:\n              return (\n                addCrop()\n              )\n              case 4:\n              return (\n                addIrrigation()\n              )\n      default:\n        break;\n    }\n  }\n  return (\n    <Container fluid className=\"main-content-container px-3\">\n      <>\n        <Modal size=\"lg\" show={show} onHide={handleClose}>\n          <Modal.Header className=\"d-flex flex-column\" >\n            <Modal.Title>Farm Configuration</Modal.Title>\n            <p style={{textDecoration:\"underline\",fontSize:12,fontWeight:\"bold\"}}>Each step of this form is dependent on the previous step, so please fill out the fields in the correct order to avoid errors or an incomplete submission.</p>\n          <div style={{width:\"100%\",height:25}}>\n                  <ProgressBar animated  variant=\"success\" now={percentageComplete} label={`${percentageComplete}%`} />\n\n          </div>\n\n          </Modal.Header>\n          <Modal.Body>\n            {configProcess()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            {\n              steps !== 5\n              ?\n              <Button variant=\"primary\" onClick={handleSubmit}>\n                Save & continue process\n              </Button>\n              :\n              null\n\n            }\n            {\n              steps > 0 && steps < 5\n                ?\n                <Button variant=\"primary\" onClick={prevStep}>\n                  Previous\n                </Button>\n                :\n                null\n            }\n          </Modal.Footer>\n        </Modal>\n      </>\n      {/* Page Header */}\n      <Row noGutters className=\"page-header py-2 mb-4 d-flex justify-content-between flex-nowrap align-items-center border-bottom\">\n        <PageTitle title={t('overview')} className=\" mb-1\" />\n        <Dropdown open={toggle} toggle={toggleDropDown} className=\"d-table mr-5\">\n          <div className=\"d-flex justify-content-center align-items-center \">\n            <Button id=\"TooltipExample\" theme=\"info\" className=\"rounded-circle\" style={{ height: 50, width: 50 }} onClick={toggleDropDown}  >\n              <i className=\"material-icons\" style={{ fontSize: 30, display: \"flex\", justifyContent: \"center\", alignItems: \"center\", color: \"#fff\" }}>&#xe145;</i>\n              <Tooltip\n                placement=\"left\"\n\n                open={open}\n                target=\"#TooltipExample\"\n                toggle={toggleToolTip}\n              >\n                {t('add_element')}\n              </Tooltip>\n            </Button>\n\n          </div>\n          <DropdownMenu right style={{ zIndex: \"10\" }} >\n            <DropdownItem onClick={handleShow}>\n              {t('farms')}\n            </DropdownItem>\n            {/* <Link onClick={() => ToAddFieldPage()}>\n              <DropdownItem>\n                {t('fields')}\n              </DropdownItem>\n            </Link> */}\n            <Link onClick={() => ToAddSensorPage()}>\n              <DropdownItem>\n                {t('sensors')}\n              </DropdownItem>\n            </Link>\n            <Link onClick={() => ToWaterBalancePage()}>\n              <DropdownItem>\n                {t('water_balance')}\n              </DropdownItem>\n            </Link>\n          </DropdownMenu>\n        </Dropdown>\n      </Row>\n      {/* Small Stats Blocks */}\n      <Row className=\"mt-4\">\n        <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-4\">\n          <p style={{ margin: 0 }}>{t('field_stats')}</p>\n          <Card small className=\"stats-small h-100\">\n            <CardBody className=\"p-2 d-flex  justify-content-center align-items-center\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  flexWrap: \"wrap\",\n                  width: \"100%\"\n                }}\n              >\n                {/* <Stats /> */}\n                {smallStats.map((stats, idx) => (\n                  <>\n                    <SmallStats\n                      FilterByStatus={FilterByStatus}\n                      style={{\n                        borderColor: \"blue\",\n                        borderWidth: 2,\n                        borderStyle: \"solid\"\n                      }}\n                      id={`small-stats-${idx}`}\n                      variation=\"1\"\n                      chartData={stats.datasets}\n                      chartLabels={stats.chartLabels}\n                      label={stats.label}\n                      value={stats.value}\n                      icon={stats.icon}\n                      state={stats.state}\n                    />\n                    {idx != 2 ? (\n                      <hr\n                        style={{\n                          backgroundColor: \"#ebebeb\",\n                          width: \"1px\",\n                          height: \"75%\"\n                        }}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </>\n                ))}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-4\">\n          <p style={{ margin: 0 }}>{t('sensor_stats')}</p>\n          <Card small className=\"stats-small h-100\">\n            <CardBody className=\"p-2 d-flex justify-content-center align-items-center\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  flexWrap: \"wrap\",\n                  width: \"100%\"\n                }}\n              >\n                {smallStats2.map((stats, idx) => (\n                  <>\n                    <SmallStats\n                      ToSensorPage={ToSensorPage}\n                      style={{\n                        borderColor: \"blue\",\n                        borderWidth: 2,\n                        borderStyle: \"solid\"\n                      }}\n                      id={`small-stats-${idx}`}\n                      variation=\"1\"\n                      chartData={stats.datasets}\n                      chartLabels={stats.chartLabels}\n                      label={stats.label}\n                      value={stats.value}\n                      icon={stats.icon}\n                      state={stats.state}\n                    />\n                    {idx != 2 ? (\n                      <hr\n                        style={{\n                          backgroundColor: \"#ebebeb\",\n                          width: \"1px\",\n                          height: \"75%\"\n                        }}\n                      />\n                    ) : (\n                      <></>\n                    )}\n                  </>\n                ))}\n              </div>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg=\"4\" md=\"12\" sm=\"12\" className=\"\">\n          {/* <h4 style={{ marginBottom: \"-15px\" }}>{t('map')}</h4> */}\n          <LeafletMap data={layerFarm} sensor={sensorStats} draw={draw} zoom={mapConfig.zoom} center={mapConfig.center} fromAcrion={mapConfig.fromAction} />\n        </Col>\n      </Row>\n      <Row className=\"d-flex justify-content-center align-items-center\">\n      </Row>\n      <Row>\n        <FilterFields\n          smallStats={smallStats}\n          sensorsData={sensorsData}\n          crops={crops}\n          filteredByStatus={farms}\n          sensorStats={sensorStats}\n          fieldStats={fieldStats}\n        />\n      </Row>\n    </Container>\n  )\n}\n\n\nexport default Overview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}